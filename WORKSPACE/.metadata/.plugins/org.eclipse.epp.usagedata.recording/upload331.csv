what,kind,bundleId,bundleVersion,description,time
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.copy",1380142112712
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.copy",1380142113024
deactivated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1380142116051
activated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1380142124568
opened,editor,org.eclipse.jdt.ui,3.6.2.r362_v20110203,"org.eclipse.jdt.ui.CompilationUnitEditor",1380142124631
activated,editor,org.eclipse.jdt.ui,3.6.2.r362_v20110203,"org.eclipse.jdt.ui.CompilationUnitEditor",1380142124662
executed,command,org.eclipse.ui.ide,3.6.2.M20101201-0800,"org.eclipse.ui.navigate.openResource",1380142124662
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.paste",1380142131479
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.copy",1380142135005
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.paste",1380142136845
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.delete",1380142143928
activated,editor,org.eclipse.jdt.ui,3.6.2.r362_v20110203,"org.eclipse.jdt.ui.CompilationUnitEditor",1380142148187
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.copy",1380142157687
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.paste",1380142161478
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.copy",1380142170838
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.paste",1380142173178
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.copy",1380142182366
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.paste",1380142186141
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.delete",1380142190572
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.delete",1380142194893
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.copy",1380142200010
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.copy",1380142200260
deactivated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1380142203770
activated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1380142210571
opened,editor,org.eclipse.jdt.ui,3.6.2.r362_v20110203,"org.eclipse.jdt.ui.CompilationUnitEditor",1380142210634
activated,editor,org.eclipse.jdt.ui,3.6.2.r362_v20110203,"org.eclipse.jdt.ui.CompilationUnitEditor",1380142210665
executed,command,org.eclipse.ui.ide,3.6.2.M20101201-0800,"org.eclipse.ui.navigate.openResource",1380142210665
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.paste",1380142226702
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.copy",1380142229853
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.paste",1380142232520
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.cut",1380142236327
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.paste",1380142238339
activated,editor,org.eclipse.jdt.ui,3.6.2.r362_v20110203,"org.eclipse.jdt.ui.CompilationUnitEditor",1380142241849
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.copy",1380142250226
activated,editor,org.eclipse.jdt.ui,3.6.2.r362_v20110203,"org.eclipse.jdt.ui.CompilationUnitEditor",1380142252317
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.paste",1380142256451
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.delete",1380142272550
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.delete",1380142273845
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.delete",1380142277854
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.copy",1380142280210
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.paste",1380142282066
started,bundle,org.eclipse.mylyn.ide.ui,3.4.0.v20100608-0100-e3x,"org.eclipse.mylyn.ide.ui",1380142296746
started,bundle,org.eclipse.jst.ws.jaxws.ui,1.0.1.v201008232129,"org.eclipse.jst.ws.jaxws.ui",1380142296761
started,bundle,org.eclipse.mylyn.java.ui,3.4.0.v20100608-0100-e3x,"org.eclipse.mylyn.java.ui",1380142296761
started,bundle,org.eclipse.pde.api.tools,1.0.202.v20100820_r361,"org.eclipse.pde.api.tools",1380142296792
started,bundle,org.eclipse.pde.api.tools.ui,1.0.201.v20100820_r361,"org.eclipse.pde.api.tools.ui",1380142296792
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.text.contentAssist.proposals",1380142297089
deactivated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1380142298976
activated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1380142299164
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.copy",1380142318976
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.paste",1380142320364
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.copy",1380142338367
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.copy",1380142338632
deactivated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1380142341767
activated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1380142348101
opened,editor,org.eclipse.jdt.ui,3.6.2.r362_v20110203,"org.eclipse.jdt.ui.CompilationUnitEditor",1380142348148
activated,editor,org.eclipse.jdt.ui,3.6.2.r362_v20110203,"org.eclipse.jdt.ui.CompilationUnitEditor",1380142348179
executed,command,org.eclipse.ui.ide,3.6.2.M20101201-0800,"org.eclipse.ui.navigate.openResource",1380142348179
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.paste",1380142355729
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.file.saveAll",1380142362593
error,log,,,"Exception occurred during problem detection:\n----------------------------------- SOURCE BEGIN -------------------------------------\npackage com.loyauty.web.struts.action.orders;\n\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.ArrayList;\nimport java.util.Collection;\nimport java.util.Date;\nimport java.util.Hashtable;\nimport java.util.List;\nimport javax.servlet.http.HttpSession;\nimport org.apache.commons.io.FileUtils;\nimport lombok.Getter;\nimport lombok.Setter;\n\nimport com.loyauty.exception.ServiceException;\nimport com.loyauty.exception.ServiceLocatorException;\nimport com.loyauty.model.Orders;\nimport com.loyauty.model.OrdersRows;\nimport com.loyauty.model.User;\nimport com.loyauty.service.core.DTOFactory;\nimport com.loyauty.service.core.dto.BasicUserDTO;\nimport com.loyauty.service.core.dto.OrdersDTO;\nimport com.loyauty.service.core.dto.UserFileDataRecoveryDTO;\nimport com.loyauty.service.core.dto.UserFileRecoveryDTO;\nimport com.loyauty.service.core.dto.UserSessionDTO;\nimport com.loyauty.service.orders.OrdersService;\nimport com.loyauty.service.user.UserService;\nimport com.loyauty.web.struts.action.LoyautyAction;\n\n\npublic class CreateOrdersAuto extends LoyautyAction {\n\tprivate static final long serialVersionUID = -1238269595572206024L;\n\n\tprivate UserService userService;\n\tprivate OrdersService orderService;\n\t@Getter @Setter\n\tprivate String userLoginTo;\n\t@Getter @Setter\n\tprivate List<User> usersList;\n\tprivate static int USER_TYPE = 2;\n\t@Getter @Setter\n\tprivate File orderFile;\n\t@Getter @Setter\n\tList<OrdersDTO>listOrdersDTO;\n\tHashtable<String, OrdersDTO>hashOrders;\n\t@Getter @Setter\n\tprivate String orderSelected;\n\t@Getter @Setter\n\tprivate Long showOrderSignal;\n\t@Getter @Setter\n\tprivate Long okShowOrderSignal;\n\t@Getter @Setter\n\tprivate Long saveOrdersSignal;\n\t@Getter @Setter\n\tprivate Long confirmSaveOrdersSignal;\n\t@Getter @Setter\n\tprivate Long duplicateOrderSignal;\n\t@Getter @Setter\n\tprivate String lsOrderId;\n\t@Getter @Setter\n\tprivate String message;\n\t@Getter @Setter\n\tprivate String userLogo;\n\t@Getter @Setter\n\tInteger indexOrder;\n\t@Getter @Setter\n\tInteger indexRow;\n\t@Getter @Setter\n\tprivate Double quantityToChange;\n\t@Getter @Setter\n\tprivate Long quantityToChangeSignal;\n\t@Getter @Setter\n\tprivate Long checkBoxPrintSignal;\n\t@Getter @Setter\n\tprivate Long okSaveSuccessPopSignal;\n\t@Getter @Setter\n\tprivate Boolean checkBoxPrintEtem;\n\t@Getter @Setter\n\tprivate Boolean checkBoxPrint;\n\t@Getter @Setter\n\tprivate Long pageTop=0L;\n\t@Getter @Setter\n\tprivate Long saved;\n\t@Getter @Setter\n\tprivate String showNotificationPop=""visibility:hidden;display:none;"";\n\t@Getter @Setter\n\tprivate String showSaveSuccessPop=""visibility:hidden;display:none;"";\n\tpublic  CreateOrdersAuto() throws ServiceLocatorException {\n\t\tsuper();\t\n\t\tuserService = getServiceLocator().getUserService();\n\t\torderService = getServiceLocator().getOrderService();\n\t\tlistOrdersDTO=new ArrayList<OrdersDTO>();\n\t}\n\n\t/*=========================================================================================\n\t \t\t\t\t\t\t\t\t\t\t\tmethod execute\n\t  =========================================================================================*/\n\t@SuppressWarnings({ ""rawtypes"", ""unchecked"" })\n\t@Override\n\tpublic String execute() throws Exception {\n\t\thashOrders=new Hashtable<String, OrdersDTO>();\n\t\tHttpSession session = request.getSession(true);\n\t\tSystem.out.println(""pageTop:""+pageTop);\n\t\tlistOrdersDTO=\t(ArrayList<OrdersDTO>)session.getAttribute(""listOrdersDTOAuto"");\n\t\tsaved=orderService.nbOrdersNotSavedInDB(listOrdersDTO);\n\t\tuserLogo=(String)session.getAttribute(""userLogo"");\n\t\tint rowIndex;\n\t\tString nameFile="""";\n\t\tString dataPath="""";\n\t\ttry {\n\t\t\t\t/*-------------------- recovery users list -----------------------------------\n\t\t\t\t\t\twe access to the database only once to retrieve a list of users\n\t\t\t\t -----------------------------------------------------------------------------*/\n\t\t\t\tBasicUserDTO basicUserDTO = new BasicUserDTO();\n\t\t\t\tbasicUserDTO.setTypeId(USER_TYPE);\n\t\t\t\tList<User> usersListSession=(List<User>)session.getAttribute(""usersListSession"");\n\t\t\t\tif(usersListSession==null){\n\t\t\t\t\tList<UserSessionDTO> listAllUsers= userService.getAllUsers(basicUserDTO);\n\t\t\t\t\tusersList=new ArrayList<User>();\n\t\t\t\t\tfor(UserSessionDTO userDTO:listAllUsers){\n\t\t\t\t\t\tUser user=new User();\n\t\t\t\t\t\tuser.setId(userDTO.getId());\n\t\t\t\t\t\tuser.setLogin(userDTO.getLogin());\n\t\t\t\t\t\tusersList.add(user);\n\t\t\t\t\t}\n\t\t\t\t\tsession.setAttribute(""usersListSession"",usersList);\n\t\t\t\t}else usersList=usersListSession;\n\n\t\t\t\t/*-------------------- When user check print item -----------------------------\n\t\t\t\t\t\tAdd or remove this element from the orders to print\n\t\t \t\t -----------------------------------------------------------------------------*/\n\t\t\t\tif(checkBoxPrintSignal!=null && checkBoxPrintSignal!=0L){\n\t\t\t\t\tlistOrdersDTO=\t(ArrayList<OrdersDTO>) session.getAttribute(""listOrdersDTOAuto"");\n\t\t\t\t\thashOrders= (Hashtable<String, OrdersDTO>)session.getAttribute(""hashOrders"");\n\t\t\t\t\tOrdersDTO orderDTOInHash=hashOrders.get(lsOrderId);\n\t\t\t\t\torderDTOInHash.setPrint(checkBoxPrint);\n\t\t\t\t\tOrdersDTO orderDTOInList=listOrdersDTO.get(indexOrder);\n\t\t\t\t\torderDTOInList.setPrint(checkBoxPrint);\n\t\t\t\t\treturn SUCCESS;\n\t\t\t\t}\n\n\n\t\t\t\t/*------------- When user check on the button OK of dialog saveSuccessPop ----\n\t\t\t\t\t\t\t \t\t\tjust hide the popup saveSuccessPop\n\t\t \t\t -----------------------------------------------------------------------------*/\n\t\t\t\tif(okSaveSuccessPopSignal!=null && okSaveSuccessPopSignal!=0L){\n\t\t\t\t\tlistOrdersDTO=\t(ArrayList<OrdersDTO>) session.getAttribute(""listOrdersDTOAuto"");\n\t\t\t\t\treturn SUCCESS;\n\t\t\t\t}\n\n\t\t\t\t/*-------------------- When user change Quantity to split --------------------\n\t\t\t\t\tprepare order to split from two other orders witch\n\t\t\t\t\t one must have a lsOrder with underscore \n\t\t \t\t -----------------------------------------------------------------------------*/\n\t\t\t\tif(quantityToChangeSignal!=null && quantityToChangeSignal!=0L){\n\t\t\t\t\tlistOrdersDTO=\t(ArrayList<OrdersDTO>) session.getAttribute(""listOrdersDTOAuto"");\n\t\t\t\t\thashOrders= (Hashtable<String, OrdersDTO>)session.getAttribute(""hashOrders"");\n\t\t\t\t\tSystem.out.println(""quantityToChangeSignal=""+quantityToChangeSignal);\n\t\t\t\t\tSystem.out.println(""lsOrderId=""+lsOrderId);\n\t\t\t\t\tSystem.out.println(""quantityToChange=""+quantityToChange);\n\t\t\t\t\tSystem.out.println(""indexRow=""+indexRow);\n\t\t\t\t\tOrdersDTO orderToChangeQt=hashOrders.get(lsOrderId);\n\t\t\t\t\tOrdersRows orderRow=orderToChangeQt.getRowsList().get(indexRow);\n\t\t\t\t\tif(quantityToChange<orderRow.getQuantity())orderRow.setQuantityToSplit(quantityToChange);\n\t\t\t\t\treturn SUCCESS;\n\t\t\t\t}\n\n\t\t\t\t/*-------------------- SAVE ORDERS -------------------------------------------\n\t\t\t\t\t\tsave in data bases just orders witch has print checked \n\t\t \t\t -----------------------------------------------------------------------------*/\n\t\t\t\tif(saveOrdersSignal!=null && saveOrdersSignal!=0L){\n\t\t\t\t\tlistOrdersDTO=\t(ArrayList<OrdersDTO>) session.getAttribute(""listOrdersDTOAuto"");\n\t\t\t\t\tboolean callNotification=orderService.isExistAnyLsOrderIdInDB(listOrdersDTO);\n\t\t\t\t\tif(callNotification){//ask admin if he want to save all orders\n\t\t\t\t\t\tif(confirmSaveOrdersSignal==null || confirmSaveOrdersSignal==0L){\n\t\t\t\t\t\t\tmessage=""One or more of these Orders already exists.\\n""+\n\t\t\t\t\t\t\t\t\t""Select option:"";\n\t\t\t\t\t\t\tshowNotificationPop=""display:block;visibility:visible;"";\t\n\t\t\t\t\t\t}else if(confirmSaveOrdersSignal==1L){//add all orders in DB\n\t\t\t\t\t\t\tsaved=0L;\n\t\t\t\t\t\t\tlistOrdersDTO=orderService.insertListOrders(listOrdersDTO); \n\t\t\t\t\t\t\tsession.setAttribute(""listOrdersDTOAuto"",listOrdersDTO);\n\t\t\t\t\t\t\thashOrders =orderService.getHashOrdersDTOFromListOrdersDTO(listOrdersDTO);\n\t\t\t\t\t\t\tsession.setAttribute(""hashOrders"",hashOrders);\n\t\t\t\t\t\t\tmessage=""Saving has completed successfuly"";\n\t\t\t\t\t\t\tshowSaveSuccessPop=""display:block;visibility:visible;"";\n\t\t\t\t\t\t}else if(confirmSaveOrdersSignal==2L){//add just orders if not exist in DB\n\t\t\t\t\t\t\tsaved=0L;\n\t\t\t\t\t\t\torderService.insertListOrdersIfNotExist(listOrdersDTO); \n\t\t\t\t\t\t\tsession.setAttribute(""listOrdersDTOAuto"",listOrdersDTO);\n\t\t\t\t\t\t\thashOrders =orderService.getHashOrdersDTOFromListOrdersDTO(listOrdersDTO);\n\t\t\t\t\t\t\tsession.setAttribute(""hashOrders"",hashOrders);\n\t\t\t\t\t\t\tmessage=""Saving has completed successfuly"";\n\t\t\t\t\t\t\tshowSaveSuccessPop=""display:block;visibility:visible;"";\n\t\t\t\t\t\t}\n\t\t\t\t\t}else{\n\t\t\t\t\t\tsaved=0L;\n\t\t\t\t\t\tmessage=""Saving has completed successfuly"";\n\t\t\t\t\t\tshowSaveSuccessPop=""display:block;visibility:visible;"";\n\t\t\t\t\t\tlistOrdersDTO=orderService.insertListOrders(listOrdersDTO);\n\t\t\t\t\t\tsession.setAttribute(""listOrdersDTOAuto"",listOrdersDTO);\n\t\t\t\t\t}\n\t\t\t\t\treturn SUCCESS;\n\t\t\t\t}\n\n\t\t\t\t/*-------------------- Duplicate Order ----------------------------------------\n\t\t\t\t\t\tCreate order in just in memory\n\t\t \t\t -----------------------------------------------------------------------------*/\n\t\t\t\tif(duplicateOrderSignal!=null && duplicateOrderSignal!=0L){\n\t\t\t\tlistOrdersDTO=\t(ArrayList<OrdersDTO>) session.getAttribute(""listOrdersDTOAuto"");\n\t\t\t\thashOrders= (Hashtable<String, OrdersDTO>)session.getAttribute(""hashOrders"");\n\t\t\t\tOrdersDTO orderToClone=hashOrders.get(lsOrderId);\n\t\t\t\tOrdersDTO orderClone=DTOFactory.getOrderDTOSplitted(orderToClone);\n\t\t\t\tif(orderClone!=null){\n\t\t\t\t\tString lsOrder=orderClone.getLsOrderId();\n\t\t\t\t\tString strlsOrder=orderService.generateLsOrderId(lsOrder, hashOrders);\n\t\t\t\t\torderClone.setLsOrderId(strlsOrder);\n\t\t\t\t\torderClone.setCssStyle(""background-color:#FFFF99;border-right: 1px solid #CCCCCC;border-left:1px solid #CCCCCC;border-top:  1px solid #CCCCCC;"");\n\t\t\t\t\trowIndex=0;\n\t\t\t\t\tfor(OrdersRows row: orderClone.getRowsList()){\n\t\t\t\t\t\trow.setIndex(rowIndex);\n\t\t\t\t\t\tSystem.out.println(row.getProductId()+"" --- ""+row.getLsProductID()+"" --- ""+row.getQuantity()+"" --- ""+row.getProductDescription());\t\n\t\t\t\t\t\trowIndex++;\n\t\t\t\t\t}\n\t\t\t\t\tsaved=0L;\n\t\t\t\t\tlistOrdersDTO.add(indexOrder+1,orderClone);\n\t\t\t\t\thashOrders.put(orderClone.getLsOrderId(), orderClone);\n\t\t\t\t\tif(listOrdersDTO.size()>0){\n\t\t\t\t\t\tsession.setAttribute(""listOrdersDTOAuto"",listOrdersDTO);\n\t\t\t\t\t\tsession.setAttribute(""hashOrders"",hashOrders);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tsaved=orderService.nbOrdersNotSavedInDB(listOrdersDTO);\n\t\t\t\treturn SUCCESS;\n\t\t\t\t}\n\n\t\t\t\t/*---------------- retrieve file info customer order -------------------------*/\n\t\t\t\tUserFileRecoveryDTO ufrDTO=orderService.getUserFileRecoveryByUser(userLoginTo);\n\t\t\t\tsession.setAttribute(""userLogin"",userLoginTo);\n\n\t\t\t\t/*--------------------recovery OrderFile client ------------------------------\n\t\t\t\t\trecovered the client file and converts it into a list, and  \n \t\t\t\t\ta Hatable witch allow use to control the orders rows\n\t\t\t\t -----------------------------------------------------------------------------*/\n\t\t\t\tFile OrderFilePermanent=null;\n\t\t\t\tif(orderFile!=null){\n\t\t\t\t\tString filePath = request.getSession().getServletContext().getRealPath(""/"");\n\t\t\t\t\tdataPath = filePath + ""WEB-INF/jsp/orders/data/"";\n        \t\t\tnameFile=dataPath+userLoginTo+"".""+ufrDTO.getFileType();\n        \t\t\t//show user logo\n        \t\t\tuserLogo=""./images/orders/usersLogos/""+userLoginTo+"".png"";\n        \t\t\tif(ufrDTO.getUserId()<=0L)userLogo=null;\n        \t\t\tsession.setAttribute(""userLogo"",userLogo);\n        \t\t\tOrderFilePermanent = new File(nameFile);\n\t\t\t\t\tif(OrderFilePermanent.exists())OrderFilePermanent.delete();\n\t\t\t\t\ttry {\n\t\t\t\t\t\tOrderFilePermanent = new File(nameFile);\n\t\t\t\t\t\tFileUtils.copyFile(orderFile, OrderFilePermanent);\n\t\t\t\t\t} catch (IOException e) {\n\t\t\t\t\t\te.printStackTrace();\n\t\t\t\t\t\treturn ""input"";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t/*-------------------- converts the order file to a list and HashTable -------\n\t\t\t\t\trecovered the client file and converts it into a list, and  \n \t\t\t\t\ta Hatable witch allow use to control the orders rows\n\t\t\t\t -----------------------------------------------------------------------------*/\n\t\t\t\tCollection listUsrDataDTO=null;\n\t\t\t\tsaved=1L;\n\t\t\t\tswitch (ufrDTO.getFileTypeId()) {\n\t\t\t\tcase 1: //case xml file\n\t\t\t\t\tlistUsrDataDTO=orderService.toArrayListFromXML(OrderFilePermanent, userLoginTo);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2: //case xls file\n\t\t\t\t\tlistUsrDataDTO=orderService.toArrayListFromXLS(OrderFilePermanent, userLoginTo);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3: // case csv file\n\t\t\t\t\torderService.csvParsing(dataPath,userLoginTo);\n\t\t\t\t\tnameFile=dataPath+userLoginTo+"".xls"";\n\t\t\t\t\tOrderFilePermanent = new File(nameFile);\n\t\t\t\t\tlistUsrDataDTO=orderService.toArrayListFromXLS(OrderFilePermanent, userLoginTo);\n\t\t\t\t} \n\t\t\t\tArrayList<UserFileDataRecoveryDTO> list=(ArrayList<UserFileDataRecoveryDTO>)listUsrDataDTO;\n\t\t\t\thashOrders =orderService.getHashOrdersFromUserDataRecovery(ufrDTO.getUserId(),list);\n\t\t\t\tlistOrdersDTO=new ArrayList<OrdersDTO>();\n\t\t\t\tint balance=0;\n\t\t\t\tint OrderIndex=0;\n\t\t\t\trowIndex=0;\n\t\t\t\tfor(OrdersDTO orDTO: hashOrders.values()){\n\t\t\t\t\tbalance=(balance==1?0:1);\n\t\t\t\t\tif(balance==1){\n\t\t\t\t\t\torDTO.setCssStyle(""background-color: rgb(245,249,252);border-right: 1px solid #CCCCCC;border-left:1px solid #CCCCCC;border-top:  1px solid #CCCCCC;"");\n\t\t\t\t\t}else{\n\t\t\t\t\t\torDTO.setCssStyle(""background-color: color:white;border-right:1px solid #CCCCCC;border-left:1px solid #CCCCCC;border-top:1px solid #CCCCCC;"");\n\t\t\t\t\t}\n\t\t\t\t\torDTO.setIndex(OrderIndex); \n\t\t\t\t\tlistOrdersDTO.add(orDTO);\n\t\t\t\t\trowIndex=0;\n\t\t\t\t\tSystem.out.println(""-------------- ""+orDTO.getLsOrderId()+"" ---------------"");\n\t\t\t\t\tfor(OrdersRows row: orDTO.getRowsList()){\n\t\t\t\t\t\trow.setIndex(rowIndex);\n\t\t\t\t\t\tSystem.out.println(row.getProductId()+"" --- ""+row.getLsProductID()+"" --- ""+row.getQuantity()+"" --- ""+row.getProductDescription());\t\n\t\t\t\t\t\trowIndex++;\n\t\t\t\t\t}\n\t\t\t\t\tOrderIndex++;\n\t\t\t\t}\n\t\t\t\tif(listOrdersDTO.size()>0){\n\t\t\t\t\tsession.setAttribute(""listOrdersDTOAuto"",listOrdersDTO);\n\t\t\t\t\tsession.setAttribute(""hashOrders"",hashOrders);\n\t\t\t\t}else userLogo=null;\n\t\t\t\tsession.setAttribute(""userLogo"",userLogo);\t\n\t\t\t} catch (Exception e) {\n\t\t\t\te.printStackTrace();\n\t\t\t\treturn ""input"";\n\t\t\t}\n\treturn SUCCESS;\n\t}\n\n\t\n}\n\n----------------------------------- SOURCE END -------------------------------------",1380142363904
error,log,,,"Problems occurred when invoking code from plug-in: ""org.eclipse.jdt.ui"".",1380142363919
error,log,,,"Error in JDT Core during reconcile",1380142363919
error,log,,,"Exception occurred during problem detection:\n----------------------------------- SOURCE BEGIN -------------------------------------\npackage com.loyauty.web.struts.action.orders;\n\nimport java.io.File;\nimport java.text.SimpleDateFormat;\nimport java.util.ArrayList;\nimport java.util.Date;\nimport java.util.Hashtable;\nimport java.util.List;\nimport javax.servlet.http.HttpSession;\nimport lombok.Getter;\nimport lombok.Setter;\n\nimport com.loyauty.exception.ServiceException;\nimport com.loyauty.exception.ServiceLocatorException;\nimport com.loyauty.model.Orders;\nimport com.loyauty.model.OrdersRows;\nimport com.loyauty.model.User;\nimport com.loyauty.service.core.DTOFactory;\nimport com.loyauty.service.core.dto.BasicUserDTO;\nimport com.loyauty.service.core.dto.OrdersDTO;\nimport com.loyauty.service.core.dto.UserProductPriceDTO;\nimport com.loyauty.service.core.dto.UserSessionDTO;\nimport com.loyauty.service.orders.OrdersService;\nimport com.loyauty.service.product.ProductService;\nimport com.loyauty.service.user.UserService;\nimport com.loyauty.web.struts.action.LoyautyAction;\n\npublic class ReportOrders  extends LoyautyAction {\n\tprivate static final long serialVersionUID = -3811760851445730062L;\n\t\n\tprivate UserService userService;\n\tprivate ProductService productService;\n\tprivate OrdersService orderService;\n\t@Getter @Setter\n\tprivate String userLogin;\n\t@Getter @Setter\n\tprivate List<User> usersList;\n\tprivate static int USER_TYPE = 2;\n\t@Getter @Setter\n\tList<OrdersDTO>listOrdersDTO;\n\t@Getter @Setter\n\tprivate String lsOrderId;\n\t@Getter @Setter\n\tLong poYpop;\n\t@Getter @Setter\n\tLong poXpop;\n\t@Getter @Setter\n\tprivate Long pageTop=0L;\n\t@Getter @Setter\n\tprivate Date creationDate ;\n\t@Getter @Setter\n\tprivate Long findOrdersSignal;\n\tprivate String status;\n\t@Getter @Setter\n\tprivate Long sizeResult=0L;\n\t@Getter @Setter\n\tprivate Long sorting;\n\t@Getter @Setter\n\tprivate Long sortingOrdersSignal;\n\t@Getter @Setter\n\tprivate Integer fieldForSorting;\n\t@Getter @Setter\n\tprivate Integer asc;\n\t@Getter @Setter\n\tprivate Integer scrollDivRowsLeft;\n\t@Getter @Setter\n\tprivate Integer scrollPageLeft;\n\t@Getter @Setter\n\tprivate Integer scrollDivRowsTop;\n\t@Getter @Setter\n\tprivate String strCreationDateStart;\n\t@Getter @Setter\n\tprivate String strCreationDateEnd;\n\t@Getter @Setter\n\tprivate Date creationDateStart;\n\t@Getter @Setter\n\tprivate Date creationDateEnd ;\n\tprivate Date creationDateStartArg;\n\tprivate Date creationDateEndArg ;\n\t@Getter @Setter\n\tprivate Integer selectedStatus;\n\t@Getter @Setter\n\tprivate Long editOrderSignal;\n\t@Getter @Setter\n\tprivate Long cancelSignal;\n\t@Getter @Setter\n\tprivate Integer indexOrder;\n\t@Getter @Setter\n\tprivate OrdersDTO orderToEdit;\n\t@Getter @Setter\n\tprivate String strProductOrderDate;\n\t@Getter @Setter\n\tprivate String lsProductID;\n\t@Getter @Setter\n\tInteger indexRow;\n\t@Getter @Setter\n\tprivate String showOrderDetailPop;\n\t@Getter @Setter\n\tprivate Long userId;\n\t@Getter @Setter\n\tprivate Long checkProductPriceSignal;\n\t@Getter @Setter\n\tprivate Long saveTemporaryRowSignal;\n\t@Getter @Setter\n\tprivate Long addSimilarRowSignal;\n\t@Getter @Setter\n\tprivate Long deleteRowSignal;\n\t@Getter @Setter\n\tprivate Long saveOrdersSignal;\n\t@Getter @Setter\n\tprivate Long checkBoxPrintSignal;\n\t@Getter @Setter\n\tprivate Boolean checkBoxPrint;\n\t\n\t//recovery Data Order\n\t@Getter @Setter\n\tprivate String clientLastName;\n\t@Getter @Setter\n\tprivate String clientFirstName;\n\t@Getter @Setter\n\tprivate String clientOtherNames;\n\t@Getter @Setter\n\tprivate String clientStreet;\n\t@Getter @Setter\n\tprivate String  clientOtherStreet;\n\t@Getter @Setter\n\tprivate String  clientCity;\n\t@Getter @Setter\n\tprivate String  clientProvince;\n\t@Getter @Setter\n\tprivate String  clientPostalCode;\n\t@Getter @Setter\n\tprivate String  clientPhone;\n\t@Getter @Setter\n\tprivate String  clientEmail;\n\t@Getter @Setter\n\tprivate String productOrderNumber;\n\t@Getter @Setter\n\tprivate String strRequiredDate;\n\t\n\t//recovery data row\n\t@Getter @Setter\n\tprivate Double quantity ;\n\t@Getter @Setter\n\tprivate Double quantityToChange;\n\t@Getter @Setter\n\tprivate Double stock;\n\t@Getter @Setter\n\tprivate String productDescription;\n\t@Getter @Setter\n\tprivate Double unitPrice;\n\t@Getter @Setter\n\tprivate Double shippingFee;\n\t@Getter @Setter\n\tprivate String shippingCompany;\n\t@Getter @Setter\n\tprivate String trackingNumber;\n\t@Getter @Setter\n\tprivate Long quantityToChangeSignal;\n\t@Getter @Setter\n\tprivate Long duplicateOrderSignal;\n\t@Getter @Setter\n\tprivate String strCreationDate;\n\t@Getter @Setter\n\tprivate String strCreationOrderDate;\n\t@Getter @Setter\n\tprivate User usr;\n\t@Getter @Setter\n\tprivate String showSaveSuccessPop=""visibility:hidden;display:none;"";\n\t//showSaveSuccessPop=""display:block;visibility:visible;"";\n\t//showSaveSuccessPop=""visibility:hidden;display:none;"";\n\t@Getter @Setter\n\tprivate String message;\n\t@Getter @Setter\n\tprivate Long okSaveSuccessPopSignal;\n\n\t/*=========================================================================================\n\t\t\t\t\t\t\t\t\t\tDefault constructor\n\t  =========================================================================================*/\n\tpublic  ReportOrders() throws ServiceLocatorException {\n\t\tsuper();\t \n\t\tuserService = getServiceLocator().getUserService();\n\t\torderService = getServiceLocator().getOrderService();\n\t\tproductService = getServiceLocator().getProductService();\n\t}\n\t/*=========================================================================================\n\t \t\t\t\t\t\t\t\t\tmethod execute\n\t  =========================================================================================*/\n\t@SuppressWarnings({ ""rawtypes"", ""unchecked"" })\n\t@Override\n\tpublic String execute() throws Exception {\n\t\tHttpSession session = request.getSession(true);\n\t\tif(showOrderDetailPop==null)showOrderDetailPop=""visibility:hidden;display:none;"";\n\t\tif(poYpop==null)poYpop=100L;\n\t\tif(poXpop==null)poXpop=100L;\n\t\tHashtable<String, OrdersDTO>hashOrders;\n\t\tif(selectedStatus==null)selectedStatus=-1;\n\t\tsizeResult=(Long)session.getAttribute(""sizeResult"");\n\t\tasc=(Integer)session.getAttribute(""asc"");\n\t\tif(asc==null)asc=0;\n\t\tif(sizeResult==null)sizeResult=0L;\n\t\tList<Integer>listIndexColumn=new ArrayList<Integer>();\n\t\ttry {\n\t\n\t\t\t/*-------------------- recovery users list -----------------------------------\n\t\t\t\t\t\t\tRecovery users list in session\n\t\t\t -----------------------------------------------------------------------------*/\n\t\t\tBasicUserDTO basicUserDTO = new BasicUserDTO();\n\t\t\tbasicUserDTO.setTypeId(USER_TYPE);\n\t\t\tList<User> usersListSession=(List<User>)session.getAttribute(""usersListSession"");\n\t\t\tif(usersListSession==null){\n\t\t\t\tList<UserSessionDTO> listAllUsers= userService.getAllUsers(basicUserDTO);\n\t\t\t\tusersList=new ArrayList<User>();\n\t\t\t\tfor(UserSessionDTO userDTO:listAllUsers){\n\t\t\t\t\tUser user=new User();\n\t\t\t\t\tuser.setId(userDTO.getId());\n\t\t\t\t\tuser.setLogin(userDTO.getLogin());\n\t\t\t\t\tusersList.add(user);\n\t\t\t\t}\n\t\t\t\tsession.setAttribute(""usersListSession"",usersList);\n\t\t\t}else usersList=usersListSession;\n\n\t\t\t/*------ always recovery creationDate from strCreationDate ------\n\t\t\t\t\t\talways keep the user search options\n\t\t\t  ---------------------------------------------------------------*/\n\t\t\tcreationDateStart=null;\n\t\t\tSimpleDateFormat frm = new SimpleDateFormat(""dd/MM/yyyy"");\n\t\t\tif (((strCreationDateStart)!=null)&&(!"""".equals(strCreationDateStart))){\n    \t\t\ttry {\n    \t\t\t\tDate date = frm.parse(strCreationDateStart);\n    \t\t\t\tcreationDateStart=date;\n    \t\t\t\tcreationDateStartArg=date;\n    \t\t\t}\n    \t\t\tcatch (Exception pe) {\n    \t\t\t\tcreationDateStart=null;\n    \t\t\t\taddActionError(""Please enter a date in the correct format"");\n    \t\t\t}\n    \t\t}\n    \t\tif(creationDateStart==null){\n\t\t\t\tDate date = frm.parse(""01/01/1900"");\n\t\t\t\tcreationDateStartArg=date;\n    \t\t}\n    \t\tcreationDateEnd=null;\n    \t\tif (((strCreationDateEnd)!=null)&&(!"""".equals(strCreationDateEnd))){\n    \t\t\tfrm = new SimpleDateFormat(""dd/MM/yyyy"");\n    \t\t\ttry {\n    \t\t\t\tDate date = frm.parse(strCreationDateEnd);\n    \t\t\t\tcreationDateEnd=date;\n    \t\t\t\tcreationDateEndArg=date;\n    \t\t\t}\n    \t\t\tcatch (Exception pe) {\n    \t\t\t\tcreationDateEnd=null;\n    \t\t\t\taddActionError(""Please enter a date in the correct format"");\n    \t\t\t}\n    \t\t}\n    \t\tif(creationDateEnd==null){\n    \t\t\tcreationDateEndArg=new Date();\n    \t\t}\n\n\t\t\t/*------ always recovery Status from selectedStatus key ------\n\t\t\t\t\t\talways keep the status search options\n\t\t\t  ---------------------------------------------------------------*/\n    \t\tswitch (selectedStatus) {\n\t\t\t\tcase -1:status="""";\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0:status=""open"";\n\t\t\t\t\tbreak;\n\t\t\t\tcase 1:status=""progress"";\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:status=""shipped"";\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3:status=""billed"";\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t/*------------ When Admin click on icon findOrders.png ----------\n\t\t\t\t\t\t\t\tcheck user and complete infos client\n\t\t\t ----------------------------------------------------------------*/\n\t\t\tif(findOrdersSignal!=null && findOrdersSignal!=0L){\t\n\t\t\t\tlistIndexColumn=new ArrayList<Integer>();\n\t\t\t\tfor(int i=0;i<=32;i++){\n\t\t\t\t\tif(i!=2 && i<=12){\n\t\t\t\t\t\tlistIndexColumn.add(i);\n\t\t\t\t\t\tif(i!=0)listIndexColumn.add(-i);\n\t\t\t\t\t}\n\t\t\t\t\tif(i==28 || i==29 || i==32){\n\t\t\t\t\t\tlistIndexColumn.add(i);\n\t\t\t\t\t\tlistIndexColumn.add(-i);\n\t\t\t\t\t}\n\t\t\t\t}\t\t\t\n\t\t\t\tlistOrdersDTO=orderService.searchOrdersWithOptionsAndSorting(creationDateStartArg, creationDateEndArg, userLogin, lsOrderId, status, listIndexColumn);\n\t\t\t\tsession.setAttribute(""listIndexColumn"",listIndexColumn);\n\t\t\t\tsession.setAttribute(""sizeResult"",sizeResult);\n\t\t\t\tsession.setAttribute(""listOrdersDTOReport"",listOrdersDTO);\n\t\t\t\treturn SUCCESS;\n\t\t\t}\n\n\t\t\t/*------------ When Admin click on the icon sorting of column ----------\n\t\t\t\t\t\t\tseach result with option of sorting list\n\t\t\t -----------------------------------------------------------------------*/\n\t\t\tif(sortingOrdersSignal!=null && sortingOrdersSignal!=0L){\t\n\t\t\t\tlistOrdersDTO=(ArrayList<OrdersDTO>) session.getAttribute(""listOrdersDTOReport"");\n\t\t\t\tlistIndexColumn=(List<Integer>)session.getAttribute(""listIndexColumn"");\n\t\t\t\tasc=(asc==1?-1:1);\n\t\t\t\tint nextElement=listIndexColumn.get(0);\n\t\t\t\tfieldForSorting=asc*fieldForSorting;\n\t\t\t\tlistIndexColumn.set(0,fieldForSorting);\n\t\t\t\tfor(int i=1;i<listIndexColumn.size();i++){\n\t\t\t\t\tint element=listIndexColumn.get(i);\n\t\t\t\t\tlistIndexColumn.set(i,nextElement);\n\t\t\t\t\tnextElement=element;\n\t\t\t\t}\t\n\t\t\t\tlistOrdersDTO=orderService.searchOrdersWithOptionsAndSorting(creationDateStartArg, creationDateEndArg, userLogin, lsOrderId, status, listIndexColumn);\n\t\t\t\tint balance=0;\n\t\t\t\tint OrderIndex=0;\n\t\t\t\tfor(OrdersDTO orDTO: listOrdersDTO){\n\t\t\t\t\tbalance=(balance==1?0:1);\n\t\t\t\t\tif(balance==1){\n\t\t\t\t\t\torDTO.setCssStyle(""background-color: rgb(245,249,252);border-right: 1px solid #CCCCCC;border-left:1px solid #CCCCCC;border-top:  1px solid #CCCCCC;"");\n\t\t\t\t\t}else{\n\t\t\t\t\t\torDTO.setCssStyle(""background-color: color:white;border-right:1px solid #CCCCCC;border-left:1px solid #CCCCCC;border-top:1px solid #CCCCCC;"");\n\t\t\t\t\t}\n\t\t\t\t\torDTO.setIndex(OrderIndex); \n\t\t\t\t\tOrderIndex++;\n\t\t\t\t}\n\t\t\t\tsession.setAttribute(""listIndexColumn"",listIndexColumn);\n\t\t\t\tsession.setAttribute(""listOrdersDTOReport"",listOrdersDTO);\n\t\t\t\tsession.setAttribute(""asc"", asc);\n\t\t\t\treturn SUCCESS;\n\t\t\t}\n\n\t\t\t/*------ when Admin click on the lsOrder link in table -----------\n\t\t\tshow popup detail and allow admin to update Order\n\t\t\t  ---------------------------------------------------------------*/\n\t\t\tif (editOrderSignal!=null && editOrderSignal!=0L){\n\t\t\t\tlistOrdersDTO=(ArrayList<OrdersDTO>) session.getAttribute(""listOrdersDTOReport"");\n\t\t\t\torderToEdit=listOrdersDTO.get(indexOrder);\n\t\t\t\tif(orderToEdit==null)orderToEdit=new OrdersDTO();\n\t\t\t\tif(orderToEdit.getProductOrderDate()==null)strProductOrderDate="""";\n\t\t\t\tshowOrderDetailPop=""display:block;visibility:visible;"";\n\t\t\t\treturn SUCCESS;\n\t\t\t}\n\n\t\t\t/*--- when Admin click on the cancel Button of orderDetailPop ---\n\t\t\t\t\twe mast just hide popup OrderDetail\n\t\t\t  ---------------------------------------------------------------*/\n    \t\tif (cancelSignal!=null && cancelSignal!=0L){\n\t\t\t\tlistOrdersDTO=(ArrayList<OrdersDTO>) session.getAttribute(""listOrdersDTOReport"");\n\t\t\t\tshowOrderDetailPop=""visibility:hidden;display:none;"";\n    \t\t\treturn SUCCESS;\n    \t\t}\n\n\t\t\t/*-------------------- When Admin left lsProduct TextField -------------\n\t\t\t\t\t\t\t\tcheck userPrice in DB, and write it in web view\n\t\t\t -----------------------------------------------------------------------------*/\n\t\t\tif(checkProductPriceSignal!=null && checkProductPriceSignal!=0L){\n\t\t\t\tlistOrdersDTO=(List<OrdersDTO>)session.getAttribute(""listOrdersDTOReport"");\n\t\t\t\tOrdersDTO orderDTOToUpdate=listOrdersDTO.get(indexOrder);\n\t\t\t\torderDTOToUpdate=fillDataOrderDTO(orderDTOToUpdate);\n\t\t\t\tOrdersRows orderRowToUpadate=orderDTOToUpdate.getRowsList().get(indexRow);\n\t\t\t\tUserProductPriceDTO userProductPrice=productService.getUsrPPriceByLsproductId(userId, lsProductID);\n\t\t\t\torderRowToUpadate.setCss("""");\n\t\t\t\torderRowToUpadate.setCssPrice("""");\n\t\t\t\tif(userProductPrice==null){\n\t\t\t\t\torderRowToUpadate.setCss(""background-color:red;"");\n\t\t\t\t\torderRowToUpadate.setProductDescription(""""); \n\t\t\t\t\torderRowToUpadate.setStock(null);\n\t\t\t\t\torderRowToUpadate.setProductId(null);\n\t\t\t\t\torderRowToUpadate.setLsProductID(lsProductID);\n\t\t\t\t\torderRowToUpadate.setLsPrice(null);\n\t\t\t\t}else{\n\t\t\t\t\tDouble usrPrice=orderRowToUpadate.getUnitPrice();\n\t\t\t\t\tif(usrPrice==null)usrPrice=0D;\n\t\t\t\t\tif(usrPrice < userProductPrice.getPriceNum()){\n\t\t\t\t\t\torderRowToUpadate.setCssPrice(""background-color:red;"");\t\n\t\t\t\t\t}\n\t\t\t\t\torderRowToUpadate.setProductDescription(userProductPrice.getProductTitle());\n\t\t\t\t\torderRowToUpadate.setStock(userProductPrice.getStock());\n\t\t\t\t\torderRowToUpadate.setProductId(userProductPrice.getProductId());\n\t\t\t\t\torderRowToUpadate.setLsProductID(userProductPrice.getLsProductId());\n\t\t\t\t\torderRowToUpadate.setLsPrice(userProductPrice.getPriceNum());\n\t\t\t\t\tSystem.out.println(""userProductPrice.getLsProductId():""+userProductPrice.getLsProductId());\n\t\t\t\t}\n\t\t\t\tsession.setAttribute(""listOrdersDTOReport"",listOrdersDTO);\n\t\t\t\torderToEdit=orderDTOToUpdate;\n\t\t\t\tlistOrdersDTO=(List<OrdersDTO>)session.getAttribute(""listOrdersDTOReport"");\n\t\t\t\tshowOrderDetailPop=""display:block;visibility:visible;"";\n\t\t\t\treturn SUCCESS;\n\t\t\t}\n\n\t\t\t/*----------------- When Admin check on saveTemporaryRow Icon --------------------------\n\t\t\t\t\twe must first obtained the object that contains the list of rows,\n\t\t\t\t\tafter we accede to the row by index recovered by web view and change it\n\t\t\t ---------------------------------------------------------------------------------------*/\n\t\t\tif(saveTemporaryRowSignal!=null && saveTemporaryRowSignal!=0L){\n\t\t\t\tlistOrdersDTO=(ArrayList<OrdersDTO>) session.getAttribute(""listOrdersDTOReport"");\n\t\t\t\tOrdersDTO orderDTOToUpdate=listOrdersDTO.get(indexOrder);\n\t\t\t\torderDTOToUpdate=fillDataOrderDTO(orderDTOToUpdate);\n\t\t\t\tOrdersRows orderRowToSaveMemory=orderDTOToUpdate.getRowsList().get(indexRow);\n\t\t\t\torderRowToSaveMemory.setIcon(""images/orders/itemValidated.png"");\n\t\t\t\tif(orderRowToSaveMemory!=null){\n\t\t\t\t\torderRowToSaveMemory.setQuantity(quantity); \n\t\t\t\t\torderRowToSaveMemory.setLsProductID(lsProductID);\n\t\t\t\t\torderRowToSaveMemory.setProductDescription(productDescription);\n\t\t\t\t\torderRowToSaveMemory.setUnitPrice(unitPrice);\n\t\t\t\t\torderRowToSaveMemory.setCssPrice(""background-color:#FF6666;"");\n\t\t\t\t\torderRowToSaveMemory.setCssQuantity(""background-color:#FF6666;"");\n\t\t\t\t\tif(quantity!=null && quantity>0D)orderRowToSaveMemory.setCssQuantity("""");\n\t\t\t\t\tif(unitPrice!=null && orderRowToSaveMemory.getLsPrice()!=null\n\t\t\t\t\t  && unitPrice>=orderRowToSaveMemory.getLsPrice())\n\t\t\t\t\t  orderRowToSaveMemory.setCssPrice("""");\n\t\t\t\t\torderRowToSaveMemory.setShippingFee(shippingFee);\n\t\t\t\t\torderRowToSaveMemory.setShippingCompany(shippingCompany);\n\t\t\t\t\torderRowToSaveMemory.setTrackingNumber(trackingNumber);\t\n\t\t\t\t\tint indexOrder=0;\n\t\t\t\t\tint indexRow=0;\n\t\t\t\t\tfor(OrdersDTO orderDTO:listOrdersDTO){\n\t\t\t\t\t\torderDTO.setIndex(indexOrder);\n\t\t\t\t\t\tindexOrder++;\n\t\t\t\t\t\tindexRow=0;\n\t\t\t\t\t\tfor(OrdersRows orderRows:orderDTO.getRowsList()){\n\t\t\t\t\t\t\torderRows.setIndex(indexRow);\n\t\t\t\t\t\t\tindexRow++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tsession.setAttribute(""listOrdersDTOReport"",listOrdersDTO);\n\t\t\t\t\tlistOrdersDTO=(List<OrdersDTO>)session.getAttribute(""listOrdersDTOReport"");\n\t\t\t\t}\n\t\t\t\torderToEdit=listOrdersDTO.get(indexOrder);\n\t\t\t\tshowOrderDetailPop=""display:block;visibility:visible;"";\n\t\t\t\treturn SUCCESS;\n\t\t\t}\n\n\t\t\t/*------- When Admin click on addSimilarRow Icon on the OrderDetailPop --------\n\t\t\t\t\t\t\t\tAdd one Row Similar at the previews\n\t\t\t  -----------------------------------------------------------------------------*/\n\t\t\tif(addSimilarRowSignal!=null && addSimilarRowSignal!=0L){\n\t\t\t\tlistOrdersDTO=(List<OrdersDTO>)session.getAttribute(""listOrdersDTOReport"");\n\t\t\t\tOrdersDTO orderDTOToUpdate=listOrdersDTO.get(indexOrder);\n\t\t\t\t//generate lsOrderId to new order\n\t\t\t\torderDTOToUpdate=fillDataOrderDTO(orderDTOToUpdate);\n\t\t\t\tOrdersRows orderRowToClone=orderDTOToUpdate.getRowsList().get(indexRow);\n\t\t\t\tif(orderRowToClone!=null){\n\t\t\t\t\tif(!orderRowToClone.getIcon().equals(""images/orders/itemValidated.png"")){\n\t\t\t\t\t\torderRowToClone.setQuantity(quantity); \n\t\t\t\t\t\torderRowToClone.setLsProductID(lsProductID);\n\t\t\t\t\t\torderRowToClone.setStock(stock);\n\t\t\t\t\t\torderRowToClone.setProductDescription(productDescription);\n\t\t\t\t\t\torderRowToClone.setUnitPrice(unitPrice);\n\t\t\t\t\t\torderRowToClone.setShippingFee(shippingFee);\n\t\t\t\t\t\torderRowToClone.setShippingCompany(shippingCompany);\n\t\t\t\t\t\torderRowToClone.setTrackingNumber(trackingNumber);\n\t\t\t\t\t}\n\t\t\t\t\torderRowToClone.setIcon(""images/orders/itemValidated.png"");\n\t\t\t\t\tOrdersRows orderRowToAdd=DTOFactory.getOrderRowClone(orderRowToClone);\n\t\t\t\t\torderRowToAdd.setId(-1L);\n\t\t\t\t\t\n\t\t\t\t\torderDTOToUpdate.getRowsList().add(indexRow+1,orderRowToAdd);\n\t\t\t\t\tint indexOrder=0;\n\t\t\t\t\tint indexRow=0;\n\t\t\t\t\tfor(OrdersDTO orderDTO:listOrdersDTO){\n\t\t\t\t\t\torderDTO.setIndex(indexOrder);\n\t\t\t\t\t\tindexOrder++;\n\t\t\t\t\t\tindexRow=0;\n\t\t\t\t\t\tfor(OrdersRows orderRows:orderDTO.getRowsList()){\n\t\t\t\t\t\t\torderRows.setIndex(indexRow);\n\t\t\t\t\t\t\tindexRow++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tsession.setAttribute(""listOrdersDTOReport"",listOrdersDTO);\n\t\t\t\t\tlistOrdersDTO=(List<OrdersDTO>)session.getAttribute(""listOrdersDTOReport"");\n\t\t\t\t}\n\t\t\t\torderToEdit=listOrdersDTO.get(indexOrder);\n\t\t\t\tshowOrderDetailPop=""display:block;visibility:visible;"";\n\t\t\t\treturn SUCCESS;\n\t\t\t}\n\n\t\t\t/*-------- When Admin click on Delete Row Icon of orderDetail Popup-----------\n\t\t\t\t\t\t\t\t\tDelete this row using index\n\t\t\t -----------------------------------------------------------------------------*/\n\t\t\tif(deleteRowSignal!=null && deleteRowSignal!=0L){\n\t\t\t\tlistOrdersDTO=(List<OrdersDTO>)session.getAttribute(""listOrdersDTOReport"");\n\t\t\t\tOrdersDTO orderDTO=listOrdersDTO.get(indexOrder);\n\t\t\t\torderDTO=fillDataOrderDTO(orderDTO);\n\t\t\t\tint nb=orderService.nbOrderRowsNotDeleted(orderDTO.getRowsList());\n\t\t\t\tif(orderDTO!=null && orderDTO.getRowsList().size()>1){\n\t\t\t\t\tfor(int i=0 ;i<orderDTO.getRowsList().size();i++){\n\t\t\t\t\t\tif(i==indexRow && nb>1){\n\t\t\t\t\t\t\torderDTO.getRowsList().get(i).setToDelete(1);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tsession.setAttribute(""listOrdersDTOReport"",listOrdersDTO);\n\t\t\t\torderToEdit=listOrdersDTO.get(indexOrder);\n\t\t\t\tshowOrderDetailPop=""display:block;visibility:visible;"";\n\t\t\t\treturn SUCCESS;\n\t\t\t}\n\n\t\t\t/*------ when Admin click on the button save of orderDetail ------\n\t\t\t\t\t save order and keep pup showed \n\t\t\t  ---------------------------------------------------------------*/\n    \t\tif (saveOrdersSignal!=null && saveOrdersSignal!=0L){\n\t\t\t\tlistOrdersDTO=(ArrayList<OrdersDTO>) session.getAttribute(""listOrdersDTOReport"");\n\t\t\t\torderToEdit=listOrdersDTO.get(indexOrder);\n\t\t\t\torderToEdit=fillDataOrderDTO(orderToEdit);\n\t\t\t\torderService.updateOrderByLsOrderId(orderToEdit);\n\t\t\t\tfor(OrdersRows row:orderToEdit.getRowsList()){\n\t\t\t\t\tif(row.getId()==-1)row.setId(0L);\n\t\t\t\t}\n\t\t\t\torderToEdit=DTOFactory.getOrderDTOConsideredMissingInfo(orderToEdit);\n\t\t\t\tsession.setAttribute(""listOrdersDTOReport"",listOrdersDTO);\n\t\t\t\tmessage=""Saving has completed successfuly"";\n\t\t\t\tshowSaveSuccessPop=""display:block;visibility:visible;"";\n\t\t\t\tshowOrderDetailPop=""display:block;visibility:visible;"";\n    \t\t\treturn SUCCESS;\n    \t\t}\n\n\t\t\t/*------ When user change Quantity to split in orderDetailPop ----------\n\t\t\t\t\t prepare order to split from two other orders witch\n\t\t\t\t \t one must have a lsOrder with underscore \n\t \t\t -----------------------------------------------------------------------*/\n\t\t\tif(quantityToChangeSignal!=null && quantityToChangeSignal!=0L){\n\t\t\t\tlistOrdersDTO=(ArrayList<OrdersDTO>) session.getAttribute(""listOrdersDTOReport"");\n\t\t\t\tOrdersDTO orderToChangeQt=listOrdersDTO.get(indexOrder);\n\t\t\t\tOrdersRows orderRow=orderToChangeQt.getRowsList().get(indexRow);\n\t\t\t\torderToChangeQt=fillDataOrderDTO(orderToChangeQt);\n\t\t\t\tif(quantityToChange<orderRow.getQuantity())orderRow.setQuantityToSplit(quantityToChange);\n\t\t\t\tsession.setAttribute(""listOrdersDTOReport"",listOrdersDTO);\n\t\t\t\tlistOrdersDTO=(List<OrdersDTO>)session.getAttribute(""listOrdersDTOReport"");\n\t\t\t\torderToEdit=listOrdersDTO.get(indexOrder);\n\t\t\t\tshowOrderDetailPop=""display:block;visibility:visible;"";\n\t\t\t\treturn SUCCESS;\n\t\t\t}\n\n\t\t\t/*-------------------- Duplicate Order ----------------------------------------\n\t\t\t\t\t\t\tCreate order in just in memory\n\t \t\t -----------------------------------------------------------------------------*/\n\t\t\tif(duplicateOrderSignal!=null && duplicateOrderSignal!=0L){\n\t\t\tlistOrdersDTO=\t(ArrayList<OrdersDTO>) session.getAttribute(""listOrdersDTOReport"");\n\t\t\tOrdersDTO orderToClone=listOrdersDTO.get(indexOrder);\n\t\t\torderToClone=fillDataOrderDTO(orderToClone);\n\t\t\thashOrders=new Hashtable<String, OrdersDTO>();\n\t\t\tfor(OrdersDTO ord:listOrdersDTO){\n\t\t\t\thashOrders.put(ord.getLsOrderId(), ord);\n\t\t\t}\n\t\t\tOrdersDTO orderClone=DTOFactory.getOrderDTOSplitted(orderToClone);\n\t\t\tif(orderClone!=null){\n\t\t\t\tString lsOrder=orderClone.getLsOrderId();\n\t\t\t\tString strlsOrder=orderService.generateLsOrderId(lsOrder, hashOrders);\n\t\t\t\torderClone.setLsOrderId(strlsOrder);//rgb(116,180,209)\n\t\t\t\torderClone.setCssStyle(""background-color:#FFFF99;border-right: 1px solid #CCCCCC;border-left:1px solid #CCCCCC;border-top:  1px solid #CCCCCC;"");\n\t\t\t\torderToEdit=orderClone;\n\t\t\t\torderToEdit.setBackgroundColor(""background-color:#FFFF99;"");\n\t\t\t\tlistOrdersDTO.add(indexOrder+1,orderClone);\n\t\t\t\tindexOrder=0;\n\t\t\t\tfor(OrdersDTO ord: listOrdersDTO){\n\t\t\t\t\tord.setIndex(indexOrder);\n\t\t\t\t\tindexOrder++;\n\t\t\t\t}\n\t\t\t\tif(listOrdersDTO.size()>0){\n\t\t\t\t\tsession.setAttribute(""listOrdersDTOReport"",listOrdersDTO);\n\t\t\t\t}\n\t\t\t\torderService.updateOrderByLsOrderId(orderToClone);\n\t\t\t\torderService.insertOrderWithRows(orderClone);\t\t\t\n\t\t\t}else orderToEdit=orderToClone;\n\t\t\tshowOrderDetailPop=""display:block;visibility:visible;"";\n\t\t\treturn SUCCESS;\n\t\t\t}\n\n\n\t\t\t/*-------------------- When user check print item -----------------------------\n\t\t\t\t\tAdd or remove this element from the orders to print\n\t \t\t -----------------------------------------------------------------------------*/\n\t\t\tif(checkBoxPrintSignal!=null && checkBoxPrintSignal!=0L){\n\t\t\t\tlistOrdersDTO=(ArrayList<OrdersDTO>) session.getAttribute(""listOrdersDTOReport"");\n\t\t\t\tOrdersDTO orderDTOInList=listOrdersDTO.get(indexOrder);\n\t\t\t\torderDTOInList.setPrint(checkBoxPrint);\n\t\t\t\tsession.setAttribute(""listOrdersDTOReport"",listOrdersDTO);\n\t\t\t\treturn SUCCESS;\n\t\t\t}\n\n\t\t\t/*-------------------- When user check print item -----------------------------\n\t\t\t\t\tAdd or remove this element from the orders to print\n\t \t\t -----------------------------------------------------------------------------*/\n\t\t\tif(okSaveSuccessPopSignal!=null && okSaveSuccessPopSignal!=0L){\n\t\t\t\tlistOrdersDTO=(ArrayList<OrdersDTO>) session.getAttribute(""listOrdersDTOReport"");\n\t\t\t\tshowSaveSuccessPop=""visibility:hidden;display:none;"";\n\t\t\t\tshowOrderDetailPop=""visibility:hidden;display:none;"";\n\t\t\t\treturn SUCCESS;\n\t\t\t}\n\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t\treturn ""input"";\n\t\t}\n\treturn SUCCESS;\n\t}\n\n   /*=========================================================================================\n\t\t\t\t\t\t\tfill all fields of order without rows\n\t =========================================================================================*/\n\tpublic OrdersDTO fillDataOrderDTO(OrdersDTO orderDTO){\n\t\tSimpleDateFormat frm = new SimpleDateFormat(""dd/MM/yyyy"");\n\t\t//orderToEdit=listOrdersDTO.get(indexOrder);\n\t\torderDTO.setClientLastName(clientLastName);\n\t\torderDTO.setClientFirstName(clientFirstName);\n\t\torderDTO.setClientOtherNames(clientOtherNames); \n\t\torderDTO.setClientStreet(clientStreet);\n\t\torderDTO.setClientOtherStreet(clientOtherStreet);\n\t\torderDTO.setClientCity(clientCity);\n\t\torderDTO.setClientProvince(clientProvince);\n\t\torderDTO.setClientProvince(clientProvince);\n\t\torderDTO.setClientPostalCode(clientPostalCode);\n\t\torderDTO.setClientPhone(clientPhone);\n\t\torderDTO.setClientEmail(clientEmail);\t\t\t\n\t\torderDTO.setProductOrderNumber(productOrderNumber);\n\t\t\n\t\t\n\t\tif (((strProductOrderDate)!=null)&&(!"""".equals(strProductOrderDate))){\n\t\t\tfrm = new SimpleDateFormat(""dd/MM/yyyy"");\n\t\t\ttry {\n\t\t\t\tDate date = frm.parse(strProductOrderDate);\n\t\t\t\torderDTO.setProductOrderDate(date);\n\t\t\t}\n\t\t\tcatch (Exception pe) {\n\t\t\t\taddActionError(""Please enter a date in the correct format"");\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (((strCreationOrderDate)!=null)&&(!"""".equals(strCreationOrderDate))){\n\t\t\tfrm = new SimpleDateFormat(""dd/MM/yyyy"");\n\t\t\ttry {\n\t\t\t\tDate date = frm.parse(strCreationOrderDate);\n\t\t\t\torderDTO.setCreationDate(date);\n\t\t\t}\n\t\t\tcatch (Exception pe) {\n\t\t\t\taddActionError(""Please enter a date in the correct format"");\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (((strRequiredDate)!=null)&&(!"""".equals(strRequiredDate))){\n\t\t\tfrm = new SimpleDateFormat(""dd/MM/yyyy"");\n\t\t\ttry {\n\t\t\t\tDate date = frm.parse(strRequiredDate);\n\t\t\t\torderDTO.setRequiredDate(date);\n\t\t\t}\n\t\t\tcatch (Exception pe) {\n\t\t\t\taddActionError(""Please enter a date in the correct format"");\n\t\t\t}\n\t\t}\n\t\treturn orderDTO;\n\t}\n\n\t/*=========================================================================================\n\t\t\t\t\t\t\t\tgenerate LsOrderId\n\t  =========================================================================================*/\n\tpublic String generateLsOrderId(String argLsOrderID,HttpSession session){\n\t\tHashtable<String, String>lsOrdersIdHash=(Hashtable<String, String>)session.getAttribute(""lsOrdersIdHash"");\n\t\tif(lsOrdersIdHash==null){\n\t\t\tlsOrdersIdHash=new Hashtable<String, String>();\n\t\t\tList<Orders> listOrders=null;\n\t\t\ttry {\n\t\t\t\tlistOrders = orderService.getAllOrders();\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t\tif(listOrders!=null){\n\t\t\t\tfor(Orders ord:listOrders){\n\t\t\t\t\tlsOrdersIdHash.put(ord.getLsOrderId(), ord.getLsOrderId());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tint inc=0;//increment\n        String lsOrderIdToGenerate=argLsOrderID;\n        while(lsOrdersIdHash.containsKey(lsOrderIdToGenerate)){\n        \tinc++; \n        \tlsOrderIdToGenerate=argLsOrderID+""-""+inc;\n        }\n        lsOrdersIdHash.put(lsOrderIdToGenerate, lsOrderIdToGenerate);\n        session.setAttribute(""lsOrdersIdHash"", lsOrdersIdHash);\n        return lsOrderIdToGenerate;\n\t}\n\t\n\n}\n\n----------------------------------- SOURCE END -------------------------------------",1380142364325
error,log,,,"Problems occurred when invoking code from plug-in: ""org.eclipse.jdt.ui"".",1380142364325
error,log,,,"Error in JDT Core during reconcile",1380142364325
deactivated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1380142367788
activated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1380142372687
activated,editor,org.eclipse.jdt.ui,3.6.2.r362_v20110203,"org.eclipse.jdt.ui.CompilationUnitEditor",1380142376228
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.copy",1380142383466
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.copy",1380142383700
activated,editor,org.eclipse.wst.xml.ui,1.1.103.v201101122108,"org.eclipse.wst.xml.ui.internal.tabletree.XMLMultiPageEditorPart",1380142389815
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.paste",1380142401157
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.copy",1380142404620
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.copy",1380142404869
