what,kind,bundleId,bundleVersion,description,time
error,log,,,"Exception occurred during problem detection:\n----------------------------------- SOURCE BEGIN -------------------------------------\npackage com.loyauty.service.core.dto;\n\nimport java.io.File;\n\nimport lombok.Data;\nimport lombok.ToString;\n\n\n/**\n * \n * @author Manuel\n *\n */\n\n@Data@ToString(callSuper=true)\npublic class ImageDTO extends BasicDTO {\n      private static final long serialVersionUID = -2983104538804733404L;\n\n\n      public static ImageDTO valueOf(long imageId, String name, \n                  long size, int height, int width,int resolution, boolean large, String realName, int score){\n            return new ImageDTO(imageId, name, size, height, width, resolution,large,realName, score);\n      }     \n      \n      public static ImageDTO valueOf(File file, String name, String realName){\n        return new ImageDTO(file, name, realName);\n      }   \n      \n      private String name;    \n      private long size;\n      private int height;\n      private int width;\n      private boolean large;\n      private int resolution; \n      private String realName;\n      private int score;\n      private File file;\n      \n      private ImageDTO(File file, String name, String realName){\n            setFile(file);\n            setName(name);\n            setRealName(realName);\n      }\n      \n      private ImageDTO(long imageId, String name, \n              long size, int height, int width,int resolution, boolean large,String realName, int score){\n        setId(imageId);\n        setName(name);\n        setSize(size);\n        setHeight(height);\n        setWidth(width);\n        setLarge(large);\n        setResolution(resolution);\n        setRealName(realName);\n        setScore(score);\n  }\n\n}\n      \n\n----------------------------------- SOURCE END -------------------------------------",1404413256673
error,log,,,"Problems occurred when invoking code from plug-in: ""org.eclipse.jdt.ui"".",1404413256674
error,log,,,"Error in JDT Core during reconcile",1404413256675
error,log,,,"Exception occurred during problem detection:\n----------------------------------- SOURCE BEGIN -------------------------------------\npackage com.loyauty.service.core.dto;\n\nimport java.util.Comparator;\nimport java.util.Date;\nimport java.util.List;\n\nimport lombok.Data;\nimport lombok.ToString;\n\nimport com.loyauty.enums.ProductStatus;\n\n/**\n * Contains data for the product.\n */\n@Data @ToString(callSuper=true)\npublic class ProductDTO extends BasicDTO{\n\t\t\n\tprivate static final long serialVersionUID = 1L;\n\t\n\tprivate Long selected;\n\tprivate String upc;\n\tprivate BrandDTO brand;\n\tprivate CategoryDTO category;\n\tprivate Long mainFilterTypeId;\n\tprivate String manufacturerProductId;\n\tprivate String loyaltyProductId;\n\tprivate CommonDTO nameEng;\n\tprivate CommonDTO nameFr;\n\tprivate ImageDTO image;\n\tprivate CommonDTO descriptionEng;\n\tprivate CommonDTO descriptionFr;\n\tprivate CommonDTO specificationEng;\n\tprivate CommonDTO specificationFr;\n\tprivate CommonDTO otherEng;\n\tprivate CommonDTO otherFr;\n\tprivate String msrp;\n\tprivate String cost;\n\tprivate String width;\n\tprivate String high;\n\tprivate String large;\n\tprivate String weight;\n\tprivate List<ProductModelDTO> manufactureProductList;\n\tprivate Date creationDate;\n\tprivate ProductStatus status;\n\tprivate String statusName;\n\t\n\tprivate String nameProduc;\n\tprivate String descriptiProduct;\n\tprivate String specificationProduct;\n\tprivate String otherProduct;\n\tprivate String priceProduct;  \n\tprivate String hrefName;\n\tprivate String localizedPriceProduct;\n\t\n\tprivate String note;\t\n\tprivate List<ProductLinkDTO> linkList;\t\n\n\tprivate Date discontinuedStartDate;\n\tprivate String loyaltyProductIdSub;\n\t\n\tprivate CommonDTO warrantyEng;\n\tprivate CommonDTO warrantyFr;\n\tprivate Long warrantyTranslationId;\n\tprivate Double discount;\n\t\n\tprivate Boolean wereWgtDimChanged;\n\tprivate Boolean consideredForXML;\n\tprivate String oldImageRealName;\n\t\n\tprivate Double stock;\n\n\tprivate String actualWidth;\n\tprivate String actualLength;\n\tprivate String actualHeight;\n\tprivate String actualWeight;\n\t\n        public static class Builder {\n         \n\t\t\t// Required parameters\n            private final Long id;\n            private final BrandDTO brand;\n            private final CategoryDTO categoryId;\n            \n            // Optional parameters - initialized to default values\n            private Long mainFilterTypeId = new Long(0);\n            private String manufacturerProductId = """";\n            private String loyaltyProductId = """";\n            private CommonDTO nameEng = null;\n            private CommonDTO nameFr = null;\n            private ImageDTO image = null;\n            private CommonDTO descriptionEng = null;\n            private CommonDTO descriptionFr = null;\n            private CommonDTO specificationEng = null;\n            private CommonDTO specificationFr = null;\n        \tprivate CommonDTO otherEng = null;\n        \tprivate CommonDTO otherFr = null;\n            private String msrp = """";\n            private String cost = """";\n            private String width = ""0"";\n            private String high = ""0"";\n            private String large = ""0"";\n            private String weight = """";\n            private String actualWidth = ""0"";\n        \tprivate String actualHeight= ""0"";\n        \tprivate String actualLength = ""0"";\n        \tprivate String actualWeight = """";           \n            private List<ProductModelDTO> manufactureProductList = null;\n            private Date creationDate = null;\n            \n            private String nameProduc;\n        \tprivate String descriptiProduct;\n        \tprivate String specificationProduct;\n        \tprivate String otherProduct;    \n        \tprivate String priceProduct;\n        \tprivate String localizedPriceProduct;\n        \tprivate ProductStatus status;\n        \tprivate String statusName;        \t\n        \tprivate String note;        \t\n        \tprivate List<ProductLinkDTO> linkList;\n        \tprivate Date discontinuedStartDate = null;\n        \tprivate String loyaltyProductIdSub;\n        \t\n        \tprivate CommonDTO warrantyEng;\n        \tprivate CommonDTO warrantyFr;\n        \tprivate Long warrantyTranslationId;\n        \tprivate Double discount;\n        \t\n        \tprivate Boolean wereWgtDimChanged;\n        \tprivate Boolean consideredForXML;\t\n        \tprivate String oldImageRealName;\n        \t\n            public Builder(Long Id, BrandDTO brand, CategoryDTO categoryId) {\n        \tthis.id = Id;\n        \tthis.brand = brand;\n        \tthis.categoryId = categoryId;\n            }\n            \n            public Builder mainFilterTypeId(Long val) { \n                mainFilterTypeId = val; \n                return this; \n            }\n            public Builder manufacturerProductId(String val) { \n\t        \tmanufacturerProductId = val; \n\t        \treturn this; \n            }\n            public Builder loyaltyProductId(String val) { \n\t        \tloyaltyProductId = val; \n\t        \treturn this; \n            }\n            public Builder nameEng(CommonDTO val) { \n\t        \tnameEng = val; \n\t        \treturn this; \n            }\n            public Builder nameFr(CommonDTO val) { \n\t        \tnameFr = val; \n\t        \treturn this; \n            }\n            public Builder descriptionEng(CommonDTO val) { \n\t        \tdescriptionEng = val; \n\t        \treturn this; \n            }\n            public Builder descriptionFr(CommonDTO val) { \n\t        \tdescriptionFr = val; \n\t        \treturn this; \n            }\n            public Builder specificationEng(CommonDTO val) { \n\t        \tspecificationEng = val; \n\t        \treturn this; \n            }\n            public Builder specificationFr(CommonDTO val) { \n\t        \tspecificationFr = val; \n\t        \treturn this; \n            }\n            public Builder otherEng(CommonDTO val) {\n            \totherEng = val;\n            \treturn this;\n            }\n            public Builder otherFr(CommonDTO val) {\n            \totherFr = val;\n            \treturn this;\n            }\n            public Builder image(ImageDTO val) { \n\t        \timage = val; \n\t        \treturn this; \n            }\n            public Builder msrp(String val) { \n\t        \tmsrp = val; \n\t        \treturn this; \n            }\n            public Builder cost(String val) { \n\t        \tcost = val; \n\t        \treturn this; \n            }\n            public Builder weight(String val) { \n\t        \tweight = val; \n\t        \treturn this; \n            }\n            public Builder width(String val) { \n\t        \twidth = val; \n\t        \treturn this; \n            }\n            public Builder high(String val) { \n\t        \thigh = val; \n\t        \treturn this; \n            }\n            public Builder large(String val) { \n\t        \tlarge = val; \n\t        \treturn this; \n            }\n            public Builder actualWeight(String val) { \n            \tactualWeight = val; \n\t        \treturn this; \n            }\n            public Builder actualWidth(String val) { \n            \tactualWidth = val; \n\t        \treturn this; \n            }\n            public Builder actualHeight(String val) { \n            \tactualHeight = val; \n\t        \treturn this; \n            }\n            public Builder actualLength(String val) { \n            \tactualLength = val; \n\t        \treturn this; \n            }\n            public Builder manufactureProductList(List<ProductModelDTO> val) { \n\t        \tmanufactureProductList = val; \n\t        \treturn this; \n            }\n            public Builder nameProduc(String val) {\n            \tnameProduc = val;\n\t            return this;\n            }\n            public Builder descriptiProduct(String val) {\n            \tdescriptiProduct = val;\n\t            return this;\n            }\n            public Builder specificationProduct(String val) {\n            \tspecificationProduct = val;\n\t            return this;\n            }\n            public Builder otherProduct(String val) {\n            \totherProduct = val;\n\t            return this;\n            }\n            public Builder creationDate(Date val) {\n\t            creationDate = val;\n\t            return this;\n            }            \n            public Builder priceProduct(String val) {\n            \tpriceProduct = val;\n\t            return this;\n            }            \n            public Builder localizedPriceProduct(String val) {\n            \tlocalizedPriceProduct = val;\n\t            return this;\n            }            \n            public Builder status(ProductStatus val) { \n\t        \tstatus = val; \n\t        \treturn this; \n            }\n            public Builder statusName(String val) { \n\t        \tstatusName = val; \n\t        \treturn this; \n            }            \n            public Builder linkList(List<ProductLinkDTO> val) {\n            \tlinkList = val;\n            \treturn this;\n            }            \n            public Builder note(String val) {\n            \tnote = val;\n            \treturn this;\n            }\n            public Builder discontinuedStartDate(Date val) { \n            \tdiscontinuedStartDate = val; \n\t        \treturn this; \n            }\n            public Builder loyaltyProductIdSub(String val) { \n            \tloyaltyProductIdSub = val; \n\t        \treturn this; \n            }\n            public Builder warantyEng(CommonDTO val) {\n            \twarrantyEng = val;\n            \treturn this;\n            }            \n            public Builder warantyFr(CommonDTO val) {\n            \twarrantyFr = val;\n            \treturn this;\n            }            \n            public Builder warrantyTranslationId(Long val) {\n            \twarrantyTranslationId = val;\n            \treturn this;\n            }\n            public Builder discount(Double val) {\n            \tdiscount = val;\n            \treturn this;\n            }\n            public Builder wereWgtDimChanged(Boolean val) {\n            \twereWgtDimChanged = val;\n            \treturn this;\n            }\n            public Builder consideredForXML(Boolean val) {\n            \tconsideredForXML = val;\n            \treturn this;\n            }\n            public Builder oldImageIdBeforeUpdate(String val) {\n            \toldImageRealName = val;\n            \treturn this;\n            }\n            \n            public ProductDTO build() {\n            \treturn new ProductDTO(this);\n            }\n         }\n\t\n        private ProductDTO(Builder builder) {\n            setId(builder.id);\n            brand = builder.brand;\n            category = builder.categoryId;\n            mainFilterTypeId = builder.mainFilterTypeId;\n            manufacturerProductId = builder.manufacturerProductId;\n            loyaltyProductId = builder.loyaltyProductId;\n            nameEng = builder.nameEng;\n            nameFr = builder.nameFr;\n            image = builder.image;\n            descriptionEng = builder.descriptionEng;\n            descriptionFr = builder.descriptionFr;\n            specificationEng = builder.specificationEng;\n            specificationFr = builder.specificationFr;\n            otherEng = builder.otherEng;\n            otherFr = builder.otherFr;\n            msrp = builder.msrp;\n            cost = builder.cost;\n            width = builder.width;\n            high = builder.high;\n            large = builder.large;\n            weight = builder.weight;\n            actualWeight =builder.actualWeight;\n            actualLength=builder.actualLength;\n            actualHeight=builder.actualHeight;\n            actualWidth=builder.actualWidth;\n            manufactureProductList = builder.manufactureProductList;\n            creationDate = builder.creationDate;\n            nameProduc = builder.nameProduc;\n            descriptiProduct = builder.descriptiProduct;\n            specificationProduct = builder.specificationProduct;\n            otherProduct = builder.otherProduct;\n            priceProduct = builder.priceProduct;\n            localizedPriceProduct = builder.localizedPriceProduct;\n            status = builder.status;\n            statusName = builder.statusName;\n            linkList = builder.linkList;\n            note = builder.note;\n        \tdiscontinuedStartDate = builder.discontinuedStartDate;\n        \tloyaltyProductIdSub = builder.loyaltyProductIdSub; \n        \twarrantyEng = builder.warrantyEng;\n        \twarrantyFr = builder.warrantyFr;       \t\n        \twarrantyTranslationId = builder.warrantyTranslationId;\n        \tdiscount = builder.discount;\n        \twereWgtDimChanged = builder.wereWgtDimChanged;\n        \tconsideredForXML = builder.consideredForXML;\n        \toldImageRealName = builder.oldImageRealName;\n        }\n        \n        public static Comparator<ProductDTO> getComparator(int id){\n    \t\tComparator<ProductDTO> comparator = CREATION_DATE_DESC;\n    \t\tswitch (id) {\n    \t\tcase 1:\n    \t\t\tcomparator = ALPHABITICALLY_ENG_AZ;\n    \t\t\tbreak;\n    \t\tcase 2:\n    \t\t\tcomparator = ALPHABITICALLY_ENG_ZA;\n    \t\t\tbreak;\n    \t\tcase 3:\n    \t\t\tcomparator = ALPHABITICALLY_FR_AZ;\n    \t\t\tbreak;\n    \t\tcase 4:\n    \t\t\tcomparator = ALPHABITICALLY_FR_ZA;\n    \t\t\tbreak;\n    \t\tcase 5:\n    \t\t\tcomparator = CREATION_DATE_DESC;\n    \t\t\tbreak;\t\n    \t\tcase 6:\n    \t\t\tcomparator = CREATION_DATE_ASC;\n    \t\t\tbreak;\n    \t\tcase 7:\n    \t\t\tcomparator = MSRP_DESC;\n    \t\t\tbreak;\n    \t\tcase 8:\n    \t\t\tcomparator = MSRP_ASC;\n    \t\t\tbreak;\n    \t\tcase 9:\n    \t\t\tcomparator = COST_DESC;\n    \t\t\tbreak;\n    \t\tcase 10:\n    \t\t\tcomparator = COST_ASC;\n    \t\t\tbreak;\n    \t\tcase 11:\n    \t\t\tcomparator = ALPHABITICALLY_BRAND_AZ;\n    \t\t\tbreak;\n    \t\tcase 12:\n    \t\t\tcomparator = DISCOUNT_DESC;\n    \t\t\tbreak;    \n    \t\tdefault:\n    \t\t\tbreak;\n    \t\t}    \t\t\n    \t\treturn comparator;\n    \t}\n        \n    \t/**\n    \t * The following are the comparators we use to sort game search results.\n    \t */\n    \tpublic static final Comparator<ProductDTO> ALPHABITICALLY_ENG_AZ = new Comparator<ProductDTO>() {\n\n    \t\t@Override\n    \t\tpublic int compare(ProductDTO o1, ProductDTO o2) {\t\t\t\n    \t\t\treturn o1.getNameEng().compareTo(o2.getNameEng());\n    \t\t}\n    \t\t\n    \t};\n    \t\n    \t/**\n    \t * The following are the comparators we use to sort game search results.\n    \t */\n    \tpublic static final Comparator<ProductDTO> ALPHABITICALLY_ENG_ZA = new Comparator<ProductDTO>() {\n\n    \t\t@Override\n    \t\tpublic int compare(ProductDTO o1, ProductDTO o2) {\t\t\t\n    \t\t\treturn o2.getNameEng().compareTo(o1.getNameEng());\n    \t\t}\n    \t\t\n    \t};\n    \t\n    \t/**\n    \t * The following are the comparators we use to sort game search results.\n    \t */\n    \tpublic static final Comparator<ProductDTO> ALPHABITICALLY_FR_AZ = new Comparator<ProductDTO>() {\n\n    \t\t@Override\n    \t\tpublic int compare(ProductDTO o1, ProductDTO o2) {\t\t\t\n    \t\t\treturn o1.getNameFr().compareTo(o2.getNameFr());\n    \t\t}\n    \t\t\n    \t};\n    \t\n    \t/**\n    \t * The following are the comparators we use to sort game search results.\n    \t */\n    \tpublic static final Comparator<ProductDTO> ALPHABITICALLY_FR_ZA = new Comparator<ProductDTO>() {\n\n    \t\t@Override\n    \t\tpublic int compare(ProductDTO o1, ProductDTO o2) {\t\t\t\n    \t\t\treturn o2.getNameFr().compareTo(o1.getNameFr());\n    \t\t}\n    \t};\n    \t\n    \t/**\n    \t * The following are the comparators we use to sort game search results.\n    \t */\n    \tpublic static final Comparator<ProductDTO> CREATION_DATE_DESC = new Comparator<ProductDTO>() {\n\n    \t\t@Override\n    \t\tpublic int compare(ProductDTO o1, ProductDTO o2) {\t\t\t\n    \t\t\treturn o2.getCreationDate().compareTo(o1.getCreationDate());\n    \t\t}\n    \t};\n    \t\n    \t/**\n    \t * The following are the comparators we use to sort game search results.\n    \t */\n    \tpublic static final Comparator<ProductDTO> CREATION_DATE_ASC = new Comparator<ProductDTO>() {\n\n    \t\t@Override\n    \t\tpublic int compare(ProductDTO o1, ProductDTO o2) {\t\t\t\n    \t\t\treturn o1.getCreationDate().compareTo(o2.getCreationDate());\n    \t\t}\n    \t\t\n    \t};\n    \t\n    \t/**\n    \t * The following are the comparators we use to sort game search results.\n    \t */\n    \tpublic static final Comparator<ProductDTO> MSRP_DESC = new Comparator<ProductDTO>() {\n\n    \t\t@Override\n    \t\tpublic int compare(ProductDTO o1, ProductDTO o2) {\t\t\t    \t\t\t\n    \t\t\tDouble msrp1 = Double.parseDouble(o1.getMsrp());\n    \t\t\tDouble msrp2 = Double.parseDouble(o2.getMsrp());    \t\t\t\n    \t\t\treturn msrp2.compareTo(msrp1);\n    \t\t}\n    \t\t\n    \t};\n    \t\n    \t/**\n    \t * The following are the comparators we use to sort game search results.\n    \t */\n    \tpublic static final Comparator<ProductDTO> MSRP_ASC = new Comparator<ProductDTO>() {\n\n    \t\t@Override\n    \t\tpublic int compare(ProductDTO o1, ProductDTO o2) {\t\t\t    \t\t\t\n    \t\t\tDouble msrp1 = Double.parseDouble(o1.getMsrp());\n    \t\t\tDouble msrp2 = Double.parseDouble(o2.getMsrp());    \t\t\t\n    \t\t\treturn msrp1.compareTo(msrp2);\n    \t\t}\n    \t\t\n    \t};\n\n    \t/**\n    \t * The following are the comparators we use to sort products by price, highest first\n    \t */\n    \tpublic static final Comparator<ProductDTO> COST_DESC = new Comparator<ProductDTO>() {\n    \t\t@Override\n    \t\tpublic int compare(ProductDTO o1, ProductDTO o2) {\t\t\t    \t\t\t\n\t\t\t\tString o1Price = o1.getPriceProduct();\n\t\t\t\tString o2Price = o2.getPriceProduct();\n\t\t\t\tint outcome = 0;\n\t\t\t\tif (o1Price != null && !o1Price.matches(""^\\\\s*$"")) {\n\t\t\t\t\tDouble cost1 = Double.parseDouble(o1Price);\n\t\t\t\t\tif (o2Price != null && !o2Price.matches(""^\\\\s*$"")) {\n\t\t\t\t\t\tDouble cost2 = Double.parseDouble(o2Price);\n\t\t\t\t\t\tint costCompare = cost2.compareTo(cost1);\n\t\t\t\t\t\tif (costCompare == 0) {\n\t\t\t\t\t\t\toutcome = ALPHABITICALLY_BRAND_AZ.compare(o1, o2);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\toutcome = costCompare;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\toutcome = -1;\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\toutcome = 1;\n\t\t\t\t}\n\t\t\t\treturn outcome;\n    \t\t}\n    \t};\n    \t\n    \t/**\n    \t * The following are the comparators we use to sort products by price, lowest first\n    \t */\n    \tpublic static final Comparator<ProductDTO> COST_ASC = new Comparator<ProductDTO>() {\n    \t\t@Override\n    \t\tpublic int compare(ProductDTO o1, ProductDTO o2) {\t\t\t    \t\t\t\n    \t\t\tString o1Price = o1.getPriceProduct();\n\t\t\t\tString o2Price = o2.getPriceProduct();\n\t\t\t\tint outcome = 0;\n\t\t\t\tif (o1Price != null && !o1Price.matches(""^\\\\s*$"")) {\n\t\t\t\t\tDouble cost1 = Double.parseDouble(o1Price);\n\t\t\t\t\tif (o2Price != null && !o2Price.matches(""^\\\\s*$"")) {\n\t\t\t\t\t\tDouble cost2 = Double.parseDouble(o2Price);\n\t\t\t\t\t\tint costCompare = cost1.compareTo(cost2);\n\t\t\t\t\t\tif (costCompare == 0) {\n\t\t\t\t\t\t\toutcome = ALPHABITICALLY_BRAND_AZ.compare(o1, o2);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\toutcome = costCompare;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\toutcome = -1;\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\toutcome = 1;\n\t\t\t\t}\n\t\t\t\treturn outcome;\n    \t\t}\n    \t};    \t\n    \t\n    \t/*\n    \t * The following is the comparator we use to sort products by brand, alphabetically, with numbers first then letters.\n\t\t * Leading numbers are compared naturally.\n    \t */\n    \tpublic static final Comparator<ProductDTO> ALPHABITICALLY_BRAND_AZ = new Comparator<ProductDTO>() {\n       \t\t@Override\n    \t\tpublic int compare(ProductDTO o1, ProductDTO o2) {\t\t\t\n    \t\t\tString o1BrandName = o1.getBrand().getName();\n    \t\t\tString o2BrandName = o2.getBrand().getName();\n    \t\t\tint brandCompare = o1BrandName.compareTo(o2BrandName);\n    \t\t\tif(brandCompare == 0) {\n    \t\t\t\tString o1ProdName = o1.getNameProduc().toLowerCase();\n    \t\t\t\tString o2ProdName = o2.getNameProduc().toLowerCase();\n    \t\t\t\tif (Character.isDigit(o1ProdName.charAt(0)) && Character.isDigit(o2ProdName.charAt(0))) {\n    \t\t\t\t\tInteger o1Number = Integer.parseInt(o1ProdName.split(""\\\\D+"")[0]);\n    \t\t\t\t\tInteger o2Number = Integer.parseInt(o2ProdName.split(""\\\\D+"")[0]);\n    \t\t\t\t\tif (o1Number != o2Number) {\n    \t\t\t\t\t\treturn o1Number.compareTo(o2Number);\n    \t\t\t\t\t}\n    \t\t\t\t}\n    \t\t\t\treturn (o1ProdName.compareTo(o2ProdName));\n    \t\t\t}\n    \t\t\treturn brandCompare;\n    \t\t}\n    \t};\n    \t\n    \t/**\n    \t * The following are the comparators we use to sort game search results.\n    \t */\n    \tpublic static final Comparator<ProductDTO> DISCOUNT_DESC = new Comparator<ProductDTO>() {    \t\t\n    \t\t@Override\n    \t\tpublic int compare(ProductDTO o1, ProductDTO o2) {\n    \t\t\tDouble discount1 = o1.getDiscount();\n    \t\t\tDouble discount2 = o2.getDiscount();\n    \t\t\tint compareToDiscountPct = discount2.compareTo(discount1);\n    \t\t\tint outcome = compareToDiscountPct;\n    \t\t\tif (compareToDiscountPct == 0) {\n    \t\t\t\tString price1 = o1.getPriceProduct();\n    \t\t\t\tString price2 = o2.getPriceProduct();\n    \t\t\t\tString msrp1 = o1.getMsrp();\n    \t\t\t\tString msrp2 = o2.getMsrp();\n    \t\t\t\tDouble discount$1 = getDiscount$(price1, msrp1);\n    \t\t\t\tDouble discount$2 = getDiscount$(price2, msrp2);\n    \t\t\t\tint compareToDiscount$ = discount$2.compareTo(discount$1);\n    \t\t\t\toutcome = compareToDiscount$;\n    \t\t\t\tif (compareToDiscount$ == 0) {\n    \t\t\t\t\tString name1 = o1.getNameProduc();\n    \t\t\t\t\tString name2 = o2.getNameProduc();\t\t\t\t\t\n    \t\t\t\t\tint compareToName = name1.compareTo(name2);\n    \t\t\t\t\toutcome = compareToName;\n    \t\t\t\t\tif (compareToName == 0) {\n    \t\t\t\t\t\tLong id1 = o1.getId();\n    \t\t\t\t\t\tLong id2 = o2.getId();\n    \t\t\t\t\t\toutcome = id1.compareTo(id2);\n    \t\t\t\t\t}\n    \t\t\t\t}\n    \t\t\t}\n    \t\t\treturn outcome;\n    \t\t}\n    \t\t\n    \t\tprivate Double getDiscount$(String price, String msrp) {\n\t\t\t\tdouble priceVal = 0d;\n\t\t\t\tdouble msrpVal = 0d;\n\t\t\t\tdouble discountVal = 0d;\n\t\t\t\tif (price != null) {\n\t\t\t\t\tif (!price.matches(""^\\\\s*$"") && !price.equalsIgnoreCase("""")) {\n\t\t\t\t\t\tpriceVal = Double.parseDouble(price);\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpriceVal = 0d;\n\t\t\t\t\t}\n\t\t\t\t}\t\t\t\t\n\t\t\t\tif (msrp != null) {\t\t\t\t\t\n\t\t\t\t\tif (!msrp.matches(""^\\\\s*$"") && !msrp.equalsIgnoreCase("""")) {\t\n\t\t\t\t\t\tmsrpVal = Double.parseDouble(msrp);\t\n\t\t\t\t\t\tdiscountVal = msrpVal - priceVal;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn discountVal;\n    \t\t}\n    \t};\n}\n----------------------------------- SOURCE END -------------------------------------",1404413257325
error,log,,,"Problems occurred when invoking code from plug-in: ""org.eclipse.jdt.ui"".",1404413257325
error,log,,,"Error in JDT Core during reconcile",1404413257326
error,log,,,"Exception occurred during problem detection:\n----------------------------------- SOURCE BEGIN -------------------------------------\npackage com.loyauty.model;\n\nimport java.util.Date;\nimport java.util.List;\n\nimport lombok.Data;\nimport lombok.ToString;\n\nimport com.loyauty.enums.PriceType;\nimport com.loyauty.enums.ProductStatus;\nimport com.loyauty.enums.UserProductStatus;\n/**\n * \n * @author Manuel\n *\n */\n@Data @ToString(callSuper=true) \npublic class Product extends AbstractEntity{\n\t\t  \n\tprivate String upc;\n\tprivate Translation name;\n\tprivate Translation description;\n\tprivate Image image;\n\tprivate ProductStatus status;\n\tprivate String msrp;\n\tprivate String cost;\n\tprivate Brand brand;\n\tprivate String loyaltySourceProductId;\n\tprivate String productWidth;\n\tprivate String productHigh;\n\tprivate String productLong;\n\tprivate String weight;\n\tprivate Date creationDate;\n\tprivate Long typeId;\n\tprivate Long valueSpecificationId;\n\tprivate Long userId;\n\tprivate String userPrice;\n\tprivate Category category;\n\tprivate Translation specification;\n\tprivate List<ProductModelNumber> modelNumberList;\n\tprivate List<User> activeClientsList;\t\n\tprivate Integer priceType;\n\tprivate Translation other;\n\tprivate UserProductStatus userProductStatus;\n\t\n\tprivate String link;\n\tprivate List<ProductLink> linkList;\n\tprivate String note;\n\tprivate Date discontinuedStartDate;\n\tprivate String loyaltyProductIdSub;\n\t\n\tprivate Translation warranty;\n\t\n\tprivate String length;\n\tprivate String width;\n\tprivate String height;\n\t\n\tprivate Boolean wereWgtDimChanged;\n\tprivate Boolean consideredForXML;\n\tprivate String oldImageRealName;\n\t\n\tprivate Double stock;\n\n\tprivate String actualWidth;\n\tprivate String actualLength;\n\tprivate String actualHeight;\n\tprivate String actualWeight;\n\t\n}\n\n----------------------------------- SOURCE END -------------------------------------",1404413257328
error,log,,,"Problems occurred when invoking code from plug-in: ""org.eclipse.jdt.ui"".",1404413257884
error,log,,,"Error in JDT Core during reconcile",1404413257885
activated,editor,org.eclipse.jdt.ui,3.6.2.r362_v20110203,"org.eclipse.jdt.ui.CompilationUnitEditor",1404413260855
opened,view,org.eclipse.ui.ide,3.6.2.M20101201-0800,"org.eclipse.ui.views.ProblemView",1404413261471
activated,editor,org.eclipse.jdt.ui,3.6.2.r362_v20110203,"org.eclipse.jdt.ui.CompilationUnitEditor",1404413269742
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.copy",1404413276659
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.paste",1404413278827
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.file.save",1404413280816
activated,editor,org.eclipse.jdt.ui,3.6.2.r362_v20110203,"org.eclipse.jdt.ui.CompilationUnitEditor",1404413282998
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.file.save",1404413288370
activated,editor,org.eclipse.jdt.ui,3.6.2.r362_v20110203,"org.eclipse.jdt.ui.CompilationUnitEditor",1404413311147
activated,editor,org.eclipse.jdt.ui,3.6.2.r362_v20110203,"org.eclipse.jdt.ui.CompilationUnitEditor",1404413323239
activated,editor,org.eclipse.jdt.ui,3.6.2.r362_v20110203,"org.eclipse.jdt.ui.CompilationUnitEditor",1404413334079
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.cut",1404413348692
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.paste",1404413350648
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.text.contentAssist.proposals",1404413367829
deactivated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1404413369919
activated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1404413370135
