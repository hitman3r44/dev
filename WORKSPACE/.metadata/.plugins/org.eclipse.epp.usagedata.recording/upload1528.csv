what,kind,bundleId,bundleVersion,description,time
executed,command,org.eclipse.debug.ui,3.6.3.v20101201_r362,"org.eclipse.debug.ui.commands.Resume",1421270961956
executed,command,org.eclipse.debug.ui,3.6.3.v20101201_r362,"org.eclipse.debug.ui.commands.Resume",1421270962441
executed,command,org.eclipse.debug.ui,3.6.3.v20101201_r362,"org.eclipse.debug.ui.commands.Resume",1421270963654
deactivated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1421270966909
activated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1421270967099
executed,command,org.eclipse.debug.ui,3.6.3.v20101201_r362,"org.eclipse.debug.ui.commands.Resume",1421270969025
deactivated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1421270971801
activated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1421270974167
executed,command,org.eclipse.debug.ui,3.6.3.v20101201_r362,"org.eclipse.debug.ui.commands.Resume",1421270976243
executed,command,org.eclipse.debug.ui,3.6.3.v20101201_r362,"org.eclipse.debug.ui.commands.Resume",1421270976446
executed,command,org.eclipse.debug.ui,3.6.3.v20101201_r362,"org.eclipse.debug.ui.commands.Resume",1421270976634
activated,view,org.eclipse.ui.console,3.5.0.v20100526,"org.eclipse.ui.console.ConsoleView",1421270980701
deactivated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1421270982737
activated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1421271008481
activated,view,org.eclipse.wst.server.ui,1.1.207.v20110119,"org.eclipse.wst.server.ui.ServersView",1421271008821
activated,editor,org.eclipse.jdt.ui,3.6.2.r362_v20110203,"org.eclipse.jdt.ui.CompilationUnitEditor",1421271014009
activated,editor,org.eclipse.jdt.ui,3.6.2.r362_v20110203,"org.eclipse.jdt.ui.CompilationUnitEditor",1421271017928
activated,view,org.eclipse.wst.server.ui,1.1.207.v20110119,"org.eclipse.wst.server.ui.ServersView",1421271056299
deactivated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1421271058983
activated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1421271060318
deactivated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1421271060660
activated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1421271163924
deactivated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1421271170052
activated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1421271171597
executed,command,org.eclipse.ui.ide,3.6.2.M20101201-0800,"org.eclipse.ui.project.cleanAction",1421271171602
deactivated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1421271171877
activated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1421271172077
error,log,,,"Exception occurred during problem detection:\n----------------------------------- SOURCE BEGIN -------------------------------------\npackage com.loyauty.service.core.dto;\n\nimport java.util.Date;\n\nimport lombok.Data;\nimport lombok.ToString;\n\n@Data @ToString(callSuper=true)\npublic class UserFileRecoveryDTO extends BasicDTO{\n\tprivate static final long serialVersionUID = 141491733281039289L;\n\t\n\tprivate String productOrderNumber;\n\tprivate String clientOrderNumber;\n\tprivate String cstProductNumber;\n\tprivate String clientProductNumber;\n\tprivate String productOrderDate;\n\tprivate String clientNumber;\n\tprivate String clientOtherId;\n\tprivate String clientFirstName;\n\tprivate String clientLastName;\n\tprivate String clientStreet;\n\tprivate String clientOtherStreet;\n\tprivate String clientCity;\n\tprivate String clientPostalCode;\n\tprivate String clientProvince;\n\tprivate String clientPhone;\n\tprivate String clientEmail;\n\tprivate String lsProductID;\n\tprivate String productDescription;\n\tprivate String unitPrice;\n\tprivate String companyHeader;\n\tprivate Long   userId;\n\tprivate Integer fileTypeId;\n\tprivate String fileType;\n\tprivate String quantity;\n\tprivate String tagRoot;\n\tprivate String requiredDate;\n\tprivate String clientOtherNames;\n\tprivate String shippingCompany;\n\tprivate String clientPhoneZone;\n\tprivate String formatDate;\n\tprivate String notes;\n\tprivate Integer fileTypeIdConfirm;\n\tprivate Integer fileFormatIdComfirm;\n\tprivate String providedLsProductId;\n\tprivate String specialHandlingName;\n\tprivate Double specialHandlingFee;\n\t/* Added the below properties for Rideau.\n\t*/\n\tprivate Integer fileSeqShipping;\n\tprivate Integer fileSeqInvoice;\n\t\n\t//Currency\n\tprivate Long\tcurrencyId;\n\tprivate String\tcurrencySymbol;\n\tprivate Double\tcurrencyRate;\n\tprivate Double \tcurrencyPrice;\n\tprivate Double \tcurrencyUnitPrice;\n\tprivate Double \tcurrencyTotalPrice;\n\tprivate Double \tcurrencyShippingPrice;\n\t\n\t//ETA\n\t//private Long\tetaFileTypeId;\n\tprivate String\tetaFieldName;\n\t\n}\n\n----------------------------------- SOURCE END -------------------------------------",1421271172587
error,log,,,"Problems occurred when invoking code from plug-in: ""org.eclipse.jdt.ui"".",1421271172588
error,log,,,"Error in JDT Core during reconcile",1421271172589
error,log,,,"Exception occurred during problem detection:\n----------------------------------- SOURCE BEGIN -------------------------------------\npackage com.loyauty.model;\n\nimport java.util.Date;\nimport java.util.List;\n\nimport lombok.Data;\nimport lombok.ToString;\n\nimport com.loyauty.enums.PriceType;\nimport com.loyauty.enums.ProductStatus;\nimport com.loyauty.enums.UserProductStatus;\n/**\n * \n * @author Manuel\n *\n */\n@Data @ToString(callSuper=true) \npublic class Product extends AbstractEntity{\n\t\t  \n\tprivate String upc;\n\tprivate Translation name;\n\tprivate Translation description;\n\tprivate Image image;\n\tprivate ProductStatus status;\n\tprivate String msrp;\n\tprivate String cost;\n\tprivate Brand brand;\n\tprivate String loyaltySourceProductId;\n\tprivate String productWidth;\n\tprivate String productHigh;\n\tprivate String productLong;\n\tprivate String weight;\n\tprivate Date creationDate;\n\tprivate Long typeId;\n\tprivate Long valueSpecificationId;\n\tprivate Long userId;\n\tprivate String userPrice;\n\tprivate Category category;\n\tprivate Translation specification;\n\tprivate List<ProductModelNumber> modelNumberList;\n\tprivate List<User> activeClientsList;\t\n\tprivate Integer priceType;\n\tprivate Translation other;\n\tprivate UserProductStatus userProductStatus;\n\t\n\tprivate String link;\n\tprivate List<ProductLink> linkList;\n\tprivate String note;\n\tprivate Date discontinuedStartDate;\n\tprivate String loyaltyProductIdSub;\n\t\n\tprivate Translation warranty;\n\t\n\tprivate String length;\n\tprivate String width;\n\tprivate String height;\n\t\n\tprivate Boolean wereWgtDimChanged;\n\tprivate Boolean consideredForXML;\n\tprivate String oldImageRealName;\n\t\n\tprivate Double stock;\n\n\tprivate String actualWidth;\n\tprivate String actualLength;\n\tprivate String actualHeight;\n\tprivate String actualWeight;\n\t\n\tprivate Double boxLength;\n\tprivate Double boxWidth;\n\tprivate Double boxHeight;\n\tprivate Double boxTotalWeight;\n\n\tprivate String descriptiProduct;\n\tprivate Double classification;\n\tprivate String discount;\n\tprivate String profit;\n\tprivate Double qtSold;\n\t\n\t\n\t\n}\n\n----------------------------------- SOURCE END -------------------------------------",1421271172924
error,log,,,"Problems occurred when invoking code from plug-in: ""org.eclipse.jdt.ui"".",1421271172925
error,log,,,"Error in JDT Core during reconcile",1421271172926
error,log,,,"Exception occurred during problem detection:\n----------------------------------- SOURCE BEGIN -------------------------------------\npackage com.loyauty.service.orders;\n\nimport java.io.BufferedReader;\nimport java.io.File;\nimport java.io.FileReader;\nimport java.io.FileWriter;\nimport java.io.PrintWriter;\nimport java.text.DecimalFormat;\nimport java.text.SimpleDateFormat;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Calendar;\nimport java.util.Collection;\nimport java.util.Date;\nimport java.util.HashSet;\nimport java.util.Hashtable;\nimport java.util.List;\nimport java.util.Set;\nimport java.util.logging.SimpleFormatter;\n\nimport javax.xml.parsers.DocumentBuilder;\nimport javax.xml.parsers.DocumentBuilderFactory;\nimport jxl.Cell;\nimport jxl.Sheet;\nimport jxl.Workbook;\nimport jxl.format.Alignment;\nimport jxl.format.BoldStyle;\nimport jxl.format.Border;\nimport jxl.format.BorderLineStyle;\nimport jxl.format.Colour;\nimport jxl.format.VerticalAlignment;\nimport jxl.write.DateFormat;\nimport jxl.write.DateTime;\nimport jxl.write.Label;\nimport jxl.write.WritableCell;\nimport jxl.write.WritableCellFormat;\nimport jxl.write.WritableFont;\nimport jxl.write.WritableSheet;\nimport jxl.write.WritableWorkbook;\n\nimport org.w3c.dom.Document;\nimport org.w3c.dom.Element;\nimport org.w3c.dom.Node;\nimport org.w3c.dom.NodeList;\n\nimport lombok.Getter;\nimport lombok.Setter;\nimport com.loyauty.dao.core.DaoCommand;\nimport com.loyauty.dao.core.DaoManager;\nimport com.loyauty.dao.core.DaoManagerFactory;\nimport com.loyauty.exception.DaoException;\nimport com.loyauty.exception.ServiceException;\nimport com.loyauty.exception.ServiceLocatorException;\nimport com.loyauty.model.Currency;\nimport com.loyauty.model.Orders;\nimport com.loyauty.model.OrdersRows;\nimport com.loyauty.model.OrdersSpecialShipping;\nimport com.loyauty.model.Product;\nimport com.loyauty.model.User;\nimport com.loyauty.model.UserFileRecovery;\nimport com.loyauty.model.UserFilesDownloaded;\nimport com.loyauty.service.ServiceImpl;\nimport com.loyauty.service.ServiceLocator;\nimport com.loyauty.service.core.DTOFactory;\nimport com.loyauty.service.core.dto.BoxDTO;\nimport com.loyauty.service.core.dto.CurrencyDTO;\nimport com.loyauty.service.core.dto.ItemMapDTO;\nimport com.loyauty.service.core.dto.OrdersDTO;\nimport com.loyauty.service.core.dto.OrdersSpecialShippingDTO;\nimport com.loyauty.service.core.dto.ProductDTO;\nimport com.loyauty.service.core.dto.ProvinceDTO;\nimport com.loyauty.service.core.dto.UserDTO;\nimport com.loyauty.service.core.dto.UserFileDataRecoveryDTO;\nimport com.loyauty.service.core.dto.UserFileRecoveryDTO;\nimport com.loyauty.service.core.dto.UserFilesDownloadedDTO;\nimport com.loyauty.service.core.dto.UserProductPriceDTO;\nimport com.loyauty.service.product.ProductService;\nimport com.loyauty.service.user.UserService;\n\n\npublic class OrdersServiceImpl extends ServiceImpl implements OrdersService {\n\n\t//======================================== Admin's Part ========================================\n\t@Setter @Getter\n\tprotected DaoManager daoManager;\n\tprivate static ServiceLocator serviceLocator;\n\tprivate static ProductService productService;\n\tprivate static UserService userService;\n\tprivate static OrdersService orderService;\n\tpublic OrdersServiceImpl() {\n\t\tsetDaoManager(DaoManagerFactory.getDaoManager());\n\t\tserviceLocator = ServiceLocator.getInstance();\n\n\t}\n\n\t/**----------------------------------------------------------\n\t *THIS METHOD ALLOW US TO TRANSLATE ORDER DTO TO ORDER*\n\t  -----------------------------------------------------------*/\t\n\tpublic static Orders buildOrder(OrdersDTO orderDTO){\n\t\tOrders order=new Orders();\n\t\torder.setClientCity(orderDTO.getClientCity());\n\t\torder.setClientEmail(orderDTO.getClientEmail());\n\t\torder.setClientFirstName(orderDTO.getClientFirstName());\n\t\torder.setClientLastName(orderDTO.getClientLastName());\n\t\torder.setClientNumber(orderDTO.getClientNumber());\n\t\torder.setClientOrderNumber(orderDTO.getClientOrderNumber());\n\t\torder.setClientOtherNames(orderDTO.getClientOtherNames());\n\t\torder.setClientOtherStreet(orderDTO.getClientOtherStreet());\n\t\torder.setClientPhone(orderDTO.getClientPhone());\n\t\torder.setClientPostalCode(orderDTO.getClientPostalCode());\n\t\torder.setClientProvince(orderDTO.getClientProvince());\n\t\torder.setClientStreet(orderDTO.getClientStreet());\n\t\torder.setCreationDate(orderDTO.getCreationDate());\n\t\torder.setId(orderDTO.getId());\n\t\torder.setLsOrderId(orderDTO.getLsOrderId());\n\t\torder.setProductOrderNumber(orderDTO.getProductOrderNumber());\n\t\torder.setRowsList(orderDTO.getRowsList());\n\t\torder.setUserId(orderDTO.getUserId());\n\t\treturn order;\n\t}\n\n\t/**----------------------------------------------------------\n\t *GET USER_FILE_RECOVERY BY USER_LOGIN*\n\t  -----------------------------------------------------------*/\t\n\t@Override\n\tpublic UserFileRecoveryDTO getUserFileRecoveryByUser(final String login)\n\tthrows ServiceException {\n\n\t\tUserFileRecovery result=null;\t\t\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresult = (UserFileRecovery) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().getUserFileRecoveryByUser(login);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry {\n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn (DTOFactory.getUserFileRecoveryDTO(result));\n\t}\n\n\n\n\t/**----------------------------------------------------------\n\t *UPDATE ORDERS ROWS BY LIKE LSORDER_ID, DATE, STATUS, CLIENT*\n\t  -----------------------------------------------------------*/\n\t@SuppressWarnings(""unchecked"")\n\t@Override\n\tpublic List<Orders> getAllOrders(){\n\t\tList<Orders> result=null;\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresult = (List<Orders>) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().getAllOrders();\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry {\n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**----------------------------------------------------------\n\t *GET INVOICED COUNT*\n\t  -----------------------------------------------------------*/\n\t@SuppressWarnings(""unchecked"")\n\t@Override\n\tpublic Long getCountInvoicedOrders(final Date creationDateStart,final Date creationDateEnd,final Integer factorDateBetween,\n\t\t\tfinal String userLogin, final String lsOrderId,final String status){\n\t\tOrders result=null;\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresult = (Orders) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().getCountInvoicedOrders(creationDateStart,creationDateEnd,factorDateBetween,userLogin, lsOrderId,status);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry {\n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\tLong count=result.getCount();\n\t\treturn count;\n\t}\n\n\n\n\t/**----------------------------------------------------------\n\t *GET INVOICED COUNT*\n\t  -----------------------------------------------------------*/\n\t@SuppressWarnings(""unchecked"")\n\t@Override\n\tpublic Long getCountOrders(final Date creationDateStart,final Date creationDateEnd,final Integer factorDateBetween,\n\t\t\tfinal String userLogin, final String lsOrderId,final String status){\n\t\tOrders result=null;\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresult = (Orders) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().getCountOrders(creationDateStart,creationDateEnd,factorDateBetween,userLogin,lsOrderId,status);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry {\n\t\t\t\tthrow new ServiceException(de);\n\t\t\t}catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\tLong count=result.getCount();\n\t\treturn count;\n\t}\n\n\t/**----------------------------------------------------------\n\t *THIS FUNCTION ALLOWS US TO TRANSFORM AN XML FILE TO A LIST \n\t   OF ORDERS*\n\t  -----------------------------------------------------------*/\t\n\t@SuppressWarnings({ ""rawtypes"", ""unchecked"" })\n\t@Override\n\tpublic Collection  toArrayListFromXML(File orderFile,String userLogin)throws Exception {\n\t\tCollection listOrdersDTO = new ArrayList();\n\t\tUserFileRecoveryDTO ufrDTO;\n\t\tString formatDate="""";\n\t\tHashtable<String, String>lsOrdersIdHash=new Hashtable<String, String>();\n\t\t/*List<Orders>listOrders=getAllOrders();\n\t\tif(listOrders!=null){\n\t\t\tfor(Orders ord:listOrders){\n\t\t\t\tlsOrdersIdHash.put(ord.getLsOrderId(), ord.getLsOrderId());\n\t\t\t}\n\t\t}*/\n\t\tproductService = serviceLocator.getProductService();\n\n\t\tif(orderFile==null)return listOrdersDTO;\n\t\tList<ProvinceDTO> listProvine= productService.getAllProvinces();\n\t\tUserFileDataRecoveryDTO ufDataDTO=new UserFileDataRecoveryDTO();\n\t\tDocumentBuilderFactory docBuilderFactory = DocumentBuilderFactory.newInstance();\n\t\tDocumentBuilder docBuilder = docBuilderFactory.newDocumentBuilder();\n\t\tDocument doc = docBuilder.parse (orderFile);\n\t\tufrDTO=getUserFileRecoveryByUser(userLogin);\n\t\t// normalize text representation\n\t\tdoc.getDocumentElement ().normalize ();\n\n\t\tif(ufrDTO!=null && ufrDTO.getTagRoot()!=null  && ufrDTO.getFileTypeId()==1){\n\t\t\tNodeList listOfOrders = doc.getElementsByTagName(ufrDTO.getTagRoot());\n\t\t\tfor(int s=0; s<listOfOrders.getLength() ; s++){\n\t\t\t\tufDataDTO=new UserFileDataRecoveryDTO();\n\t\t\t\tufDataDTO.setUserId(ufrDTO.getUserId());\n\t\t\t\tNode firstOrderNode = listOfOrders.item(s);   \n\t\t\t\tif(firstOrderNode.getNodeType() == Node.ELEMENT_NODE){\n\t\t\t\t\tElement firstOrderElement = (Element)firstOrderNode;\n\t\t\t\t\t//--------------- 1:companyHeader -----------\n\t\t\t\t\tString companyHeader="""";\n\t\t\t\t\tif(ufrDTO.getCompanyHeader()!=null){\n\t\t\t\t\t\tNodeList companyHeaderList = firstOrderElement.getElementsByTagName(ufrDTO.getCompanyHeader());\n\t\t\t\t\t\tif(companyHeaderList!=null && companyHeaderList.getLength()>0){\n\t\t\t\t\t\t\tElement companyHeaderElement = (Element)companyHeaderList.item(0);\n\t\t\t\t\t\t\tif(companyHeaderElement!=null){\n\t\t\t\t\t\t\t\tNodeList companyHeaderFNList = companyHeaderElement.getChildNodes();\n\t\t\t\t\t\t\t\tif(companyHeaderFNList!=null && companyHeaderFNList.getLength()>0){\n\t\t\t\t\t\t\t\t\tcompanyHeader =((Node)companyHeaderFNList.item(0)).getNodeValue().trim(); \n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}  \n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tufDataDTO.setCompanyHeader(companyHeader);\n\n\t\t\t\t\t//--------------- 2:productOrderNumber ----------------\n\t\t\t\t\tString productOrderNumber="""";\n\t\t\t\t\tif(ufrDTO.getProductOrderNumber()!=null){\n\t\t\t\t\t\tNodeList productOrderNumberList = firstOrderElement.getElementsByTagName(ufrDTO.getProductOrderNumber());\n\t\t\t\t\t\tif(productOrderNumberList!=null && productOrderNumberList.getLength()>0){\n\t\t\t\t\t\t\tElement productOrderNumberElement = (Element)productOrderNumberList.item(0);\n\t\t\t\t\t\t\tif(productOrderNumberElement!=null){\n\t\t\t\t\t\t\t\tNodeList productOrderNumberFNList = productOrderNumberElement.getChildNodes(); \n\t\t\t\t\t\t\t\tif(productOrderNumberFNList!=null && productOrderNumberFNList.getLength()>0){\n\t\t\t\t\t\t\t\t\tproductOrderNumber =((Node)productOrderNumberFNList.item(0)).getNodeValue().trim();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tufDataDTO.setProductOrderNumber(productOrderNumber);                \n\t\t\t\t\t//--------------- 3:productOrderDate -----------------\n\t\t\t\t\tString productOrderDate="""";\n\t\t\t\t\tif(ufrDTO.getProductOrderDate()!=null){\n\t\t\t\t\t\tNodeList productOrderDateList = firstOrderElement.getElementsByTagName(ufrDTO.getProductOrderDate());\n\t\t\t\t\t\tif(productOrderDateList!=null && productOrderDateList.getLength()>0){\n\t\t\t\t\t\t\tElement productOrderDateElement = (Element)productOrderDateList.item(0);\n\t\t\t\t\t\t\tif(productOrderDateElement!=null){\n\t\t\t\t\t\t\t\tNodeList productOrderDateFNList = productOrderDateElement.getChildNodes();\n\t\t\t\t\t\t\t\tif(productOrderDateFNList!=null && productOrderDateFNList.getLength()>0){\n\t\t\t\t\t\t\t\t\tproductOrderDate =((Node)productOrderDateFNList.item(0)).getNodeValue().trim();\n\t\t\t\t\t\t\t\t\tproductOrderDate=productOrderDate.replaceAll(""^ +| +$|( )+"", ""$1"");\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tformatDate=ufrDTO.getFormatDate();\n\t\t\t\t\tif(formatDate==null)formatDate="""";\n\t\t\t\t\tSimpleDateFormat sdf = new SimpleDateFormat(formatDate);\n\t\t\t\t\tDate dateOrder=null;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tDate date = sdf.parse(productOrderDate);\n\t\t\t\t\t\tdateOrder=date;\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception pe) {\n\t\t\t\t\t\tdateOrder=null;\n\t\t\t\t\t}\n\t\t\t\t\tufDataDTO.setProductOrderDate(dateOrder);\n\n\t\t\t\t\t//--------------- 4:quantity -------------------------\n\t\t\t\t\tString strQuantity="""";\n\t\t\t\t\tif(ufrDTO.getQuantity()!=null){\n\t\t\t\t\t\tNodeList quantityList = firstOrderElement.getElementsByTagName(ufrDTO.getQuantity());\n\t\t\t\t\t\tif(quantityList!=null && quantityList.getLength()>0){\n\t\t\t\t\t\t\tElement quantityElement = (Element)quantityList.item(0);\n\t\t\t\t\t\t\tif(quantityElement!=null){\n\t\t\t\t\t\t\t\tNodeList quantityFNList = quantityElement.getChildNodes();\n\t\t\t\t\t\t\t\tif(quantityFNList!=null && quantityFNList.getLength()>0){\n\t\t\t\t\t\t\t\t\tstrQuantity =((Node)quantityFNList.item(0)).getNodeValue().trim();\n\t\t\t\t\t\t\t\t\tstrQuantity=strQuantity.replaceAll("" "", """");\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif(strQuantity!=null && !strQuantity.equals("""")){\n\t\t\t\t\t\tint index=strQuantity.indexOf("","");\n\t\t\t\t\t\tif(index>=0){\n\t\t\t\t\t\t\tString strUnitPrice1=strQuantity.substring(0, index);\n\t\t\t\t\t\t\tString strUnitPrice2= strQuantity.substring(index+1, strQuantity.length());\n\t\t\t\t\t\t\tstrQuantity=strUnitPrice1+"".""+strUnitPrice2;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tDouble quantity=null;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tquantity = Double.parseDouble(strQuantity);\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception pe) {\n\t\t\t\t\t\tquantity=null;\n\t\t\t\t\t}\n\t\t\t\t\tufDataDTO.setQuantity(quantity);\n\n\t\t\t\t\t//--------------- 5:lsProductID ----------------------\n\t\t\t\t\tString lsProductID="""";\n\t\t\t\t\tif(ufrDTO.getLsProductID()!=null){\n\t\t\t\t\t\tNodeList lsProductIDList = firstOrderElement.getElementsByTagName(ufrDTO.getLsProductID());\n\t\t\t\t\t\tif(lsProductIDList!=null && lsProductIDList.getLength()>0){\n\t\t\t\t\t\t\tElement lsProductIDElement = (Element)lsProductIDList.item(0);\n\t\t\t\t\t\t\tif(lsProductIDElement!=null){\n\t\t\t\t\t\t\t\tNodeList lsProductIDFNList = lsProductIDElement.getChildNodes();\n\t\t\t\t\t\t\t\tif(lsProductIDFNList!=null && lsProductIDFNList.getLength()>0){\n\t\t\t\t\t\t\t\t\tlsProductID =((Node)lsProductIDFNList.item(0)).getNodeValue().trim(); \n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tufDataDTO.setLsProductID(lsProductID);\n\n\t\t\t\t\t//--------------- 6:productDescription ------------------\n\t\t\t\t\tString productDescription="""";\n\t\t\t\t\tif(ufrDTO.getProductDescription()!=null){\n\t\t\t\t\t\tNodeList productDescriptionList = firstOrderElement.getElementsByTagName(ufrDTO.getProductDescription());\n\t\t\t\t\t\tif(productDescriptionList!=null && productDescriptionList.getLength()>0){\n\t\t\t\t\t\t\tElement productDescriptionElement = (Element)productDescriptionList.item(0);\n\t\t\t\t\t\t\tif(productDescriptionElement!=null){\n\t\t\t\t\t\t\t\tNodeList productDescriptionFNList = productDescriptionElement.getChildNodes();\n\t\t\t\t\t\t\t\tif(productDescriptionFNList!=null && productDescriptionFNList.getLength()>0){\n\t\t\t\t\t\t\t\t\tproductDescription =((Node)productDescriptionFNList.item(0)).getNodeValue().trim(); \n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tproductDescription=productDescription.replaceAll("","", "" "");\n\t\t\t\t\tufDataDTO.setProductDescription(productDescription);\n\n\t\t\t\t\t//--------------- 7:unitPrice ---------------------------\n\t\t\t\t\tString strUnitPrice="""";\n\t\t\t\t\tif(ufrDTO.getUnitPrice()!=null){\n\t\t\t\t\t\tNodeList unitPriceList = firstOrderElement.getElementsByTagName(ufrDTO.getUnitPrice());\n\t\t\t\t\t\tif(unitPriceList!=null && unitPriceList.getLength()>0){\n\t\t\t\t\t\t\tElement unitPriceElement = (Element)unitPriceList.item(0);\n\t\t\t\t\t\t\tif(unitPriceElement!=null){\n\t\t\t\t\t\t\t\tNodeList unitPriceFNList = unitPriceElement.getChildNodes();\n\t\t\t\t\t\t\t\tif(unitPriceFNList!=null && unitPriceFNList.getLength()>0){\n\t\t\t\t\t\t\t\t\tstrUnitPrice =((Node)unitPriceFNList.item(0)).getNodeValue().trim();  \n\t\t\t\t\t\t\t\t\tstrUnitPrice= strUnitPrice.replaceAll(""\\\\$"", """");\n\t\t\t\t\t\t\t\t\tstrUnitPrice= strUnitPrice.replaceAll("" "", """");\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif(strUnitPrice!=null && !strUnitPrice.equals("""")){\n\t\t\t\t\t\tint index=strUnitPrice.indexOf("","");\n\t\t\t\t\t\tif(index>=0){\n\t\t\t\t\t\t\tString strUnitPrice1=strUnitPrice.substring(0, index);\n\t\t\t\t\t\t\tString strUnitPrice2= strUnitPrice.substring(index+1, strUnitPrice.length());\n\t\t\t\t\t\t\tstrUnitPrice=strUnitPrice1+"".""+strUnitPrice2;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tDouble ProductUnitPrice=null;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tProductUnitPrice = Double.parseDouble(strUnitPrice);\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception pe) {\n\t\t\t\t\t\tProductUnitPrice=null;\n\t\t\t\t\t}\n\t\t\t\t\tufDataDTO.setUnitPrice(ProductUnitPrice);\n\n\t\t\t\t\t//--------------- 8:clientNumber -------------------------\n\t\t\t\t\tString clientNumber="""";\n\t\t\t\t\tif(ufrDTO.getClientNumber()!=null){\n\t\t\t\t\t\tNodeList clientNumberList = firstOrderElement.getElementsByTagName(ufrDTO.getClientNumber());\n\t\t\t\t\t\tif(clientNumberList!=null && clientNumberList.getLength()>0){\n\t\t\t\t\t\t\tElement clientNumberElement = (Element)clientNumberList.item(0);\n\t\t\t\t\t\t\tif(clientNumberElement!=null){\n\t\t\t\t\t\t\t\tNodeList clientNumberFNList = clientNumberElement.getChildNodes();\n\t\t\t\t\t\t\t\tif(clientNumberFNList!=null && clientNumberFNList.getLength()>0){\n\t\t\t\t\t\t\t\t\tclientNumber =((Node)clientNumberFNList.item(0)).getNodeValue().trim(); \n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tufDataDTO.setClientNumber(clientNumber);\n\n\t\t\t\t\t//--------------- 9:firstName ---------------------------\n\t\t\t\t\tString firstName="""";\n\t\t\t\t\tif(ufrDTO.getClientFirstName()!=null){\n\t\t\t\t\t\tNodeList firstNameList = firstOrderElement.getElementsByTagName(ufrDTO.getClientFirstName());\n\t\t\t\t\t\tif(firstNameList!=null && firstNameList.getLength()>0){\n\t\t\t\t\t\t\tElement firstNameElement = (Element)firstNameList.item(0);\n\t\t\t\t\t\t\tif(firstNameElement!=null){\n\t\t\t\t\t\t\t\tNodeList firstNameFNList = firstNameElement.getChildNodes();\n\t\t\t\t\t\t\t\tif(firstNameFNList!=null && firstNameFNList.getLength()>0){\n\t\t\t\t\t\t\t\t\tfirstName =((Node)firstNameFNList.item(0)).getNodeValue().trim();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tufDataDTO.setClientFirstName(firstName);\n\n\t\t\t\t\t//--------------- 10:lastName ---------------------------\n\t\t\t\t\tString lastName="""";\n\t\t\t\t\tif(ufrDTO.getClientLastName()!=null){\n\t\t\t\t\t\tNodeList lastNameList = firstOrderElement.getElementsByTagName(ufrDTO.getClientLastName());\n\t\t\t\t\t\tif(lastNameList!=null && lastNameList.getLength()>0){\n\t\t\t\t\t\t\tElement lastNameElement = (Element)lastNameList.item(0);\n\t\t\t\t\t\t\tif(lastNameElement!=null){\n\t\t\t\t\t\t\t\tNodeList lastNameFNList = lastNameElement.getChildNodes();\n\t\t\t\t\t\t\t\tif(lastNameFNList!=null && lastNameFNList.getLength()>0){\n\t\t\t\t\t\t\t\t\tlastName =((Node)lastNameFNList.item(0)).getNodeValue().trim();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tufDataDTO.setClientLastName(lastName);\n\n\t\t\t\t\t//--------------- 11:addressStreet ----------------------\n\t\t\t\t\tString addressStreet="""";\n\t\t\t\t\tif(ufrDTO.getClientStreet()!=null){\n\t\t\t\t\t\tNodeList addressStreetList = firstOrderElement.getElementsByTagName(ufrDTO.getClientStreet());\n\t\t\t\t\t\tif(addressStreetList!=null && addressStreetList.getLength()>0){\n\t\t\t\t\t\t\tElement addressStreetElement = (Element)addressStreetList.item(0);\n\t\t\t\t\t\t\tif(addressStreetElement!=null){\n\t\t\t\t\t\t\t\tNodeList addressStreetFNList = addressStreetElement.getChildNodes();\n\t\t\t\t\t\t\t\tif(addressStreetFNList!=null && addressStreetFNList.getLength()>0){\n\t\t\t\t\t\t\t\t\taddressStreet =((Node)addressStreetFNList.item(0)).getNodeValue().trim();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\taddressStreet=addressStreet.replaceAll("","", "" "");\n\t\t\t\t\tufDataDTO.setClientStreet(addressStreet);\n\n\t\t\t\t\t//--------------- 12:addressStreetOther ----------------\n\t\t\t\t\tString addressStreetOther="""";\n\t\t\t\t\tif(ufrDTO.getClientOtherStreet()!=null){\n\t\t\t\t\t\tNodeList addressStreetOtherList = firstOrderElement.getElementsByTagName(ufrDTO.getClientOtherStreet());\n\t\t\t\t\t\tif(addressStreetOtherList!=null && addressStreetOtherList.getLength()>0){\n\t\t\t\t\t\t\tElement addressStreetOtherElement = (Element)addressStreetOtherList.item(0);\n\t\t\t\t\t\t\tif(addressStreetOtherElement!=null){\n\t\t\t\t\t\t\t\tNodeList addressStreetOtherFNList = addressStreetOtherElement.getChildNodes();\n\t\t\t\t\t\t\t\tif(addressStreetOtherFNList!=null && addressStreetOtherFNList.getLength()>0){\n\t\t\t\t\t\t\t\t\taddressStreetOther =((Node)addressStreetOtherFNList.item(0)).getNodeValue().trim();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tufDataDTO.setClientOtherStreet(addressStreetOther);\n\n\t\t\t\t\t//--------------- 13:addressCity ------------------------\n\t\t\t\t\tString addressCity="""";\n\t\t\t\t\tif(ufrDTO.getClientCity()!=null){\n\t\t\t\t\t\tNodeList addressCityList = firstOrderElement.getElementsByTagName(ufrDTO.getClientCity());\n\t\t\t\t\t\tif(addressCityList!=null && addressCityList.getLength()>0){\n\t\t\t\t\t\t\tElement addressCityElement = (Element)addressCityList.item(0);\n\t\t\t\t\t\t\tif(addressCityElement!=null){\n\t\t\t\t\t\t\t\tNodeList addressCityLNList = addressCityElement.getChildNodes();\n\t\t\t\t\t\t\t\tif(addressCityLNList!=null && addressCityLNList.getLength()>0){\n\t\t\t\t\t\t\t\t\taddressCity =((Node)addressCityLNList.item(0)).getNodeValue().trim();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tufDataDTO.setClientCity(addressCity);\n\n\t\t\t\t\t//--------------- 14:addressPostalCode ---------------------\n\t\t\t\t\tString addressPostalCode="" "";\n\t\t\t\t\tif(ufrDTO.getClientPostalCode()!=null){\n\t\t\t\t\t\tNodeList addressPostalCodeList = firstOrderElement.getElementsByTagName(ufrDTO.getClientPostalCode());\n\t\t\t\t\t\tif(addressPostalCodeList!=null && addressPostalCodeList.getLength()>0){\n\t\t\t\t\t\t\tElement addressPostalCodeElement = (Element)addressPostalCodeList.item(0);\n\t\t\t\t\t\t\tif(addressPostalCodeElement!=null){\n\t\t\t\t\t\t\t\tNodeList addressPostalCodeLNList = addressPostalCodeElement.getChildNodes();\n\t\t\t\t\t\t\t\tif(addressPostalCodeLNList!=null && addressPostalCodeLNList.getLength()>0){\n\t\t\t\t\t\t\t\t\taddressPostalCode =((Node)addressPostalCodeLNList.item(0)).getNodeValue().trim();  \n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\taddressPostalCode=addressPostalCode.replaceAll("" "", """");\n\t\t\t\t\tufDataDTO.setClientPostalCode(addressPostalCode);\n\n\t\t\t\t\t//--------------- 15:addressState -------------------------\n\t\t\t\t\tString addressState="""";\n\t\t\t\t\tif(ufrDTO.getClientProvince()!=null){\n\t\t\t\t\t\tNodeList addressStateList = firstOrderElement.getElementsByTagName(ufrDTO.getClientProvince());\n\t\t\t\t\t\tif(addressStateList!=null && addressStateList.getLength()>0){\n\t\t\t\t\t\t\tElement addressStateElement = (Element)addressStateList.item(0);\n\t\t\t\t\t\t\tif(addressStateElement!=null){\n\t\t\t\t\t\t\t\tNodeList addressStateLNList = addressStateElement.getChildNodes();\n\t\t\t\t\t\t\t\tif(addressStateLNList!=null && addressStateLNList.getLength()>0){\n\t\t\t\t\t\t\t\t\taddressState =((Node)addressStateLNList.item(0)).getNodeValue().trim(); \n\t\t\t\t\t\t\t\t\tString clientProvinceToCompar=addressState.toLowerCase();\n\t\t\t\t\t\t\t\t\tclientProvinceToCompar=clientProvinceToCompar.replaceAll("" "", """");\n\t\t\t\t\t\t\t\t\tclientProvinceToCompar=clientProvinceToCompar.replaceAll(""canada"", """");\n\t\t\t\t\t\t\t\t\tclientProvinceToCompar=clientProvinceToCompar.replaceAll("","", """");\n\t\t\t\t\t\t\t\t\tclientProvinceToCompar=clientProvinceToCompar.replaceAll(""\\\\."", """");\n\t\t\t\t\t\t\t\t\tfor(ProvinceDTO prov:listProvine){\n\t\t\t\t\t\t\t\t\t\tString provName=prov.getName();\n\t\t\t\t\t\t\t\t\t\tprovName=provName.replaceAll("" "", """");\n\t\t\t\t\t\t\t\t\t\tprovName= provName.toLowerCase();\n\t\t\t\t\t\t\t\t\t\tif(clientProvinceToCompar.equals(provName) || clientProvinceToCompar.equals(prov.getCode()) ){\n\t\t\t\t\t\t\t\t\t\t\taddressState=\tprov.getCode();\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\taddressState=addressState.replaceAll(""\\\\."", """");\n\t\t\t\t\t\t\t\t\tif(clientProvinceToCompar.equals(""""))addressState=""""; \n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tufDataDTO.setClientProvince(addressState);\n\n\t\t\t\t\t//--------------- 16:clientPhone --------------------------\n\t\t\t\t\tString clientPhone="""";\n\t\t\t\t\tif(ufrDTO.getClientPhone()!=null){\n\t\t\t\t\t\tNodeList clientPhoneList = firstOrderElement.getElementsByTagName(ufrDTO.getClientPhone());\n\t\t\t\t\t\tif(clientPhoneList!=null && clientPhoneList.getLength()>0){\n\t\t\t\t\t\t\tElement clientPhoneElement = (Element)clientPhoneList.item(0);\n\t\t\t\t\t\t\tif(clientPhoneElement!=null){\n\t\t\t\t\t\t\t\tNodeList clientPhoneLNList = clientPhoneElement.getChildNodes();\n\t\t\t\t\t\t\t\tif(clientPhoneLNList!=null && clientPhoneLNList.getLength()>0){\n\t\t\t\t\t\t\t\t\tclientPhone =((Node)clientPhoneLNList.item(0)).getNodeValue().trim(); \n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t//--------------- 17:client_phone_zone -------------------------\n\t\t\t\t\tString clientPhoneZone="""";\n\t\t\t\t\tif(ufrDTO.getClientPhoneZone()!=null){\n\t\t\t\t\t\tNodeList clientPhoneZoneList = firstOrderElement.getElementsByTagName(ufrDTO.getClientPhoneZone());\n\t\t\t\t\t\tif(clientPhoneZoneList!=null && clientPhoneZoneList.getLength()>0){\n\t\t\t\t\t\t\tElement clientPhoneZoneElement = (Element)clientPhoneZoneList.item(0);\n\t\t\t\t\t\t\tif(clientPhoneZoneElement!=null){\n\t\t\t\t\t\t\t\tNodeList clientPhoneZoneLNList = clientPhoneZoneElement.getChildNodes();\n\t\t\t\t\t\t\t\tif(clientPhoneZoneLNList!=null && clientPhoneZoneLNList.getLength()>0){\n\t\t\t\t\t\t\t\t\tclientPhoneZone =((Node)clientPhoneZoneLNList.item(0)).getNodeValue().trim(); \n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(clientPhoneZone!=null && !clientPhoneZone.equals(""""))clientPhone=clientPhoneZone+"" ""+clientPhone;\n\t\t\t\t\tufDataDTO.setClientPhone(clientPhone);\n\n\t\t\t\t\t//--------------- 18:clientEmail -------------------------\n\t\t\t\t\tString clientEmail="""";\n\t\t\t\t\tif(ufrDTO.getClientEmail()!=null){\n\t\t\t\t\t\tNodeList clientEmailList = firstOrderElement.getElementsByTagName(ufrDTO.getClientEmail());\n\t\t\t\t\t\tif(clientEmailList!=null && clientEmailList.getLength()>0){\n\t\t\t\t\t\t\tElement clientEmailElement = (Element)clientEmailList.item(0);\n\t\t\t\t\t\t\tif(clientEmailElement!=null){\n\t\t\t\t\t\t\t\tNodeList clientEmailLNList = clientEmailElement.getChildNodes();\n\t\t\t\t\t\t\t\tif(clientEmailLNList!=null && clientEmailLNList.getLength()>0){\n\t\t\t\t\t\t\t\t\tclientEmail =((Node)clientEmailLNList.item(0)).getNodeValue().trim(); \n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tufDataDTO.setClientEmail(clientEmail);\n\n\t\t\t\t\t//--------------- 19:requiredDate -------------------------\n\t\t\t\t\tString requiredDate="""";\n\t\t\t\t\tif(ufrDTO.getRequiredDate()!=null){\n\t\t\t\t\t\tNodeList requiredDateList = firstOrderElement.getElementsByTagName(ufrDTO.getRequiredDate());\n\t\t\t\t\t\tif(requiredDateList!=null && requiredDateList.getLength()>0){\n\t\t\t\t\t\t\tElement requiredDateElement = (Element)requiredDateList.item(0);\n\t\t\t\t\t\t\tif(requiredDateElement!=null){\n\t\t\t\t\t\t\t\tNodeList requiredDateLNList = requiredDateElement.getChildNodes();\n\t\t\t\t\t\t\t\tif(requiredDateLNList!=null && requiredDateLNList.getLength()>0){\n\t\t\t\t\t\t\t\t\trequiredDate =((Node)requiredDateLNList.item(0)).getNodeValue().trim(); \n\t\t\t\t\t\t\t\t\trequiredDate=requiredDate.replaceAll("" "", """");\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tformatDate=ufrDTO.getFormatDate();\n\t\t\t\t\tif(formatDate==null)formatDate="""";\n\t\t\t\t\tsdf = new SimpleDateFormat(formatDate);\n\t\t\t\t\tDate requiredDateOrder=null;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tDate date = sdf.parse(requiredDate);\n\t\t\t\t\t\trequiredDateOrder=date;\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception pe) {\n\t\t\t\t\t\trequiredDateOrder=null;\n\t\t\t\t\t}                     \n\t\t\t\t\tufDataDTO.setRequiredDate(requiredDateOrder);\n\n\t\t\t\t\t//--------------- 20:clients_other_names -------------------------\n\t\t\t\t\tString clientsOtherNames="""";\n\t\t\t\t\tif(ufrDTO.getClientOtherNames()!=null){\n\t\t\t\t\t\tNodeList clientsOtherNamesList = firstOrderElement.getElementsByTagName(ufrDTO.getClientOtherNames());\n\t\t\t\t\t\tif(clientsOtherNamesList!=null && clientsOtherNamesList.getLength()>0){\n\t\t\t\t\t\t\tElement clientsOtherNamesElement = (Element)clientsOtherNamesList.item(0);\n\t\t\t\t\t\t\tif(clientsOtherNamesElement!=null){\n\t\t\t\t\t\t\t\tNodeList clientsOtherNamesLNList = clientsOtherNamesElement.getChildNodes();\n\t\t\t\t\t\t\t\tif(clientsOtherNamesLNList!=null && clientsOtherNamesLNList.getLength()>0){\n\t\t\t\t\t\t\t\t\tclientsOtherNames =((Node)clientsOtherNamesLNList.item(0)).getNodeValue().trim(); \n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tufDataDTO.setClientOtherNames(clientsOtherNames);\n\n\t\t\t\t\t//--------------- 21:lsOrderId ------------------------\n\t\t\t\t\tString code=userLogin.substring(0, 2).toUpperCase();\n\t\t\t\t\tString lsOrderId=ufDataDTO.getProductOrderNumber();\n\n\t\t\t\t\tint inc=0;//increment\n\t\t\t\t\tString lsOrderIdParent=lsOrderId;\n\t\t\t\t\tlsOrderIdParent=lsOrderIdParent.replaceFirst(""-"", """");\n\t\t\t\t\tlsOrderIdParent=lsOrderIdParent.replaceFirst(""_"", """");\n\t\t\t\t\tlsOrderIdParent=lsOrderIdParent.replaceFirst(""R"", """");\n\t\t\t\t\tlsOrderIdParent=lsOrderIdParent.replaceAll("" "", """");\n\t\t\t\t\tif(lsOrderIdParent.length()>14){\n\t\t\t\t\t\tint index=lsOrderIdParent.length()-14;\n\t\t\t\t\t\tlsOrderIdParent=lsOrderIdParent.substring(index, lsOrderIdParent.length());\n\t\t\t\t\t}\n\t\t\t\t\tString lsOrderIdToGenerate=code+""O""+ufDataDTO.getUserId()+lsOrderIdParent;;\n\t\t\t\t\twhile(isLsOrderIdUsed(lsOrderIdToGenerate) || lsOrdersIdHash.containsKey(lsOrderIdToGenerate)){\n\t\t\t\t\t\tinc++; \n\t\t\t\t\t\tlsOrderIdToGenerate=code+""O""+ufDataDTO.getUserId()+lsOrderIdParent+""R""+inc;\n\t\t\t\t\t}\n\t\t\t\t\tlsOrdersIdHash.put(lsOrderIdToGenerate, lsOrderIdToGenerate);\n\t\t\t\t\tufDataDTO.setLsOrderId(lsOrderIdToGenerate);\n\n\t\t\t\t\t//--------------- 22:clients_other_names -------------------------\n\t\t\t\t\tString shippingCompany="""";\n\t\t\t\t\tif(ufrDTO.getShippingCompany()!=null){\n\t\t\t\t\t\tNodeList shippingCompanyList = firstOrderElement.getElementsByTagName(ufrDTO.getShippingCompany());\n\t\t\t\t\t\tif(shippingCompanyList!=null && shippingCompanyList.getLength()>0){\n\t\t\t\t\t\t\tElement shippingCompanyElement = (Element)shippingCompanyList.item(0);\n\t\t\t\t\t\t\tif(shippingCompanyElement!=null){\n\t\t\t\t\t\t\t\tNodeList shippingCompanyLNList = shippingCompanyElement.getChildNodes();\n\t\t\t\t\t\t\t\tif(shippingCompanyLNList!=null && shippingCompanyLNList.getLength()>0){\n\t\t\t\t\t\t\t\t\tshippingCompany =((Node)shippingCompanyLNList.item(0)).getNodeValue().trim(); \n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tufDataDTO.setShippingCompany(shippingCompany);\n\n\t\t\t\t\t//--------------- 23:Notes -------------------------\n\t\t\t\t\tString notes="""";\n\t\t\t\t\tif(ufrDTO.getNotes()!=null){\n\t\t\t\t\t\tNodeList notesList = firstOrderElement.getElementsByTagName(ufrDTO.getNotes());\n\t\t\t\t\t\tif(notesList!=null && notesList.getLength()>0){\n\t\t\t\t\t\t\tElement notesElement = (Element)notesList.item(0);\n\t\t\t\t\t\t\tif(notesElement!=null){\n\t\t\t\t\t\t\t\tNodeList notesLNList = notesElement.getChildNodes();\n\t\t\t\t\t\t\t\tif(notesLNList!=null && notesLNList.getLength()>0){\n\t\t\t\t\t\t\t\t\tnotes =((Node)notesLNList.item(0)).getNodeValue().trim(); \n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tufDataDTO.setNotes(notes);\n\n\n\t\t\t\t\t//--------------- 24:Notes -------------------------\n\t\t\t\t\tString clientProductNumber="""";\n\t\t\t\t\tif(ufrDTO.getClientProductNumber()!=null){\n\t\t\t\t\t\tNodeList clientProductNumberList = firstOrderElement.getElementsByTagName(ufrDTO.getClientProductNumber());\n\t\t\t\t\t\tif(clientProductNumberList!=null && clientProductNumberList.getLength()>0){\n\t\t\t\t\t\t\tElement clientProductNumberElement = (Element)clientProductNumberList.item(0);\n\t\t\t\t\t\t\tif(clientProductNumberElement!=null){\n\t\t\t\t\t\t\t\tNodeList clientProductNumberLNList = clientProductNumberElement.getChildNodes();\n\t\t\t\t\t\t\t\tif(clientProductNumberLNList!=null && clientProductNumberLNList.getLength()>0){\n\t\t\t\t\t\t\t\t\tclientProductNumber =((Node)clientProductNumberLNList.item(0)).getNodeValue().trim(); \n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tufDataDTO.setClientProductNumber(clientProductNumber);\n\n\t\t\t\t\t//--------------- 25:clientOtherId -------------------------\n\t\t\t\t\tString clientOtherId="""";\n\t\t\t\t\tif(ufrDTO.getClientOtherId()!=null){\n\t\t\t\t\t\tNodeList clientOtherIdList = firstOrderElement.getElementsByTagName(ufrDTO.getClientOtherId());\n\t\t\t\t\t\tif(clientOtherIdList!=null && clientOtherIdList.getLength()>0){\n\t\t\t\t\t\t\tElement clientOtherIdElement = (Element)clientOtherIdList.item(0);\n\t\t\t\t\t\t\tif(clientOtherIdElement!=null){\n\t\t\t\t\t\t\t\tNodeList clientOtherIdLNList = clientOtherIdElement.getChildNodes();\n\t\t\t\t\t\t\t\tif(clientOtherIdLNList!=null && clientOtherIdLNList.getLength()>0){\n\t\t\t\t\t\t\t\t\tclientOtherId =((Node)clientOtherIdLNList.item(0)).getNodeValue().trim(); \n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tufDataDTO.setClientOtherId(clientOtherId);\n\n\t\t\t\t\tufDataDTO.setCreationDate(new Date());\n\n\t\t\t\t\tlistOrdersDTO.add(ufDataDTO);\n\t\t\t\t}//end of if clause\n\t\t\t}//end of for loop with s var\n\t\t}//end if with condition ufrDTO!=null \n\t\treturn listOrdersDTO;\n\t}\n\n\t/**----------------------------------------------------------\n\t *THIS FUNCTION ALLOWS US TO TRANSFORM AN XLS FILE TO A LIST \n\t   OF ORDERS*\n\t  -----------------------------------------------------------*/\t\n\t@SuppressWarnings({ ""rawtypes"", ""unchecked"" })\n\t@Override\n\tpublic Collection toArrayListFromXLS(File orderFile,String userLogin) throws Exception {\n\n\t\tUserFileRecoveryDTO ufrDTO=null;\n\t\tHashtable<String, String>lsOrdersIdHash=new Hashtable<String, String>();\n\t\t/*List<Orders>listOrders=getAllOrders();\n\t\tif(listOrders!=null){\n\t\t\tfor(Orders ord:listOrders){\n\t\t\t\tlsOrdersIdHash.put(ord.getLsOrderId(), ord.getLsOrderId());\n\t\t\t}\n\t\t}*/\n\n\t\tufrDTO=getUserFileRecoveryByUser(userLogin);\n\t\tproductService = serviceLocator.getProductService();\n\n\t\tCollection listOrderDTO = new ArrayList();\n\n\t\tif(orderFile!=null && ufrDTO!=null && (ufrDTO.getFileTypeId()==2 || ufrDTO.getFileTypeId()==3 )){\n\t\t\t//variable indicating the numbers of columns in the XLS file\n\t\t\tint ROW_TO_START = 1;\n\t\t\tint COL_COMPANY_HEADER=Integer.parseInt(ufrDTO.getCompanyHeader())-1 ;\n\t\t\tint COL_PRODUCT_ORDER_NUMBER=Integer.parseInt(ufrDTO.getProductOrderNumber())-1;//poNumber\n\t\t\tint COL_PRODUCT_ORDER_DATE=Integer.parseInt(ufrDTO.getProductOrderDate())-1; //poDate\n\t\t\tint COL_QUANTITY=Integer.parseInt(ufrDTO.getQuantity())-1;//quantity\n\t\t\tint COL_LS_PRODUCT_ID=Integer.parseInt(ufrDTO.getLsProductID())-1;//productId\n\t\t\tint COL_CLIENT_PRODUCT_NUMBER=Integer.parseInt(ufrDTO.getClientProductNumber())-1;//productId\n\t\t\tint COL_PRODUCT_DESCRIPTION=Integer.parseInt(ufrDTO.getProductDescription())-1;//description\t\n\t\t\tint COL_UNIT_PRICE=Integer.parseInt(ufrDTO.getUnitPrice())-1; //price\n\t\t\tint COL_CLIENT_NUMBER=Integer.parseInt(ufrDTO.getClientNumber())-1;//clientNumber\n\t\t\tint COL_FIRST_NAME=Integer.parseInt(ufrDTO.getClientFirstName())-1;//clientFirstName\n\t\t\tint COL_LAST_NAME=Integer.parseInt(ufrDTO.getClientLastName())-1; //clientLastName\n\t\t\tint COL_ADDRESSS_TREET=Integer.parseInt(ufrDTO.getClientStreet())-1; //clientAdress\n\t\t\tint COL_ADDRESSS_TREET_OTHER=Integer.parseInt(ufrDTO.getClientOtherStreet())-1;//clientAdressOther\n\t\t\tint COL_ADDRESS_CITY=Integer.parseInt(ufrDTO.getClientCity())-1;//clientCity\n\t\t\tint COL_ADDRESS_POSTAL_CODE=Integer.parseInt(ufrDTO.getClientPostalCode())-1;//clientPostalCode\n\t\t\tint COL_ADDRESS_STATE=Integer.parseInt(ufrDTO.getClientProvince())-1;//clientProvince\t\n\t\t\tint COL_CLIENT_PHONE=Integer.parseInt(ufrDTO.getClientPhone())-1;//clientPhone\n\t\t\tint COL_CLIENT_EMAIL=Integer.parseInt(ufrDTO.getClientEmail())-1;//clientEmail\n\n\t\t\tint COL_REQUIRE_DATE=Integer.parseInt(ufrDTO.getRequiredDate())-1;//requiredDate\n\t\t\tint COL_CLIENT_OTHER_NAMES=Integer.parseInt(ufrDTO.getClientOtherNames())-1;//clientsOtherNames\n\t\t\tint COL_CLIENT_PHONE_ZONE=Integer.parseInt(ufrDTO.getClientPhoneZone())-1;//clientPhoneZone\n\t\t\tint CLIENT_ORDER_NUMBER=Integer.parseInt(ufrDTO.getClientOrderNumber())-1;\n\t\t\tint CST_PRODUCT_NUMBER=Integer.parseInt(ufrDTO.getCstProductNumber())-1;\n\t\t\tint SHIPPING_COMPANY=Integer.parseInt(ufrDTO.getShippingCompany())-1;;\n\t\t\tint NOTES=Integer.parseInt(ufrDTO.getNotes())-1;\n\t\t\tint COL_CLIENT_OTHER_ID=Integer.parseInt(ufrDTO.getClientOtherId())-1;\n\n\t\t\t//Values of cells\n\t\t\tString companyHeader="""";\n\t\t\tString productOrderNumber="""";//poNumber\n\t\t\tString clientOrderNumber="""";\n\t\t\tString cstProductNumber="""";\n\t\t\tString shippingCompany="""";\n\t\t\tString notes;\n\t\t\tDate productOrderDate; //poDate\n\t\t\tDouble quantity=0D;//quantity\n\t\t\tString lsProductID="""";//productId\n\t\t\tString productDescription="""";//description\t\n\t\t\tDouble unitPrice=0D; //price\n\t\t\tString clientNumber="""";//clientNumber\n\t\t\tString clientFirstName="""";//clientFirstName\n\t\t\tString clientLastName=""""; //clientLastName\n\t\t\tString clientStreet=""""; //clientAdress\n\t\t\tString clientOtherStreet="""";//clientAdressOther\n\t\t\tString clientCity="""";//clientCity\n\t\t\tString clientPostalCode="" "";//clientPostalCode\n\t\t\tString clientProvince="""";//clientProvince\t\n\t\t\tString clientPhone="""";//clientPhone\n\t\t\tString clientEmail="""";//clientEmail\t\n\t\t\tDate   requiredDate=null;\n\t\t\tString clientOtherNames="""";\n\t\t\tString clientPhoneZone = """";\n\t\t\tString clientProductNumber = """";\n\t\t\tString clientOtherId="""";\n\n\t\t\t//Cells\n\t\t\tCell cellClientProductNumber=null;\n\t\t\tCell cellCompanyHeader= null;\n\t\t\tCell cellProductOrderNumber= null;//poNumber\n\t\t\tCell cellProductOrderDate= null;//poDate\n\t\t\tCell cellQuantity= null;//quantity\n\t\t\tCell cellLsProductID= null;;//productId\n\t\t\tCell cellProductDescription= null;//description\t\n\t\t\tCell cellUnitPrice= null;//price\n\t\t\tCell cellClientNumber= null;//clientNumber\n\t\t\tCell cellClientFirstName= null;//clientFirstName\n\t\t\tCell cellClientLastName= null; //clientLastName\n\t\t\tCell cellClientStreet= null;//clientAdress\n\t\t\tCell cellClientOtherStreet= null;//clientAdressOther\n\t\t\tCell cellClientCity= null;//clientCity\n\t\t\tCell cellClientPostalCode= null;//clientPostalCode\n\t\t\tCell cellClientProvince= null;//clientProvince\t\n\t\t\tCell cellClientPhone= null;//clientPhone\n\t\t\tCell cellClientEmail= null;//clientEmail\t\n\t\t\tCell cellRequiredDate=null;\t\t//requiredDate\n\t\t\tCell cellClientOtherNames=null; //clientsOtherNames\n\t\t\tCell cellClientPhoneZone = null;\t//clientPhoneZone\n\t\t\tCell cellClientOrderNumber=null;\n\t\t\tCell cellCstProductNumber=null;\n\t\t\tCell cellShippingCompany=null;\n\t\t\tCell cellNotes=null;\n\t\t\tCell cellClientOtherId=null;\n\n\t\t\t//try {\n\t\t\tList<ProvinceDTO> listProvine= productService.getAllProvinces();\n\t\t\tWorkbook existingWorkbook = Workbook.getWorkbook(orderFile);\n\t\t\tSheet sheetToRead=existingWorkbook.getSheet(0);\n\t\t\tint ROW_MAX = sheetToRead.getRows();\n\n\t\t\tfor(int row=ROW_TO_START; row< ROW_MAX;row++) {\n\n\t\t\t\t/*cellProductOrderNumber = sheetToRead.getCell(13, 1);\t\t\t\n\t\t\t\tif(cellProductOrderNumber!=null)productOrderNumber = cellProductOrderNumber.getContents();\n\n\t\t\t\tcellProductOrderNumber = sheetToRead.getCell(13, 2);\t\t\t\n\t\t\t\tif(cellProductOrderNumber!=null)productOrderNumber = cellProductOrderNumber.getContents();*/\n\n\t\t\t\tUserFileDataRecoveryDTO ufDataDTO=new UserFileDataRecoveryDTO();\n\t\t\t\tufDataDTO.setUserId(ufrDTO.getUserId());\n\t\t\t\t//--------------- 1: poNumber.\n\t\t\t\tif(COL_PRODUCT_ORDER_NUMBER>=0)cellProductOrderNumber = sheetToRead.getCell(COL_PRODUCT_ORDER_NUMBER, row);\t\t\t\n\t\t\t\tif(cellProductOrderNumber!=null)productOrderNumber = cellProductOrderNumber.getContents();\n\t\t\t\tufDataDTO.setProductOrderNumber(productOrderNumber);\n\n\t\t\t\t//--------------- 2: clientOrderNumber.\n\t\t\t\tif(CLIENT_ORDER_NUMBER>=0)cellClientOrderNumber = sheetToRead.getCell(CLIENT_ORDER_NUMBER, row);\t\t\t\n\t\t\t\tif(cellClientOrderNumber!=null)clientOrderNumber = cellClientOrderNumber.getContents();\n\t\t\t\tufDataDTO.setClientOrderNumber(clientOrderNumber);\n\n\n\t\t\t\t//--------------- 3: cstProductNumber.\n\t\t\t\tif(CST_PRODUCT_NUMBER>=0)cellCstProductNumber = sheetToRead.getCell(CST_PRODUCT_NUMBER, row);\t\t\t\n\t\t\t\tif(cellCstProductNumber!=null)cstProductNumber = cellCstProductNumber.getContents();\n\t\t\t\tufDataDTO.setCstProductNumber(cstProductNumber);\n\n\t\t\t\t//shippingCompany\n\n\t\t\t\t//--------------- 2: companyHeader\n\t\t\t\tif(COL_COMPANY_HEADER>=0)cellCompanyHeader = sheetToRead.getCell(COL_COMPANY_HEADER, row);\t\t\t\n\t\t\t\tif(cellCompanyHeader!=null)companyHeader = cellCompanyHeader.getContents();\n\t\t\t\tufDataDTO.setCompanyHeader(companyHeader);\n\n\t\t\t\t//--------------- 3: productOrderDate.\n\t\t\t\tproductOrderDate=null;\n\t\t\t\tif(COL_PRODUCT_ORDER_DATE>=0)cellProductOrderDate = sheetToRead.getCell(COL_PRODUCT_ORDER_DATE, row);\t\t\t\n\t\t\t\tif(cellProductOrderDate!=null){\n\t\t\t\t\tString strDate=cellProductOrderDate.getContents();\n\t\t\t\t\t//strDate=strDate.replaceAll("" "", """");\n\t\t\t\t\tSimpleDateFormat sdf = new SimpleDateFormat(ufrDTO.getFormatDate());//(""yyyy-MM-dd HH:mm:ss"");\t\n\t\t\t\t\ttry {\n\t\t\t\t\t\tDate date = sdf.parse(strDate);\n\t\t\t\t\t\tproductOrderDate=date;\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception pe) {\n\t\t\t\t\t\tproductOrderDate=null;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tufDataDTO.setProductOrderDate(productOrderDate);\n\n\t\t\t\t//--------------- 4: Quantity.\n\t\t\t\tif(COL_QUANTITY>=0)cellQuantity = sheetToRead.getCell(COL_QUANTITY, row);\t\t\t\n\t\t\t\tif(cellQuantity!=null){\n\t\t\t\t\tString strQuantity = cellQuantity.getContents();\n\t\t\t\t\tstrQuantity=strQuantity.replaceAll("" "", """");\n\t\t\t\t\tif(strQuantity!=null && !strQuantity.equals("""")){\n\t\t\t\t\t\tint index=strQuantity.indexOf("","");\n\t\t\t\t\t\tif(index>=0){\n\t\t\t\t\t\t\tString strQuantity1=strQuantity.substring(0, index);\n\t\t\t\t\t\t\tString strQuantity2= strQuantity.substring(index+1, strQuantity.length());\n\t\t\t\t\t\t\tstrQuantity=strQuantity1+"".""+strQuantity2;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tquantity=null;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tquantity = Double.parseDouble(strQuantity);\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception pe) {\n\t\t\t\t\t\tquantity=null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tufDataDTO.setQuantity(quantity);\n\n\t\t\t\t//--------------- 5: lsProductID.\n\t\t\t\tif(COL_LS_PRODUCT_ID>=0)cellLsProductID = sheetToRead.getCell(COL_LS_PRODUCT_ID, row);\t\t\t\n\t\t\t\tif(cellLsProductID!=null)lsProductID = cellLsProductID.getContents();\n\t\t\t\tufDataDTO.setLsProductID(lsProductID);\n\n\t\t\t\t//--------------- 6: productDescription.\n\t\t\t\tif(COL_PRODUCT_DESCRIPTION>=0)cellProductDescription = sheetToRead.getCell(COL_PRODUCT_DESCRIPTION, row);\t\t\t\n\t\t\t\tif(cellProductDescription!=null)productDescription = cellProductDescription.getContents();\n\t\t\t\tproductDescription=productDescription.replaceAll("","", "" "");\n\t\t\t\tufDataDTO.setProductDescription(productDescription);\n\n\t\t\t\t//--------------- 7: unitPrice.\n\t\t\t\tif(COL_UNIT_PRICE>=0)cellUnitPrice = sheetToRead.getCell(COL_UNIT_PRICE, row);\t\t\t\n\t\t\t\tif(cellUnitPrice!=null){\n\t\t\t\t\tString strUnitPrice = cellUnitPrice.getContents();\n\t\t\t\t\tstrUnitPrice= strUnitPrice.replaceAll(""\\\\$"", """");\n\t\t\t\t\tstrUnitPrice= strUnitPrice.replaceAll("" "", """");\n\t\t\t\t\tstrUnitPrice= strUnitPrice.replaceAll(""\\"""", """");\n\t\t\t\t\tif(strUnitPrice!=null && !strUnitPrice.equals("""")){\n\t\t\t\t\t\tint index=strUnitPrice.indexOf("","");\n\t\t\t\t\t\tif(index>=0){\n\t\t\t\t\t\t\tString strUnitPrice1=strUnitPrice.substring(0, index);\n\t\t\t\t\t\t\tString strUnitPrice2= strUnitPrice.substring(index+1, strUnitPrice.length());\n\t\t\t\t\t\t\tstrUnitPrice=strUnitPrice1+"".""+strUnitPrice2;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tunitPrice=null;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tunitPrice = Double.parseDouble(strUnitPrice);\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception pe) {\n\t\t\t\t\t\tunitPrice=null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tufDataDTO.setUnitPrice(unitPrice);\n\n\t\t\t\t//--------------- 8: clientNumber.\n\t\t\t\tif(COL_CLIENT_NUMBER>=0)cellClientNumber = sheetToRead.getCell(COL_CLIENT_NUMBER, row);\t\t\t\n\t\t\t\tif(cellClientNumber!=null)clientNumber = cellClientNumber.getContents();\n\t\t\t\tufDataDTO.setClientNumber(clientNumber);\n\n\t\t\t\t//--------------- 9: FirstName.\n\t\t\t\tif(COL_FIRST_NAME>=0)cellClientFirstName = sheetToRead.getCell(COL_FIRST_NAME, row);\t\t\t\n\t\t\t\tif(cellClientFirstName!=null)clientFirstName = cellClientFirstName.getContents();\n\t\t\t\tufDataDTO.setClientFirstName(clientFirstName);\n\n\t\t\t\t//--------------- 10: LastName.\n\t\t\t\tif(COL_LAST_NAME>=0)cellClientLastName = sheetToRead.getCell(COL_LAST_NAME, row);\t\t\t\n\t\t\t\tif(cellClientLastName!=null)clientLastName = cellClientLastName.getContents();\n\t\t\t\tufDataDTO.setClientLastName(clientLastName);\n\n\t\t\t\t//=========== special cases for clients ""AsiaMiles"" 29  ""VibeSMG"" 45================\n\t\t\t\tOrdersDTO orderDTO=new OrdersDTO();\n\t\t\t\tString[] elems;\n\t\t\t\tint option;\n\t\t\t\tint userId=Integer.parseInt(ufrDTO.getUserId().toString());\n\t\t\t\tString lsProductIdAsiaM=ufDataDTO.getProductDescription();\n\t\t\t\tString[] elemsLsProductId;\n\t\t\t\tswitch (userId) {\n\t\t\t\tcase 29: \n\t\t\t\t\t// split last name to client ""AsiaMiles"" to last and first name\n\t\t\t\t\tif(clientLastName!=null && !clientLastName.equals("""")){\n\t\t\t\t\t\torderDTO=new OrdersDTO();\n\t\t\t\t\t\torderDTO.setId(ufDataDTO.getUserId());\n\t\t\t\t\t\torderDTO.setClientLastName(clientLastName);\n\t\t\t\t\t\telems  = clientLastName.split(""\\\\s"");\n\t\t\t\t\t\toption=elems.length;\t\n\t\t\t\t\t\torderDTO=orderDTOSplitFirstLastName(orderDTO, option);\n\t\t\t\t\t\tclientFirstName=orderDTO.getClientFirstName();\n\t\t\t\t\t\tclientLastName=orderDTO.getClientLastName();\n\t\t\t\t\t\tufDataDTO.setClientFirstName(clientFirstName);\n\t\t\t\t\t\tufDataDTO.setClientLastName(clientLastName);\n\t\t\t\t\t}\n\t\t\t\t\t//recovery AsiaMiles's lsProductId \n\t\t\t\t\tString lsProductId="""";\n\t\t\t\t\tif(lsProductIdAsiaM!=null && !lsProductIdAsiaM.equals("""")){\n\t\t\t\t\t\t//lsProductIdAsiaM=lsProductIdAsiaM.replaceAll(""\\\\*"", ""_"");\n\t\t\t\t\t\telemsLsProductId=lsProductIdAsiaM.split(""\\\\*"");\n\t\t\t\t\t\tif(elemsLsProductId.length>1){\n\t\t\t\t\t\t\tlsProductId=elemsLsProductId[0];\n\t\t\t\t\t\t}/*else{\n\t\t\t\t\t\t\t\telemsLsProductId=lsProductIdAsiaM.split(""_"");\n\t\t\t\t\t\t\t\tif(elemsLsProductId.length!=0){\n\t\t\t\t\t\t\t\t\tlsProductId=elemsLsProductId[0];\n\t\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\t\telemsLsProductId=lsProductIdAsiaM.split(""-"");\n\t\t\t\t\t\t\t\t\tif(elemsLsProductId.length!=0)lsProductId=elemsLsProductId[0];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}*/\n\t\t\t\t\t}\n\t\t\t\t\tlsProductId=lsProductId.replaceAll("" "", """");\n\t\t\t\t\tufDataDTO.setLsProductID(lsProductId);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 45: // split last name of client ""VibeSMG"" to last and first name\n\t\t\t\t\tif(clientLastName!=null && !clientLastName.equals("""")){\n\t\t\t\t\t\torderDTO=new OrdersDTO();\n\t\t\t\t\t\torderDTO.setId(ufDataDTO.getUserId());\n\t\t\t\t\t\tclientLastName=""MR ""+clientLastName;\n\t\t\t\t\t\torderDTO.setClientLastName(clientLastName);\n\t\t\t\t\t\telems  = clientLastName.split(""\\\\s"");\n\t\t\t\t\t\toption=elems.length;\n\t\t\t\t\t\torderDTO=orderDTOSplitFirstLastName(orderDTO, option);\n\t\t\t\t\t\tclientFirstName=orderDTO.getClientFirstName();\n\t\t\t\t\t\tclientLastName=orderDTO.getClientLastName();\n\t\t\t\t\t\tufDataDTO.setClientFirstName(clientFirstName);\n\t\t\t\t\t\tufDataDTO.setClientLastName(clientLastName);\t\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\n\t\t\t\t//====================================================================================\n\t\t\t\t//--------------- 11: cellAddressStreet.\n\t\t\t\tif(COL_ADDRESSS_TREET>=0)cellClientStreet = sheetToRead.getCell(COL_ADDRESSS_TREET, row);\t\t\t\n\t\t\t\tif(cellClientStreet!=null)clientStreet = cellClientStreet.getContents();\n\t\t\t\tclientStreet=clientStreet.replaceAll("","", "" "");\n\t\t\t\tufDataDTO.setClientStreet(clientStreet);\n\n\t\t\t\t//--------------- 12: addressStreetOther.\n\t\t\t\tif(COL_ADDRESSS_TREET_OTHER>=0)cellClientOtherStreet = sheetToRead.getCell(COL_ADDRESSS_TREET_OTHER, row);\t\t\t\n\t\t\t\tif(cellClientOtherStreet!=null)clientOtherStreet = cellClientOtherStreet.getContents();\n\t\t\t\tclientOtherStreet=clientOtherStreet.replaceAll("","", "" "");\n\t\t\t\tufDataDTO.setClientOtherStreet(clientOtherStreet);\n\n\t\t\t\t//--------------- 13: addressCity.\n\t\t\t\tif(COL_ADDRESS_CITY>=0)cellClientCity = sheetToRead.getCell(COL_ADDRESS_CITY, row);\t\t\t\n\t\t\t\tif(cellClientCity!=null)clientCity = cellClientCity.getContents();\n\t\t\t\tufDataDTO.setClientCity(clientCity);\n\n\t\t\t\t//--------------- 14: addressPostalCode.\n\t\t\t\tif(COL_ADDRESS_POSTAL_CODE>=0)cellClientPostalCode = sheetToRead.getCell(COL_ADDRESS_POSTAL_CODE, row);\t\t\t\n\t\t\t\tif(cellClientPostalCode!=null)clientPostalCode = cellClientPostalCode.getContents();\n\t\t\t\tclientPostalCode=clientPostalCode.replaceAll("" "", """");\n\t\t\t\tufDataDTO.setClientPostalCode(clientPostalCode);\n\n\t\t\t\t//--------------- 15: addressState.\n\t\t\t\tif(COL_ADDRESS_STATE>=0)cellClientProvince = sheetToRead.getCell(COL_ADDRESS_STATE, row);\t\t\t\n\t\t\t\tif(cellClientProvince!=null)clientProvince = cellClientProvince.getContents();\n\n\t\t\t\tString clientProvinceToCompar=clientProvince.toLowerCase();\n\t\t\t\tclientProvinceToCompar=clientProvinceToCompar.replaceAll("" "", """");\n\t\t\t\tclientProvinceToCompar=clientProvinceToCompar.replaceAll(""canada"", """");\n\t\t\t\tclientProvinceToCompar=clientProvinceToCompar.replaceAll("","", """");\n\t\t\t\tclientProvinceToCompar=clientProvinceToCompar.replaceAll(""\\\\."", """");\n\t\t\t\tfor(ProvinceDTO prov:listProvine){\n\t\t\t\t\tString provName=prov.getName();\n\t\t\t\t\tprovName=provName.replaceAll("" "", """");\n\t\t\t\t\tprovName= provName.toLowerCase();\n\t\t\t\t\tif(clientProvinceToCompar.equals(provName) || clientProvinceToCompar.equals(prov.getCode()) ){\n\t\t\t\t\t\tclientProvince=\tprov.getCode();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t\tclientProvince=clientProvince.replaceAll(""\\\\."", """");\n\t\t\t\tif(clientProvinceToCompar.equals(""""))clientProvince="""";\n\t\t\t\tufDataDTO.setClientProvince(clientProvince);\n\n\t\t\t\t//--------------- 16: clientPhone.\n\t\t\t\tif(COL_CLIENT_PHONE>=0)cellClientPhone = sheetToRead.getCell(COL_CLIENT_PHONE, row);\t\t\t\n\t\t\t\tif(cellClientPhone!=null)clientPhone = cellClientPhone.getContents();\n\n\t\t\t\t//--------------- 17: clientPhoneZone.\n\t\t\t\tif(COL_CLIENT_PHONE_ZONE>=0)cellClientPhoneZone = sheetToRead.getCell(COL_CLIENT_PHONE_ZONE, row);\t\t\t\n\t\t\t\tif(cellClientPhoneZone!=null)clientPhoneZone = cellClientPhoneZone.getContents();\t\t\t\n\t\t\t\tif(clientPhoneZone!=null && clientPhoneZone!="""")clientPhone=clientPhoneZone+"" ""+clientPhone;\n\t\t\t\tufDataDTO.setClientPhone(clientPhone);\n\n\t\t\t\t//--------------- 18: clientEmail.\n\t\t\t\tif(COL_CLIENT_EMAIL>=0)cellClientEmail = sheetToRead.getCell(COL_CLIENT_EMAIL, row);\t\t\t\n\t\t\t\tif(cellClientEmail!=null)clientEmail = cellClientEmail.getContents();\n\t\t\t\tufDataDTO.setClientEmail(clientEmail);\n\n\t\t\t\t//--------------- 19:requiredDate -------------------------\n\t\t\t\tString strRequiredDate="""";\n\t\t\t\tif(COL_REQUIRE_DATE>=0)cellRequiredDate = sheetToRead.getCell(COL_REQUIRE_DATE, row);\t\t\t\n\t\t\t\tif(cellRequiredDate!=null){\n\t\t\t\t\tstrRequiredDate = cellRequiredDate.getContents();\n\t\t\t\t\tstrRequiredDate=strRequiredDate.replaceAll("" "", """");\n\t\t\t\t\tSimpleDateFormat sdf = new SimpleDateFormat(ufrDTO.getFormatDate());\n\t\t\t\t\ttry {\n\t\t\t\t\t\tDate date = sdf.parse(strRequiredDate);\n\t\t\t\t\t\trequiredDate=date;\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception pe) {\n\t\t\t\t\t\trequiredDate=null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tufDataDTO.setRequiredDate(requiredDate);\n\n\t\t\t\t//--------------- 20:clients_other_names ----------------\n\t\t\t\tclientOtherNames="""";\n\t\t\t\tif(COL_CLIENT_OTHER_NAMES>=0)cellClientOtherNames = sheetToRead.getCell(COL_CLIENT_OTHER_NAMES, row);\t\t\t\n\t\t\t\tif(cellClientOtherNames!=null)clientOtherNames = cellClientOtherNames.getContents();\n\t\t\t\tufDataDTO.setClientOtherNames(clientOtherNames);\n\n\t\t\t\t//--------------- 21:lsOrderId ------------------------\n\t\t\t\tString code=userLogin.substring(0, 2).toUpperCase();\n\t\t\t\tString lsOrderId=ufDataDTO.getProductOrderNumber();\n\n\t\t\t\tint inc=0;//increment\n\t\t\t\tString lsOrderIdParent=lsOrderId;\n\t\t\t\tlsOrderIdParent=lsOrderIdParent.replaceFirst(""-"", """");\n\t\t\t\tlsOrderIdParent=lsOrderIdParent.replaceFirst(""_"", """");\n\t\t\t\tlsOrderIdParent=lsOrderIdParent.replaceFirst(""R"", """");\n\t\t\t\tlsOrderIdParent=lsOrderIdParent.replaceAll("" "", """");\n\t\t\t\tif(lsOrderIdParent.length()>14){\n\t\t\t\t\tint index=lsOrderIdParent.length()-14;\n\t\t\t\t\tlsOrderIdParent=lsOrderIdParent.substring(index, lsOrderIdParent.length());\n\t\t\t\t}\n\n\t\t\t\t//lsOrderIdParent=code+""O""+ufDataDTO.getUserId()+lsOrderIdParent;\n\t\t\t\tString lsOrderIdToGenerate=code+""O""+ufDataDTO.getUserId()+lsOrderIdParent;;\n\t\t\t\twhile(isLsOrderIdUsed(lsOrderIdToGenerate) || lsOrdersIdHash.containsKey(lsOrderIdToGenerate)){\n\t\t\t\t\tinc++; \n\t\t\t\t\tlsOrderIdToGenerate=code+""O""+ufDataDTO.getUserId()+lsOrderIdParent+""R""+inc;\n\t\t\t\t}\n\t\t\t\tlsOrdersIdHash.put(lsOrderIdToGenerate, lsOrderIdToGenerate);\n\t\t\t\tufDataDTO.setLsOrderId(lsOrderIdToGenerate);\n\n\t\t\t\t//--------------- 22:shipping company -------------------\n\t\t\t\tshippingCompany="""";\n\t\t\t\tif(SHIPPING_COMPANY>=0)cellShippingCompany = sheetToRead.getCell(SHIPPING_COMPANY, row);\t\t\t\n\t\t\t\tif(cellShippingCompany!=null)shippingCompany = cellShippingCompany.getContents();\n\t\t\t\tufDataDTO.setShippingCompany(shippingCompany);\n\n\t\t\t\t//--------------- 23:Notes -------------------\n\t\t\t\tnotes="""";\n\t\t\t\tif(NOTES>=0)cellNotes = sheetToRead.getCell(NOTES, row);\t\t\t\n\t\t\t\tif(cellNotes!=null)notes = cellNotes.getContents();\n\t\t\t\tufDataDTO.setNotes(notes);\n\n\t\t\t\tufDataDTO.setCreationDate(new Date());\n\n\t\t\t\t//--------------- 24: ClientProductNumber.\n\t\t\t\tif(COL_CLIENT_PRODUCT_NUMBER>=0)cellClientProductNumber = sheetToRead.getCell(COL_CLIENT_PRODUCT_NUMBER, row);\t\t\t\n\t\t\t\tif(cellClientProductNumber!=null)clientProductNumber = cellClientProductNumber.getContents();\n\t\t\t\tufDataDTO.setClientProductNumber(clientProductNumber);\n\n\t\t\t\t//--------------- 25: cellClientOtherId.\n\t\t\t\tif(COL_CLIENT_OTHER_ID>=0)cellClientOtherId = sheetToRead.getCell(COL_CLIENT_OTHER_ID, row);\t\t\t\n\t\t\t\tif(cellClientOtherId!=null)clientOtherId = cellClientOtherId.getContents();\n\t\t\t\tufDataDTO.setClientOtherId(clientOtherId);\n\t\t\t\tif(ufDataDTO.getProductOrderNumber()!=null && !ufDataDTO.getProductOrderNumber().equals(""""))listOrderDTO.add(ufDataDTO);\n\t\t\t}\n\t\t\t//} catch (Exception x) {\n\t\t\t//\tx.printStackTrace();\n\t\t\t//}\n\t\t}\n\t\treturn listOrderDTO;\n\n\t}\n\n\n\t/**----------------------------------------------------------\n\t \tcheck if the LsOrderId is already in use\n\t  -----------------------------------------------------------*/\t\n\t@SuppressWarnings(""unused"")\n\t@Override\n\tpublic boolean isLsOrderIdUsed(final String lsOrderId){\n\t\tboolean result=false;\t\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresult = (Boolean) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().isLsOrderIdUsed(lsOrderId);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry {\n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**----------------------------------------------------------\n\t *GET HASHtABLE WITH HIERARCHICAL (ORDER<->ROWS)\n\t \t OF ORDERS FROM LIST OF USER FILE RECOVERY*\n\t  -----------------------------------------------------------*/\t\n\t@SuppressWarnings(""unused"")\n\t@Override\n\tpublic Hashtable<String, OrdersDTO> getHashOrdersFromUserDataRecovery(Long userId,ArrayList<UserFileDataRecoveryDTO> list)\n\tthrows ServiceException {\n\t\tHashtable<String, OrdersDTO> result=new Hashtable<String, OrdersDTO>();\n\n\t\ttry {\n\t\t\tproductService = serviceLocator.getProductService(); \n\t\t\tuserService= serviceLocator.getUserService();\n\t\t} catch (ServiceLocatorException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\n\t\tfor(UserFileDataRecoveryDTO orDTO: list){\n\t\t\tOrdersDTO ordDTOCheck=result.get(orDTO.getLsOrderId());\n\t\t\tString lsProductID=orDTO.getLsProductID();\n\t\t\tString providedLsProductId=orDTO.getLsProductID();\n\t\t\t//String clientProductNumber=lsProductID;\n\t\t\t//ProductDTO pDTO=hashProductDTO.get(lsProductID);\n\t\t\tlsProductID=lsProductID.replaceAll("" "", """");\n\t\t\t//ProductDTO pDTO=productService.getProductByLsProductId(lsProductID);\n\t\t\tUserProductPriceDTO pDTO=productService.getUsrPPriceByLsproductId(userId, lsProductID);\n\t\t\tif(pDTO==null){\n\t\t\t\tint index=lsProductID.indexOf(""-"");\n\t\t\t\tif(index==-1)index=lsProductID.indexOf("" "");\n\t\t\t\tif(index<=2)lsProductID=lsProductID.substring(index+1, lsProductID.length());\n\t\t\t\t//pDTO=productService.getProductByLsProductId(lsProductID);\n\t\t\t\tpDTO=productService.getUsrPPriceByLsproductId(userId, lsProductID);\n\t\t\t}\n\t\t\tif(pDTO==null){\n\t\t\t\tint index=lsProductID.indexOf(""_"");\n\t\t\t\tif(index==-1)index=lsProductID.indexOf("" "");\n\t\t\t\tif(index<=2)lsProductID=lsProductID.substring(index+1, lsProductID.length());\n\t\t\t\t//pDTO=productService.getProductByLsProductId(lsProductID);\n\t\t\t\tpDTO=productService.getUsrPPriceByLsproductId(userId, lsProductID);\n\t\t\t}\n\t\t\tUserDTO uDTO=userService.getUserInformation(userId);\n\t\t\tString userLogin=""anonymous"";\n\t\t\tif(uDTO!=null)userLogin=uDTO.getLogin();\n\t\t\tif(ordDTOCheck==null){\n\t\t\t\tOrdersDTO ordDTOToAdd=new OrdersDTO();\n\t\t\t\tordDTOToAdd=DTOFactory.getOrderDTOFromUserDataRecovery(userId,orDTO);\n\t\t\t\tordDTOToAdd.setUserLogin(userLogin);\n\t\t\t\t//ordDTOToAdd.setClientProductNumber(clientProductNumber);\n\t\t\t\tOrdersRows ordRow=ordDTOToAdd.getRowsList().get(0);\n\t\t\t\tif(ordRow!=null){\n\t\t\t\t\tordRow.setLsProductID(lsProductID);\n\t\t\t\t\tif(pDTO!=null){\n\t\t\t\t\t\t//ordRow.setProductId(pDTO.getId());\n\t\t\t\t\t\tordRow.setProductId(pDTO.getProductId());\n\t\t\t\t\t\t//if client is ""AsiaMiles"" then unitPrice=cost\n\t\t\t\t\t\tString strUserId=userId.toString();\n\t\t\t\t\t\tint intUserId=Integer.parseInt(strUserId);\n\t\t\t\t\t\tswitch (intUserId) {\n\t\t\t\t\t\tcase 29:\n\t\t\t\t\t\t\tif(pDTO.getPrice()!=null && !pDTO.getPrice().equals("""")){\n\t\t\t\t\t\t\t\tString strProductPrice=pDTO.getPrice();\n\t\t\t\t\t\t\t\tint index=strProductPrice.indexOf("","");\n\t\t\t\t\t\t\t\tif(index>=0){\n\t\t\t\t\t\t\t\t\tString strProductPrice1=strProductPrice.substring(0, index);\n\t\t\t\t\t\t\t\t\tString strProductPrice2= strProductPrice.substring(index+1, strProductPrice.length());\n\t\t\t\t\t\t\t\t\tstrProductPrice=strProductPrice1+"".""+strProductPrice2;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tDouble productPrice=null;\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tproductPrice = Double.parseDouble(strProductPrice);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcatch (Exception pe) {\n\t\t\t\t\t\t\t\t\tproductPrice=null;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tordRow.setUnitPrice(productPrice);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tordRow.setUnitPrice(orDTO.getUnitPrice());\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//ordRow.setUnitPrice(orDTO.getUnitPrice());\n\t\t\t\t\t\tordRow.setRequiredDate(orDTO.getRequiredDate());\n\t\t\t\t\t\tordRow.setShippingCompany(orDTO.getShippingCompany());\n\t\t\t\t\t\t//ordRow.setClientProductNumber(clientProductNumber);\n\t\t\t\t\t\tordRow.setClientProductNumber(orDTO.getClientProductNumber());\n\t\t\t\t\t\tordRow.setStock(pDTO.getStock());\n\t\t\t\t\t}else{\n\t\t\t\t\t\tordRow.setProductId(null);\n\t\t\t\t\t\tordRow.setUnitPrice(null);\n\t\t\t\t\t\tordRow.setRequiredDate(null);\n\t\t\t\t\t\tordRow.setShippingCompany(null);\n\t\t\t\t\t\t//ordRow.setClientProductNumber(clientProductNumber);\n\t\t\t\t\t\tordRow.setClientProductNumber(orDTO.getClientProductNumber());\n\t\t\t\t\t\tordRow.setStock(null);\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t\tresult.put(orDTO.getLsOrderId(), ordDTOToAdd);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**----------------------------------------------------------\n\t *GET HASHtABLE FROM LIST ORDERS DTO*\n\t  -----------------------------------------------------------*/\t\n\t@Override\n\tpublic Hashtable<String, OrdersDTO> getHashOrdersDTOFromListOrdersDTO(List<OrdersDTO> list)\n\tthrows ServiceException {\n\t\tHashtable<String, OrdersDTO> result=new Hashtable<String, OrdersDTO>();\n\n\t\tfor(OrdersDTO orDTO: list){\n\t\t\tresult.put(orDTO.getLsOrderId(), orDTO);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**----------------------------------------------------------\n\t *SAVING ORDERS WITH THERE ROWS IN DATABASE*\n\t  -----------------------------------------------------------*/\t\n\t@SuppressWarnings(""unchecked"")\n\t@Override\n\tpublic List<OrdersDTO> insertListOrders(List<OrdersDTO> listOrdersDTO)throws Exception {\n\t\tList<OrdersDTO> listOrdersDTOResult=null;\n\t\tList<Orders> result=null;\n\t\tfinal List<Orders>listOrders=DTOFactory.getListOrdersFromListOrdersDTO(listOrdersDTO);\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresult = (List<Orders>) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().insertListOrders(listOrders);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry {\n\t\t\t\tthrow new Exception(de);\n\t\t\t} catch (Exception e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\tlistOrdersDTOResult=DTOFactory.getListOrderDTOFromListOrder(result);\n\t\treturn listOrdersDTOResult;\n\t}\n\n\n\t/**----------------------------------------------------------\n\t *INSERT INVOICED ORDER IN DATABASES*\n\t  -----------------------------------------------------------*/\t\n\n\t@Override\n\tpublic boolean insertInvoicedOrder(OrdersDTO orderDTO){\n\t\tboolean result=false;\n\t\tfinal Orders order=DTOFactory.getOrderFromOrderDTO(orderDTO);\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresult = (Boolean) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().insertInvoicedOrder(order);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry {\n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**----------------------------------------------------------\n\t *INSERT ORDERS IF ARE EXISTING IN DATABASE*\n\t  -----------------------------------------------------------*/\t\n\t@Override\n\tpublic boolean insertListOrdersIfNotExist(List<OrdersDTO> listOrdersDTO){\n\t\tboolean result=false;\n\t\tfinal List<Orders>listOrders=DTOFactory.getListOrdersFromListOrdersDTO(listOrdersDTO);\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresult = (Boolean) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().insertListOrdersIfNotExist(listOrders);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry {\n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\t// TODO Auto-generated catch block\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**----------------------------------------------------------\n\t *INSERT ORDER WHITH ROW*\n\t  -----------------------------------------------------------*/\t\n\t@Override\n\tpublic boolean insertOrderWithRows(OrdersDTO orderDTO) {\n\t\tboolean result=false;\n\t\tfinal Orders order=DTOFactory.getOrderFromOrderDTO(orderDTO);\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresult = (Boolean) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().insertOrderWithRows(order);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry {\n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**----------------------------------------------------------\n\t *MAKE ORDER IN PROGRESS*\n\t  -----------------------------------------------------------*/\t\n\t@Override\n\tpublic boolean makeOrderInProgress(OrdersDTO orderDTO){\n\t\tboolean result=false;\n\t\tfinal Orders order=new Orders();\n\t\torder.setLsOrderId(orderDTO.getLsOrderId());\n\t\torder.setSpecialHandlingName(orderDTO.getSpecialHandlingName());\n\t\torder.setSpecialHandlingFee(orderDTO.getSpecialHandlingFee());\n\t\torder.setTotalPrice(orderDTO.getTotalPrice());\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresult = (Boolean) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().makeOrderInProgress(order);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry {\n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\t// TODO Auto-generated catch block\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**----------------------------------------------------------\n\t *GET ORDER DTO BY LS_ORDER_ID*\n\t  -----------------------------------------------------------*/\t\n\t@Override\n\tpublic OrdersDTO getOrderDTOByLsOrderId(final String lsOrderId)\n\tthrows ServiceException { \n\n\t\tOrders order=null;\t\n\t\tOrdersDTO result=null;\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\torder = (Orders) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().getOrderByLsOrderId(lsOrderId);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry {\n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\tif(order!=null)result=DTOFactory.getOrderDTOFromOrder(order);\n\t\treturn result;\n\n\t}\n\n\t/**----------------------------------------------------------\n\t *IF FOUND ANY ORDER DUPLICATE RETURN TRUE*\n\t  -----------------------------------------------------------*/\t\n\t@Override\n\tpublic boolean isThereDuplicate(List<OrdersDTO> listOrdersDTO){\n\t\tboolean result=false;\n\t\tif(listOrdersDTO!=null){\n\t\t\tfor(OrdersDTO orderDTO:listOrdersDTO){\n\t\t\t\tif(orderDTO.getDuplicate()!=null && orderDTO.getDuplicate()==true){\n\t\t\t\t\tresult=true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**----------------------------------------------------------\n\t *GET ORDER DTO BY ProductOrderNumber*\n\t  -----------------------------------------------------------*/\t\n\t@SuppressWarnings(""unchecked"")\n\t@Override\n\tpublic List<OrdersDTO> getListOrdersByPONumber(final List<OrdersDTO> listOrdersDTO){ \n\t\tfinal List<Orders>listOrders=DTOFactory.getListOrdersFromListOrdersDTO(listOrdersDTO);\n\t\tList<Orders>resultList=null;\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresultList= (List<Orders>) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().getListOrdersByPONumber(listOrders);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry {\n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\tList<ProvinceDTO> listProvinces;\n\t\tHashtable<String, ProvinceDTO> hashProvinces=new Hashtable<String, ProvinceDTO>(); \n\n\t\ttry {\n\t\t\tproductService = serviceLocator.getProductService(); \n\t\t\tuserService= serviceLocator.getUserService();\n\t\t\tlistProvinces = productService.getAllProvinces();\n\t\t\tfor(ProvinceDTO provinceDTO:listProvinces){\n\t\t\t\thashProvinces.put(provinceDTO.getCode(), provinceDTO);\n\t\t\t}\n\t\t} catch (Exception e) {\n\t\t\t// TODO Auto-generated catch block\n\t\t\te.printStackTrace();\n\t\t}\n\t\treturn DTOFactory.getListOrderDTOFromListOrderSorted(resultList,hashProvinces);\n\n\t}\n\n\t\n\t@SuppressWarnings(""unchecked"")\n\t@Override\n\tpublic List<OrdersDTO> getOrdersItemsExistInDB(final List<OrdersDTO> listOrdersDTO){ \n\t\tfinal List<Orders>listOrders=DTOFactory.getListOrdersFromListOrdersDTO(listOrdersDTO);\n\t\tList<Orders>resultList=null;\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresultList= (List<Orders>) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().getOrdersItemsExistInDB(listOrders);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry {\n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn DTOFactory.getListOrderDTOFromListOrder(resultList);\n\t}\n\t\n\t/**----------------------------------------------------------\n\t *CHECK IF ANY ORDERS IS ALREADY EXISTE IN DATABASE*\n\t  -----------------------------------------------------------*/\n\t@Override\n\tpublic boolean isExistAnyLsOrderIdInDB(List<OrdersDTO>listOrdersDTO){\n\t\tboolean result=false;\n\t\t//List<OrdersDTO>resultListOrdersDTO=getListOrdersByPONumber(listOrdersDTO);\n\t\tList<OrdersDTO>resultListOrdersDTO=getOrdersItemsExistInDB(listOrdersDTO);\n\t\tif(resultListOrdersDTO!=null && resultListOrdersDTO.size()>0)result=true;\n\t\treturn result;\n\t}\n\n\t/**----------------------------------------------------------\n\t *CALCULATE NUMBER OF ORDERS WHICH HAVE NOT PLANNED\n\t \t TO DALETE*\n\t  -----------------------------------------------------------*/\n\t@Override\n\tpublic Integer nbOrderRowsNotDeleted(List<OrdersRows>listOrdersRows){\n\t\tint result=0;\n\t\tif(listOrdersRows!=null){\n\t\t\tfor(OrdersRows orderR:listOrdersRows){\n\t\t\t\tif(orderR.getToDelete()==0)result++;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**----------------------------------------------------------\n\t *CALCULATING THE NUMBER OF ORDERS IN LIST WHICH HAVE \n\t \t NOT REGISTERED IN DATABASE*\n\t  -----------------------------------------------------------*/\n\t@Override\n\tpublic Long nbOrdersNotSavedInDB(List<OrdersDTO>listOrders){\n\t\tlong result=0L;\n\t\tif(listOrders!=null){\n\t\t\tfor(OrdersDTO orderDTO:listOrders){\n\t\t\t\ttry {\n\t\t\t\t\tString productOrderNumber=orderDTO.getProductOrderNumber();\n\t\t\t\t\tLong userId=orderDTO.getUserId();\n\t\t\t\t\tLong count= getCountOrderByPONumber(productOrderNumber, userId);\n\t\t\t\t\tif(count==0){\n\t\t\t\t\t\tresult++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} catch (Exception e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**----------------------------------------------------------\n\t *GET CountOrderByPONumber*\n  \t   -----------------------------------------------------------*/\t\n\t@Override\n\tpublic Long getCountOrderByPONumber(final String productOrderNumber, final Long userId){ \n\t\tLong count=0L;\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tcount = (Long) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().getCountOrderByPONumber(productOrderNumber, userId);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry {\n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn count;\n\n\t}\n\n\t/**----------------------------------------------------------\n\t *GENERATE LS_ORDER_ID FOR ORDER DUPLICATED*\n\t  -----------------------------------------------------------*/\n\t@Override\n\tpublic String generateLsOrderId(String lsOrder,Hashtable<String, OrdersDTO>hashOrders){\n\t\tString result=lsOrder;\n\t\tString resultSub=lsOrder;\n\t\tint index=result.indexOf(""_"");\n\t\tif(index>=1)resultSub=result.substring(0,index);\n\t\tint NB=1;\n\t\tString ext=""_"";\n\t\tresult=resultSub+ext+NB;\n\t\twhile(hashOrders.containsKey(result)){\n\t\t\tNB++;\n\t\t\tresult=resultSub+ext+NB;\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**----------------------------------------------------------\n\t *GENERATE LS_ORDER_ID FOR MANUAL ORDERS*\n\t  -----------------------------------------------------------*/\n\n\t@Override\n\tpublic String generateManLsOrderId(final String lsOrderFirstPart) throws ServiceException {  \n\t\tHashtable<String, String>lsOrdersIdHash=new Hashtable<String, String>();\n\t\tList<Orders>listOrders=getAllOrders();\n\t\tif(listOrders!=null){\n\t\t\tfor(Orders ord:listOrders){\n\t\t\t\tlsOrdersIdHash.put(ord.getLsOrderId(), ord.getLsOrderId());\n\t\t\t}\n\t\t}\n\t\tint inc=0;//increment\n\t\tString lsOrderIdToGenerate=lsOrderFirstPart;;\n\t\twhile(lsOrdersIdHash.containsKey(lsOrderIdToGenerate)){\n\t\t\tinc++; \n\t\t\tlsOrderIdToGenerate=lsOrderFirstPart+""R""+inc;\n\t\t}\n\t\treturn lsOrderIdToGenerate;\n\t}\n\n\t/**----------------------------------------------------------\n\t *GET LIST ORDERS BY DATE, CLIENT AND LIKE LSORDER_ID*\n\t  -----------------------------------------------------------*/\n\t@SuppressWarnings(""unchecked"")\n\t@Override\n\tpublic List<OrdersDTO> getOrdersByDateClientLikeLsOrderId(final Date creationDate, final String userLogin, final String lsOrderId,String status){\n\t\tList<Orders> result=null;\n\t\tList<Orders> resultCleaned=new ArrayList<Orders>();\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresult = (List<Orders>) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().getOrdersByDateClientLikeLsOrderId(creationDate, userLogin,lsOrderId);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry {\n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\tif(result!=null){\n\t\t\tfor(Orders ord:result){\n\t\t\t\tArrayList<OrdersRows>listR=getRowsByLsOrderIdLikeStatus(ord.getLsOrderId(),status,0);\n\t\t\t\tord.setRowsList(listR);\n\t\t\t\tif(listR!=null && listR.size()>0)resultCleaned.add(ord);\n\t\t\t}\n\t\t}\n\t\treturn DTOFactory.getListOrderDTOFromListOrder(resultCleaned);\n\t}\n\n\t/**----------------------------------------------------------\n\t *SEARCH ORDERS BY OPTIONS*\n\t  -----------------------------------------------------------*/\t\n\t@SuppressWarnings(""unchecked"")\n\t@Override\n\tpublic List<OrdersDTO> searchOrdersWithOptions(final Date creationDateStart,final Date creationDateEnd, final String userLogin, final String lsOrderId,String status){\n\t\tList<Orders> result=null;\n\t\tList<Orders> resultCleaned=new ArrayList<Orders>();\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresult = (List<Orders>) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().searchOrdersWithOptions(creationDateStart,creationDateEnd, userLogin,lsOrderId);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry {\n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) { \n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\tif(result!=null){\n\t\t\tfor(Orders ord:result){\n\t\t\t\tArrayList<OrdersRows>listR=getRowsByLsOrderIdLikeStatus(ord.getLsOrderId(),status,0);\n\t\t\t\tord.setRowsList(listR);\n\t\t\t\tif(listR!=null && listR.size()>0)resultCleaned.add(ord);\n\t\t\t}\n\t\t}\n\t\treturn DTOFactory.getListOrderDTOFromListOrder(resultCleaned);\n\t}\n\n\t/**----------------------------------------------------------\n\t *SEARCH ORDERS BY OPTIONS AND SORTING*\n\t  -----------------------------------------------------------*/\n\t@SuppressWarnings(""unchecked"")\n\t@Override\n\tpublic List<OrdersDTO> searchOrdersWithOptionsAndSorting(final Date creationDateStart,final Date creationDateEnd,final Integer factorDateBetween,\n\t\t\tfinal String userLogin, final String lsOrderId,final String status,\n\t\t\tfinal List<Integer>listIndexColumn,final Integer PAGE_ITEMS_COUNT,final Integer indexSet){\n\t\tList<Orders> result=null;\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresult = (List<Orders>) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().searchOrdersWithOptionsAndSorting(creationDateStart, creationDateEnd,factorDateBetween,userLogin, lsOrderId, status, listIndexColumn,PAGE_ITEMS_COUNT,indexSet);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry {\n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) { \n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\tList<ProvinceDTO> listProvinces;\n\t\tHashtable<String, ProvinceDTO> hashProvinces=new Hashtable<String, ProvinceDTO>(); \n\t\ttry {\n\t\t\tproductService = serviceLocator.getProductService(); \n\t\t\tuserService= serviceLocator.getUserService();\n\t\t\tlistProvinces = productService.getAllProvinces();\n\t\t\tfor(ProvinceDTO provinceDTO:listProvinces){\n\t\t\t\thashProvinces.put(provinceDTO.getCode(), provinceDTO);\n\t\t\t}\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t}\n\n\t\tif(result!=null) {\n\t\t\tfor(Orders order: result) {\n\t\t\t\tif(order.getCurrencyId()!=null && order.getCurrencyRate()!=null) {\n\t\t\t\t\tif(order.getLsPrice()!=null) {\n\t\t\t\t\t\tDouble currencyPrice = order.getLsPrice()*order.getCurrencyRate();\n\t\t\t\t\t\tcurrencyPrice = (double) Math.round(currencyPrice*100) / 100;\n\t\t\t\t\t\torder.setCurrencyPrice(currencyPrice);\n\t\t\t\t\t}\n\t\t\t\t\tif(order.getUnitPrice()!=null) {\n\t\t\t\t\t\tDouble currencyUnitPrice = order.getUnitPrice()*order.getCurrencyRate();\n\t\t\t\t\t\tcurrencyUnitPrice = (double) Math.round(currencyUnitPrice*100) / 100;\n\t\t\t\t\t\torder.setCurrencyUnitPrice(currencyUnitPrice);\n\t\t\t\t\t}\n\t\t\t\t\t/*\n\t\t\t\t\tif(order.getShippingPrice()!=null) {\n\t\t\t\t\t\tDouble currencyShippingPrice = order.getShippingPrice()*order.getCurrencyRate();\n\t\t\t\t\t\tcurrencyShippingPrice = (double) Math.round(currencyShippingPrice*100) / 100;\n\t\t\t\t\t\torder.setCurrencyShippingPrice(currencyShippingPrice);\n\t\t\t\t\t}\n\t\t\t\t\t*/\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn DTOFactory.getListOrderDTOFromListOrderSorted(result,hashProvinces);\n\t}\n\n\n\t/**----------------------------------------------------------\n\t *SEARCH INVOICED ORDERS BY OPTIONS AND SORTING*\n\t  -----------------------------------------------------------*/\n\t@SuppressWarnings(""unchecked"")\n\t@Override\n\tpublic List<OrdersDTO> searchInvoicedWithSorting(final Date creationDateStart,final Date creationDateEnd,final Integer factorDateBetween,final String userLogin, final String lsOrderId,final String status,final List<Integer>listIndexColumn,final int PAGE_ITEMS_COUNT,final int indexSet){\n\t\tList<Orders> result=null;\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresult = (List<Orders>) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().searchInvoicedWithSorting(creationDateStart, creationDateEnd,factorDateBetween,userLogin, lsOrderId, status, listIndexColumn,PAGE_ITEMS_COUNT,indexSet);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry {\n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) { \n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\tList<ProvinceDTO> listProvinces;\n\t\tHashtable<String, ProvinceDTO> hashProvinces=new Hashtable<String, ProvinceDTO>(); \n\t\ttry {\n\t\t\tproductService = serviceLocator.getProductService(); \n\t\t\tuserService= serviceLocator.getUserService();\n\t\t\tlistProvinces = productService.getAllProvinces();\n\t\t\tfor(ProvinceDTO provinceDTO:listProvinces){\n\t\t\t\thashProvinces.put(provinceDTO.getCode(), provinceDTO);\n\t\t\t}\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t\t\n\t\tif(result!=null) {\n\t\t\tfor(Orders order: result) {\n\t\t\t\tif(order.getCurrencyId()!=null && order.getCurrencyRate()!=null) {\n\t\t\t\t\tif(order.getLsPrice()!=null) {\n\t\t\t\t\t\tDouble currencyPrice = order.getLsPrice()*order.getCurrencyRate();\n\t\t\t\t\t\tcurrencyPrice = (double) Math.round(currencyPrice*100) / 100;\n\t\t\t\t\t\torder.setCurrencyPrice(currencyPrice);\n\t\t\t\t\t}\n\t\t\t\t\tif(order.getUnitPrice()!=null) {\n\t\t\t\t\t\tDouble currencyUnitPrice = order.getUnitPrice()*order.getCurrencyRate();\n\t\t\t\t\t\tcurrencyUnitPrice = (double) Math.round(currencyUnitPrice*100) / 100;\n\t\t\t\t\t\torder.setCurrencyUnitPrice(currencyUnitPrice);\n\t\t\t\t\t}\n\t\t\t\t\t/*\n\t\t\t\t\tif(order.getShippingPrice()!=null) {\n\t\t\t\t\t\tDouble currencyShippingPrice = order.getShippingPrice()*order.getCurrencyRate();\n\t\t\t\t\t\tcurrencyShippingPrice = (double) Math.round(currencyShippingPrice*100) / 100;\n\t\t\t\t\t\torder.setCurrencyShippingPrice(currencyShippingPrice);\n\t\t\t\t\t}\n\t\t\t\t\t*/\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn DTOFactory.getListOrderDTOFromListOrderSorted(result,hashProvinces);\n\t}\n\n\n\t/**----------------------------------------------------------\n\t *GET LIST ROWS BY LSORDER_ID LIKE STATUS*\n\t  -----------------------------------------------------------*/\n\t@SuppressWarnings(""unchecked"")\n\t@Override\n\tpublic ArrayList<OrdersRows> getRowsByLsOrderIdLikeStatus(final String lsOrderId, final String status,final Integer sort){\n\t\tArrayList<OrdersRows> result=null;\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresult = (ArrayList<OrdersRows>) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().getRowsByLsOrderIdLikeStatus(lsOrderId, status,sort);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry {\n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**----------------------------------------------------------\n\t *UPDATE ORDERS ROWS BY LIKE LSORDER_ID, DATE, STATUS, CLIENT*\n\t  -----------------------------------------------------------*/\n\t@SuppressWarnings(""unchecked"")\n\t@Override\n\tpublic ArrayList<OrdersRows> getRowsByLsOrderIdLikeStatusSorted(final String lsOrderId, final String status,final Integer sort){\n\t\tArrayList<OrdersRows> result=null;\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresult = (ArrayList<OrdersRows>) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().getRowsByLsOrderIdLikeStatusSorted(lsOrderId, status,sort);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry {\n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**----------------------------------------------------------\n\t *UPDATE ORDER BY LSORDER_ID*\n\t  -----------------------------------------------------------*/\n\t@Override\n\tpublic boolean updateOrderByLsOrderId(OrdersDTO orderDTO){\n\t\tboolean result=false;\n\t\tfinal Orders order=DTOFactory.getOrderFromOrderDTO(orderDTO);\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresult = (Boolean) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().updateOrderByLsOrderId(order);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry {\n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\n\t/**----------------------------------------------------------\n\t *UPDATE ROW ORDER SHIPPING ELEMENTS(NOTES,SHIPPING_COMPANY, TRACKING_NUMBER) BY LSORDER_ID*\n\t  -----------------------------------------------------------*/\n\t@Override\n\tpublic boolean updateShippingOrderElements(OrdersDTO orderDTO){\n\t\tboolean result=false;\n\t\tfinal Orders order=DTOFactory.getOrderFromOrderDTO(orderDTO);\n\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresult = (Boolean) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().updateShippingOrderElements(order);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry {\n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\n\n\n\t/**----------------------------------------------------------\n\t *UPDATE ROW ORDER SHIPPING ELEMENTS(NOTES,SHIPPING_COMPANY, TRACKING_NUMBER) BY LSORDER_ID*\n\t  -----------------------------------------------------------*/\n\t@Override\n\tpublic boolean updateShippingInvoicedOrder(OrdersDTO orderDTO){\n\t\tboolean result=false;\n\t\tfinal Orders order=DTOFactory.getOrderFromOrderDTO(orderDTO);\n\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresult = (Boolean) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().updateShippingInvoicedOrder(order);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry {\n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\n\t@Override\n\tpublic boolean updateQuantityOrderByLsOrderId(OrdersDTO orderDTO){\n\t\tboolean result=false;\n\t\tfinal Orders order=DTOFactory.getOrderFromOrderDTO(orderDTO);\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresult = (Boolean) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().updateQuantityOrderByLsOrderId(order);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry {\n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\n\t@Override\n\tpublic boolean updateStatusByLsOrderId(final String lsOrderId,final String status){\n\t\tboolean result=false;\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresult = (Boolean) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().updateStatusByLsOrderId(lsOrderId,status);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry {\n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\n\t@Override\n\tpublic boolean deleteOrderByLsOrderId(OrdersDTO orderDTO){\n\t\tfinal Orders order =DTOFactory.getOrderFromOrderDTO(orderDTO);\n\t\tboolean result=false;\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresult = (Boolean) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().deleteOrderByLsOrderId(order);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry {\n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\t/**----------------------------------------------------------\n\t *GET ORDER ROW BY ID ROW*\n\t  -----------------------------------------------------------*/\n\t@Override\n\tpublic OrdersRows getRowsByRowId(final Long rowId){\n\t\tOrdersRows result=null;\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresult = (OrdersRows) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().getRowsByRowId(rowId);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry { \n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn result;\t\n\t}\n\n\n\n\t/**----------------------------------------------------------\n\t *GET ROW ORDER  BY lsOrderId*\n\t  -----------------------------------------------------------*/\n\t@Override\n\tpublic OrdersRows getRowByLsOrderId(final String lsOrderId){\n\t\tOrdersRows result=null;\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresult = (OrdersRows) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().getRowByLsOrderId(lsOrderId);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry { \n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn result;\t\n\t}\n\n\t/**----------------------------------------------------------\n\t *CHANGE STATUS OF ROW ORDER TO SHIPPED IN DATABASE*\n\t  -----------------------------------------------------------*/\n\t@Override\n\tpublic boolean makeRowOrderInShippedById(final OrdersRows orderRow){\n\t\tboolean result=false;\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresult = (Boolean) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().makeRowOrderInShippedById(orderRow);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry { \n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn result;\t\n\t}\n\n\t/**----------------------------------------------------------\n\t *CHANGE STATUS OF ROW ORDER TO OPEN*\n\t  -----------------------------------------------------------*/\n\t@Override\n\tpublic boolean makeRowOrderInOpenById(final OrdersRows orderRow){\n\t\tboolean result=false;\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresult = (Boolean) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().makeRowOrderInOpenById(orderRow);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry { \n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn result;\t\n\t}\n\n\t/**----------------------------------------------------------\n\t *CHECK IF PRODUCT ALREADY EXIST IN TABLE STOCK*\n\t  -----------------------------------------------------------*/\n\t@Override\n\tpublic boolean isExistProductInStock(ProductDTO productDTO){\n\t\tboolean result=false;\n\t\tfinal Product product=new Product();\n\t\tproduct.setId(productDTO.getId());\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresult = (Boolean) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().isExistProductInStock(product);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry { \n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn result;\t\n\t}\n\n\t/**----------------------------------------------------------\n\t *INSERT PRODUCT IN TABLE STOCK WHITH QANTITY STOCK*\n\t  -----------------------------------------------------------*/\n\t/*@Override\n\tpublic boolean insertProductInStock(ProductDTO productDTO){\n\t\tboolean result=false;\n\t\tfinal Product product=new Product();\n\t\tproduct.setId(productDTO.getId());\n\t\tproduct.setStock(productDTO.getStock());\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresult = (Boolean) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().insertProductInStock(product);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry { \n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn result;\t\n\t}*/\n\n\t/**----------------------------------------------------------\n\t *CREATE XLS FILE FROM THE LIST ORDERS*\n\t  -----------------------------------------------------------*/\n\t@Override\n\tpublic void generateAdminXLS(List<OrdersDTO> listOrdersDTO,String ordersAdminTemplateFolder,Long allOrdersSelected){\n\t\tfinal String sheetName = ""Sheet1"";\n\t\tfinal int ROW_TO_BEGIN=1;\n\t\t//COLUMNS NUMBER if(allOrdersSelectedSignal==null || allOrdersSelectedSignal==0L)\n\t\tfinal int COL_LS_ORDER_ID=1,\n\t\tCOL_PO_NUMBER=2,\n\t\tCOL_CLIENT_NUMBER=3,\n\t\tCOL_CLIENT_ORDER_ID=4,\n\t\tCOL_CLIENT_OTHER_ID=5,\n\t\tCOL_USER_LOGIN=6,\n\t\tCOL_LS_PRODUCT_ID=7,\n\t\tCOL_CLIENT_PRODUCT_NUMBER=8,\n\t\tCOL_P_DESCRIPTION=9,\n\t\tCOL_QUANTITY=10,\n\t\tCOL_UNIT_PRICE=11,\n\t\tCOL_LS_PRICE=12,\n\t\tCOL_TRACKING_NUMBER=13,\n\t\tCOL_STATUS=14,\n\t\tCO_STOCK=15,\n\t\tCOL_CLIENT_FIRST_NAME=16,\n\t\tCOL_CLIENT_LAST_NAME=17,\n\t\tCOL_CLIENT_OTHER_NAMES=18,\n\t\tCOL_CLIENT_STREET=19,\n\t\tCOL_CLIENT_OTHER_STREET=20,\n\t\tCOL_CLIENT_CITY=21,\n\t\tCOL_CLIENT_PROVINCE=22,\n\t\tCOL_CLIENT_POSTAL_CODE=23,\n\t\tCOL_CLIENT_PHONE=24,\n\t\tCOL_CLIENT_EMAIL=25;\n\t\t//COLUMNS Data\n\t\tString LS_ORDER_ID=null;\n\t\tString PO_NUMBER="""";\n\t\tString CLIENT_NUMBER="""";\n\t\tString CLIENT_ORDER_ID="""";\n\t\tString CLIENT_OTHER_ID="""";\n\t\tString LS_PRODUCT_ID="""";\n\t\tString CLIENT_PRODUCT_NUMBER="""";\n\t\tDouble QUANTITY=0D;\n\t\tString P_DESCRIPTION="""";\n\t\tDouble UNIT_PRICE=0D;\n\t\tDouble LS_PRICE=0D;\n\t\tString TRACKING_NUMBER="""";\n\t\tString STATUS="""";\n\t\tDouble STOCK=0D;\n\t\tString USER_LOGIN="""";\n\t\tString CLIENT_FIRST_NAME="""";\n\t\tString CLIENT_LAST_NAME="""";\n\t\tString CLIENT_OTHER_NAMES="""";\n\t\tString CLIENT_STREET="""";\n\t\tString CLIENT_OTHER_ADRESS="""";\n\t\tString CLIENT_CITY="""";\n\t\tString CLIENT_PROVINCE="""";\n\t\tString CLIENT_POSTAL_CODE="""";\n\t\tString CLIENT_PHONE="""";\n\t\tString CLIENT_EMAIL="""";\n\t\tint row = 0;\n\t\ttry {\n\t\t\tWorkbook existingWorkbook = Workbook.getWorkbook(new File(ordersAdminTemplateFolder+""ordersAdminTemplate.xls""));\n\t\t\tWritableWorkbook workbookCopy = Workbook.createWorkbook(new File(ordersAdminTemplateFolder+""ordersAdminExport.xls""), existingWorkbook);\n\t\t\tWritableSheet sheetToEdit = workbookCopy.getSheet(sheetName);\n\n\t\t\tint heightInPoints = 27*27;\n\n\n\t\t\t// Create cell font and format\n\t\t\t/* WritableFont cellFont = new WritableFont(WritableFont.TIMES, 12);\n\t    cellFont.setColour(Colour.BLACK);\n\t    WritableCellFormat cellFormat = new WritableCellFormat(cellFont);\n\t    cellFormat.setBackground(Colour.ORANGE);\n\t    cellFormat.setVerticalAlignment(VerticalAlignment.CENTRE);\n\t    cellFormat.setBorder(Border.ALL, BorderLineStyle.THIN);*/\n\n\t\t\t// Create cell font and format\n\t\t\tWritableFont cellFont = new WritableFont(WritableFont.TIMES, 12);\n\t\t\tcellFont.setColour(Colour.BLACK);\n\n\t\t\tWritableCellFormat cellFormatAlert = new WritableCellFormat(cellFont);\n\t\t\t//cellFormatOrange.setBackground(Colour.ORANGE);\n\t\t\tcellFormatAlert.setBackground(Colour.ORANGE);\n\t\t\tcellFormatAlert.setVerticalAlignment(VerticalAlignment.CENTRE);\n\t\t\tcellFormatAlert.setAlignment(Alignment.CENTRE);\n\t\t\tcellFormatAlert.setWrap(true);\n\t\t\tcellFormatAlert.setBorder(Border.ALL, BorderLineStyle.THIN);\n\n\t\t\tWritableCellFormat cellFormatNormal = new WritableCellFormat(cellFont);\n\t\t\t//cellFormatOrange.setBackground(Colour.ORANGE);\n\t\t\tcellFormatNormal.setBackground(Colour.LIGHT_TURQUOISE);\n\t\t\tcellFormatNormal.setVerticalAlignment(VerticalAlignment.CENTRE);\n\t\t\tcellFormatNormal.setAlignment(Alignment.CENTRE);\n\t\t\tcellFormatNormal.setWrap(true);\n\t\t\tcellFormatNormal.setBorder(Border.ALL, BorderLineStyle.THIN);\n\n\t\t\t//WritableFont cellFont = new WritableFont(WritableFont.TIMES, 12);\n\t\t\tcellFont.setColour(Colour.BLACK);\n\t\t\tWritableCellFormat cellFormatWhite = new WritableCellFormat(cellFont);\n\t\t\tcellFormatWhite.setBackground(Colour.WHITE);\n\t\t\tcellFormatWhite.setVerticalAlignment(VerticalAlignment.CENTRE);\n\t\t\tcellFormatWhite.setAlignment(Alignment.CENTRE);\n\t\t\tcellFormatWhite.setWrap(true);\n\t\t\tcellFormatWhite.setBorder(Border.ALL, BorderLineStyle.THIN);\n\t\t\tWritableCellFormat cellFormat=null;\n\n\t\t\tWritableCell cellROW_ID=null;\n\t\t\tWritableCell cellCLIENT_FIRST_NAME=null;\n\t\t\tWritableCell cellCLIENT_LAST_NAME=null;\n\t\t\tWritableCell cellCLIENT_OTHER_NAMES=null;\n\t\t\tWritableCell cellCLIENT_STREET=null;\n\t\t\tWritableCell cellCLIENT_OTHER_ADRESS=null;\n\t\t\tWritableCell cellCLIENT_CITY=null;\n\t\t\tWritableCell cellCLIENT_PROVINCE=null;\n\t\t\tWritableCell cellCLIENT_POSTAL_CODE=null;\n\t\t\tWritableCell cellCLIENT_PHONE=null;\n\t\t\tWritableCell cellCLIENT_EMAIL=null;\n\t\t\tWritableCell cellLS_PRODUCT_ID=null;\n\t\t\tWritableCell cellQUANTITY=null;\n\t\t\tWritableCell cellUNIT_PRICE=null;\n\t\t\tWritableCell cellLS_PRICE=null;\n\t\t\tWritableCell cellSTATUS=null;\n\t\t\tWritableCell cellSTOCK=null;\n\t\t\tWritableCell cellUSER_LOGIN=null;\n\t\t\tWritableCell cellP_DESCRIPTION=null;\n\t\t\tWritableCell cellPO_NUMBER=null;\n\t\t\tWritableCell cellCLIENT_NUMBER=null;\n\t\t\tWritableCell cellCLIENT_PRODUCT_NUMBER=null;\n\t\t\tWritableCell cellTRACKING_NUMBER=null;\n\t\t\tWritableCell cellCLIENT_ORDER_ID=null;\n\t\t\tWritableCell cellCLIENT_OTHER_ID=null;\n\t\t\t//LABELS\n\t\t\tLabel labelROW_ID=null,\n\t\t\tlabelCLIENT_FIRST_NAME=null,\n\t\t\tlabelCLIENT_LAST_NAME=null,\n\t\t\tlabelCLIENT_OTHER_NAMES=null,\n\t\t\tlabelCLIENT_STREET=null,\n\t\t\tlabelCLIENT_OTHER_ADRESS=null,\n\t\t\tlabelCLIENT_CITY=null,\n\t\t\tlabelCLIENT_PROVINCE=null,\n\t\t\tlabelCLIENT_POSTAL_CODE=null,\n\t\t\tlabelCLIENT_PHONE=null,\n\t\t\tlabelCLIENT_EMAIL=null,\n\t\t\tlabelLS_PRODUCT_ID=null,\n\t\t\tlabelQUANTITY=null,\n\t\t\tlabelUNIT_PRICE=null,\n\t\t\tlabelLS_PRICE=null,\n\t\t\tlabelSTATUS=null,\n\t\t\tlabelSTOCK=null,\n\t\t\tlabelUSER_LOGIN=null,\n\t\t\tlabelP_DESCRIPTION=null,\n\t\t\tlabelPO_NUMBER=null,\n\t\t\tlabelCLIENT_NUMBER=null,\n\t\t\tlabelCLIENT_PRODUCT_NUMBER=null,\n\t\t\tlabelTRACKING_NUMBER=null,\n\t\t\tlabelCLIENT_ORDER_ID=null,\n\t\t\tlabelCLIENT_OTHER_ID=null;\n\n\t\t\t//START FROM ROW_TO_BEGIN\n\t\t\trow = ROW_TO_BEGIN;\n\t\t\tint orderIndex=0;\n\t\t\tint pair=0;\n\t\t\tList<OrdersDTO>listOrdersDTOFilter=new ArrayList<OrdersDTO>();\n\t\t\tif(allOrdersSelected==null || allOrdersSelected==0L){\n\t\t\t\tfor (OrdersDTO ordDTO : listOrdersDTO){\n\t\t\t\tif(ordDTO.getPrint())listOrdersDTOFilter.add(ordDTO);\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tlistOrdersDTOFilter=listOrdersDTO;\n\t\t\t}\n\t\t\tfor (OrdersDTO orderDTO : listOrdersDTOFilter) {\n\n\t\t\t\torderIndex++;\n\t\t\t\tpair=orderIndex%2;\n\t\t\t\tswitch (pair) {\n\t\t\t\tcase 0:\n\t\t\t\t\tcellFormat=cellFormatWhite;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 1:\n\t\t\t\t\tcellFormat=cellFormatNormal;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tLS_ORDER_ID="""";\n\t\t\t\tPO_NUMBER="""";\n\t\t\t\tCLIENT_NUMBER="""";\n\t\t\t\tLS_PRODUCT_ID="""";\n\t\t\t\tCLIENT_PRODUCT_NUMBER="""";\n\t\t\t\tQUANTITY=0D;\n\t\t\t\tP_DESCRIPTION="""";\n\t\t\t\tUNIT_PRICE=0D;\n\t\t\t\tLS_PRICE=0D;\n\t\t\t\tTRACKING_NUMBER="""";\n\t\t\t\tSTATUS="""";\n\t\t\t\tSTOCK=null;\n\t\t\t\tUSER_LOGIN="""";\n\t\t\t\tCLIENT_FIRST_NAME="""";\n\t\t\t\tCLIENT_LAST_NAME="""";\n\t\t\t\tCLIENT_OTHER_NAMES="""";\n\t\t\t\tCLIENT_STREET="""";\n\t\t\t\tCLIENT_OTHER_ADRESS="""";\n\t\t\t\tCLIENT_CITY="""";\n\t\t\t\tCLIENT_PROVINCE="""";\n\t\t\t\tCLIENT_POSTAL_CODE="""";\n\t\t\t\tCLIENT_PHONE="""";\n\t\t\t\tCLIENT_EMAIL="""";\n\n\t\t\t\t// 1: LS_ORDER_ID (must be lest than 35 letters)\n\t\t\t\tif (orderDTO.getLsOrderId() != null)LS_ORDER_ID = orderDTO.getLsOrderId();\n\t\t\t\tlabelROW_ID = new Label(COL_LS_ORDER_ID-1, row, LS_ORDER_ID,cellFormat);\n\t\t\t\tcellROW_ID = (WritableCell) labelROW_ID;\n\t\t\t\tsheetToEdit.addCell(cellROW_ID);\n\n\t\t\t\t// 2: COL_PO_NUMBER\n\t\t\t\tif (orderDTO.getProductOrderNumber() != null)PO_NUMBER = orderDTO.getProductOrderNumber();\n\t\t\t\tlabelPO_NUMBER = new Label(COL_PO_NUMBER-1, row, PO_NUMBER,cellFormat);\n\t\t\t\tcellPO_NUMBER = (WritableCell)labelPO_NUMBER;\n\t\t\t\tsheetToEdit.addCell(cellPO_NUMBER);\n\n\t\t\t\t// 3: COL_CLIENT_NUMBER\n\t\t\t\tif (orderDTO.getClientNumber() != null)CLIENT_NUMBER = orderDTO.getClientNumber();\n\t\t\t\tlabelCLIENT_NUMBER = new Label(COL_CLIENT_NUMBER-1, row, CLIENT_NUMBER,cellFormat);\n\t\t\t\tcellCLIENT_NUMBER = (WritableCell)labelCLIENT_NUMBER;\n\t\t\t\tsheetToEdit.addCell(cellCLIENT_NUMBER);\n\n\t\t\t\t// 4: CLIENT_ORDER_ID\n\t\t\t\tif (orderDTO.getClientOrderNumber() == null)orderDTO.setClientOrderNumber("""");\n\t\t\t\tCLIENT_ORDER_ID = orderDTO.getClientOrderNumber();\n\t\t\t\tlabelCLIENT_ORDER_ID = new Label(COL_CLIENT_ORDER_ID-1, row, CLIENT_ORDER_ID,cellFormat);\n\t\t\t\tcellCLIENT_ORDER_ID = (WritableCell) labelCLIENT_ORDER_ID;\n\t\t\t\tsheetToEdit.addCell(cellCLIENT_ORDER_ID);\n\n\t\t\t\t// 5: CLIENT_OTHER_ID\n\t\t\t\tif (orderDTO.getClientOtherId()!= null)\tCLIENT_OTHER_ID = orderDTO.getClientOtherId();\n\t\t\t\tlabelCLIENT_OTHER_ID = new Label(COL_CLIENT_OTHER_ID-1, row, CLIENT_OTHER_ID,cellFormat);\n\t\t\t\tcellCLIENT_OTHER_ID = (WritableCell) labelCLIENT_OTHER_ID;\n\t\t\t\tsheetToEdit.addCell(cellCLIENT_OTHER_ID);\n\n\t\t\t\t// 6: PARTNER NAME (must be lest than 30 letters)\n\t\t\t\tif (orderDTO.getUserLogin() != null)USER_LOGIN = orderDTO.getUserLogin();\n\t\t\t\tif( USER_LOGIN.length()>30 || USER_LOGIN.equals("""") ){\n\t\t\t\t\tlabelUSER_LOGIN = new Label(COL_USER_LOGIN-1, row, USER_LOGIN,cellFormatAlert);\n\t\t\t\t}else{\n\t\t\t\t\tlabelUSER_LOGIN = new Label(COL_USER_LOGIN-1, row, USER_LOGIN,cellFormat);\n\t\t\t\t}\n\t\t\t\tcellUSER_LOGIN = (WritableCell) labelUSER_LOGIN;\n\t\t\t\tsheetToEdit.addCell(cellUSER_LOGIN);\n\n\t\t\t\t// 7: LS_PRODUCT_ID (must be lest than 30 letters)\n\t\t\t\tif (orderDTO.getLsProductID() != null)LS_PRODUCT_ID = orderDTO.getLsProductID();\n\t\t\t\tlabelLS_PRODUCT_ID = new Label(COL_LS_PRODUCT_ID-1, row, LS_PRODUCT_ID,cellFormat);\n\t\t\t\tcellLS_PRODUCT_ID = (WritableCell) labelLS_PRODUCT_ID;\n\t\t\t\tsheetToEdit.addCell(cellLS_PRODUCT_ID);\n\n\t\t\t\t// 8: COL_CLIENT_PRODUCT_NUMBER\n\t\t\t\tif (orderDTO.getClientProductNumber()!= null)CLIENT_PRODUCT_NUMBER = orderDTO.getClientProductNumber();\n\t\t\t\tlabelCLIENT_PRODUCT_NUMBER = new Label(COL_CLIENT_PRODUCT_NUMBER-1, row, CLIENT_PRODUCT_NUMBER,cellFormat);\n\t\t\t\tcellCLIENT_PRODUCT_NUMBER = (WritableCell)labelCLIENT_PRODUCT_NUMBER;\n\t\t\t\tsheetToEdit.addCell(cellCLIENT_PRODUCT_NUMBER);\n\n\t\t\t\t// 9: DESCRIPTION\n\t\t\t\tif (orderDTO.getProductDescription() != null)P_DESCRIPTION = orderDTO.getProductDescription();\n\t\t\t\tlabelP_DESCRIPTION = new Label(COL_P_DESCRIPTION-1, row, P_DESCRIPTION,cellFormat);\n\t\t\t\tcellP_DESCRIPTION = (WritableCell) labelP_DESCRIPTION;\n\t\t\t\tsheetToEdit.addCell(cellP_DESCRIPTION);\n\n\t\t\t\t// 10: QANTITY\n\t\t\t\tif (orderDTO.getQuantity() != null)QUANTITY = orderDTO.getQuantity();\n\t\t\t\tString strQUANTITY=QUANTITY.toString();\n\t\t\t\tlabelQUANTITY = new Label(COL_QUANTITY-1, row, strQUANTITY,cellFormat);\n\t\t\t\tcellQUANTITY = (WritableCell) labelQUANTITY;\n\t\t\t\tsheetToEdit.addCell(cellQUANTITY);\n\n\t\t\t\t// 11: UNIT_PRICE\n\t\t\t\tif (orderDTO.getUnitPrice() != null)UNIT_PRICE = orderDTO.getUnitPrice();\n\t\t\t\tString strUNIT_PRICE=UNIT_PRICE.toString();\n\t\t\t\tlabelUNIT_PRICE = new Label(COL_UNIT_PRICE-1, row, strUNIT_PRICE,cellFormat);\n\t\t\t\tcellUNIT_PRICE = (WritableCell) labelUNIT_PRICE;\n\t\t\t\tsheetToEdit.addCell(cellUNIT_PRICE);\n\n\t\t\t\t// 12: LS_PRICE\n\t\t\t\tif (orderDTO.getLsPrice() != null)LS_PRICE = orderDTO.getLsPrice();\n\t\t\t\tString strLS_PRICE=LS_PRICE.toString();\n\t\t\t\tlabelLS_PRICE = new Label(COL_LS_PRICE-1, row, strLS_PRICE,cellFormat);\n\t\t\t\tcellLS_PRICE = (WritableCell) labelLS_PRICE;\n\t\t\t\tsheetToEdit.addCell(cellLS_PRICE);\n\n\t\t\t\t// 13:COL_TRACKING_NUMBER\n\t\t\t\tif (orderDTO.getTrackingNumber()!= null)TRACKING_NUMBER = orderDTO.getTrackingNumber();\n\t\t\t\tlabelTRACKING_NUMBER = new Label(COL_TRACKING_NUMBER-1, row, TRACKING_NUMBER,cellFormat);\n\t\t\t\tcellTRACKING_NUMBER = (WritableCell)labelTRACKING_NUMBER;\n\t\t\t\tsheetToEdit.addCell(cellTRACKING_NUMBER);\n\n\t\t\t\t// 14: STATUS\n\t\t\t\tif (orderDTO.getStatus() != null)STATUS = orderDTO.getStatus();\n\t\t\t\tlabelSTATUS = new Label(COL_STATUS-1, row, STATUS,cellFormat);\n\t\t\t\tcellSTATUS = (WritableCell) labelSTATUS;\n\t\t\t\tsheetToEdit.addCell(cellSTATUS);\n\n\t\t\t\t// 15: STOCK \n\t\t\t\tif (orderDTO.getStock() != null)STOCK = orderDTO.getStock();\n\t\t\t\tString strSTOCK=STOCK.toString();\n\t\t\t\tlabelSTOCK = new Label(CO_STOCK-1, row, strSTOCK,cellFormat);\n\t\t\t\tcellSTOCK = (WritableCell) labelSTOCK;\n\t\t\t\tsheetToEdit.addCell(cellSTOCK);\n\n\t\t\t\t// 16: CLIENT_FIRST_NAME (must be lest than 30 letters)\n\t\t\t\tif (orderDTO.getClientFirstName() != null)CLIENT_FIRST_NAME = orderDTO.getClientFirstName();\n\t\t\t\tif(CLIENT_FIRST_NAME ==null || CLIENT_FIRST_NAME.length()>30 || CLIENT_FIRST_NAME.equals("""")){\n\t\t\t\t\tlabelCLIENT_FIRST_NAME = new Label(COL_CLIENT_FIRST_NAME-1, row, CLIENT_FIRST_NAME,cellFormatAlert);\n\t\t\t\t}else{\n\t\t\t\t\tlabelCLIENT_FIRST_NAME = new Label(COL_CLIENT_FIRST_NAME-1, row, CLIENT_FIRST_NAME,cellFormat);\n\t\t\t\t}\n\t\t\t\tcellCLIENT_FIRST_NAME = (WritableCell) labelCLIENT_FIRST_NAME;\n\t\t\t\tsheetToEdit.addCell(cellCLIENT_FIRST_NAME);\n\n\t\t\t\t// 17: CLIENT_LAST_NAME (must be lest than 40 letters)\n\t\t\t\tif (orderDTO.getClientLastName() != null)CLIENT_LAST_NAME = orderDTO.getClientLastName();\n\t\t\t\tif(CLIENT_LAST_NAME==null || CLIENT_LAST_NAME.length()>40 || CLIENT_LAST_NAME.equals("""")){\n\t\t\t\t\tlabelCLIENT_LAST_NAME = new Label(COL_CLIENT_LAST_NAME-1, row, CLIENT_LAST_NAME,cellFormatAlert);\n\t\t\t\t}else{\n\t\t\t\t\tlabelCLIENT_LAST_NAME = new Label(COL_CLIENT_LAST_NAME-1, row, CLIENT_LAST_NAME,cellFormat);\n\t\t\t\t}\n\t\t\t\tcellCLIENT_LAST_NAME = (WritableCell) labelCLIENT_LAST_NAME;\n\t\t\t\tsheetToEdit.addCell(cellCLIENT_LAST_NAME);\n\n\t\t\t\t// 18: CLIENT_OTHER_NAMES (must be lest than 15 letters)\n\t\t\t\tif (orderDTO.getClientOtherNames() != null)CLIENT_OTHER_NAMES = orderDTO.getClientOtherNames();\n\t\t\t\tlabelCLIENT_OTHER_NAMES = new Label(COL_CLIENT_OTHER_NAMES-1, row, CLIENT_OTHER_NAMES,cellFormat);\n\t\t\t\tcellCLIENT_OTHER_NAMES = (WritableCell) labelCLIENT_OTHER_NAMES;\n\t\t\t\tsheetToEdit.addCell(cellCLIENT_OTHER_NAMES);\n\n\t\t\t\t// 19: CLIENT_STREET (must be lest than 44 letters)\n\t\t\t\tif (orderDTO.getClientStreet() != null)CLIENT_STREET = orderDTO.getClientStreet();\n\t\t\t\tif(CLIENT_STREET==null || CLIENT_STREET.length()>44 || CLIENT_STREET.equals("""")){\n\t\t\t\t\tlabelCLIENT_STREET = new Label(COL_CLIENT_STREET-1, row, CLIENT_STREET,cellFormatAlert);\n\t\t\t\t}else{\n\t\t\t\t\tlabelCLIENT_STREET = new Label(COL_CLIENT_STREET-1, row, CLIENT_STREET,cellFormat);\n\t\t\t\t}\n\t\t\t\tcellCLIENT_STREET = (WritableCell) labelCLIENT_STREET;\n\t\t\t\tsheetToEdit.addCell(cellCLIENT_STREET);\n\n\t\t\t\t// 20: CLIENT_OTHER_STREET (must be lest than 44 letters)\n\t\t\t\tif (orderDTO.getClientOtherStreet()!= null)CLIENT_OTHER_ADRESS = orderDTO.getClientOtherStreet();\n\t\t\t\tif(CLIENT_OTHER_ADRESS.length()>44){\n\t\t\t\t\tlabelCLIENT_OTHER_ADRESS = new Label(COL_CLIENT_OTHER_STREET-1, row, CLIENT_OTHER_ADRESS,cellFormatAlert);\n\t\t\t\t}else{\n\t\t\t\t\tlabelCLIENT_OTHER_ADRESS = new Label(COL_CLIENT_OTHER_STREET-1, row, CLIENT_OTHER_ADRESS,cellFormat);\n\t\t\t\t}\n\t\t\t\tcellCLIENT_OTHER_ADRESS = (WritableCell) labelCLIENT_OTHER_ADRESS;\n\t\t\t\tsheetToEdit.addCell(cellCLIENT_OTHER_ADRESS);\n\n\t\t\t\t// 21: CLIENT_CITY (must be lest than 25 letters)\n\t\t\t\tif (orderDTO.getClientCity()!= null && orderDTO.getClientCity().length()<=25)CLIENT_CITY = orderDTO.getClientCity();\n\t\t\t\tif(CLIENT_CITY.length()>25 || CLIENT_CITY.equals("""") ){\n\t\t\t\t\tlabelCLIENT_CITY = new Label(COL_CLIENT_CITY-1, row, CLIENT_CITY,cellFormatAlert);\n\t\t\t\t}else{\n\t\t\t\t\tlabelCLIENT_CITY = new Label(COL_CLIENT_CITY-1, row, CLIENT_CITY,cellFormat);\n\t\t\t\t}\n\t\t\t\tcellCLIENT_CITY = (WritableCell) labelCLIENT_CITY;\n\t\t\t\tsheetToEdit.addCell(cellCLIENT_CITY);\n\n\t\t\t\t// 22: CLIENT_PROVINCE (must be lest than 2 letters)\n\t\t\t\tif (orderDTO.getClientProvince()!= null)CLIENT_PROVINCE = orderDTO.getClientProvince();\n\t\t\t\tif(CLIENT_PROVINCE.length()>2 || CLIENT_PROVINCE.equals("""") || (orderDTO.getProvinceNotFound()!=null && orderDTO.getProvinceNotFound()==1L)){\n\t\t\t\t\tlabelCLIENT_PROVINCE = new Label(COL_CLIENT_PROVINCE-1, row, CLIENT_PROVINCE,cellFormatAlert);\n\t\t\t\t}else{\n\t\t\t\t\tlabelCLIENT_PROVINCE = new Label(COL_CLIENT_PROVINCE-1, row, CLIENT_PROVINCE,cellFormat);\n\t\t\t\t}\n\t\t\t\tcellCLIENT_PROVINCE = (WritableCell) labelCLIENT_PROVINCE;\n\t\t\t\tsheetToEdit.addCell(cellCLIENT_PROVINCE);\n\n\t\t\t\t// 23: CLIENT_POSTAL_CODE (must be lest than 14 letters)\n\t\t\t\tif (orderDTO.getClientPostalCode()!= null && orderDTO.getClientPostalCode().length()<=14)CLIENT_POSTAL_CODE = orderDTO.getClientPostalCode();\n\t\t\t\tif(CLIENT_POSTAL_CODE.length()>14 || CLIENT_POSTAL_CODE.equals("""")){\n\t\t\t\t\tlabelCLIENT_POSTAL_CODE = new Label(COL_CLIENT_POSTAL_CODE-1, row, CLIENT_POSTAL_CODE,cellFormatAlert);\n\t\t\t\t}else{\n\t\t\t\t\tlabelCLIENT_POSTAL_CODE = new Label(COL_CLIENT_POSTAL_CODE-1, row,CLIENT_POSTAL_CODE,cellFormat);\n\t\t\t\t}\n\t\t\t\tcellCLIENT_POSTAL_CODE = (WritableCell) labelCLIENT_POSTAL_CODE;\n\t\t\t\tsheetToEdit.addCell(cellCLIENT_POSTAL_CODE);\n\n\t\t\t\t// 24: CLIENT_PHONE (must be lest than 25 letters)\n\t\t\t\tif (orderDTO.getClientPhone()!= null)CLIENT_PHONE = orderDTO.getClientPhone();\n\t\t\t\tif(CLIENT_PHONE.length()>25){\n\t\t\t\t\tlabelCLIENT_PHONE = new Label(COL_CLIENT_PHONE-1, row, CLIENT_PHONE,cellFormatAlert);\n\t\t\t\t}else{\n\t\t\t\t\tlabelCLIENT_PHONE = new Label(COL_CLIENT_PHONE-1, row, CLIENT_PHONE,cellFormat);\n\t\t\t\t}\n\t\t\t\tcellCLIENT_PHONE = (WritableCell) labelCLIENT_PHONE;\n\t\t\t\tsheetToEdit.addCell(cellCLIENT_PHONE);\n\n\t\t\t\t// 25: CLIENT_EMAIL (must be lest than 60 letters)\n\t\t\t\tif (orderDTO.getClientEmail()!= null)CLIENT_EMAIL = orderDTO.getClientEmail();\n\t\t\t\tif(CLIENT_EMAIL.length()>60){\n\t\t\t\t\tlabelCLIENT_EMAIL = new Label(COL_CLIENT_EMAIL-1, row, CLIENT_EMAIL,cellFormatAlert);\n\t\t\t\t}else{\n\t\t\t\t\tlabelCLIENT_EMAIL = new Label(COL_CLIENT_EMAIL-1, row, CLIENT_EMAIL,cellFormat);\n\t\t\t\t}\n\t\t\t\tcellCLIENT_EMAIL = (WritableCell) labelCLIENT_EMAIL;\n\t\t\t\tsheetToEdit.addCell(cellCLIENT_EMAIL);\n\n\t\t\t\t//change height row 32px\n\t\t\t\tsheetToEdit.setRowView(row,heightInPoints);\n\t\t\t\t++row;\n\t\t\t}\n\t\t\tworkbookCopy.write();\n\t\t\tworkbookCopy.close();\n\t\t\texistingWorkbook.close();\n\n\t\t} catch (Exception x) {\n\t\t\tx.printStackTrace();\n\t\t}\n\t}\n\n\n\t\n\t\n\n\n\t/**----------------------------------------------------------\n\t *CREATE XLS FILE FROM THE ETA LIST ORDERS*\n\t  -----------------------------------------------------------*/\n\t@Override\n\tpublic void generateEtaXLS(List<OrdersDTO> listOrdersDTO,String ordersEtaTemplateFolder)throws Exception{\n\t\tfinal String sheetName = ""Sheet1"";\n\t\tfinal int ROW_TO_BEGIN=1;\n\t\tfinal int COL_ETA_FIELD_VALUE=1;\n\t\tfinal int COL_ETA_SHIPPING_INFO=2;\n\t\t//COLUMNS Data\n\t\tString ETA_FIELD_VALUE=null;\n\t\tString ETA_SHIPPING_INFO=null;\n\t\tint row = 0;\n\t\ttry {\n\t\t\n\t\t\tWorkbook existingWorkbook = Workbook.getWorkbook(new File(ordersEtaTemplateFolder+""etaTemplate.xls""));\n\t\t\tWritableWorkbook workbookCopy = Workbook.createWorkbook(new File(ordersEtaTemplateFolder+""etaReport.xls""), existingWorkbook);\n\t\t\tWritableSheet sheetToEdit = workbookCopy.getSheet(sheetName);\n\n\n\t\t\tint heightInPoints = 27*27;\n\n\t\t\t// Create cell font and format\n\t\t\tWritableFont cellFont = new WritableFont(WritableFont.TIMES, 12);\n\t\t\tcellFont.setColour(Colour.BLACK);\n\t\t\t//change style to bold\n\t\t\tWritableFont cellBoldFont = new WritableFont(WritableFont.TIMES, 12);\n\t\t\tcellBoldFont.setColour(Colour.BLACK);\n\t\t\tcellBoldFont.setBoldStyle(WritableFont.BOLD);\n\t\t\t//change style to red color\n\t\t\tWritableFont cellRedFont = new WritableFont(WritableFont.TIMES, 12);\n\t\t\tcellRedFont.setColour(Colour.RED);\n\t\t\tcellRedFont.setBoldStyle(WritableFont.BOLD);\n\t\t\t\n\t\t\t//color row this orange if not exist PO\n\t\t\tWritableCellFormat cellFormatAlert = new WritableCellFormat(cellFont);\n\t\t\tcellFormatAlert.setBackground(Colour.ORANGE);\n\t\t\tcellFormatAlert.setVerticalAlignment(VerticalAlignment.CENTRE);\n\t\t\tcellFormatAlert.setAlignment(Alignment.CENTRE);\n\t\t\tcellFormatAlert.setWrap(true);\n\t\t\tcellFormatAlert.setBorder(Border.ALL, BorderLineStyle.THIN);\n\t\t\t\n\t\t\t//color row with blue color\n\t\t\tWritableCellFormat cellFormatNormal = new WritableCellFormat(cellFont);\n\t\t\tcellFormatNormal.setBackground(Colour.LIGHT_TURQUOISE);\n\t\t\tcellFormatNormal.setVerticalAlignment(VerticalAlignment.CENTRE);\n\t\t\tcellFormatNormal.setAlignment(Alignment.CENTRE);\n\t\t\tcellFormatNormal.setWrap(true);\n\t\t\tcellFormatNormal.setBorder(Border.ALL, BorderLineStyle.THIN);\n\t\t\t//white color for row\n\t\t\tcellFont.setColour(Colour.BLACK);\n\t\t\tWritableCellFormat cellFormatWhite = new WritableCellFormat(cellFont);\n\t\t\tcellFormatWhite.setBackground(Colour.WHITE);\n\t\t\tcellFormatWhite.setVerticalAlignment(VerticalAlignment.CENTRE);\n\t\t\tcellFormatWhite.setAlignment(Alignment.CENTRE);\n\t\t\tcellFormatWhite.setWrap(true);\n\t\t\tcellFormatWhite.setBorder(Border.ALL, BorderLineStyle.THIN);\n\t\t\tWritableCellFormat cellFormat=null;\n\n\t\t\tWritableCell cellETA_FIELD_VALUE=null;\n\t\t\tWritableCell cellETA_SHIPPING_INFO=null;\n\t\t\t//LABELS\n\t\t\tLabel labelETA_FIELD_VALUE=null;\n\t\t\tLabel labelETA_SHIPPING_INFO=null;\n\t\t\t\n\t\t\t//START FROM ROW_TO_BEGIN\n\t\t\trow = ROW_TO_BEGIN;\n\t\t\tint orderIndex=0;\n\t\t\tint pair=0;\n\t\t\t//List<OrdersDTO>listOrdersDTOFilter=new ArrayList<OrdersDTO>();\n\n\t\t\tfor (OrdersDTO orderDTO : listOrdersDTO) {\n\n\t\t\t\torderIndex++;\n\t\t\t\tpair=orderIndex%2;\n\t\t\t\tswitch (pair) {\n\t\t\t\tcase 0:\n\t\t\t\t\tcellFormat=cellFormatWhite;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 1:\n\t\t\t\t\tcellFormat=cellFormatNormal;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif(orderDTO.getNotation()!=null && !orderDTO.getNotation().equals("""")){\n\t\t\t\t\tint notation=Integer.parseInt(orderDTO.getNotation());\n\t\t\t\t\tif(notation==0){ //order not found\n\t\t\t\t\t\tcellFormat.setFont(cellRedFont);\n\t\t\t\t\t}else if(notation>1){//exist more than\n\t\t\t\t\t\tcellFormat.setFont(cellBoldFont);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\tETA_FIELD_VALUE="""";\n\t\t\t\tETA_SHIPPING_INFO="""";\n\t\t\t\t\n\t\t\t\t//--------------- COL_ETA_FIELD_VALUE ---------------\n\t\t\t\tif (orderDTO.getEtaFieldValue() != null)ETA_FIELD_VALUE = orderDTO.getEtaFieldValue();\n\t\t\t\tlabelETA_FIELD_VALUE = new Label(COL_ETA_FIELD_VALUE-1, row, ETA_FIELD_VALUE,cellFormat);\n\t\t\t\tcellETA_FIELD_VALUE = (WritableCell)labelETA_FIELD_VALUE;\n\t\t\t\tsheetToEdit.addCell(cellETA_FIELD_VALUE);\t\t\n\t\t\t\t\n\t\t\t\t//--------------- COL_ETA_STATUS --------------------\n\t\t\t\t\n\t\t\t\t// 2: ETA_SHIPPING_INFO\n\t\t\t\t//shippedDate+trackingNumber+shippingCompany\n\t\t\t\tif (orderDTO.getNotation()!= null && !orderDTO.getNotation().equals(""0"")){\n\t\t\t\t\tint cases=Integer.parseInt(orderDTO.getNotation());\n\t\t\t\t\tSimpleDateFormat sfd=new SimpleDateFormat(""dd/MM/yyyy"");\n\t\t\t\t\tif(cases!=0){\n\t\t\t\t\t\tETA_SHIPPING_INFO=sfd.format(orderDTO.getShippedDate())+""   ""+orderDTO.getTrackingNumber()+""   ""+orderDTO.getShippingCompany();\n\t\t\t\t\t}\n\t\t\t\t\tlabelETA_SHIPPING_INFO = new Label(COL_ETA_SHIPPING_INFO-1, row, ETA_SHIPPING_INFO,cellFormat);\n\t\t\t\t\tcellETA_SHIPPING_INFO = (WritableCell)labelETA_SHIPPING_INFO;\n\t\t\t\t\tsheetToEdit.addCell(cellETA_SHIPPING_INFO);\n\t\t\t\t}else{\n\t\t\t\t\tlabelETA_SHIPPING_INFO = new Label(COL_ETA_SHIPPING_INFO-1, row, """",cellFormat);\n\t\t\t\t\tcellETA_SHIPPING_INFO = (WritableCell)labelETA_SHIPPING_INFO;\n\t\t\t\t\tsheetToEdit.addCell(cellETA_SHIPPING_INFO);\n\t\t\t\t}\n\t\t\t\t//change height row 32px\n\t\t\t\tsheetToEdit.setRowView(row,heightInPoints);\n\t\t\t\t++row;\n\t\t\t}\n\t\t\tworkbookCopy.write();\n\t\t\tworkbookCopy.close();\n\t\t\texistingWorkbook.close();\n\n\t\t} catch (Exception x) {\n\t\t\tx.printStackTrace();\n\t\t}\n\t}\n\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t/**----------------------------------------------------------\n\t *THESE METHODS USED IN CHANGING XLS CELL FORMAT*\n\t  -----------------------------------------------------------*/\n\n\t/*public static WritableCell getWCell(int $colNum, int $rowNum, WritableSheet $writableSheet){\n\t\t return $writableSheet.getWritableCell($colNum, $rowNum);\n\t}\n\n\n\tpublic static boolean isCell(WritableCell $writableCell){\n\t\treturn ($writableCell.getType() == CellType.LABEL) ? true : false;\n\t}\n\n\n\tpublic static WritableCell getValidWritableCell(int $colNum, int $rowNum, WritableSheet $writableSheet) throws RowsExceededException, WriteException{\n\t\tWritableCell cell = getWCell($colNum, $rowNum, $writableSheet);\n\n\t\tif (!isCell(cell)){\n\t\t\t// Cell doesn't exist (well, it's empty), we need to 'add' the cell and re-reference.\n\t\t\t$writableSheet.addCell(new Label($colNum, $rowNum, """")); \n\t\t\tcell = getWCell($colNum, $rowNum, $writableSheet);\n\t\t}\n\n\t\treturn cell;\n\t}*/\n\n\t/**----------------------------------------------------------\n\t *CREATE XLS FILE FROM THE LIST ORDERS*\n\t  -----------------------------------------------------------*/\n\t@Override\n\tpublic void generateInvoicedXLS(List<OrdersDTO> listOrdersDTO,String ordersAdminTemplateFolder,Long  allOrdersSelected){\n\t\tfinal String sheetName = ""Sheet1"";\n\t\tfinal int ROW_TO_BEGIN=1;\n\t\t//COLUMNS NUMBER\n\t\tfinal int COL_PATNER_NAME=2;\n\t\tfinal int COL_INVOICE_NUMBER=3;\n\t\tfinal int COL_QUANTITY=4;\n\t\tfinal int COL_PO_NUMBER=5;\n\t\tfinal int COL_CLIENT_ORDER_NUMBER=6;\n\t\tfinal int COL_CLIENT_OTHER_ID=7;\n\t\tfinal int COL_LS_PRODUCT_ID=8;\n\t\tfinal int COL_CLIENT_PRODUCT_NUMBER=9;\n\t\tfinal int COL_CLIENT_NUMBER=10;\n\t\tfinal int COL_UNIT_PRICE=11;\n\t\tfinal int COL_TRACKING_NUMBER=12;\n\t\tfinal int COL_SHIPPING_PRICE=13;\n\t\tfinal int COL_SHIPED_DATE=14;\n\t\tfinal int COL_SHIPED_PROVINCE=15;\n\n\t\tfinal int COL_FIRST_NAME=16;\n\t\tfinal int COL_LAST_NAME\t=17;\n\t\tfinal int COL_OTHER_NAMES=18;\n\t\tfinal int COL_STREET=19;\n\t\tfinal int COL_OTHER_ADDRESS=20;\t\n\t\tfinal int COL_CITY_CLIENT =21;\n\t\tfinal int COL_PROVINCE=22;\n\t\tfinal int COL_POSTAL_CODE=23;\n\t\tfinal int COL_LS_ORDER_ID=24; \n\n\t\t//Special Handling variables\n\t\tfinal int COL_TOTAL_QUANTITY = 4;\n\t\tfinal int COL_SPECIAL_HANDLING_NAME = 8;\n\t\tfinal int COL_SPECIAL_HANDLING_FEE = 11;\n\n\t\t//Currency\n\t\tfinal int COL_CURRENCY = 25; //Currency SYmbol\n\t\t\n\t\t//COLUMNS Data\n\n\t\tString PATNER_NAME="""";\n\t\tString INVOICE_NUMBER="""";\n\t\tDouble QUANTITY=0D;\n\t\tString PO_NUMBER="""";\n\t\tString CLIENT_ORDER_NUMBER="""";\n\t\tString CLIENT_OTHER_ID="""";\n\t\tString LS_PRODUCT_ID="""";\n\t\tString CLIENT_PRODUCT_NUMBER="""";\n\t\tString CLIENT_NUMBER="""";\n\t\tDouble UNIT_PRICE=0D;\n\t\tString TRACKING_NUMBER="""";\n\t\tDouble SHIPPING_PRICE=0D;\n\t\tDateTime SHIPED_DATE=null;\n\t\tString SHIPED_PROVINCE="""";\n\n\t\tString FIRST_NAME="""";\n\t\tString LAST_NAME="""";\n\t\tString OTHER_NAMES="""";\n\t\tString STREET="""";\n\t\tString OTHER_ADDRESS="""";\t\n\t\tString CITY_CLIENT="""";\n\t\tString PROVINCE="""";\n\t\tString POSTAL_CODE="""";\n\t\tString LS_ORDER_ID="""";\n\n\t\t//Special Handling variables\n\t\tDouble TOTAL_QUANTITY = 0D;\n\t\tString SPECIAL_HANDLING_NAME = """";\n\t\tDouble SPECIAL_HANDLING_FEE = 0D;\n\t\t//Double TOTAL_PRICE = 0D;\n\n\t\t//Currency\n\t\tString CURRENCY="""";\n\t\t\n\t\t// For the empty cells\n\t\tString EMPTY ="""";\n\n\t\tint row = ROW_TO_BEGIN;\n\t\ttry {\n\t\t\tWorkbook existingWorkbook = Workbook.getWorkbook(new File(ordersAdminTemplateFolder+""invoicesTemplate.xls""));\n\t\t\tWritableWorkbook workbookCopy = Workbook.createWorkbook(new File(ordersAdminTemplateFolder+""invoicedOrders.xls""), existingWorkbook);\n\t\t\tWritableSheet sheetToEdit = workbookCopy.getSheet(sheetName);\n\n\t\t\t// Create cell font and format\n\t\t\tWritableFont cellFont = new WritableFont(WritableFont.TIMES, 12);\n\t\t\tcellFont.setColour(Colour.BLACK);\n\t\t\tWritableCellFormat cellFormatOrange = new WritableCellFormat(cellFont);\n\t\t\tcellFormatOrange.setBackground(Colour.LIGHT_ORANGE);\n\t\t\tcellFormatOrange.setVerticalAlignment(VerticalAlignment.CENTRE);\n\t\t\tcellFormatOrange.setAlignment(Alignment.CENTRE);\n\t\t\tcellFormatOrange.setWrap(true);\n\t\t\tcellFormatOrange.setBorder(Border.ALL, BorderLineStyle.THIN);\n\n\t\t\t//WritableFont cellFont = new WritableFont(WritableFont.TIMES, 12);\n\t\t\tcellFont.setColour(Colour.BLACK);\n\t\t\tWritableCellFormat cellFormatWhite = new WritableCellFormat(cellFont);\n\t\t\tcellFormatWhite.setBackground(Colour.WHITE);\n\t\t\tcellFormatWhite.setVerticalAlignment(VerticalAlignment.CENTRE);\n\t\t\tcellFormatWhite.setAlignment(Alignment.CENTRE);\n\t\t\tcellFormatWhite.setWrap(true);\n\t\t\tcellFormatWhite.setBorder(Border.ALL, BorderLineStyle.THIN);\n\n\t\t\tcellFont.setColour(Colour.BLACK);\n\t\t\tWritableCellFormat cellFormatRed = new WritableCellFormat(cellFont);\n\t\t\tcellFormatRed.setBackground(Colour.RED);\n\t\t\tcellFormatRed.setVerticalAlignment(VerticalAlignment.CENTRE);\n\t\t\tcellFormatRed.setAlignment(Alignment.CENTRE);\n\t\t\tcellFormatRed.setWrap(true);\n\t\t\tcellFormatRed.setBorder(Border.ALL, BorderLineStyle.THIN);\n\n\t\t\tWritableCellFormat cellFormat=null;\n\t\t\t//format date:orange color\n\t\t\tDateFormat orangeCustomDateFormat = new DateFormat (""dd/MM/yyyy"");\n\t\t\tWritableCellFormat orangeDateFormat = new WritableCellFormat (orangeCustomDateFormat);\n\t\t\torangeDateFormat.setBackground(Colour.LIGHT_ORANGE);\n\t\t\torangeDateFormat.setVerticalAlignment(VerticalAlignment.CENTRE);\n\t\t\torangeDateFormat.setAlignment(Alignment.CENTRE);\n\t\t\torangeDateFormat.setBorder(Border.ALL, BorderLineStyle.THIN);\n\n\t\t\t//format date:White color\n\t\t\tDateFormat whiteCustomDateFormat = new DateFormat (""dd/MM/yyyy"");\n\t\t\tWritableCellFormat whiteDateFormat = new WritableCellFormat (whiteCustomDateFormat);\n\t\t\twhiteDateFormat.setBackground(Colour.WHITE);\n\t\t\twhiteDateFormat.setVerticalAlignment(VerticalAlignment.CENTRE);\n\t\t\twhiteDateFormat.setAlignment(Alignment.CENTRE);\n\t\t\twhiteDateFormat.setBorder(Border.ALL, BorderLineStyle.THIN);\n\n\t\t\t//format date:Red color\n\t\t\tDateFormat redCustomDateFormat = new DateFormat (""dd/MM/yyyy"");\n\t\t\tWritableCellFormat redDateFormat = new WritableCellFormat (redCustomDateFormat);\n\t\t\tredDateFormat.setBackground(Colour.RED);\n\t\t\tredDateFormat.setVerticalAlignment(VerticalAlignment.CENTRE);\n\t\t\tredDateFormat.setAlignment(Alignment.CENTRE);\n\t\t\tredDateFormat.setBorder(Border.ALL, BorderLineStyle.THIN);\n\n\t\t\tWritableCellFormat cellDateFormat=null;\n\t\t\t//format Number: Orange color\n\t\t\tWritableCellFormat orangeNumberFormat=new WritableCellFormat(new  jxl.write.NumberFormat(""0.00""));\n\t\t\torangeNumberFormat.setBackground(Colour.LIGHT_ORANGE);\n\t\t\torangeNumberFormat.setVerticalAlignment(VerticalAlignment.CENTRE);\n\t\t\torangeNumberFormat.setAlignment(Alignment.CENTRE);\n\t\t\torangeNumberFormat.setBorder(Border.ALL, BorderLineStyle.THIN);\n\n\t\t\t//format Number: White color\n\t\t\tWritableCellFormat whiteNumberFormat=new WritableCellFormat(new  jxl.write.NumberFormat(""0.00""));\n\t\t\twhiteNumberFormat.setBackground(Colour.WHITE);\n\t\t\twhiteNumberFormat.setVerticalAlignment(VerticalAlignment.CENTRE);\n\t\t\twhiteNumberFormat.setAlignment(Alignment.CENTRE);\n\t\t\twhiteNumberFormat.setBorder(Border.ALL, BorderLineStyle.THIN);\n\n\t\t\t//format Number: red color\n\t\t\tWritableCellFormat redNumberFormat=new WritableCellFormat(new  jxl.write.NumberFormat(""0.00""));\n\t\t\tredNumberFormat.setBackground(Colour.RED);\n\t\t\tredNumberFormat.setVerticalAlignment(VerticalAlignment.CENTRE);\n\t\t\tredNumberFormat.setAlignment(Alignment.CENTRE);\n\t\t\tredNumberFormat.setBorder(Border.ALL, BorderLineStyle.THIN);\n\n\t\t\tWritableCellFormat cellNumberFormat=null;\n\t\t\tWritableCellFormat cellShppedDateFormatWhite = new WritableCellFormat(cellFont);\n\t\t\tcellShppedDateFormatWhite.setBackground(Colour.WHITE);\n\t\t\tWritableCellFormat cellShppedDateFormatOrange = new WritableCellFormat(cellFont);\n\t\t\tcellShppedDateFormatOrange.setBackground(Colour.ORANGE);\n\t\t\tWritableCellFormat cellShppedDateFormatRed = new WritableCellFormat(cellFont);\n\t\t\tcellShppedDateFormatRed.setBackground(Colour.RED);\n\n\t\t\tWritableCell cellPATNER_NAME=null;\n\t\t\tWritableCell cellINVOICE_NUMBER=null;\n\t\t\tWritableCell cellQUANTITY=null;\n\t\t\tWritableCell cellPO_NUMBER=null;\n\t\t\tWritableCell cellCLIENT_ORDER_NUMBER=null;\n\t\t\tWritableCell cellCLIENT_OTHER_ID=null;\n\t\t\tWritableCell cellLS_PRODUCT_ID=null;\n\t\t\tWritableCell cellCLIENT_PRODUCT_NUMBER=null;\n\t\t\tWritableCell cellCLIENT_NUMBER=null;\n\t\t\tWritableCell cellUNIT_PRICE=null;\n\t\t\tWritableCell cellTRACKING_NUMBER=null;\n\t\t\tWritableCell cellSHIPPING_PRICE=null;\n\t\t\tWritableCell cellSHIPED_DATE = null;\n\t\t\tWritableCell cellSHIPED_PROVINCE=null;\n\t\t\tWritableCell cellFIRST_NAME=null;\n\t\t\tWritableCell cellLAST_NAME=null;\n\t\t\tWritableCell cellOTHER_NAMES=null;\n\t\t\tWritableCell cellSTREET=null;\n\t\t\tWritableCell cellOTHER_ADDRESS=null;\t\n\t\t\tWritableCell cellCITY_CLIENT=null;\n\t\t\tWritableCell cellPROVINCE=null;\n\t\t\tWritableCell cellPOSTAL_CODE=null;\n\t\t\tWritableCell cellLS_ORDER_ID=null;\n\t\t\t//Special Handling variables\n\t\t\tWritableCell cellTOTAL_QUANTITY = null;\n\t\t\tWritableCell cellSPECIAL_HANDLING_NAME = null;\n\t\t\tWritableCell cellSPECIAL_HANDLING_FEE = null;\n\t\t\t//Currency\n\t\t\tWritableCell cellCURRENCY = null;\n\t\t\n\t\t\t// For the empty cells\n\t\t\tWritableCell cellEMPTY = null;\n\n\t\t\t//LABELS\n\t\t\tLabel labelPATNER_NAME=null;\n\t\t\tLabel labelINVOICE_NUMBER=null;\n\t\t\tLabel labelQUANTITY=null;\n\t\t\tLabel labelPO_NUMBER=null;\n\t\t\tLabel labelCLIENT_ORDER_NUMBER=null;\n\t\t\tLabel labelCLIENT_OTHER_ID=null;\n\t\t\tLabel labelLS_PRODUCT_ID=null;\n\t\t\tLabel labelCLIENT_PRODUCT_NUMBER=null;\n\t\t\tLabel labelCLIENT_NUMBER=null;\n\t\t\tLabel labelUNIT_PRICE=null;\n\t\t\tLabel labelTRACKING_NUMBER=null;\n\t\t\tLabel labelSHIPPING_PRICE=null;\n\t\t\tLabel labelSHIPED_PROVINCE=null;\n\t\t\tLabel labelFIRST_NAME=null;\n\t\t\tLabel labelLAST_NAME=null;\n\t\t\tLabel labelOTHER_NAMES=null;\n\t\t\tLabel labelSTREET=null;\n\t\t\tLabel labelOTHER_ADDRESS=null;\t\n\t\t\tLabel labelCITY_CLIENT=null;\n\t\t\tLabel labelPROVINCE=null;\n\t\t\tLabel labelPOSTAL_CODE=null;\n\t\t\tLabel labelLS_ORDER_ID=null;\n\t\t\t//Special Handling variables\n\t\t\tLabel labelTOTAL_QUANTITY = null;\n\t\t\tLabel labelSPECIAL_HANDLING_NAME = null;\n\t\t\tLabel labelSPECIAL_HANDLING_FEE = null;\n\t\t\t//Currency\n\t\t\tLabel labelCURRENCY = null;\n\t\t\t\n\t\t\t// For the empty cells\n\t\t\tLabel labelEMPTY = null;\n\t\t\tjxl.write.Number number=null;\n\n\t\t\t//START FROM ROW_TO_BEGIN\n\t\t\trow = ROW_TO_BEGIN;\n\t\t\tint orderIndex=0;\n\t\t\tint pair=0;\n\t\t\tLong count=0L;\n\t\t\tString partnerLogin="""";\n\t\t\tboolean userLoginChecked=false;\n\t\t\tUser user=null;\n\t\t\tList<OrdersDTO>listOrdersDTOfiler=new ArrayList<OrdersDTO>();\n\t\t\t//check the first item partner name \n\t\t\tif(listOrdersDTO!=null && listOrdersDTO.size()>0){\n\t\t\t\tOrdersDTO orderDTO=listOrdersDTO.get(0);\n\t\t\t\tpartnerLogin=orderDTO.getUserLogin();\n\t\t\t\tif(partnerLogin==null)partnerLogin="""";\n\t\t\t\tuser=userService.getUserByLogin(partnerLogin);\n\t\t\t\tif(user==null)user=new User();\n\t\t\t}\n\t\t\t//if admin select all orders, select just witch has status progress\n\t\t\tif(allOrdersSelected!=null && allOrdersSelected!=0L){\n\t\t\t\tfor(OrdersDTO ord:listOrdersDTO){\n\t\t\t\t\tif((ord.getRowsList().get(0).getStatus().equals(""shipped"")||ord.getRowsList().get(0).getStatus().equals(""invoiced"")) &&\n\t\t\t\t\t\t\tuser.getLogin().equals(ord.getUserLogin())){\n\t\t\t\t\t\tlistOrdersDTOfiler.add(ord);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//if admin select just some orders to get their cvs Canada post\n\t\t\t} else{\n\t\t\t\tfor(OrdersDTO ord:listOrdersDTO){\n\t\t\t\t\tif((ord.getPrint()!=null && ord.getPrint()==true)&&\n\t\t\t\t\t\t\t(ord.getRowsList().get(0).getStatus()!=null &&\n\t\t\t\t\t\t\t\t\tuser.getLogin().equals(ord.getUserLogin())&&\n\t\t\t\t\t\t\t\t\t(ord.getRowsList().get(0).getStatus().equals(""shipped"")||ord.getRowsList().get(0).getStatus().equals(""invoiced"")))){\n\t\t\t\t\t\tlistOrdersDTOfiler.add(ord);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\t\t\tfor (OrdersDTO orderDTO : listOrdersDTOfiler) {\n\t\t\t\tpartnerLogin=orderDTO.getUserLogin();\n\t\t\t\tif(partnerLogin==null)partnerLogin="""";\n\t\t\t\tuser=userService.getUserByLogin(partnerLogin);\n\t\t\t\tif(user!=null)userLoginChecked=true;\n\t\t\t\tcount = productService.isGroupProductID(orderDTO.getProductId());\n\t\t\t\tif(count>=1){\n\t\t\t\t\tpair= 3;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tpair=orderIndex%2;\n\t\t\t\t\torderIndex++;\n\t\t\t\t}\n\t\t\t\tswitch (pair) {\n\t\t\t\tcase 0:\n\t\t\t\t\tcellFormat=cellFormatWhite;\n\t\t\t\t\tcellDateFormat=whiteDateFormat;\n\t\t\t\t\tcellNumberFormat=whiteNumberFormat;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 1:\n\t\t\t\t\tcellFormat=cellFormatOrange;\n\t\t\t\t\tcellDateFormat=orangeDateFormat;\n\t\t\t\t\tcellNumberFormat=orangeNumberFormat;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tcellFormat=cellFormatRed;\n\t\t\t\t\tcellDateFormat=redDateFormat;\n\t\t\t\t\tcellNumberFormat=redNumberFormat;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tsheetToEdit.setRowView(row, 25*25);\n\n\t\t\t\t//COLUMNS Data\n\t\t\t\tPATNER_NAME="""";\n\t\t\t\tINVOICE_NUMBER="""";\n\t\t\t\tQUANTITY=0D;\n\t\t\t\tPO_NUMBER="""";\n\t\t\t\tCLIENT_ORDER_NUMBER="""";\n\t\t\t\tCLIENT_OTHER_ID="""";\n\t\t\t\tLS_PRODUCT_ID="""";\n\t\t\t\tCLIENT_PRODUCT_NUMBER="""";\n\t\t\t\tCLIENT_NUMBER="""";\n\t\t\t\tUNIT_PRICE=0D;\n\t\t\t\tTRACKING_NUMBER="""";\n\t\t\t\tSHIPPING_PRICE=0D;\n\t\t\t\tSHIPED_DATE=null;\n\t\t\t\tSHIPED_PROVINCE="""";\n\t\t\t\tFIRST_NAME="""";\n\t\t\t\tLAST_NAME="""";\n\t\t\t\tOTHER_NAMES="""";\n\t\t\t\tSTREET="""";\n\t\t\t\tOTHER_ADDRESS="""";\t\n\t\t\t\tCITY_CLIENT="""";\n\t\t\t\tPROVINCE="""";\n\t\t\t\tPOSTAL_CODE="""";\n\t\t\t\tLS_ORDER_ID="""";\n\t\t\t\t\n\t\t\t\t//TOTAL_QUANTITY = 0D;\n\t\t\t\tSPECIAL_HANDLING_NAME = """";\n\t\t\t\tSPECIAL_HANDLING_FEE = 0D;\n\t\t\t\t//TOTAL_PRICE = 0D;\n\t\t\t\tCURRENCY="""";\n\n\t\t\t\t//================== Data Order ==================\n\t\t\t\t//------------------ COL_2: PATNER_NAME ----------\n\t\t\t\tif (orderDTO.getUserLogin()!= null)\tPATNER_NAME = orderDTO.getUserLogin();\n\t\t\t\tlabelPATNER_NAME = new Label(COL_PATNER_NAME-1, row, PATNER_NAME,cellFormat);\n\t\t\t\tcellPATNER_NAME = (WritableCell) labelPATNER_NAME;\n\t\t\t\tsheetToEdit.addCell(cellPATNER_NAME);\n\n\t\t\t\t//------------------ COL_3: INVOICE_NUMBER --------\n\t\t\t\t//Nothing in this column\n\t\t\t\tlabelINVOICE_NUMBER = new Label(COL_INVOICE_NUMBER-1, row, """",cellFormat);\n\t\t\t\tcellINVOICE_NUMBER = (WritableCell) labelINVOICE_NUMBER;\n\t\t\t\tsheetToEdit.addCell(cellINVOICE_NUMBER);\n\n\t\t\t\t//------------------ COL_4: QUANTITY ---------------\n\t\t\t\tif (orderDTO.getQuantity() != null) {\n\t\t\t\t\tQUANTITY = orderDTO.getQuantity();\n\t\t\t\t\tTOTAL_QUANTITY = TOTAL_QUANTITY + QUANTITY;\n\t\t\t\t}\n\t\t\t\tlabelQUANTITY = new Label(COL_QUANTITY-1, row, QUANTITY+"""",cellFormat);\n\t\t\t\tcellQUANTITY = (WritableCell) labelQUANTITY;\n\t\t\t\tsheetToEdit.addCell(cellQUANTITY);\n\n\t\t\t\t//------------------ COL_5: PO_NUMBER ---------------\n\t\t\t\tif (orderDTO.getProductOrderNumber() != null)PO_NUMBER = orderDTO.getProductOrderNumber();\n\t\t\t\tlabelPO_NUMBER = new Label(COL_PO_NUMBER-1, row, PO_NUMBER,cellFormat);\n\t\t\t\tcellPO_NUMBER = (WritableCell) labelPO_NUMBER;\n\t\t\t\tsheetToEdit.addCell(cellPO_NUMBER);\n\n\t\t\t\t//------------------ COL_6: CLIENT_ORDER_NUMBER -----\n\t\t\t\tif (orderDTO.getClientOrderNumber() == null)orderDTO.setClientOrderNumber("""");\n\t\t\t\tCLIENT_ORDER_NUMBER = orderDTO.getClientOrderNumber();\n\t\t\t\tlabelCLIENT_ORDER_NUMBER = new Label(COL_CLIENT_ORDER_NUMBER-1, row, CLIENT_ORDER_NUMBER,cellFormat);\n\t\t\t\tcellCLIENT_ORDER_NUMBER = (WritableCell) labelCLIENT_ORDER_NUMBER;\n\t\t\t\tsheetToEdit.addCell(cellCLIENT_ORDER_NUMBER);\n\n\t\t\t\t//------------------ COL_7: LS_PRODUCT_ID ------------\n\t\t\t\tif (orderDTO.getLsProductID() != null)LS_PRODUCT_ID = orderDTO.getLsProductID();\n\t\t\t\tlabelLS_PRODUCT_ID = new Label(COL_LS_PRODUCT_ID-1, row, LS_PRODUCT_ID,cellFormat);\n\t\t\t\tcellLS_PRODUCT_ID = (WritableCell) labelLS_PRODUCT_ID;\n\t\t\t\tsheetToEdit.addCell(cellLS_PRODUCT_ID);\n\n\t\t\t\t//------------------ COL_8: CLIENT_OTHER_ID -----------\n\t\t\t\tif (orderDTO.getClientOtherId()!= null)\tCLIENT_OTHER_ID = orderDTO.getClientOtherId();\n\t\t\t\tlabelCLIENT_OTHER_ID = new Label(COL_CLIENT_OTHER_ID-1, row, CLIENT_OTHER_ID,cellFormat);\n\t\t\t\tcellCLIENT_OTHER_ID = (WritableCell) labelCLIENT_OTHER_ID;\n\t\t\t\tsheetToEdit.addCell(cellCLIENT_OTHER_ID);\n\n\t\t\t\t//------------------ COL_9: CLIENT_PRODUCT_NUMBER ------\n\t\t\t\tif (orderDTO.getClientProductNumber()!= null)CLIENT_PRODUCT_NUMBER = orderDTO.getClientProductNumber();\n\t\t\t\tlabelCLIENT_PRODUCT_NUMBER = new Label(COL_CLIENT_PRODUCT_NUMBER-1, row, CLIENT_PRODUCT_NUMBER,cellFormat);\n\t\t\t\tcellCLIENT_PRODUCT_NUMBER = (WritableCell) labelCLIENT_PRODUCT_NUMBER;\n\t\t\t\tsheetToEdit.addCell(cellCLIENT_PRODUCT_NUMBER);\n\n\t\t\t\t//------------------ COL_10: CLIENT_NUMBER --------------\n\t\t\t\tif (orderDTO.getClientNumber() != null)CLIENT_NUMBER = orderDTO.getClientNumber();\n\t\t\t\tlabelCLIENT_NUMBER = new Label(COL_CLIENT_NUMBER-1, row, CLIENT_NUMBER,cellFormat);\n\t\t\t\tcellCLIENT_NUMBER = (WritableCell) labelCLIENT_NUMBER;\n\t\t\t\tsheetToEdit.addCell(cellCLIENT_NUMBER);\n\n\t\t\t\t//------------------ COL_11: COL_UNIT_PRICE --------------\n\t\t\t\tString strUNIT_PRICE="""";\n\t\t\t\tif (orderDTO.getUnitPrice() != null) {\n\t\t\t\t\tUNIT_PRICE = orderDTO.getUnitPrice();\n\t\t\t\t\t//Currency\n\t\t\t\t\tif((orderDTO.getCurrencyId()!=null && orderDTO.getCurrencyId()!=1 && orderDTO.getCurrencyRate()!=null)) {\n\t\t\t\t\t\tUNIT_PRICE = UNIT_PRICE*orderDTO.getCurrencyRate();\n\t\t\t\t\t\tUNIT_PRICE = (double) Math.round(UNIT_PRICE*100)/100;\n\t\t\t\t\t}\n\t\t\t\t\t//TOTAL_PRICE = TOTAL_PRICE + UNIT_PRICE*TOTAL_QUANTITY; \n\t\t\t\t\tstrUNIT_PRICE = UNIT_PRICE+"""";\n\t\t\t\t\tstrUNIT_PRICE=strUNIT_PRICE.replaceAll("" "", """");\n\t\t\t\t\tif(strUNIT_PRICE!=null && !strUNIT_PRICE.equals("""")){\n\t\t\t\t\t\tint index=strUNIT_PRICE.indexOf("","");\n\t\t\t\t\t\tif(index<0)index=strUNIT_PRICE.indexOf(""."");\n\t\t\t\t\t\tif(index>=0){\n\t\t\t\t\t\t\tString strUNIT_PRICE1=strUNIT_PRICE.substring(0, index);\n\t\t\t\t\t\t\tString strUNIT_PRICE2= strUNIT_PRICE.substring(index+1, strUNIT_PRICE.length());\n\t\t\t\t\t\t\tstrUNIT_PRICE=strUNIT_PRICE1+"".""+strUNIT_PRICE2;\n\t\t\t\t\t\t\tif(strUNIT_PRICE2!=null){\n\t\t\t\t\t\t\t\tif(strUNIT_PRICE2.length()<=1)strUNIT_PRICE=strUNIT_PRICE+""0"";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlabelUNIT_PRICE = new Label(COL_UNIT_PRICE-1, row, strUNIT_PRICE,cellFormat);\n\t\t\t\tcellUNIT_PRICE = (WritableCell) labelUNIT_PRICE;\n\t\t\t\tsheetToEdit.addCell(cellUNIT_PRICE);\n\n\t\t\t\t//------------------ COL_12: TRACKING_NUMBER ------------\n\t\t\t\tlabelTRACKING_NUMBER = new Label(COL_TRACKING_NUMBER-1, row, """",cellFormat);\n\t\t\t\tcellTRACKING_NUMBER = (WritableCell) labelTRACKING_NUMBER;\n\t\t\t\tsheetToEdit.addCell(cellTRACKING_NUMBER);\n\n\t\t\t\t//------------------ COL_13: cellSHIPPING_PRICE ---------\n\t\t\t\tlabelSHIPPING_PRICE = new Label(COL_SHIPPING_PRICE-1, row, """",cellFormat);\n\t\t\t\tcellSHIPPING_PRICE = (WritableCell) labelSHIPPING_PRICE;\n\t\t\t\tsheetToEdit.addCell(cellSHIPPING_PRICE);\n\n\t\t\t\t//------------------ COL_14: SHIPED_DATE ----------------\n\t\t\t\tif(orderDTO.getShippedDate()!=null){\n\t\t\t\t\tSHIPED_DATE = new DateTime(COL_SHIPED_DATE-1, row, orderDTO.getShippedDate(),cellDateFormat);\n\t\t\t\t\tsheetToEdit.addCell(SHIPED_DATE);\n\t\t\t\t}\n\n\t\t\t\t//------------------ COL_15: SHIPED_PROVINCE ------------\n\t\t\t\tif (orderDTO.getClientProvince()!= null) {\n\t\t\t\t\tString code=orderDTO.getClientProvince();\n\t\t\t\t\tProvinceDTO provinceDTO=productService.getProvinceByCode(code);\n\t\t\t\t\tSHIPED_PROVINCE = provinceDTO.getTaxe();\n\t\t\t\t}\n\t\t\t\tlabelSHIPED_PROVINCE = new Label(COL_SHIPED_PROVINCE-1, row, SHIPED_PROVINCE,cellFormat);\n\t\t\t\tcellSHIPED_PROVINCE = (WritableCell) labelSHIPED_PROVINCE;\n\t\t\t\tsheetToEdit.addCell(cellSHIPED_PROVINCE);\n\n\t\t\t\t//------------------ COL_16: COL_FIRST_NAME -----------------\n\t\t\t\tif (orderDTO.getClientFirstName() != null)FIRST_NAME = orderDTO.getClientFirstName();\n\t\t\t\tlabelFIRST_NAME = new Label(COL_FIRST_NAME-1, row, FIRST_NAME,cellFormat);\n\t\t\t\tcellFIRST_NAME = (WritableCell) labelFIRST_NAME;\n\t\t\t\tsheetToEdit.addCell(cellFIRST_NAME);\n\n\t\t\t\t//------------------ COL_17: COL_LAST_NAME ------------------\n\t\t\t\tif (orderDTO.getClientLastName() != null)LAST_NAME = orderDTO.getClientLastName();\n\t\t\t\tlabelLAST_NAME = new Label(COL_LAST_NAME-1, row, LAST_NAME,cellFormat);\n\t\t\t\tcellLAST_NAME = (WritableCell) labelLAST_NAME;\n\t\t\t\tsheetToEdit.addCell(cellLAST_NAME);\n\n\t\t\t\t//------------------ COL_18: COL_OTHER_NAMES -----------------\n\t\t\t\tif (orderDTO.getClientOtherNames() != null)OTHER_NAMES = orderDTO.getClientOtherNames();\n\t\t\t\tlabelOTHER_NAMES = new Label(COL_OTHER_NAMES-1, row, OTHER_NAMES,cellFormat);\n\t\t\t\tcellOTHER_NAMES = (WritableCell) labelOTHER_NAMES;\n\t\t\t\tsheetToEdit.addCell(cellOTHER_NAMES);\n\n\t\t\t\t//------------------ COL_19: COL_STREET ----------------------\n\t\t\t\tif (orderDTO.getClientStreet()!= null)STREET = orderDTO.getClientStreet();\n\t\t\t\tlabelSTREET = new Label(COL_STREET-1, row, STREET,cellFormat);\n\t\t\t\tcellSTREET = (WritableCell) labelSTREET;\n\t\t\t\tsheetToEdit.addCell(cellSTREET);\n\n\t\t\t\t//------------------ COL_20: COL_OTHER_ADDRESS ---------------\n\t\t\t\tif (orderDTO.getClientOtherStreet()!= null)OTHER_ADDRESS = orderDTO.getClientOtherStreet();\n\t\t\t\tlabelOTHER_ADDRESS = new Label(COL_OTHER_ADDRESS-1, row, OTHER_ADDRESS,cellFormat);\n\t\t\t\tcellOTHER_ADDRESS = (WritableCell) labelOTHER_ADDRESS;\n\t\t\t\tsheetToEdit.addCell(cellOTHER_ADDRESS);\n\n\t\t\t\t//------------------ COL_21: COL_CITY_CLIENT -----------------\n\t\t\t\tif (orderDTO.getClientCity()!= null)CITY_CLIENT = orderDTO.getClientCity();\n\t\t\t\tlabelCITY_CLIENT = new Label(COL_CITY_CLIENT-1, row, CITY_CLIENT,cellFormat);\n\t\t\t\tcellCITY_CLIENT = (WritableCell) labelCITY_CLIENT;\n\t\t\t\tsheetToEdit.addCell(cellCITY_CLIENT);\n\n\t\t\t\t//------------------ COL_22: COL_PROVINCE --------------------\n\t\t\t\tif (orderDTO.getClientProvince()!= null)PROVINCE = orderDTO.getClientProvince();\n\t\t\t\tlabelPROVINCE = new Label(COL_PROVINCE-1, row, PROVINCE,cellFormat);\n\t\t\t\tcellPROVINCE = (WritableCell) labelPROVINCE;\n\t\t\t\tsheetToEdit.addCell(cellPROVINCE);\n\n\t\t\t\t//------------------ COL_23: COL_POSTAL_CODE -----------------\n\t\t\t\tif (orderDTO.getClientPostalCode()!= null)POSTAL_CODE = orderDTO.getClientPostalCode();\n\t\t\t\tlabelPOSTAL_CODE = new Label(COL_POSTAL_CODE-1, row, POSTAL_CODE,cellFormat);\n\t\t\t\tcellPOSTAL_CODE = (WritableCell) labelPOSTAL_CODE;\n\t\t\t\tsheetToEdit.addCell(cellPOSTAL_CODE);\n\n\t\t\t\t//------------------ COL_24: COL_LS_ORDER_ID -----------------\n\t\t\t\tif (orderDTO.getLsOrderId()!= null)LS_ORDER_ID = orderDTO.getLsOrderId();\n\t\t\t\tlabelLS_ORDER_ID = new Label(COL_LS_ORDER_ID-1, row, LS_ORDER_ID,cellFormat);\n\t\t\t\tcellLS_ORDER_ID = (WritableCell) labelLS_ORDER_ID;\n\t\t\t\tsheetToEdit.addCell(cellLS_ORDER_ID);\n\t\t\t\t\n\t\t\t\t//------------------ COL_25: CURRENCY --------\n\t\t\t\tif(orderDTO.getCurrencyId()!=null && orderDTO.getCurrencySymbol()!=null) {\n\t\t\t\t\tCURRENCY = orderDTO.getCurrencySymbol();\n\t\t\t\t}\n\t\t\t\tlabelCURRENCY = new Label(COL_CURRENCY-1, row, CURRENCY,cellFormat);\n\t\t\t\tcellCURRENCY = (WritableCell) labelCURRENCY;\n\t\t\t\tsheetToEdit.addCell(cellCURRENCY);\n\n\t\t\t\trow++;\n\t\t\t\tsheetToEdit.setRowView(row, 25*25);\n\n\t\t\t\t//================== Data SHIPPING ======================\n\t\t\t\t//------------------ COL_2: PATNER_NAME -----------------\n\t\t\t\tif (orderDTO.getUserLogin()!= null) {\n\t\t\t\t\tPATNER_NAME = orderDTO.getUserLogin();\n\t\t\t\t\tlabelPATNER_NAME = new Label(COL_PATNER_NAME-1, row, PATNER_NAME,cellFormat);\n\t\t\t\t\tcellPATNER_NAME = (WritableCell) labelPATNER_NAME;\n\t\t\t\t\tsheetToEdit.addCell(cellPATNER_NAME);\n\t\t\t\t}\n\n\t\t\t\t//------------------ COL_3: INVOICE_NUMBER --------------\n\t\t\t\tlabelINVOICE_NUMBER = new Label(COL_INVOICE_NUMBER-1, row, """",cellFormat);\n\t\t\t\tcellINVOICE_NUMBER = (WritableCell) labelINVOICE_NUMBER;\n\t\t\t\tsheetToEdit.addCell(cellINVOICE_NUMBER);\n\n\t\t\t\t//------------------ COL_4: QUANTITY --------------------\n\t\t\t\tString strQty = ""1"";\n\t\t\t\tlabelQUANTITY = new Label(COL_QUANTITY-1, row, strQty,cellFormat);\n\t\t\t\tcellQUANTITY = (WritableCell) labelQUANTITY;\n\t\t\t\tsheetToEdit.addCell(cellQUANTITY);\n\n\t\t\t\t//------------------ COL_5: PO_NUMBER --------------------\n\t\t\t\tlabelPO_NUMBER = new Label(COL_PO_NUMBER-1, row, """",cellFormat);\n\t\t\t\tcellPO_NUMBER = (WritableCell) labelPO_NUMBER;\n\t\t\t\tsheetToEdit.addCell(cellPO_NUMBER);\n\n\t\t\t\t//------------------ COL_6: CLIENT_ORDER_NUMBER -----------\n\t\t\t\tlabelCLIENT_ORDER_NUMBER = new Label(COL_CLIENT_ORDER_NUMBER-1, row, """",cellFormat);\n\t\t\t\tcellCLIENT_ORDER_NUMBER = (WritableCell) labelCLIENT_ORDER_NUMBER;\n\t\t\t\tsheetToEdit.addCell(cellCLIENT_ORDER_NUMBER);\n\n\t\t\t\t//------------------ COL_7: LS_PRODUCT_ID ------------------\n\t\t\t\tlabelLS_PRODUCT_ID = new Label(COL_LS_PRODUCT_ID-1, row, ""SHIPPING"",cellFormat);\n\t\t\t\tcellLS_PRODUCT_ID = (WritableCell) labelLS_PRODUCT_ID;\n\t\t\t\tsheetToEdit.addCell(cellLS_PRODUCT_ID);\n\n\t\t\t\t//------------------ COL_8: CLIENT_OTHER_ID -----------------\n\t\t\t\tlabelCLIENT_OTHER_ID = new Label(COL_CLIENT_OTHER_ID-1, row, """",cellFormat);\n\t\t\t\tcellCLIENT_OTHER_ID = (WritableCell) labelCLIENT_OTHER_ID;\n\t\t\t\tsheetToEdit.addCell(cellCLIENT_OTHER_ID);\n\n\t\t\t\t//------------------ COL_9: CLIENT_PRODUCT_NUMBER -------------\n\t\t\t\tlabelCLIENT_PRODUCT_NUMBER = new Label(COL_CLIENT_PRODUCT_NUMBER-1, row, CLIENT_PRODUCT_NUMBER,cellFormat);\n\t\t\t\tcellCLIENT_PRODUCT_NUMBER = (WritableCell) labelCLIENT_PRODUCT_NUMBER;\n\t\t\t\tsheetToEdit.addCell(cellCLIENT_PRODUCT_NUMBER);\n\t\t\t\t\n\t\t\t\t//------------------ COL_10: CLIENT_NUMBER ---------------------\n\t\t\t\tlabelCLIENT_NUMBER = new Label(COL_CLIENT_NUMBER-1, row, """",cellFormat);\n\t\t\t\tcellCLIENT_NUMBER = (WritableCell) labelCLIENT_NUMBER;\n\t\t\t\tsheetToEdit.addCell(cellCLIENT_NUMBER);\n\n\t\t\t\t// COL_11: COL_UNIT_PRICE\n\t\t\t\tlabelUNIT_PRICE = new Label(COL_UNIT_PRICE-1, row, """",cellFormat);\n\t\t\t\tcellUNIT_PRICE = (WritableCell) labelUNIT_PRICE;\n\t\t\t\tsheetToEdit.addCell(cellUNIT_PRICE);\n\n\t\t\t\t//------------------ COL_12: TRACKING_NUMBER --------------------\n\t\t\t\tif (orderDTO.getTrackingNumber()!= null) {\n\t\t\t\t\tTRACKING_NUMBER = orderDTO.getTrackingNumber();\n\t\t\t\t\tlabelTRACKING_NUMBER = new Label(COL_TRACKING_NUMBER-1, row, TRACKING_NUMBER,cellFormat);\n\t\t\t\t\tcellTRACKING_NUMBER = (WritableCell) labelTRACKING_NUMBER;\n\t\t\t\t\tsheetToEdit.addCell(cellTRACKING_NUMBER);\n\t\t\t\t}\n\n\t\t\t\t//------------------ COL_13: cellSHIPPING_PRICE ------------------\n\t\t\t\tif (orderDTO.getShippingPrice() != null) {\n\t\t\t\t\tSHIPPING_PRICE = orderDTO.getShippingPrice();\n\t\t\t\t\t//SHIPPING_PRICE = (orderDTO.getCurrencyId()!=null && orderDTO.getCurrencyId()!=1 && orderDTO.getCurrencyRate()!=null ? SHIPPING_PRICE*orderDTO.getCurrencyRate() : SHIPPING_PRICE);\n\t\t\t\t\t//Add Shipping Insurance Multiplier\n\t\t\t\t\tif(orderDTO.getShippingInsuranceMultiplier()==null) {//new = insert into invoicing_orders\n\t\t\t\t\t\tif(user!=null && UNIT_PRICE!=null){\n\t\t\t\t\t\t\tif(user.getShippingInsuranceMultiplier()!=null) {\n\t\t\t\t\t\t\t\tSHIPPING_PRICE=SHIPPING_PRICE + UNIT_PRICE*QUANTITY*(user.getShippingInsuranceMultiplier()/100);\n\t\t\t\t\t\t\t\torderDTO.setShippingInsuranceMultiplier(user.getShippingInsuranceMultiplier());\n\t\t\t\t\t\t\t} else orderDTO.setShippingInsuranceMultiplier(0D);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {//old = already exists in invoicing_orders\n\t\t\t\t\t\tSHIPPING_PRICE = SHIPPING_PRICE + UNIT_PRICE*QUANTITY*(orderDTO.getShippingInsuranceMultiplier()/100);\n\t\t\t\t\t}\n\n\t\t\t\t\t//Add Shipping Multiplier\n\t\t\t\t\tif(user.getMultiplier()!=null) {\n\t\t\t\t\t\tDouble multiplier=Double.parseDouble(user.getMultiplier());\n\t\t\t\t\t\tSHIPPING_PRICE=SHIPPING_PRICE*(1+multiplier/100);\n\t\t\t\t\t}\n\n\t\t\t\t\t//if user has a special shipping\n\t\t\t\t\tOrdersSpecialShippingDTO ordSpecialShipDTO=new OrdersSpecialShippingDTO();\n\t\t\t\t\tordSpecialShipDTO.setProductId(orderDTO.getProductId());\n\t\t\t\t\tordSpecialShipDTO.setUserId(orderDTO.getUserId());\n\t\t\t\t\tOrdersSpecialShippingDTO OrdSpecialShip=getOrderSpecialShipping(ordSpecialShipDTO);\n\t\t\t\t\tif(OrdSpecialShip!=null){\n\t\t\t\t\t\tSHIPPING_PRICE=orderDTO.getShippingPrice();\n\t\t\t\t\t\t//SHIPPING_PRICE = (orderDTO.getCurrencyId()!=null && orderDTO.getCurrencyId()!=1 && orderDTO.getCurrencyRate()!=null ? SHIPPING_PRICE*orderDTO.getCurrencyRate() : SHIPPING_PRICE);\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\tSHIPPING_PRICE = (double) Math.round(SHIPPING_PRICE * 100) / 100;\n\t\t\t\t\tString strSHIPPING_PRICE=SHIPPING_PRICE+"""";\n\t\t\t\t\tlabelSHIPPING_PRICE = new Label(COL_SHIPPING_PRICE-1, row, strSHIPPING_PRICE,cellFormat);\n\t\t\t\t\tcellSHIPPING_PRICE = (WritableCell) labelSHIPPING_PRICE;\n\t\t\t\t\tsheetToEdit.addCell(cellSHIPPING_PRICE);\n\t\t\t\t}\n\n\t\t\t\t//------------------ COL_14: SHIPED_DATE --------------------------\n\t\t\t\tif(orderDTO.getShippedDate()!=null){\n\t\t\t\t\tSHIPED_DATE = new DateTime(COL_SHIPED_DATE-1, row, orderDTO.getShippedDate(),cellDateFormat);\n\t\t\t\t\tsheetToEdit.addCell(SHIPED_DATE);\n\t\t\t\t}\n\n\t\t\t\t//------------------ COL_15: SHIPED_PROVINCE ----------------------\n\t\t\t\tif (orderDTO.getClientProvince()!= null) {\n\t\t\t\t\tString code=orderDTO.getClientProvince();\n\t\t\t\t\tProvinceDTO provinceDTO=productService.getProvinceByCode(code);\n\t\t\t\t\tSHIPED_PROVINCE = provinceDTO.getTaxe();\n\t\t\t\t\tlabelSHIPED_PROVINCE = new Label(COL_SHIPED_PROVINCE-1, row, SHIPED_PROVINCE,cellFormat);\n\t\t\t\t\tcellSHIPED_PROVINCE = (WritableCell) labelSHIPED_PROVINCE;\n\t\t\t\t\tsheetToEdit.addCell(cellSHIPED_PROVINCE);\n\t\t\t\t}\n\n\t\t\t\t//------------------ COL_16: COL_FIRST_NAME -----------------\n\t\t\t\tlabelFIRST_NAME = new Label(COL_FIRST_NAME-1, row, """",cellFormat);\n\t\t\t\tcellFIRST_NAME = (WritableCell) labelFIRST_NAME;\n\t\t\t\tsheetToEdit.addCell(cellFIRST_NAME);\n\n\t\t\t\t//------------------ COL_17: COL_LAST_NAME ------------------\n\t\t\t\tlabelLAST_NAME = new Label(COL_LAST_NAME-1, row, """",cellFormat);\n\t\t\t\tcellLAST_NAME = (WritableCell) labelLAST_NAME;\n\t\t\t\tsheetToEdit.addCell(cellLAST_NAME);\n\n\t\t\t\t//------------------ COL_18: COL_OTHER_NAMES -----------------\n\t\t\t\tlabelOTHER_NAMES = new Label(COL_OTHER_NAMES-1, row, """",cellFormat);\n\t\t\t\tcellOTHER_NAMES = (WritableCell) labelOTHER_NAMES;\n\t\t\t\tsheetToEdit.addCell(cellOTHER_NAMES);\n\n\t\t\t\t//------------------ COL_19: COL_STREET ----------------------\n\t\t\t\tlabelSTREET = new Label(COL_STREET-1, row, """",cellFormat);\n\t\t\t\tcellSTREET = (WritableCell) labelSTREET;\n\t\t\t\tsheetToEdit.addCell(cellSTREET);\n\n\t\t\t\t//------------------ COL_20: COL_OTHER_ADDRESS ---------------\n\t\t\t\tlabelOTHER_ADDRESS = new Label(COL_OTHER_ADDRESS-1, row, """",cellFormat);\n\t\t\t\tcellOTHER_ADDRESS = (WritableCell) labelOTHER_ADDRESS;\n\t\t\t\tsheetToEdit.addCell(cellOTHER_ADDRESS);\n\n\t\t\t\t//------------------ COL_21: COL_CITY_CLIENT -----------------\n\t\t\t\tlabelCITY_CLIENT = new Label(COL_CITY_CLIENT-1, row, """",cellFormat);\n\t\t\t\tcellCITY_CLIENT = (WritableCell) labelCITY_CLIENT;\n\t\t\t\tsheetToEdit.addCell(cellCITY_CLIENT);\n\n\t\t\t\t//------------------ COL_22: COL_PROVINCE --------------------\n\t\t\t\tlabelPROVINCE = new Label(COL_PROVINCE-1, row, """",cellFormat);\n\t\t\t\tcellPROVINCE = (WritableCell) labelPROVINCE;\n\t\t\t\tsheetToEdit.addCell(cellPROVINCE);\n\n\t\t\t\t//------------------ COL_23: COL_POSTAL_CODE -----------------\n\t\t\t\tlabelPOSTAL_CODE = new Label(COL_POSTAL_CODE-1, row, """",cellFormat);\n\t\t\t\tcellPOSTAL_CODE = (WritableCell) labelPOSTAL_CODE;\n\t\t\t\tsheetToEdit.addCell(cellPOSTAL_CODE);\n\n\t\t\t\t//------------------ COL_24: COL_LS_ORDER_ID-----------------\n\t\t\t\tlabelLS_ORDER_ID = new Label(COL_LS_ORDER_ID-1, row, """",cellFormat);\n\t\t\t\tcellLS_ORDER_ID = (WritableCell) labelLS_ORDER_ID;\n\t\t\t\tsheetToEdit.addCell(cellLS_ORDER_ID);\n\t\t\t\t\n\t\t\t\t//------------------ COL_25: COL_CURRENCY-----------------\n\t\t\t\tlabelCURRENCY = new Label(COL_CURRENCY-1, row, """",cellFormat);\n\t\t\t\tcellCURRENCY = (WritableCell) labelCURRENCY;\n\t\t\t\tsheetToEdit.addCell(cellCURRENCY);\n\n\t\t\t\t//Special handling calculation\n\t\t\t\tif(user!=null){\n\t\t\t\t\tDouble totalPrice=null;\n\t\t\t\t\torderDTO.setSpecialHandlingName(user.getSpecialHandlingName());\n\t\t\t\t\torderDTO.setSpecialHandlingFee(user.getSpecialHandlingFee());\n\t\t\t\t\tif(orderDTO.getRowsList().get(0).getQuantity()!=null && orderDTO.getRowsList().get(0).getUnitPrice()!=null){\n\t\t\t\t\t\ttotalPrice=orderDTO.getRowsList().get(0).getQuantity()*orderDTO.getRowsList().get(0).getUnitPrice();\n\t\t\t\t\t\t//Currency\n\t\t\t\t\t\tif(totalPrice!=null && orderDTO.getCurrencyId()!=null && orderDTO.getCurrencyId()!=1 && orderDTO.getCurrencyRate()!=null) {\n\t\t\t\t\t\t\ttotalPrice = totalPrice*orderDTO.getCurrencyRate();\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttotalPrice = (double) Math.round(totalPrice * 100) / 100;\n\t\t\t\t\t}\n\t\t\t\t\torderDTO.setTotalPrice(totalPrice);\n\t\t\t\t}\n\t\t\t\tinsertInvoicedOrder(orderDTO);\n\t\t\t\t++row;\n\t\t\t}\n\n\t\t\t//Add special handling row\n\t\t\tif(user!=null){\n\t\t\t\tSPECIAL_HANDLING_NAME =user.getSpecialHandlingName();\n\t\t\t\tSPECIAL_HANDLING_FEE = user.getSpecialHandlingFee();\n\t\t\t}\n\t\t\tif(listOrdersDTOfiler!=null && listOrdersDTOfiler.size()>0){\n\t\t\t\t// row empty\n\t\t\t\tcellFont = new WritableFont(WritableFont.TIMES, 12);\n\t\t\t\tcellFont.setColour(Colour.BLACK);\n\t\t\t\tcellFormat = new WritableCellFormat(cellFont);\n\t\t\t\tcellFormat.setBackground(Colour.GREY_25_PERCENT);\n\t\t\t\tcellFormat.setVerticalAlignment(VerticalAlignment.CENTRE);\n\t\t\t\tcellFormat.setAlignment(Alignment.CENTRE);\n\t\t\t\tcellFormat.setWrap(true);\n\t\t\t\tcellFormat.setBorder(Border.ALL, BorderLineStyle.THIN,Colour.BLACK);\n\t\t\t\tsheetToEdit.setRowView(row, 25*25);\n\t\t\t\tfor (int i=2; i<=25; i++) { \n\t\t\t\t\tEMPTY="""";\n\t\t\t\t\tlabelEMPTY = new Label(i-1, row, EMPTY,cellFormat);\n\t\t\t\t\tcellEMPTY = (WritableCell) labelEMPTY;\n\t\t\t\t\tsheetToEdit.addCell(cellEMPTY);\n\t\t\t\t}\n\n\t\t\t\tcellFont = new WritableFont(WritableFont.TIMES, 12);\n\t\t\t\tcellFont.setColour(Colour.BLACK);\n\t\t\t\tcellFormat = new WritableCellFormat(cellFont);\n\t\t\t\tcellFormat.setBackground(Colour.VERY_LIGHT_YELLOW);\n\t\t\t\tcellFormat.setVerticalAlignment(VerticalAlignment.CENTRE);\n\t\t\t\tcellFormat.setAlignment(Alignment.CENTRE);\n\t\t\t\tcellFormat.setWrap(true);\n\t\t\t\tcellFormat.setBorder(Border.ALL, BorderLineStyle.THIN,Colour.BLUE);\n\n\t\t\t\trow++;\n\t\t\t\tsheetToEdit.setRowView(row, 25*25);\n\t\t\t\t//------------------ COL_2: PARTNER_NAME --------------\n\t\t\t\tPATNER_NAME="""";\n\t\t\t\tif (user!= null) {\n\t\t\t\t\tPATNER_NAME = user.getLogin();\n\t\t\t\t\tlabelPATNER_NAME = new Label(COL_PATNER_NAME-1, row, PATNER_NAME,cellFormat);\n\t\t\t\t\tcellPATNER_NAME = (WritableCell) labelPATNER_NAME;\n\t\t\t\t\tsheetToEdit.addCell(cellPATNER_NAME);\n\t\t\t\t}\n\n\t\t\t\t//------------------ COL_3: INVOICE_NUMBER --------------\n\t\t\t\tlabelINVOICE_NUMBER = new Label(COL_INVOICE_NUMBER-1, row, """",cellFormat);\n\t\t\t\tcellINVOICE_NUMBER = (WritableCell) labelINVOICE_NUMBER;\n\t\t\t\tsheetToEdit.addCell(cellINVOICE_NUMBER);\n\n\t\t\t\t//------------------ COL_4: TOTAL_QUANTITY --------------------\n\t\t\t\tlabelTOTAL_QUANTITY = new Label(COL_TOTAL_QUANTITY-1, row, TOTAL_QUANTITY + """", cellFormat);\n\t\t\t\tcellTOTAL_QUANTITY = (WritableCell) labelTOTAL_QUANTITY;\n\t\t\t\tsheetToEdit.addCell(cellTOTAL_QUANTITY);\n\n\t\t\t\t//------------------ COL_5: PO_NUMBER --------------------\n\t\t\t\tlabelPO_NUMBER = new Label(COL_PO_NUMBER-1, row, """",cellFormat);\n\t\t\t\tcellPO_NUMBER = (WritableCell) labelPO_NUMBER;\n\t\t\t\tsheetToEdit.addCell(cellPO_NUMBER);\n\n\t\t\t\t//------------------ COL_6: CLIENT_ORDER_NUMBER -----------\n\t\t\t\tlabelCLIENT_ORDER_NUMBER = new Label(COL_CLIENT_ORDER_NUMBER-1, row, """",cellFormat);\n\t\t\t\tcellCLIENT_ORDER_NUMBER = (WritableCell) labelCLIENT_ORDER_NUMBER;\n\t\t\t\tsheetToEdit.addCell(cellCLIENT_ORDER_NUMBER);\n\n\t\t\t\t//------------------ COL_7: SPECIAL_HANDLING_NAME ------------------\n\t\t\t\tif(SPECIAL_HANDLING_NAME==null)SPECIAL_HANDLING_NAME="""";\t\n\t\t\t\tlabelSPECIAL_HANDLING_NAME = new Label(COL_SPECIAL_HANDLING_NAME-1, row, SPECIAL_HANDLING_NAME,cellFormat);\n\t\t\t\tcellSPECIAL_HANDLING_NAME = (WritableCell) labelSPECIAL_HANDLING_NAME;\n\t\t\t\tsheetToEdit.addCell(cellSPECIAL_HANDLING_NAME);\n\n\t\t\t\t//------------------ COL_8: CLIENT_OTHER_ID -----------------\n\t\t\t\tlabelCLIENT_OTHER_ID = new Label(COL_CLIENT_OTHER_ID-1, row, """",cellFormat);\n\t\t\t\tcellCLIENT_OTHER_ID = (WritableCell) labelCLIENT_OTHER_ID;\n\t\t\t\tsheetToEdit.addCell(cellCLIENT_OTHER_ID);\n\n\t\t\t\t//------------------ COL_9: CLIENT_PRODUCT_NUMBER -------------\n\t\t\t\tlabelCLIENT_PRODUCT_NUMBER = new Label(COL_CLIENT_PRODUCT_NUMBER-1, row, """",cellFormat);\n\t\t\t\tcellCLIENT_PRODUCT_NUMBER = (WritableCell) labelCLIENT_PRODUCT_NUMBER;\n\t\t\t\tsheetToEdit.addCell(cellCLIENT_PRODUCT_NUMBER);\n\n\t\t\t\t//------------------ COL_10: CLIENT_NUMBER ---------------------\n\t\t\t\tlabelCLIENT_NUMBER = new Label(COL_CLIENT_NUMBER-1, row, """",cellFormat);\n\t\t\t\tcellCLIENT_NUMBER = (WritableCell) labelCLIENT_NUMBER;\n\t\t\t\tsheetToEdit.addCell(cellCLIENT_NUMBER);\n\n\t\t\t\t//------------------ COL_11: COL_UNIT_PRICE --------------\n\t\t\t\tString strSPECIAL_HANDLING_FEE="""";\n\t\t\t\tif (SPECIAL_HANDLING_FEE!= null)strSPECIAL_HANDLING_FEE=SPECIAL_HANDLING_FEE+"""";\n\t\t\t\tlabelUNIT_PRICE = new Label(COL_UNIT_PRICE-1, row, strSPECIAL_HANDLING_FEE,cellFormat);\n\t\t\t\tcellUNIT_PRICE = (WritableCell) labelUNIT_PRICE;\n\t\t\t\tsheetToEdit.addCell(cellUNIT_PRICE);\n\n\t\t\t\t//------------------ COL_12: TRACKING_NUMBER --------------------\n\t\t\t\tlabelTRACKING_NUMBER = new Label(COL_TRACKING_NUMBER-1, row, """",cellFormat);\n\t\t\t\tcellTRACKING_NUMBER = (WritableCell) labelTRACKING_NUMBER;\n\t\t\t\tsheetToEdit.addCell(cellTRACKING_NUMBER);\n\n\t\t\t\t//------------------ COL_13: cellSHIPPING_PRICE ------------------\n\t\t\t\tlabelSHIPPING_PRICE = new Label(COL_SHIPPING_PRICE-1, row, """",cellFormat);\n\t\t\t\tcellSHIPPING_PRICE = (WritableCell) labelSHIPPING_PRICE;\n\t\t\t\tsheetToEdit.addCell(cellSHIPPING_PRICE);\n\n\t\t\t\t//------------------ COL_14: SHIPED_DATE --------------------------\n\t\t\t\tlabelSHIPED_PROVINCE = new Label(COL_SHIPED_DATE-1, row, """",cellFormat);\n\t\t\t\tcellSHIPED_PROVINCE = (WritableCell) labelSHIPED_PROVINCE;\n\t\t\t\tsheetToEdit.addCell(cellSHIPED_PROVINCE);\n\n\t\t\t\t//------------------ COL_15: SHIPED_PROVINCE ----------------------\n\t\t\t\tSHIPED_PROVINCE = ""S13"";\n\t\t\t\tlabelSHIPED_PROVINCE = new Label(COL_SHIPED_PROVINCE-1, row, SHIPED_PROVINCE,cellFormat);\n\t\t\t\tcellSHIPED_PROVINCE = (WritableCell) labelSHIPED_PROVINCE;\n\t\t\t\tsheetToEdit.addCell(cellSHIPED_PROVINCE);\n\n\t\t\t\t//------------------ COL_16: COL_FIRST_NAME -----------------\n\t\t\t\tlabelFIRST_NAME = new Label(COL_FIRST_NAME-1, row, """",cellFormat);\n\t\t\t\tcellFIRST_NAME = (WritableCell) labelFIRST_NAME;\n\t\t\t\tsheetToEdit.addCell(cellFIRST_NAME);\n\n\t\t\t\t//------------------ COL_17: COL_LAST_NAME ------------------\n\t\t\t\tlabelLAST_NAME = new Label(COL_LAST_NAME-1, row, """",cellFormat);\n\t\t\t\tcellLAST_NAME = (WritableCell) labelLAST_NAME;\n\t\t\t\tsheetToEdit.addCell(cellLAST_NAME);\n\n\t\t\t\t//------------------ COL_18: COL_OTHER_NAMES -----------------\n\t\t\t\tlabelOTHER_NAMES = new Label(COL_OTHER_NAMES-1, row, """",cellFormat);\n\t\t\t\tcellOTHER_NAMES = (WritableCell) labelOTHER_NAMES;\n\t\t\t\tsheetToEdit.addCell(cellOTHER_NAMES);\n\n\t\t\t\t//------------------ COL_19: COL_STREET ----------------------\n\t\t\t\tlabelSTREET = new Label(COL_STREET-1, row, """",cellFormat);\n\t\t\t\tcellSTREET = (WritableCell) labelSTREET;\n\t\t\t\tsheetToEdit.addCell(cellSTREET);\n\n\t\t\t\t//------------------ COL_20: COL_OTHER_ADDRESS ---------------\n\t\t\t\tlabelOTHER_ADDRESS = new Label(COL_OTHER_ADDRESS-1, row, """",cellFormat);\n\t\t\t\tcellOTHER_ADDRESS = (WritableCell) labelOTHER_ADDRESS;\n\t\t\t\tsheetToEdit.addCell(cellOTHER_ADDRESS);\n\n\t\t\t\t//------------------ COL_21: COL_CITY_CLIENT -----------------\n\t\t\t\tlabelCITY_CLIENT = new Label(COL_CITY_CLIENT-1, row, """",cellFormat);\n\t\t\t\tcellCITY_CLIENT = (WritableCell) labelCITY_CLIENT;\n\t\t\t\tsheetToEdit.addCell(cellCITY_CLIENT);\n\n\t\t\t\t//------------------ COL_22: COL_PROVINCE --------------------\n\t\t\t\tlabelPROVINCE = new Label(COL_PROVINCE-1, row, """",cellFormat);\n\t\t\t\tcellPROVINCE = (WritableCell) labelPROVINCE;\n\t\t\t\tsheetToEdit.addCell(cellPROVINCE);\n\n\t\t\t\t//------------------ COL_23: COL_POSTAL_CODE -----------------\n\t\t\t\tlabelPOSTAL_CODE = new Label(COL_POSTAL_CODE-1, row, """",cellFormat);\n\t\t\t\tcellPOSTAL_CODE = (WritableCell) labelPOSTAL_CODE;\n\t\t\t\tsheetToEdit.addCell(cellPOSTAL_CODE);\n\n\t\t\t\t//------------------ COL_24: COL_LS_ORDER_ID-----------------\n\t\t\t\tlabelLS_ORDER_ID = new Label(COL_LS_ORDER_ID-1, row, """",cellFormat);\n\t\t\t\tcellLS_ORDER_ID = (WritableCell) labelLS_ORDER_ID;\n\t\t\t\tsheetToEdit.addCell(cellLS_ORDER_ID);\n\t\t\t\t\n\t\t\t\t//------------------ COL_25: COL_CURRENCY-----------------\n\t\t\t\tlabelCURRENCY = new Label(COL_CURRENCY-1, row, """",cellFormat);\n\t\t\t\tcellCURRENCY = (WritableCell) labelCURRENCY;\n\t\t\t\tsheetToEdit.addCell(cellCURRENCY);\n\t\t\t}\n\t\t\tworkbookCopy.write();\n\t\t\tworkbookCopy.close();\n\t\t\texistingWorkbook.close();\n\t\t} catch (Exception x) {\n\t\t\tx.printStackTrace();\n\t\t}\n\t}\n\n\t/**----------------------------------------------------------\n\t *CREATE CSV FOR EST TOOL*\n\t  -----------------------------------------------------------*/\n\t@Override\n\tpublic void generateAdminEstTool(List<OrdersDTO >listOrdersDTO, String filePathData,boolean selection){\n\t\t//COLUMNS Data\n\t\tString RECORD_TYPE=""2""; \t\t// 1:Recode Type\n\t\tString LS_ORDER_ID="""";\t\t\t// 2:Imported Order ID\n\t\tString CLIENT_LOGIN="""";\t\t\t// 3:Client ID\n\t\tString TITLE_NAME="""";\t\t\t// 4:Title Name\n\t\tString CLIENT_FIRST_NAME="""";\t// 5:First Name\n\t\tString CLIENT_LAST_NAME="""";\t\t// 6:Last Name\n\t\tString DEPT="""";\t\t\t\t\t// 7:Title/Dept\n\t\tString COMPANY_HEADER="""";\t\t// 8:Company Name\n\t\tString CLIENT_STREET_INF="""";\t\t// 9:Add'1 Address Information\n\t\tString CLIENT_STREET1="""";\t// 10:Address Line 1\n\t\tString CLIENT_STREET2="""";\t\t// 11:Address Line 2\n\t\tString CLIENT_CITY="""";\t\t\t// 12:City\n\n\t\tString CLIENT_PROVINCE="""";\t\t// 13:Province or State\n\t\tString CLIENT_POSTAL_CODE="""";\t// 14:Postal Code or Zip Code\n\t\tString COUNTRY_CODE=""CA"";\t\t// 15:Country Code\n\n\t\tString CLIENT_PHONE="""";\t\t\t// 16:Client Voice Phone\n\t\tString CLIENT_FAX="""";\t\t\t// 17:Client FAX Number\n\n\t\tString CLIENT_EMAIL="""";\t\t\t// 18:Client Email Address\n\t\tString WEIGHT=""0"";\t\t\t\t// 19:Weight\n\n\t\tString data;\n\n\t\ttry{\n\n\t\t\tString fileName=filePathData+""EST_TOOL.csv"";\n\t\t\tFile file = new File(fileName);\n\t\t\tif(file.exists())file.delete();\n\t\t\tfile = new File(fileName);\n\t\t\tPrintWriter pw= new PrintWriter(new FileWriter(fileName,true),true);\n\t\t\t\n\t\t\tList<OrdersDTO>listOrdersDTOfiler=new ArrayList<OrdersDTO>();\n\t\t\t//if admin select just some orders to get their cvs Canada post\n\t\t\tif(selection){\n\t\t\t\tfor(OrdersDTO ord:listOrdersDTO){\n\t\t\t\t\tif((ord.getPrint()!=null && ord.getPrint()==true)\n\t\t\t\t\t\t\t&&(ord.getRowsList().get(0).getStatus()!=null && ord.getRowsList().get(0).getStatus().equals(""progress"")))listOrdersDTOfiler.add(ord);\n\t\t\t\t}\n\t\t\t//if admin select all orders, select just witch has status progress\n\t\t\t}else{\n\t\t\t\tfor(OrdersDTO ord:listOrdersDTO){\n\t\t\t\t\tif(ord.getRowsList().get(0).getStatus()!=null && ord.getRowsList().get(0).getStatus().equals(""progress"")){\n\t\t\t\t\t\tlistOrdersDTOfiler.add(ord);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t//Creation of csv for Canada Post\n\t\t\tfor (OrdersDTO orderDTO : listOrdersDTOfiler) {\n\t\t\t\tLS_ORDER_ID="""";\n\t\t\t\tCLIENT_LOGIN="""";\n\t\t\t\tTITLE_NAME="""";\n\t\t\t\tCLIENT_FIRST_NAME="""";\n\t\t\t\tCLIENT_LAST_NAME="""";\n\t\t\t\tDEPT="""";\n\t\t\t\tCOMPANY_HEADER="""";\n\t\t\t\tCLIENT_STREET_INF="""";\n\t\t\t\tCLIENT_STREET1="""";\n\t\t\t\tCLIENT_STREET2="""";\n\t\t\t\tCLIENT_CITY="""";\n\t\t\t\tCLIENT_PROVINCE="""";\n\t\t\t\tCLIENT_POSTAL_CODE="""";\n\t\t\t\tCOUNTRY_CODE=""CA"";\n\t\t\t\tCLIENT_PHONE="""";\n\t\t\t\tCLIENT_FAX="""";\n\t\t\t\tCLIENT_EMAIL="""";\n\n\t\t\t\tdata="""";\n\t\t\t\t// 1: RECORD TYPE (must be always 2)\n\t\t\t\tdata+=RECORD_TYPE+"","";\n\n\t\t\t\t// 2: LS_ORDER_ID (must be lest than 35 letters)\n\t\t\t\tLS_ORDER_ID = orderDTO.getLsOrderId();\n\t\t\t\tif(LS_ORDER_ID.length()>30){\n\t\t\t\t\tLS_ORDER_ID=""?????"";\n\t\t\t\t}\n\t\t\t\tdata+=""\\""""+LS_ORDER_ID+""\\"","";\n\n\n\t\t\t\t// 3: CLIENT_LOGIN="""" (must be lest than 30 letters)\n\t\t\t\tif(orderDTO.getUserLogin()!=null)CLIENT_LOGIN = orderDTO.getUserLogin();\n\t\t\t\tif(CLIENT_LOGIN.length()>30){\n\t\t\t\t\tLS_ORDER_ID=""?????"";\n\t\t\t\t}\n\t\t\t\tdata+=""\\""""+CLIENT_LOGIN+""\\"","";\n\n\n\t\t\t\t// 4: TITLE_NAME (must be lest than 14 letters)\n\t\t\t\tdata+=""\\""""+TITLE_NAME+""\\"","";\n\n\n\t\t\t\t// 5: CLIENT_FIRST_NAME (must be lest than 30 letters)\n\t\t\t\tif(orderDTO.getClientFirstName()!=null)CLIENT_FIRST_NAME=orderDTO.getClientFirstName();\n\t\t\t\tif(CLIENT_FIRST_NAME.length()>30){\n\t\t\t\t\tCLIENT_FIRST_NAME=""?????"";\n\t\t\t\t}\n\t\t\t\tdata+=""\\""""+CLIENT_FIRST_NAME+""\\"","";\n\n\n\t\t\t\t// 6: CLIENT_LAST_NAME (must be lest than 40 letters)\n\t\t\t\tif(orderDTO.getClientLastName()!=null)CLIENT_LAST_NAME=orderDTO.getClientLastName();\n\t\t\t\tif(CLIENT_LAST_NAME.length()>40){\n\t\t\t\t\tCLIENT_LAST_NAME=""?????"";\n\t\t\t\t}\n\t\t\t\tdata+=""\\""""+CLIENT_LAST_NAME+""\\"","";\n\n\n\t\t\t\t// 7: TITLE_NAME (must be lest than 44 letters)\n\t\t\t\tdata+=""\\""""+DEPT+""\\"","";\n\n\n\t\t\t\t// 8: COMPANY_HEADER\n\t\t\t\tif(orderDTO.getCompanyHeader()!=null)COMPANY_HEADER=orderDTO.getCompanyHeader();\n\t\t\t\tif(COMPANY_HEADER.length()>40){\n\t\t\t\t\tCOMPANY_HEADER=""?????"";\n\t\t\t\t}\n\t\t\t\tdata+=""\\""""+COMPANY_HEADER+""\\"","";\n\n\n\t\t\t\t// 9: CLIENT_STREET_INF (must be lest than 44 letters)\n\t\t\t\tOrdersRows orderR=orderDTO.getRowsList().get(0);\n\t\t\t\tif(orderR.getLsProductID()!=null)CLIENT_STREET_INF=orderR.getLsProductID();\n\t\t\t\tCLIENT_STREET_INF="""";\n\t\t\t\tif(CLIENT_STREET_INF!=null && CLIENT_STREET_INF.length()>44){\n\t\t\t\t\tCLIENT_STREET_INF=""?????"";\n\t\t\t\t}\n\t\t\t\tdata+=""\\""""+CLIENT_STREET_INF+""\\"","";\n\n\n\t\t\t\t// 10: CLIENT_STREET1 (must be lest than 44 letters)\n\t\t\t\tif(orderDTO.getClientStreet()!=null)CLIENT_STREET1=orderDTO.getClientStreet();\n\t\t\t\tif(CLIENT_STREET1.length()>44){\n\t\t\t\t\tCLIENT_STREET1=""?????"";\n\t\t\t\t}\n\t\t\t\tCLIENT_STREET1=CLIENT_STREET1.replaceAll("","", "" "");\n\n\t\t\t\tdata+=""\\""""+CLIENT_STREET1+""\\"","";\n\n\n\t\t\t\t// 11: CLIENT_STREET3 (must be lest than 44 letters)\n\t\t\t\tif(orderDTO.getClientOtherStreet()!=null)CLIENT_STREET2=orderDTO.getClientOtherStreet();\n\t\t\t\tif(CLIENT_STREET2.length()>44){\n\t\t\t\t\tCLIENT_STREET2=""?????"";\n\t\t\t\t}\n\t\t\t\tCLIENT_STREET2=CLIENT_STREET2.replaceAll("","", "" "");\n\t\t\t\tdata+=""\\""""+CLIENT_STREET2+""\\"","";\n\n\t\t\t\t// 12: CLIENT_CITY (must be lest than 25 letters)\n\t\t\t\tif(orderDTO.getClientCity()!=null)CLIENT_CITY=orderDTO.getClientCity();\n\t\t\t\tif(CLIENT_CITY.length()>25){\n\t\t\t\t\tCLIENT_CITY=""?????"";\n\t\t\t\t}\n\t\t\t\tdata+=""\\""""+CLIENT_CITY+""\\"","";\n\n\t\t\t\t// 13: CLIENT_PROVINCE (must be lest than 2 letters)\n\t\t\t\tif(orderDTO.getClientProvince()!=null)CLIENT_PROVINCE=orderDTO.getClientProvince();\n\t\t\t\tif(CLIENT_PROVINCE.length()>2){\n\t\t\t\t\tCLIENT_PROVINCE=""?????"";\n\t\t\t\t}\n\t\t\t\tdata+=""\\""""+CLIENT_PROVINCE+""\\"","";\n\n\n\t\t\t\t// 14: CLIENT_POSTAL_CODE (must be lest than 14 letters)\n\t\t\t\tif(orderDTO.getClientPostalCode()!=null)CLIENT_POSTAL_CODE=orderDTO.getClientPostalCode();\n\t\t\t\tif(CLIENT_POSTAL_CODE.length()>14){\n\t\t\t\t\tCLIENT_POSTAL_CODE=""?????"";\n\t\t\t\t}\n\t\t\t\tdata+=""\\""""+CLIENT_POSTAL_CODE+""\\"","";\n\n\n\t\t\t\t// 15: COUNTRY_CODE(must be lest than 3 letters)\n\t\t\t\tdata+=""\\""""+COUNTRY_CODE+""\\"","";\n\n\n\t\t\t\t// 16: CLIENT_PHONE (must be lest than 25 letters)\n\t\t\t\tif(orderDTO.getClientPhone()!=null)CLIENT_PHONE = orderDTO.getClientPhone();\n\t\t\t\tif(CLIENT_PHONE.length()>25){\n\t\t\t\t\tCLIENT_PHONE=""?????"";\n\t\t\t\t}\n\t\t\t\tdata+=""\\""""+CLIENT_PHONE+""\\"","";\n\n\t\t\t\t// 17: CLIENT_FAX (must be lest than 25 letters)\n\t\t\t\tdata+=""\\""""+CLIENT_FAX+""\\"","";\n\n\n\t\t\t\t// 18: CLIENT_EMAIL (must be lest than 60 letters)\n\t\t\t\tif(orderDTO.getClientEmail()!=null)CLIENT_EMAIL = orderDTO.getClientEmail();\n\t\t\t\tif(CLIENT_EMAIL.length()>60){\n\t\t\t\t\tCLIENT_EMAIL=""?????"";\n\t\t\t\t}\n\t\t\t\tdata+=""\\""""+CLIENT_EMAIL+""\\"","";\n\n\n\t\t\t\t// 3: WEIGHT (must be lest than 9 letters)\n\t\t\t\tdata+=WEIGHT;\n\n\t\t\t\tpw.println(data);\n\t\t\t\t//}\n\t\t\t}\n\t\t\tpw.close();\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\n\n\t}\n\n\t/**----------------------------------------------------------\n\t *UPDATE TABLE ORDERS ROWS IN DATABASES FROM XLS FILE*\n\t *WE SAVE TRACKING NUMBER,SHUPPING DATE AND SHIPPING PRICE*\n\t  -----------------------------------------------------------*/\n\t@Override\n\tpublic void updateOrdersRowsFromAdminXLS(String userAdminLogin,String destFileAdminXLS)throws Exception{\n\t\tString errorReport="""";\n\t\t//variable indicating the numbers of columns in the XLS file\n\t\tint ROW_TO_START = 0;\n\t\t//F:6 G:7 H:8\n\t\tfinal int COL_F = 6;\n\t\tfinal int COL_G = 7;\n\t\tfinal int COL_H = 8;\n\t\tfinal int COL_I = 9;\n\t\tfinal int COL_LS_ORDER_ID=31;\n\t\tfinal int COL_TRACKING_NUMBER=17;\n\t\tfinal int COL_SHIPPING_PRICE=10;\n\t\tfinal int COL_BOX_LENGTH = 12;\t\t//In cm\n\t\tfinal int COL_BOX_WIDTH = 13;\t\t//In cm\n\t\tfinal int COL_BOX_HEIGTH = 14;\t\t//In cm\n\t\tfinal int COL_BOX_TOTAL_WEIGHT = 5;\t//In kg\n\t\t\n\t\tString  strSHIPPING_PRICE="""";\n\t\t//Values of cells\n\t\tString  LS_ORDER_ID="""";\n\t\tDate SHIPPED_DATE=null;\n\t\tString TRACKING_NUMBER = null;\n\t\tDouble SHIPPING_PRICE = null;\n\t\tDouble VAL_F = null;\n\t\tDouble VAL_G = null;\n\t\tDouble VAL_H = null;\n\t\tDouble VAL_I = null;\n\t\tDouble BOX_LENGTH = null;\n\t\tDouble BOX_WIDTH = null;\n\t\tDouble BOX_HEIGTH = null;\n\t\tDouble BOX_TOTAL_WEIGHT = null;\n\t\t\n\t\t//Cells\n\t\tCell cellLS_ORDER_ID= null;\n\t\tCell cellTRACKING_NUMBER= null;\n\t\tCell cellSHIPPING_PRICE= null;\n\n\t\tCell cellF = null;\n\t\tCell cellG = null;\n\t\tCell cellH = null;\n\t\tCell cellI = null;\n\t\tCell cellBOX_LENGTH = null;\n\t\tCell cellBOX_WIDTH = null;\n\t\tCell cellBOX_HEIGTH = null;\n\t\tCell cellBOX_TOTAL_WEIGHT = null;\n\n\t\t//try {\n\t\tWorkbook existingWorkbook = Workbook.getWorkbook(new File(destFileAdminXLS+""ordersAdminImport.xls""));\n\t\tSheet sheetToRead=existingWorkbook.getSheet(0);\n\t\tint ROW_MAX = sheetToRead.getRows();\n\t\t\n\t\tfor(int row=ROW_TO_START; row< ROW_MAX;row++) {\n\n\t\t\t//--------------- 31: LS_ORDER_ID\n\t\t\tcellLS_ORDER_ID = sheetToRead.getCell(COL_LS_ORDER_ID-1, row);\t\t\t\n\t\t\tif(cellLS_ORDER_ID!=null){\n\t\t\t\tLS_ORDER_ID = cellLS_ORDER_ID.getContents();\n\t\t\t\tLS_ORDER_ID=LS_ORDER_ID.replaceAll("" "", """");\n\t\t\t}\n\t\t\tif(LS_ORDER_ID==null || LS_ORDER_ID.equals("""")){\n\t\t\t\terrorReport+="" ""+(row+1)+"" ,LS_ORDER_ID:""+LS_ORDER_ID+"" ,|---->dosen't exist \\n"";\n\t\t\t}\n\n\t\t\t//--------------- SHIPPED_DATE\n\t\t\tSHIPPED_DATE=new Date();\n\n\t\t\t//--------------- 17: TRACKING_NUMBER\n\t\t\tcellTRACKING_NUMBER = sheetToRead.getCell(COL_TRACKING_NUMBER-1, row);\t\t\t\n\t\t\tif(cellTRACKING_NUMBER!=null){\n\t\t\t\tTRACKING_NUMBER = cellTRACKING_NUMBER.getContents();\n\t\t\t\tTRACKING_NUMBER=TRACKING_NUMBER.replaceAll("" "", """");\n\t\t\t}\n\t\t\tif(TRACKING_NUMBER==null || TRACKING_NUMBER.equals("""")){\n\t\t\t\terrorReport+="" ""+(row+1)+"" ,TRACKING_NUMBER:""+TRACKING_NUMBER+"" ,|---->dosen't exist \\n"";\n\t\t\t}\n\n\t\t\t//--------------- 10:SHIPPING_PRICE\n\n\t\t\t// COL 6:value of column H VAL_F\n\t\t\tcellF = sheetToRead.getCell(COL_F-1, row);\t\t\t\n\t\t\tif(cellF!=null){\n\t\t\t\tString strVAL_F = cellF.getContents();\n\t\t\t\tVAL_F=getDoubleFromString(strVAL_F,3);\n\t\t\t}\n\t\t\t// COL 7:value of column H VAL_G\n\t\t\tcellG = sheetToRead.getCell(COL_G-1, row);\t\t\t\n\t\t\tif(cellG!=null){\n\t\t\t\tString strVAL_G = cellG.getContents();\n\t\t\t\tVAL_G=getDoubleFromString(strVAL_G,3);\n\t\t\t}\n\t\t\t// COL 8:value of column H VAL_H\n\t\t\tcellH = sheetToRead.getCell(COL_H-1, row);\t\t\t\n\t\t\tif(cellH!=null){\n\t\t\t\tString strVAL_H = cellH.getContents();\n\t\t\t\tVAL_H=getDoubleFromString(strVAL_H,3);\n\t\t\t}\n\t\t\t// COL 9:value of column I VAL_I\n\t\t\tcellI = sheetToRead.getCell(COL_I-1, row);\t\t\t\n\t\t\tif(cellI!=null){\n\t\t\t\tString strVAL_I = cellI.getContents();\n\t\t\t\tVAL_I=getDoubleFromString(strVAL_I,3);\n\t\t\t}\n\t\t\tif(VAL_F!=null && VAL_G!=null && VAL_H!=null && VAL_I!=null){\n\t\t\t\tSHIPPING_PRICE=VAL_F+VAL_G+VAL_H+VAL_I;\n\t\t\t\tSHIPPING_PRICE = (double) Math.round(SHIPPING_PRICE * 100) / 100;\n\t\t\t}else errorReport+="" ""+(row+1)+"" ,SHIPPING_PRICE:""+strSHIPPING_PRICE+"" ,|---->is null \\n"";\n\t\t\t//--------------- 12: BOX_LENGTH\n\t\t\tcellBOX_LENGTH = sheetToRead.getCell(COL_BOX_LENGTH-1, row);\n\t\t\tif(cellBOX_LENGTH!=null){\n\t\t\t\tString strBOX_LENGTH = cellBOX_LENGTH.getContents().replaceAll("" "", """");\n\t\t\t\tif(!strBOX_LENGTH.equals("""")) {\n\t\t\t\t\tBOX_LENGTH = getDoubleFromString(strBOX_LENGTH,3);\n\t\t\t\t} else errorReport+="" ""+(row+1)+"" ,BOX_LENGTH:""+strBOX_LENGTH+"" ,|---->is empty \\n"";\n\t\t\t} else errorReport+="" ""+(row+1)+"" ,BOX_LENGTH: ""+"" ,|---->is null \\n"";\n\t\t\t\n\t\t\t//--------------- 13: BOX_WIDTH\n\t\t\tcellBOX_WIDTH = sheetToRead.getCell(COL_BOX_WIDTH-1, row);\t\t\t\n\t\t\tif(cellBOX_WIDTH!=null){\n\t\t\t\tString strBOX_WIDTH = cellBOX_WIDTH.getContents().replaceAll("" "", """");\n\t\t\t\tif(!strBOX_WIDTH.equals("""")) {\n\t\t\t\t\tBOX_WIDTH = getDoubleFromString(strBOX_WIDTH,3);\n\t\t\t\t} else errorReport+="" ""+(row+1)+"" ,BOX_WIDTH:""+strBOX_WIDTH+"" ,|---->is empty \\n"";\n\t\t\t} else errorReport+="" ""+(row+1)+"" ,BOX_WIDTH: ""+"" ,|---->is null \\n"";\n\t\t\t\n\t\t\t//--------------- 14: BOX_HEIGTH\n\t\t\tcellBOX_HEIGTH = sheetToRead.getCell(COL_BOX_HEIGTH-1, row);\t\t\t\n\t\t\tif(cellBOX_HEIGTH!=null){\n\t\t\t\tString strBOX_HEIGTH = cellBOX_HEIGTH.getContents().replaceAll("" "", """");\n\t\t\t\tif(!strBOX_HEIGTH.equals("""")) {\n\t\t\t\t\tBOX_HEIGTH = getDoubleFromString(strBOX_HEIGTH,3);\n\t\t\t\t} else errorReport+="" ""+(row+1)+"" ,BOX_HEIGTH:""+strBOX_HEIGTH+"" ,|---->is empty \\n"";\n\t\t\t} else errorReport+="" ""+(row+1)+"" ,BOX_HEIGTH: ""+"" ,|---->is null \\n"";\n\t\t\t\n\t\t\t//--------------- 5:  BOX_TOTAL_WEIGHT\n\t\t\tcellBOX_TOTAL_WEIGHT = sheetToRead.getCell(COL_BOX_TOTAL_WEIGHT-1, row);\t\t\t\n\t\t\tif(cellBOX_TOTAL_WEIGHT!=null){\n\t\t\t\tString strBOX_TOTAL_WEIGHT = cellBOX_TOTAL_WEIGHT.getContents().replaceAll("" "", """");\n\t\t\t\tif(!strBOX_TOTAL_WEIGHT.equals("""")) {\n\t\t\t\t\tBOX_TOTAL_WEIGHT = getDoubleFromString(strBOX_TOTAL_WEIGHT,3);\n\t\t\t\t} else errorReport+="" ""+(row+1)+"" ,BOX_TOTAL_WEIGHT:""+strBOX_TOTAL_WEIGHT+"" ,|---->is empty \\n"";\n\t\t\t} else errorReport+="" ""+(row+1)+"" ,BOX_TOTAL_WEIGHT: ""+"" ,|---->is null \\n"";\n\t\t\ttry {\n\t\t\t//--------------- Update Row if shipped\n\t\t\tif(LS_ORDER_ID!=null){\n\t\t\t\tOrdersRows orderRow=getRowByLsOrderId(LS_ORDER_ID);\n\t\t\t\tif(orderRow!=null){\n\t\t\t\t\tLong productId = orderRow.getProductId();\n\t\t\t\t\tDouble quantity = orderRow.getQuantity();\n\t\t\t\t\tOrdersDTO orderDTO=getOrderDTOByLsOrderId(orderRow.getLsOrderId());\n\t\t\t\t\tOrdersSpecialShippingDTO ordSpecialShipDTO=new OrdersSpecialShippingDTO();\n\t\t\t\t\tordSpecialShipDTO.setProductId(orderRow.getProductId());\n\t\t\t\t\tordSpecialShipDTO.setUserId(orderDTO.getUserId());\n\t\t\t\t\tOrdersSpecialShippingDTO OrdSpecialShip=getOrderSpecialShipping(ordSpecialShipDTO);\n\t\t\t\t\tif(OrdSpecialShip!=null){\n\t\t\t\t\t\tSHIPPING_PRICE=OrdSpecialShip.getShippingPrice();\n\t\t\t\t\t\tSHIPPING_PRICE = (double) Math.round(SHIPPING_PRICE * 100) / 100;\n\t\t\t\t\t}\n\t\t\t\t\tif(TRACKING_NUMBER!=null && !TRACKING_NUMBER.equals("""")&& SHIPPING_PRICE!=null){\n\t\t\t\t\t\torderRow.setShippedDate(SHIPPED_DATE);\n\t\t\t\t\t\torderRow.setShippingPrice(SHIPPING_PRICE);\n\t\t\t\t\t\torderRow.setTrackingNumber(TRACKING_NUMBER);\n\t\t\t\t\t\torderRow.setShippingCompany(""Canada Post"");\n\t\t\t\t\t\tmakeRowOrderInShippedById(orderRow);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tmakeRowOrderInOpenById(orderRow);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t//update Box sizes and make them verified if they are not\n\t\t\t\t\tif(productId != null) {\n\t\t\t\t\t  if(quantity == 1) {\n\t\t\t\t\t\t  if(BOX_LENGTH!=null && BOX_WIDTH!=null && BOX_HEIGTH!=null && BOX_TOTAL_WEIGHT!=null) {\n\t\t\t\t\t\t\tBoxDTO boxDTO = new BoxDTO();\n\t\t\t\t\t\t\tproductService = getServiceLocator().getProductService();\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tboxDTO = productService.getBoxByProductId(productId);\n\t\t\t\t\t\t\t} catch (Exception e) {\n\t\t\t\t\t\t\t\te.printStackTrace();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t//Make Lenght the biggest size between L,W and H\n\t\t\t\t\t\t\tDouble permute;\n\t\t\t\t\t\t\tif(BOX_LENGTH < BOX_HEIGTH) {\n\t\t\t\t\t\t\t\tpermute    = BOX_LENGTH;\n\t\t\t\t\t\t\t\tBOX_LENGTH = BOX_HEIGTH;\n\t\t\t\t\t\t\t\tBOX_HEIGTH = permute;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(BOX_LENGTH < BOX_WIDTH) {\n\t\t\t\t\t\t\t\tpermute = BOX_LENGTH;\n\t\t\t\t\t\t\t\tBOX_LENGTH = BOX_WIDTH;\n\t\t\t\t\t\t\t\tBOX_WIDTH = permute;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(BOX_WIDTH < BOX_HEIGTH) {\n\t\t\t\t\t\t\t\tpermute = BOX_WIDTH;\n\t\t\t\t\t\t\t\tBOX_WIDTH = BOX_HEIGTH;\n\t\t\t\t\t\t\t\tBOX_HEIGTH = permute;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t//Convert from ""cm"" to ""inch"" and from ""kg"" to ""lbs""\n\t\t\t\t\t\t\tDecimalFormat twoDForm = new DecimalFormat(""#.##"");\n\t\t\t\t\t\t\tDouble boxLengthInch = \tDouble.valueOf(twoDForm.format(BOX_LENGTH *0.393701));\n\t\t\t\t\t\t\tDouble boxWidthInch  =  Double.valueOf(twoDForm.format(BOX_WIDTH  *0.393701));\n\t\t\t\t\t\t\tDouble boxHeightInch =  Double.valueOf(twoDForm.format(BOX_HEIGTH *0.393701));\n\t\t\t\t\t\t\tDouble boxTotalWeightLbs = Double.valueOf(twoDForm.format(BOX_TOTAL_WEIGHT * 2.20462));\n\t\t\t\t\t\t\t//If the product doesn't exist in the ""product_box"" table\n\t\t\t\t\t\t\tif(boxDTO==null) {\n\t\t\t\t\t\t\t\tboxDTO = new BoxDTO();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tboxDTO.setProductId(productId);\n\t\t\t\t\t\t\tboxDTO.setLength(boxLengthInch);\n\t\t\t\t\t\t\tboxDTO.setWidth(boxWidthInch);\n\t\t\t\t\t\t\tboxDTO.setHeight(boxHeightInch);\n\t\t\t\t\t\t\tboxDTO.setTotalWeight(boxTotalWeightLbs);\n\t\t\t\t\t\t\tboxDTO.setStatusId(1);\n\t\t\t\t\t\t\tproductService.updateProductBoxIfCpNotVerified(boxDTO);\n\t\t\t\t\t\t  }\n\t\t\t\t\t  }// End -- if(quantity == 1)\n\t\t\t\t\t}//End -- if(productId != null)\n\t\t\t\t\t\n\t\t\t\t} else errorReport+="" ""+(row+1)+"" ,LS_ORDER_ID:""+LS_ORDER_ID+"" ,|---->dosen't exist \\n"";\n\t\t\t}\n\t\t\t}catch (Exception e) {\n\t\t\t\tSystem.out.println(""row:""+row);\n\t\t\t\te.printStackTrace();\n\t\t\t\t// TODO: handle exception\n\t\t\t}\n\t\t\t\n\t\t}\n\n\t\tcreateLogsFile(userAdminLogin,destFileAdminXLS, errorReport,2);\n\t\tFile ordersAdminImport=new File(destFileAdminXLS+""ordersAdminImport.xls"");\n\t\tordersAdminImport.delete();\n\n\n\t}\n\n\tpublic Double getDoubleFromString(String str,int nbDecimal){\n\t\tDouble result=null;\n\t\tstr=str.replaceAll("" "", """");\n\t\tif(str!=null && !str.equals("""")){\n\t\t\tint index=str.indexOf("","");\n\t\t\tif(index<0)index=str.indexOf(""."");\n\t\t\tif(index>=0){\n\t\t\t\tString str1=str.substring(0, index);\n\t\t\t\tString str2= str.substring(index+1, str.length());\n\t\t\t\tif(str2.length()>nbDecimal)str2=str2.substring(0, nbDecimal);\n\t\t\t\tstr=str1+"".""+str2;\n\t\t\t}\n\t\t}\n\t\ttry {\n\t\t\tresult = Double.parseDouble(str);\n\t\t}\n\t\tcatch (Exception pe) {\n\t\t\tresult=null;\n\t\t}\n\t\treturn result;\n\t}\n\n\t@Override\n\tpublic String getStringFromDouble(Double value,int nbDecimal){\n\t\tString result=null;\n\t\tif(value!=null){\n\t\t\tString str=value+"""";\n\t\t\tString str1="""";\n\t\t\tString str2="""";\n\t\t\tstr=str.replaceAll("" "", """");\n\t\t\tif(str!=null && !str.equals("""")){\n\t\t\t\tint index=str.indexOf("","");\n\t\t\t\tif(index<0)index=str.indexOf(""."");\n\t\t\t\tif(index>=0){\n\t\t\t\t\tstr1=str.substring(0, index);\n\t\t\t\t\tstr2= str.substring(index+1, str.length());\n\t\t\t\t\tint decimal=str2.length();\n\t\t\t\t\tswitch (decimal) {\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tstr2=""0000"";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tstr2=str2+""000"";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tstr2=str2+""00"";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tstr2=str2+""0"";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\tstr2=""0000"";\n\t\t\t\t}\n\t\t\t}\n\t\t\tstr2=str2.substring(0, nbDecimal);\t\t\t\t\t\n\t\t\tstr=str1+"".""+str2;\n\t\t\tresult=str;\n\t\t}\n\t\treturn result;\n\t}\n\n\t\n\t\n\t\n\t/**----------------------------------------------------------\n\t *UPDATE TABLE STOCK IN DATABASES FROM XLS FILE*\n\t  -----------------------------------------------------------*/\n/*\t@Override\n\tpublic List<OrdersDTO> listStockFromXLS(String userAdminLogin,String destFileStockXLS)throws Exception{\n\t\tString errorReport="""";\n\t\t//variable indicating the numbers of columns in the XLS file\n\t\tint ROW_TO_START = 1;\n\t\tfinal int COL_LS_PRODUCT_ID=1;\n\t\tfinal int COL_STOCK=2;\n\n\t\tString  strSTOCK="""";\n\n\t\t//Values of cells\n\t\tString  LS_PRODUCT_ID="""";\n\t\tDouble STOCK = null;\n\n\t\t//Cells\n\t\tCell cellLS_PRODUCT_ID= null;\n\t\tCell cellSTOCK= null;\n\n\t\tproductService=serviceLocator.getProductService();\n\t\torderService = serviceLocator.getOrderService();\n\n\t\tWorkbook existingWorkbook = Workbook.getWorkbook(new File(destFileStockXLS+""stock.xls""));\n\t\tSheet sheetToRead=existingWorkbook.getSheet(0);\n\t\tint ROW_MAX = sheetToRead.getRows();\n\t\tList<OrdersDTO> listStock = new ArrayList<OrdersDTO>() ;\n\t\tOrdersDTO orderDTO;\n\t\tfor(int row=ROW_TO_START; row< ROW_MAX;row++) {\n\n\t\t\t//--------------- 1: LS_PRODUCT_ID\n\t\t\tcellLS_PRODUCT_ID = sheetToRead.getCell(COL_LS_PRODUCT_ID-1, row);\t\t\t\n\t\t\tif(cellLS_PRODUCT_ID!=null)LS_PRODUCT_ID = cellLS_PRODUCT_ID.getContents();\n\t\t\tif(LS_PRODUCT_ID==null || LS_PRODUCT_ID.equals("""")){\n\t\t\t\terrorReport+="" ""+(row+1)+"" ,LS_PRODUCT_ID:""+LS_PRODUCT_ID+"" ,|---->dosen't exist \\n"";\n\t\t\t}else{\n\t\t\t\tint index=LS_PRODUCT_ID.indexOf(""/"");\n\t\t\t\tif(index>0)LS_PRODUCT_ID=LS_PRODUCT_ID.substring(0, index);\n\n\t\t\t}\n\t\t\t//--------------- 2:STOCK\n\t\t\tcellSTOCK = sheetToRead.getCell(COL_STOCK-1, row);\t\t\t\n\t\t\tif(cellSTOCK!=null){\n\t\t\t\tstrSTOCK = cellSTOCK.getContents();\n\t\t\t\tstrSTOCK=strSTOCK.replaceAll("" "", """");\n\t\t\t\tif(strSTOCK!=null && !strSTOCK.equals("""")){\n\t\t\t\t\tint index=strSTOCK.indexOf("","");\n\t\t\t\t\tif(index>=0){\n\t\t\t\t\t\tString strSTOCK1=strSTOCK.substring(0, index);\n\t\t\t\t\t\tString strSTOCK2= strSTOCK.substring(index+1, strSTOCK.length());\n\t\t\t\t\t\tstrSTOCK=strSTOCK1+"".""+strSTOCK2;\n\t\t\t\t\t}\n\t\t\t\t}else errorReport+="" ""+(row+1)+"" ,STOCK:""+strSTOCK+"" ,|---->is null \\n"";\n\t\t\t\tSTOCK=null;\n\t\t\t\ttry {\n\t\t\t\t\tSTOCK = Double.parseDouble(strSTOCK);\n\t\t\t\t}\n\t\t\t\tcatch (Exception pe) {\n\t\t\t\t\tSTOCK=null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t\n\t\t\t//--------------- Update Row if shipped\n\t\t\tif(LS_PRODUCT_ID!=null){\n\t\t\t\t// Replace all white spaces\n\t\t\t\tLS_PRODUCT_ID = LS_PRODUCT_ID.replaceAll(""\\\\s"","""");\n\t\t\t\tProductDTO pDTO=productService.getProductByLsProductId(LS_PRODUCT_ID);\n\t\t\t\tif(pDTO!=null){\n\t\t\t\t\tLong productId = pDTO.getId();\n\t\t\t\t\tif (productId!=null && STOCK!=null) {\n\t\t\t\t\t\torderDTO = new OrdersDTO();\n\t\t\t\t\t\torderDTO.setProductId(productId);\n\t\t\t\t\t\torderDTO.setStock(STOCK);\n\t\t\t\t\t\tlistStock.add(orderDTO);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tList<Orders>listOrders=getOrdersList();\n\t\t//orderService.updateStock(listStock);\n\t\tcreateLogsFile(userAdminLogin,destFileStockXLS, errorReport,1);\n\t\treturn listStock;\n\n\t}\n\t*/\n\t\n\t\n\t\n\t/**----------------------------------------------------------\n\t *UPDATE TABLE STOCK IN DATABASES FROM XLS FILE*\n\t  -----------------------------------------------------------*/\n\t/*@Override\n\tpublic void updateStockFromStockXLS(List<OrdersDTO>listStock)throws Exception{\n\t\tString errorReport="""";\n\t\t//variable indicating the numbers of columns in the XLS file\n\t\tint ROW_TO_START = 1;\n\t\tfinal int COL_LS_PRODUCT_ID=1;\n\t\tfinal int COL_STOCK=2;\n \n\t\tString  strSTOCK="""";\n\n\t\t//Values of cells\n\t\tString  LS_PRODUCT_ID="""";\n\t\tDouble STOCK = null;\n\n\t\t//Cells\n\t\tCell cellLS_PRODUCT_ID= null;\n\t\tCell cellSTOCK= null;\n\n\t\tproductService=serviceLocator.getProductService();\n\t\torderService = serviceLocator.getOrderService();\n\n\t\tWorkbook existingWorkbook = Workbook.getWorkbook(new File(destFileStockXLS+""stock.xls""));\n\t\tSheet sheetToRead=existingWorkbook.getSheet(0);\n\t\tint ROW_MAX = sheetToRead.getRows();\n\t\tList<Orders> listStock = new ArrayList<Orders>() ;\n\t\tOrders order;\n\t\tfor(int row=ROW_TO_START; row< ROW_MAX;row++) {\n\n\t\t\t//--------------- 1: LS_PRODUCT_ID\n\t\t\tcellLS_PRODUCT_ID = sheetToRead.getCell(COL_LS_PRODUCT_ID-1, row);\t\t\t\n\t\t\tif(cellLS_PRODUCT_ID!=null)LS_PRODUCT_ID = cellLS_PRODUCT_ID.getContents();\n\t\t\tif(LS_PRODUCT_ID==null || LS_PRODUCT_ID.equals("""")){\n\t\t\t\terrorReport+="" ""+(row+1)+"" ,LS_PRODUCT_ID:""+LS_PRODUCT_ID+"" ,|---->dosen't exist \\n"";\n\t\t\t}else{\n\t\t\t\tint index=LS_PRODUCT_ID.indexOf(""/"");\n\t\t\t\tif(index>0)LS_PRODUCT_ID=LS_PRODUCT_ID.substring(0, index);\n\n\t\t\t}\n\t\t\t//--------------- 2:STOCK\n\t\t\tcellSTOCK = sheetToRead.getCell(COL_STOCK-1, row);\t\t\t\n\t\t\tif(cellSTOCK!=null){\n\t\t\t\tstrSTOCK = cellSTOCK.getContents();\n\t\t\t\tstrSTOCK=strSTOCK.replaceAll("" "", """");\n\t\t\t\tif(strSTOCK!=null && !strSTOCK.equals("""")){\n\t\t\t\t\tint index=strSTOCK.indexOf("","");\n\t\t\t\t\tif(index>=0){\n\t\t\t\t\t\tString strSTOCK1=strSTOCK.substring(0, index);\n\t\t\t\t\t\tString strSTOCK2= strSTOCK.substring(index+1, strSTOCK.length());\n\t\t\t\t\t\tstrSTOCK=strSTOCK1+"".""+strSTOCK2;\n\t\t\t\t\t}\n\t\t\t\t}else errorReport+="" ""+(row+1)+"" ,STOCK:""+strSTOCK+"" ,|---->is null \\n"";\n\t\t\t\tSTOCK=null;\n\t\t\t\ttry {\n\t\t\t\t\tSTOCK = Double.parseDouble(strSTOCK);\n\t\t\t\t}\n\t\t\t\tcatch (Exception pe) {\n\t\t\t\t\tSTOCK=null;\n\t\t\t\t}\n\t\t\t}\n\t\t\t//--------------- Update Row if shipped\n\t\t\tif(LS_PRODUCT_ID!=null){\n\t\t\t\t// Replace all white spaces\n\t\t\t\tLS_PRODUCT_ID = LS_PRODUCT_ID.replaceAll(""\\\\s"","""");\n\t\t\t\tProductDTO pDTO=productService.getProductByLsProductId(LS_PRODUCT_ID);\n\t\t\t\tif(pDTO!=null){\n\t\t\t\t\tLong productId = pDTO.getId();\n\t\t\t\t\tif (productId!=null && STOCK!=null) {\n\t\t\t\t\t\torder = new Orders();\n\t\t\t\t\t\torder.setProductId(productId);\n\t\t\t\t\t\torder.setStock(STOCK);\n\t\t\t\t\t\tlistStock.add(order);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\torderService.updateStock(listStock);\n\t\t//createLogsFile(userAdminLogin,destFileStockXLS, errorReport,1);\n\t}\n*/\n\t/**----------------------------------------------------------\n\t *UPDATE TABLE STOCK IN DATABASES FROM XLS FILE*\n\t  -----------------------------------------------------------*/\n\t@Override\n\tpublic void updateSpecialShippingFromXLS(StringBuffer rapport,String userAdminLogin,Long userId,String destFileXLS)throws Exception{\n\t\tString errorReport="""";\n\t\tString errorReportHtml=""<table border='0'>"";\n\t\t//variable indicating the numbers of columns in the XLS file\n\n\t\t//user_id,ls_product_id,shipping_price,product_id\n\t\tOrdersSpecialShippingDTO specialShippingDTO=null;\n\n\t\tint ROW_TO_START = 1;\n\t\tfinal int COL_LS_PRODUCT_ID=1;\n\t\tfinal int COL_SHIPPING_PRICE=2;\n\n\t\tString  strSHIPPING_PRICE="""";\n\n\t\t//Values of cells\n\t\tString  LS_PRODUCT_ID="""";\n\t\tDouble SHIPPING_PRICE = null;\n\n\t\t//Cells\n\t\tCell cellLS_PRODUCT_ID= null;\n\t\tCell cellSHIPPING_PRICE= null;\n\n\t\tproductService=serviceLocator.getProductService();\n\t\tWorkbook existingWorkbook = Workbook.getWorkbook(new File(destFileXLS+""specialShipping.xls""));\n\t\tSheet sheetToRead=existingWorkbook.getSheet(0);\n\t\tint ROW_MAX = sheetToRead.getRows();\n\t\tfor(int row=ROW_TO_START; row< ROW_MAX;row++) {\n\n\t\t\t//--------------- 1: LS_PRODUCT_ID\n\t\t\tcellLS_PRODUCT_ID = sheetToRead.getCell(COL_LS_PRODUCT_ID-1, row);\t\t\t\n\t\t\tif(cellLS_PRODUCT_ID!=null)LS_PRODUCT_ID = cellLS_PRODUCT_ID.getContents();\n\t\t\tLS_PRODUCT_ID=LS_PRODUCT_ID.replaceAll("" "", """");\n\t\t\tif(LS_PRODUCT_ID!=null && !LS_PRODUCT_ID.equals("""")){\n\t\t\t\tint index=LS_PRODUCT_ID.indexOf(""_"");\n\t\t\t\tif(index==2 && LS_PRODUCT_ID.length()>=3)LS_PRODUCT_ID=LS_PRODUCT_ID.substring(index+1, LS_PRODUCT_ID.length());\n\t\t\t}\n\n\t\t\t//--------------- 2:COL_SHIPPING_PRICE\n\t\t\tcellSHIPPING_PRICE = sheetToRead.getCell(COL_SHIPPING_PRICE-1, row);\t\t\t\n\t\t\tif(cellSHIPPING_PRICE!=null){\n\t\t\t\tstrSHIPPING_PRICE = cellSHIPPING_PRICE.getContents();\n\t\t\t\tstrSHIPPING_PRICE=strSHIPPING_PRICE.replaceAll("" "", """");\n\t\t\t\tstrSHIPPING_PRICE=strSHIPPING_PRICE.replaceAll(""\\\\$"", """");\n\t\t\t\tif(strSHIPPING_PRICE!=null && !strSHIPPING_PRICE.equals("""")){\n\t\t\t\t\tSHIPPING_PRICE=getDoubleFromString(strSHIPPING_PRICE, 3);\n\t\t\t\t}else if(LS_PRODUCT_ID!=null && !LS_PRODUCT_ID.equals("""")){\n\t\t\t\t\terrorReport+="" ""+(row+1)+"",SHIPPING_PRICE:""+strSHIPPING_PRICE+"" ,|---->is null \\n"";\n\t\t\t\t\terrorReportHtml+=""<tr height='20px'><td>Line:""+(row+1)+""</td><td style='padding-left:15px;'>SHIPPING_PRICE:<font style='color:red;'>""+strSHIPPING_PRICE+""</font></td><td style='padding-left:15px;'>dosen't exist</td></tr>"";\n\t\t\t\t}\n\t\t\t\tstrSHIPPING_PRICE=null;\n\t\t\t}\n\n\t\t\t//--------------- Update Row if shipped \n\t\t\tif(LS_PRODUCT_ID!=null){\n\t\t\t\tProductDTO pDTO=productService.getProductByLsProductId(LS_PRODUCT_ID);\n\t\t\t\tif(pDTO!=null){\n\t\t\t\t\tspecialShippingDTO=new OrdersSpecialShippingDTO();\n\t\t\t\t\tspecialShippingDTO.setLsProductId(pDTO.getLoyaltyProductId());\n\t\t\t\t\tspecialShippingDTO.setProductId(pDTO.getId());\n\t\t\t\t\tspecialShippingDTO.setUserId(userId);\n\t\t\t\t\tspecialShippingDTO.setShippingPrice(SHIPPING_PRICE);\n\t\t\t\t\tOrdersSpecialShippingDTO specShippCheck=getOrderSpecialShipping(specialShippingDTO);\n\t\t\t\t\tif(specShippCheck==null){\n\t\t\t\t\t\tinsertOrderSpecialShipping(specialShippingDTO);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tupdateOrderSpecialShipping(specialShippingDTO);\n\t\t\t\t\t}\n\t\t\t\t}else if(LS_PRODUCT_ID!=null && !LS_PRODUCT_ID.equals("""")){\n\t\t\t\t\terrorReport+="" ""+(row+1)+"",LS_PRODUCT_ID:""+LS_PRODUCT_ID+"" ,|--->DOSEN'T EXIST!\\n"";\n\t\t\t\t\terrorReportHtml+=""<tr height='20px'><td>Line:""+(row+1)+""</td><td style='padding-left:15px;'>LS_PRODUCT_ID:<font style='color:red;'>""+LS_PRODUCT_ID+""</font></td><td style='padding-left:15px;'>dosen't exist</td></tr>"";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\terrorReportHtml+=""</table>"";\n\t\trapport.append(errorReportHtml);\n\t\tcreateLogsFile(userAdminLogin,destFileXLS, errorReport,3);\n\t}\n\n\t/**----------------------------------------------------------\n\t *CREATION FILE LOGS OF UPDATING STOCK*\n\t  -----------------------------------------------------------*/\n\t@Override\n\tpublic void createLogsFile(String userAdminLogin,String folderDest, String errorReport,int option){ \n\n\t\ttry{\n\t\t\tSimpleDateFormat frm=new SimpleDateFormat(""yyyy-MM-dd"");\n\t\t\tString logFileName = null;\n\t\t\tString logFileNameHystic=null;\n\t\t\tDate date=new Date();\n\t\t\tCalendar myCalendar = Calendar.getInstance();\n\t\t\tmyCalendar.setTime(date);\n\t\t\tmyCalendar.add(Calendar.DATE, -6);\n\t\t\t//File folderLog = new File(folderDest+""logs""); \n\t\t\t//check path of wtpwebapps in server\n\t\t\tString wtpwebapps=folderDest;\n\t\t\tfor(int i=0;i<=4;i++){\n\t\t\t\tFile folderLogParent= new File(wtpwebapps);\n\t\t\t\twtpwebapps=folderLogParent.getParent();\n\t\t\t}\n\n\t\t\tFile folderLog = new File(wtpwebapps+""/logs"");\n\t\t\tfolderLog.mkdirs();\n\t\t\tFile folderOrderLog = new File(wtpwebapps+""/logs/orders"");\n\t\t\tfolderOrderLog.mkdirs();\n\n\t\t\tswitch (option) {\n\t\t\tcase 1://STOCK\n\t\t\t\tlogFileName=wtpwebapps+""/logs/orders/stock_""+frm.format(date)+"".txt"";\n\t\t\t\tlogFileNameHystic=wtpwebapps+""/logs/orders/stock_"";\n\t\t\t\tbreak;\n\t\t\tcase 2://UPDATE ORDERS\n\t\t\t\tlogFileName=wtpwebapps+""/logs/orders/orders_""+frm.format(date)+"".txt"";\n\t\t\t\tlogFileNameHystic=wtpwebapps+""/logs/orders/orders_"";\n\t\t\t\tbreak;\n\t\t\tcase 3://UPDATE/INSERT SPECIAL SHIPPING\n\t\t\t\tlogFileName=wtpwebapps+""/logs/orders/specialShipping_""+frm.format(date)+"".txt"";\n\t\t\t\tlogFileNameHystic=wtpwebapps+""/logs/orders/specialShipping_"";\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tfor(int i=1; i<=6;i++){\n\t\t\t\tmyCalendar.add(Calendar.DATE, -1);\n\t\t\t\tDate d=myCalendar.getTime();\n\t\t\t\tString logFileNameHysticItem=logFileNameHystic+frm.format(d);\t\t\n\t\t\t\tFile fileLog=new File(logFileNameHysticItem+"".txt"");\n\t\t\t\tfileLog.delete();\t\t\n\t\t\t}\n\t\t\tPrintWriter pw= new PrintWriter(new FileWriter(logFileName,true),true);\n\t\t\tDate today=new Date();\n\t\t\tSimpleDateFormat frmTime=new SimpleDateFormat(""dd/MM/yyyy HH:mm:ss"");\n\t\t\tString strToday=frmTime.format(today);\n\t\t\tString rapport=""===============================================\\n"";\n\t\t\trapport=rapport+strToday+ "" By:""+userAdminLogin+""\\n""+""===============================================\\n"";\t\n\t\t\tpw.println(rapport+errorReport);\n\t\t\tpw.close();\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n\n\t/**----------------------------------------------------------\n\t *PARCING CSV*\n\t  -----------------------------------------------------------*/\n\t@Override\n\tpublic void csvParsing(String csvFolder,String userLogin)throws Exception{\n\n\t\tBufferedReader pr=null;\n\t\tString result="""";\n\t\tString ligne="""";\n\t\tUser user=null;\n\t\tInteger id=0;\n\t\tArrayList<String[]> arraylist=new ArrayList<String[]>();\n\n\t\tuserService= serviceLocator.getUserService();\n\t\tuser=userService.getUserByLogin(userLogin);\n\t\tid=Integer.parseInt(user.getId().toString());\n\t\tpr=new BufferedReader(new FileReader(csvFolder+userLogin+"".csv"")); \n\t\twhile((ligne=pr.readLine())!=null){\n\t\t\tligne=ligne.replaceAll(""\\"""", """");\n\t\t\tString[] data=ligne.split("","");\n\t\t\tarraylist.add(data);\n\t\t\tresult+=ligne;\n\t\t} //End loop while\n\t\tpr.close();\n\t\tfinal String sheetName = ""Sheet1"";\n\t\tint row = 0;\n\t\tWorkbook existingWorkbook = Workbook.getWorkbook(new File(csvFolder+""transCsvTemplate.xls""));\n\t\tWritableWorkbook workbookCopy = Workbook.createWorkbook(new File(csvFolder+userLogin+"".xls""), existingWorkbook);\n\t\tWritableSheet sheetToEdit = workbookCopy.getSheet(sheetName);\n\t\t//LABELS\n\t\tLabel label=null;\n\t\trow=0;\n\t\tint col=0;\n\t\t// Create cell font and format\n\t\tWritableFont cellFontHeader = new WritableFont(WritableFont.TIMES, 12);\n\t\tcellFontHeader.setColour(Colour.BLACK);\n\t\tcellFontHeader.setBoldStyle(WritableFont.BOLD);\n\t\tWritableFont cellFontData = new WritableFont(WritableFont.TIMES);\n\t\tWritableCellFormat cellFormatHeader = new WritableCellFormat(cellFontHeader);\n\t\tWritableCellFormat cellFormatData = new WritableCellFormat(cellFontData);\n\t\tcellFormatHeader.setVerticalAlignment(VerticalAlignment.CENTRE);\n\t\tcellFormatHeader.setBorder(Border.ALL, BorderLineStyle.HAIR);\n\t\tcellFormatData.setVerticalAlignment(VerticalAlignment.CENTRE);\n\t\tWritableCell cell;\n\t\tfor (String[] d : arraylist) {\n\t\t\tcol=0;\n\t\t\tfor(int i=0;i< d.length;i++){\n\t\t\t\tif(row==0){\n\t\t\t\t\tlabel = new Label(col, row, d[col],cellFormatHeader);\n\t\t\t\t}else{\n\n\t\t\t\t\tString lsOrderId=d[col];\n\t\t\t\t\tif(col==16){\n\t\t\t\t\t\tswitch (id) {\n\t\t\t\t\t\tcase 39:\n\t\t\t\t\t\t\tlsOrderId=lsOrderId.replace(""LYS-CA-AC-"", """");\n\t\t\t\t\t\t\tlsOrderId=user.getCode()+lsOrderId;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\t\n\t\t\t\t\t}\t\t\n\t\t\t\t\tlabel = new Label(col, row, lsOrderId,cellFormatData);\n\t\t\t\t}\n\t\t\t\tcell = (WritableCell) label;\n\t\t\t\tsheetToEdit.addCell(cell);\n\t\t\t\tcol++;\n\t\t\t}\n\t\t\trow++;\n\t\t}\t\n\t\tworkbookCopy.write();\n\t\tworkbookCopy.close();\n\t\texistingWorkbook.close();\n\t}\n\n\t/**----------------------------------------------------------\n\t *Insert special cost into table Order_special_shipping*\n\t  -----------------------------------------------------------*/\n\t@Override\n\n\tpublic\tboolean insertOrderSpecialShipping(OrdersSpecialShippingDTO orderSpecialDTO){\n\t\tboolean result=false;\n\t\tfinal OrdersSpecialShipping orderSpecial=DTOFactory.getOrderSpecialFromOrderSpecialDTO(orderSpecialDTO);\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresult = (Boolean) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().insertOrderSpecialShipping(orderSpecial);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry { \n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn result;\t\n\t}\n\n\n\t/**----------------------------------------------------------\n\t *Update special cost into table Order_special_shipping*\n\t  -----------------------------------------------------------*/\n\t@Override\n\n\tpublic\tboolean updateOrderSpecialShipping(OrdersSpecialShippingDTO orderSpecialDTO){\n\t\tboolean result=false;\n\t\tfinal OrdersSpecialShipping orderSpecial=DTOFactory.getOrderSpecialFromOrderSpecialDTO(orderSpecialDTO);\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresult = (Boolean) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().updateOrderSpecialShipping(orderSpecial);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry { \n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn result;\t\n\t}\n\n\t/**----------------------------------------------------------\n\t *get special Shipping cost by user and product_id*\n\t  -----------------------------------------------------------*/\n\t@Override\n\n\tpublic\tOrdersSpecialShippingDTO getOrderSpecialShipping(OrdersSpecialShippingDTO orderSpecialDTO){\n\t\tOrdersSpecialShipping result=null;\n\t\tfinal OrdersSpecialShipping orderSpecial=DTOFactory.getOrderSpecialFromOrderSpecialDTO(orderSpecialDTO);\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresult = (OrdersSpecialShipping) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().getOrderSpecialShipping(orderSpecial);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry { \n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn DTOFactory.getOrderSpecialDTOFromOrderSpecial(result);\n\t}\n\n\n\t/***\n\t * \n\t * @param orderDTO\n\t * @param option\n\t * @return\n\t */\n\n\tpublic OrdersDTO orderDTOSplitFirstLastName(OrdersDTO orderDTO,int option){\n\t\tString whole = orderDTO.getClientLastName();\n\t\tString[] elems = null;\n\t\tif (whole != null) {\n\t\t\telems = whole.split(""\\\\s"");\n\t\t\tswitch (option) {\n\t\t\tcase 0:\n\t\t\t\torderDTO.setClientFirstName("""");\n\t\t\t\torderDTO.setClientLastName("""");\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\torderDTO.setClientFirstName("""");\n\t\t\t\torderDTO.setClientLastName("""");\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\torderDTO.setClientFirstName("""");\n\t\t\t\torderDTO.setClientLastName(elems[1]);\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\torderDTO.setClientFirstName(elems[2]);\n\t\t\t\torderDTO.setClientLastName(elems[1]);\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\torderDTO.setClientFirstName(elems[3]);\n\t\t\t\torderDTO.setClientLastName(elems[1]+"" ""+elems[2]);\n\t\t\t\tbreak;\n\t\t\tcase 5:\n\t\t\t\torderDTO.setClientFirstName(elems[4]);\n\t\t\t\torderDTO.setClientLastName(elems[1] + "" "" + elems[2]+"" ""+ elems[3]);\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t}\n\t\treturn orderDTO;\n\t}\n\n\n\t//========================================= Client's Part ============================================\n\n\t@SuppressWarnings(""unchecked"")\n\t/**----------------------------------------------------------\n\t *get All Clients By User*\n\t  -----------------------------------------------------------*/\n\t@Override\n\tpublic List<OrdersDTO>getAllClientsByUser(final Long userId){\n\t\tList<Orders> result=null;\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresult = (List<Orders>) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().getAllClientsByUser(userId);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry { \n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn DTOFactory.getListOrderDTOFromListOrder(result) ;\t\n\t}\n\t/**----------------------------------------------------------\n\t *Add New Destination*\n  \t -----------------------------------------------------------*/\n\t@Override\n\tpublic boolean insertNewDestination(OrdersDTO orderDTO){\n\t\tfinal Orders order=DTOFactory.getOrderFromOrderDTO(orderDTO);\n\t\tboolean result=false;\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresult = (Boolean) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().insertNewDestination(order);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry {\n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\t@Override\n\tpublic boolean insertUserFileRecovery(UserFileRecoveryDTO userFileRecoveryDTO) throws ServiceException {\n\t\tfinal UserFileRecovery userFileRecovery = DTOFactory.BuildUserFileRecovery(userFileRecoveryDTO) ;\n\t\tboolean result=false;\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresult = (Boolean) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getUserFileRecoveryDao().insertUserFileRecovery(userFileRecovery);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry {\n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\t// A method that read all the columns of the first row for userFileRecovery\n\t@Override\n\tpublic  List<ItemMapDTO> getItemsUserFileMapping(File fileToMap, int fileType) throws Exception{\n\t\tList<ItemMapDTO> listOfitem = new ArrayList<ItemMapDTO>();\n\t\tItemMapDTO imDTO;\n\t\tswitch (fileType) {\n\t\tcase 1://for xml file.\n\t\t\tString fileName = fileToMap.getAbsolutePath();\n\t\t\tString[] xmlTagNames = getAllTagNames(fileName);\n\t\t\tif(xmlTagNames != null && xmlTagNames.length>0){\n\t\t\t\tSet<String> mySet = new HashSet<String>(Arrays.asList(xmlTagNames));\n\t\t\t\tfor(String str : mySet){\n\t\t\t\t\timDTO = new ItemMapDTO();\n\t\t\t\t\timDTO.setKey(str);\n\t\t\t\t\timDTO.setValue(str);\n\t\t\t\t\tlistOfitem.add(imDTO);\t\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 2: case 3: // For reading the columns of the xls , csv file\n\n\t\t\tWorkbook workbook = Workbook.getWorkbook(fileToMap);\n\t\t\tSheet sheetToRead = workbook.getSheet(0);\n\t\t\tint COL_MAX = sheetToRead.getColumns();\n\n\t\t\tfor(int col=0; col < COL_MAX;col++) {\n\t\t\t\tString itemLabel=sheetToRead.getCell(col, 0).getContents();\n\t\t\t\tif(itemLabel!=null && !itemLabel.equals("""")){\n\t\t\t\t\timDTO = new ItemMapDTO();\n\t\t\t\t\timDTO.setKey(Integer.toString(col+1));\n\t\t\t\t\timDTO.setValue(itemLabel);\n\t\t\t\t\tlistOfitem.add(imDTO);\t\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\n\t\t}\n\t\treturn listOfitem;\n\t}\n\n\t// A method that read an xml and returns a String array with the all the Tag names.\n\tpublic String[] getAllTagNames(String fileName) throws Exception {\n\t\t// TODO Auto-generated method stub\n\t\tString[] xmlTagNames = null;\n\t\tDocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n\t\tDocumentBuilder db = dbf.newDocumentBuilder();\n\t\tFile file = new File(fileName);\n\t\tif(file.exists()){\n\t\t\tDocument doc = db.parse(file);\n\t\t\tElement docEle = doc.getDocumentElement();\n\t\t\tNodeList nodeList=doc.getElementsByTagName(""*"");\n\t\t\txmlTagNames =  new String[nodeList.getLength()];\n\t\t\tfor (int i=0; i<nodeList.getLength(); i++){\n\t\t\t\tElement element = (Element)nodeList.item(i);\n\t\t\t\txmlTagNames[i]=(element.getNodeName());\n\t\t\t}\n\t\t}\n\t\treturn xmlTagNames;\t\n\t}\n\n\t@Override\n\tpublic boolean isFileDownloaded(UserFilesDownloadedDTO ufdDTO) throws ServiceException {\n\t\tfinal UserFilesDownloaded ufd = DTOFactory.BuildUserFilesDownloaded(ufdDTO) ;\n\t\tboolean result=false;\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresult = (Boolean) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().isFileDownloaded(ufd);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry {\n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\t@Override\n\tpublic boolean insertUserFilesDownloaded(UserFilesDownloadedDTO ufdDTO) throws ServiceException {\n\t\tfinal UserFilesDownloaded ufd = DTOFactory.BuildUserFilesDownloaded(ufdDTO) ;\n\t\tboolean result=false;\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresult = (Boolean) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().insertUserFilesDownloaded(ufd);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry {\n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\n\t@SuppressWarnings(""unchecked"")\n\t@Override\n\tpublic List<UserFilesDownloadedDTO> getListFileDownloadedDTO(final String userLogin, final Integer userLoginOption,final Integer treatedOption) throws ServiceException{\n\t\tList<UserFilesDownloaded> result=null;\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresult = (List<UserFilesDownloaded>) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().getListFileDownloaded(userLogin,userLoginOption,treatedOption);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) { \n\t\t\ttry { \n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn DTOFactory.getListFileDownloadedDTOFromModel(result) ;\t\n\t}\n\n\t@Override\n\tpublic boolean isFileForUser(final String fileToImport, final String userLogin) throws ServiceException{\n\t\tBoolean result=false;\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresult = (Boolean) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().isFileForUser(fileToImport, userLogin);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry {\n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\n\t@Override\n\tpublic boolean updateFilesDownloadedStatus(final String fileToImport, final String userLogin, final boolean treated)throws Exception{\n\t\tBoolean result=false;\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresult = (Boolean) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().updateFilesDownloadedStatus(fileToImport,userLogin,treated);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry {\n\t\t\t\tthrow new Exception(de);\n\t\t\t} catch (Exception e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn result;\n\n\t}\n\n\t/**----------------------------------------------------------\n\t *THIS FUNCTION ALLOWS US TO TRANSFORM AN XML FILE TO A LIST \n\t   OF ORDERS FOR RIDEAU*\n\t  -----------------------------------------------------------*/\t\n\t@SuppressWarnings({ ""rawtypes"", ""unchecked"" })\n\t@Override\n\tpublic Collection  toArrayListFromXML_Rideau(File orderFile,String userLogin,String fileToImport)throws Exception {\n\t\tCollection listOrdersDTO = new ArrayList();\n\t\tUserFileRecoveryDTO ufrDTO;\n\t\tString formatDate="""";\n\t\tHashtable<String, String>lsOrdersIdHash=new Hashtable<String, String>();\n\t\tproductService = serviceLocator.getProductService();\n\n\t\tif(orderFile==null)return listOrdersDTO;\n\t\tList<ProvinceDTO> listProvine= productService.getAllProvinces();\n\t\tUserFileDataRecoveryDTO ufDataDTO=new UserFileDataRecoveryDTO();\n\t\tDocumentBuilderFactory docBuilderFactory = DocumentBuilderFactory.newInstance();\n\t\tDocumentBuilder docBuilder = docBuilderFactory.newDocumentBuilder();\n\t\tDocument doc = docBuilder.parse (orderFile);\n\t\tufrDTO=getUserFileRecoveryByUser(userLogin);\n\t\t// normalize text representation\n\t\tdoc.getDocumentElement ().normalize ();\n\n\t\tif(fileToImport!=null && fileToImport.length()==12){ \n\t\t\tint index =fileToImport.lastIndexOf(""."");\n\t\t\tString fileNameWithout_OD_ext=fileToImport.substring(2,index); \n\t\t\tLong fileCounter= Long.parseLong(fileNameWithout_OD_ext);\n\t\t\tString file_seq = getValue(""file_sequence"",doc,0);\n\t\t\tLong fileSeqNo=0L;\n\t\t\tif(file_seq != null)\n\t\t\t\tfileSeqNo = Long.parseLong(file_seq);\n\t\t\tif(fileCounter.longValue()!=fileSeqNo.longValue()){\n\t\t\t\treturn listOrdersDTO;\n\t\t\t}\n\t\t}\n\t\tif(ufrDTO!=null && ufrDTO.getTagRoot()!=null  && ufrDTO.getFileTypeId()==1){\n\t\t\tNodeList listOfOrders = doc.getElementsByTagName(ufrDTO.getTagRoot());\n\t\t\tfor(int s=0; s<listOfOrders.getLength() ; s++){\n\t\t\t\tNode firstOrderNode = listOfOrders.item(s);   \n\t\t\t\tif(firstOrderNode.getNodeType() == Node.ELEMENT_NODE){\n\t\t\t\t\tElement firstOrderElement = (Element)firstOrderNode;\n\t\t\t\t\tint numberOfOrders = firstOrderElement.getElementsByTagName(""item_detail"").getLength();\n\t\t\t\t\tfor(int i = 0 ; i < numberOfOrders; i++){\n\t\t\t\t\t\tif(getValue(""detail_type"", firstOrderElement,i)!=null &&  getValue(""detail_type"", firstOrderElement,i).equalsIgnoreCase(""SO"") ){\n\t\t\t\t\t\t\tufDataDTO=new UserFileDataRecoveryDTO();\n\t\t\t\t\t\t\tufDataDTO.setUserId(ufrDTO.getUserId());\n\t\t\t\t\t\t\t//--------------- 1:companyHeader -----------\n\t\t\t\t\t\t\tString companyHeader="""";\n\t\t\t\t\t\t\tif(ufrDTO.getCompanyHeader()!=null){\n\t\t\t\t\t\t\t\tcompanyHeader=getValue(""ship_to_company_name"", firstOrderElement, 0);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tufDataDTO.setCompanyHeader(companyHeader);\n\n\t\t\t\t\t\t\t//--------------- 2:productOrderNumber <source>+<program_id>+ <client_po> = PO number (ex: C RM C-H1281210)----------------\n\t\t\t\t\t\t\tString productOrderNumber="""";\n\t\t\t\t\t\t\tString source="""";\n\t\t\t\t\t\t\tString programId="""";\n\t\t\t\t\t\t\tif(ufrDTO.getProductOrderNumber()!=null){\n\t\t\t\t\t\t\t\tproductOrderNumber=getValue(ufrDTO.getProductOrderNumber(), firstOrderElement, 0);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tsource=getValue(""source"", firstOrderElement, 0);\n\t\t\t\t\t\t\tprogramId=getValue(""program_id"", firstOrderElement, 0);\n\t\t\t\t\t\t\tufDataDTO.setProductOrderNumber(source+"" ""+programId+"" ""+productOrderNumber);   \n\n\t\t\t\t\t\t\t//--------------- 3:productOrderDate -----------------\n\t\t\t\t\t\t\tString productOrderDate="""";\n\t\t\t\t\t\t\tif(ufrDTO.getProductOrderDate()!=null){\n\t\t\t\t\t\t\t\tproductOrderDate= getValue(ufrDTO.getProductOrderDate(), firstOrderElement, 0);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tformatDate=""yyyy-MM-dd hh:mm:ss"";\n\t\t\t\t\t\t\tSimpleDateFormat sdf = new SimpleDateFormat(formatDate);\n\t\t\t\t\t\t\tDate dateOrder=null;\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tDate date = sdf.parse(productOrderDate);\n\t\t\t\t\t\t\t\tdateOrder=date;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcatch (Exception pe) {\n\t\t\t\t\t\t\t\tdateOrder=null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tufDataDTO.setProductOrderDate(dateOrder);\n\n\t\t\t\t\t\t\t//--------------- 4:quantity -------------------------\n\t\t\t\t\t\t\tString strQuantity="""";\n\t\t\t\t\t\t\tif(ufrDTO.getQuantity()!=null){\n\t\t\t\t\t\t\t\tstrQuantity=getValue(ufrDTO.getQuantity(), firstOrderElement, i);\n\t\t\t\t\t\t\t\tif(strQuantity!=null)\n\t\t\t\t\t\t\t\t\tstrQuantity=strQuantity.replaceAll("" "", """");\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif(strQuantity!=null && !strQuantity.equals("""")){\n\t\t\t\t\t\t\t\tint index=strQuantity.indexOf("","");\n\t\t\t\t\t\t\t\tif(index>=0){\n\t\t\t\t\t\t\t\t\tString strUnitPrice1=strQuantity.substring(0, index);\n\t\t\t\t\t\t\t\t\tString strUnitPrice2= strQuantity.substring(index+1, strQuantity.length());\n\t\t\t\t\t\t\t\t\tstrQuantity=strUnitPrice1+"".""+strUnitPrice2;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tDouble quantity=null;\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tquantity = Double.parseDouble(strQuantity);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcatch (Exception pe) {\n\t\t\t\t\t\t\t\tquantity=null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tufDataDTO.setQuantity(quantity);\n\n\t\t\t\t\t\t\t//--------------- 5:lsProductID - Vendor item number ----------------------\n\t\t\t\t\t\t\tString lsProductID="""";\n\t\t\t\t\t\t\tif(ufrDTO.getLsProductID()!=null){\n\t\t\t\t\t\t\t\tlsProductID=getValue(ufrDTO.getLsProductID(), firstOrderElement, i);\n\t\t\t\t\t\t\t\t/*if(lsProductID.length()>3){\n\t\t\t\t\t\t\t\t\tlsProductID=lsProductID.substring(3);\n\t\t\t\t\t\t\t\t}*/\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tufDataDTO.setLsProductID(lsProductID);\n\n\t\t\t\t\t\t\t//--------------- 6:productDescription - client_item_detail------------------\n\t\t\t\t\t\t\tString productDescription="""";\n\t\t\t\t\t\t\tif(ufrDTO.getProductDescription()!=null){\n\t\t\t\t\t\t\t\tproductDescription=getValue(ufrDTO.getProductDescription(), firstOrderElement, i);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tproductDescription=productDescription.replaceAll("","", "" "");\n\t\t\t\t\t\t\tufDataDTO.setProductDescription(productDescription);\n\n\t\t\t\t\t\t\t//--------------- 7:unitPrice <item_price> = Unit Price---------------------------\n\t\t\t\t\t\t\tString strUnitPrice="""";\n\t\t\t\t\t\t\tif(ufrDTO.getUnitPrice()!=null){\n\t\t\t\t\t\t\t\tstrUnitPrice=getValue(ufrDTO.getUnitPrice(), firstOrderElement, i);\n\t\t\t\t\t\t\t\tif(strUnitPrice!=null && strUnitPrice.length()>0){\n\t\t\t\t\t\t\t\t\tstrUnitPrice= strUnitPrice.replaceAll(""\\\\$"", """");\n\t\t\t\t\t\t\t\t\tstrUnitPrice= strUnitPrice.replaceAll("" "", """");\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif(strUnitPrice!=null && !strUnitPrice.equals("""")){\n\t\t\t\t\t\t\t\tint index=strUnitPrice.indexOf("","");\n\t\t\t\t\t\t\t\tif(index>=0){\n\t\t\t\t\t\t\t\t\tString strUnitPrice1=strUnitPrice.substring(0, index);\n\t\t\t\t\t\t\t\t\tString strUnitPrice2= strUnitPrice.substring(index+1, strUnitPrice.length());\n\t\t\t\t\t\t\t\t\tstrUnitPrice=strUnitPrice1+"".""+strUnitPrice2;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tDouble ProductUnitPrice=null;\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tProductUnitPrice = Double.parseDouble(strUnitPrice);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcatch (Exception pe) {\n\t\t\t\t\t\t\t\tProductUnitPrice=null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tufDataDTO.setUnitPrice(ProductUnitPrice);\n\n\t\t\t\t\t\t\t//--------------- 8:clientNumber -------------------------\n\t\t\t\t\t\t\tString clientNumber="""";\n\t\t\t\t\t\t\tif(ufrDTO.getClientNumber()!=null){\n\t\t\t\t\t\t\t\tNodeList clientNumberList = doc.getElementsByTagName(ufrDTO.getClientNumber());\n\t\t\t\t\t\t\t\tif(clientNumberList!=null && clientNumberList.getLength()>0){\n\t\t\t\t\t\t\t\t\tElement clientNumberElement = (Element)clientNumberList.item(0);\n\t\t\t\t\t\t\t\t\tif(clientNumberElement!=null){\n\t\t\t\t\t\t\t\t\t\tNodeList clientNumberFNList = clientNumberElement.getChildNodes();\n\t\t\t\t\t\t\t\t\t\tif(clientNumberFNList!=null && clientNumberFNList.getLength()>0){\n\t\t\t\t\t\t\t\t\t\t\tclientNumber =((Node)clientNumberFNList.item(0)).getNodeValue().trim(); \n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tufDataDTO.setClientNumber(clientNumber);\n\n\t\t\t\t\t\t\t//--------------- 9 and 10 :full name <ship_to_name> = Client First Name + Client Last Name (split after space) ---------------------------\n\t\t\t\t\t\t\t//CASE 1: If productOrderNumber dosen't started with ""C RM""\n\t\t\t\t\t\t\tString fullName="""";\n\t\t\t\t\t\t\tif(ufrDTO.getClientFirstName()!=null){\n\t\t\t\t\t\t\t\tfullName=getValue(ufrDTO.getClientFirstName(), firstOrderElement, 0);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tfullName=fullName.replaceAll("","", "" "");\n\t\t\t\t\t\t\tString[] tokens = fullName.split("" "");\n\t\t\t\t\t\t\tString firstName="""";\n\t\t\t\t\t\t\tString lastName="""";\n\t\t\t\t\t\t\tif(tokens.length > 1) {\n\t\t\t\t\t\t\t\tfirstName= tokens[0];\n\t\t\t\t\t\t\t\tlastName = fullName.substring(fullName.indexOf("" ""));\n\t\t\t\t\t\t\t\tfirstName=firstName.replaceAll("" "", """");\n\t\t\t\t\t\t\t\tlastName=lastName.replaceAll("" "", """");\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\tfirstName= tokens[0];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tufDataDTO.setClientFirstName(firstName);\n\t\t\t\t\t\t\t//lastName\n\t\t\t\t\t\t\tufDataDTO.setClientLastName(lastName);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t//CASE 2: If productOrderNumber dosen't started with ""C RM""\n\t\t\t\t\t\t\tproductOrderNumber=ufDataDTO.getProductOrderNumber();\n\t\t\t\t\t\t\tproductOrderNumber=productOrderNumber.replaceAll("" "", """");\n\t\t\t\t\t\t\tif(productOrderNumber!=null && productOrderNumber.startsWith(""CRMC"")){\n\t\t\t\t\t\t\t\tfullName="""";\n\t\t\t\t\t\t\t\tif(ufrDTO.getClientLastName()!=null){\n\t\t\t\t\t\t\t\t\tfullName=getValue(ufrDTO.getClientLastName(), firstOrderElement, 0);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tufDataDTO.setClientFirstName(""Rideau"");\n\t\t\t\t\t\t\t\t//lastName\n\t\t\t\t\t\t\t\tufDataDTO.setClientLastName(fullName);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t//--------------- 11:addressStreet,  <ship_to_street_1>----------------------\n\t\t\t\t\t\t\tString addressStreet="""";\n\t\t\t\t\t\t\tif(ufrDTO.getClientStreet()!=null){\n\t\t\t\t\t\t\t\taddressStreet=getValue(ufrDTO.getClientStreet(), firstOrderElement, 0);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\taddressStreet=addressStreet.replaceAll("","", "" "");\n\t\t\t\t\t\t\tufDataDTO.setClientStreet(addressStreet);\n\n\t\t\t\t\t\t\t//--------------- 12:addressStreetOther <ship_to_street_2>----------------\n\t\t\t\t\t\t\tString addressStreetOther="""";\n\t\t\t\t\t\t\tif(ufrDTO.getClientOtherStreet()!=null){\n\t\t\t\t\t\t\t\taddressStreetOther=getValue(ufrDTO.getClientOtherStreet(), firstOrderElement, 0);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tufDataDTO.setClientOtherStreet(addressStreetOther);\n\n\t\t\t\t\t\t\t//--------------- 13:addressCity, <ship_to_city> ------------------------\n\t\t\t\t\t\t\tString addressCity="""";\n\t\t\t\t\t\t\tif(ufrDTO.getClientCity()!=null){\n\t\t\t\t\t\t\t\taddressCity=getValue(ufrDTO.getClientCity(), firstOrderElement, 0);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tufDataDTO.setClientCity(addressCity);\n\n\t\t\t\t\t\t\t//--------------- 14:addressPostalCode, ship_to_postal_code ---------------------\n\t\t\t\t\t\t\tString addressPostalCode="" "";\n\t\t\t\t\t\t\tif(ufrDTO.getClientPostalCode()!=null){\n\t\t\t\t\t\t\t\taddressPostalCode=getValue(ufrDTO.getClientPostalCode(), firstOrderElement, 0);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\taddressPostalCode=addressPostalCode.replaceAll("" "", """");\n\t\t\t\t\t\t\tufDataDTO.setClientPostalCode(addressPostalCode);\n\n\t\t\t\t\t\t\t//--------------- 15:addressState ship_to_province-------------------------\n\t\t\t\t\t\t\tString addressState="""";\n\t\t\t\t\t\t\tif(ufrDTO.getClientProvince()!=null){\n\t\t\t\t\t\t\t\taddressState=getValue(ufrDTO.getClientProvince(), firstOrderElement, 0);\n\t\t\t\t\t\t\t\tif(addressState!=null && addressState.length()>0){\n\t\t\t\t\t\t\t\t\tString clientProvinceToCompar=addressState.toLowerCase();\n\t\t\t\t\t\t\t\t\tclientProvinceToCompar=clientProvinceToCompar.replaceAll("" "", """");\n\t\t\t\t\t\t\t\t\tclientProvinceToCompar=clientProvinceToCompar.replaceAll(""canada"", """");\n\t\t\t\t\t\t\t\t\tclientProvinceToCompar=clientProvinceToCompar.replaceAll("","", """");\n\t\t\t\t\t\t\t\t\tclientProvinceToCompar=clientProvinceToCompar.replaceAll(""\\\\."", """");\n\t\t\t\t\t\t\t\t\tfor(ProvinceDTO prov:listProvine){\n\t\t\t\t\t\t\t\t\t\tString provName=prov.getName();\n\t\t\t\t\t\t\t\t\t\tprovName=provName.replaceAll("" "", """");\n\t\t\t\t\t\t\t\t\t\tprovName= provName.toLowerCase();\n\t\t\t\t\t\t\t\t\t\tif(clientProvinceToCompar.equals(provName) || clientProvinceToCompar.equals(prov.getCode()) ){\n\t\t\t\t\t\t\t\t\t\t\taddressState=\tprov.getCode();\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\taddressState=addressState.replaceAll(""\\\\."", """");\n\t\t\t\t\t\t\t\t\tif(clientProvinceToCompar.equals(""""))addressState=""""; \n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tufDataDTO.setClientProvince(addressState);\n\n\t\t\t\t\t\t\t//--------------- 16:clientPhone, ship_to_phone --------------------------\n\t\t\t\t\t\t\tString clientPhone="""";\n\t\t\t\t\t\t\tif(ufrDTO.getClientPhone()!=null){\n\t\t\t\t\t\t\t\tclientPhone=getValue(ufrDTO.getClientPhone(), firstOrderElement, 0);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t//--------------- 17:client_phone_zone -------------------------\n\t\t\t\t\t\t\tString clientPhoneZone="""";\n\t\t\t\t\t\t\tif(ufrDTO.getClientPhoneZone()!=null){\n\t\t\t\t\t\t\t\tclientPhoneZone=getValue(ufrDTO.getClientPhoneZone(), firstOrderElement, 0);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(clientPhoneZone!=null && !clientPhoneZone.equals(""""))clientPhone=clientPhoneZone+"" ""+clientPhone;\n\t\t\t\t\t\t\tufDataDTO.setClientPhone(clientPhone);\n\n\t\t\t\t\t\t\t//--------------- 18:clientEmail -------------------------\n\t\t\t\t\t\t\tString clientEmail="""";\n\t\t\t\t\t\t\tif(ufrDTO.getClientEmail()!=null){\n\t\t\t\t\t\t\t\tclientEmail=getValue(ufrDTO.getClientEmail(), firstOrderElement, 0);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tufDataDTO.setClientEmail(clientEmail);\n\n\t\t\t\t\t\t\t//--------------- 19:requiredDate, required_date -------------------------\n\t\t\t\t\t\t\tString requiredDate="""";\n\t\t\t\t\t\t\tif(ufrDTO.getRequiredDate()!=null){\n\t\t\t\t\t\t\t\trequiredDate=getValue(ufrDTO.getRequiredDate(), firstOrderElement, i);\n\t\t\t\t\t\t\t\tif(requiredDate!=null && requiredDate.length()>0){\n\t\t\t\t\t\t\t\t\trequiredDate=requiredDate.replaceAll("" "", """");\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tformatDate=ufrDTO.getFormatDate();\n\t\t\t\t\t\t\tif(formatDate==null)formatDate="""";\n\t\t\t\t\t\t\tsdf = new SimpleDateFormat(formatDate);\n\t\t\t\t\t\t\tDate requiredDateOrder=null;\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tDate date = sdf.parse(requiredDate);\n\t\t\t\t\t\t\t\trequiredDateOrder=date;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcatch (Exception pe) {\n\t\t\t\t\t\t\t\trequiredDateOrder=null;\n\t\t\t\t\t\t\t}                     \n\t\t\t\t\t\t\tufDataDTO.setRequiredDate(requiredDateOrder);\n\n\t\t\t\t\t\t\t//--------------- 20:clients_other_names, <ship_to_company_name>+<ship_to_other1_name>+<ship_to_other2_name>  -------------------------\n\t\t\t\t\t\t\tString clientsOtherNames = """";\n\t\t\t\t\t\t\tString shipToOtherNames1 = """";\n\t\t\t\t\t\t\tString shipToOtherNames2 = """";\n\t\t\t\t\t\t\tif (ufrDTO.getClientOtherNames() != null) {\n\t\t\t\t\t\t\t\tclientsOtherNames=getValue(ufrDTO.getClientOtherNames(), firstOrderElement, 0);\n\t\t\t\t\t\t\t\tshipToOtherNames2=getValue(""ship_to_other2_name"", firstOrderElement, 0);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tufDataDTO.setClientOtherNames(clientsOtherNames +"" "" + shipToOtherNames1 + "" "" + shipToOtherNames2);\n\n\t\t\t\t\t\t\t//--------------- 21:lsOrderId ------------------------\n\t\t\t\t\t\t\tString code=userLogin.substring(0, 2).toUpperCase();\n\t\t\t\t\t\t\tString lsOrderId=ufDataDTO.getProductOrderNumber();\n\n\t\t\t\t\t\t\tint inc=0;//increment\n\t\t\t\t\t\t\tString lsOrderIdParent=lsOrderId;\n\t\t\t\t\t\t\tlsOrderIdParent=lsOrderIdParent.replaceFirst(""-"", """");\n\t\t\t\t\t\t\tlsOrderIdParent=lsOrderIdParent.replaceFirst(""_"", """");\n\t\t\t\t\t\t\tlsOrderIdParent=lsOrderIdParent.replaceFirst(""R"", """");\n\t\t\t\t\t\t\tlsOrderIdParent=lsOrderIdParent.replaceAll("" "", """");\n\t\t\t\t\t\t\tif(lsOrderIdParent.length()>14){\n\t\t\t\t\t\t\t\tint index=lsOrderIdParent.length()-14;\n\t\t\t\t\t\t\t\tlsOrderIdParent=lsOrderIdParent.substring(index, lsOrderIdParent.length());\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tString lsOrderIdToGenerate=code+""O""+ufDataDTO.getUserId()+lsOrderIdParent;;\n\t\t\t\t\t\t\twhile(isLsOrderIdUsed(lsOrderIdToGenerate) || lsOrdersIdHash.containsKey(lsOrderIdToGenerate)){\n\t\t\t\t\t\t\t\tinc++; \n\t\t\t\t\t\t\t\tlsOrderIdToGenerate=code+""O""+ufDataDTO.getUserId()+lsOrderIdParent+""R""+inc;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlsOrdersIdHash.put(lsOrderIdToGenerate, lsOrderIdToGenerate);\n\t\t\t\t\t\t\tufDataDTO.setLsOrderId(lsOrderIdToGenerate);\n\n\t\t\t\t\t\t\t//--------------- 22:Shipping company  - comments -------------------------\n\t\t\t\t\t\t\t/*\n\t\t\t\t\t\t\t * Note : just copy the shipping details only when program id is RM for all other case, put blank in DB*/\n\t\t\t\t\t\t\tString shippingCompany="""";\n\t\t\t\t\t\t\tif(ufrDTO.getShippingCompany()!=null && programId.equalsIgnoreCase(""RM"")){\n\t\t\t\t\t\t\t\tshippingCompany=getValue(ufrDTO.getShippingCompany(), firstOrderElement,0);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(shippingCompany!= null && shippingCompany.length()> 30){\n\t\t\t\t\t\t\t\tint index = shippingCompany.indexOf(""Shipping info:"");\n\t\t\t\t\t\t\t\tif(index >= 0){\n\t\t\t\t\t\t\t\t\tshippingCompany=shippingCompany.substring(15).trim();\n\t\t\t\t\t\t\t\t\tif(shippingCompany.length()>30){\n\t\t\t\t\t\t\t\t\t\tint idx=shippingCompany.length()-30;\n\t\t\t\t\t\t\t\t\t\tshippingCompany=shippingCompany.substring(idx, shippingCompany.length());\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tufDataDTO.setShippingCompany(shippingCompany);\n\n\t\t\t\t\t\t\t//--------------- 23:Notes ---------------------------------------------------------\n\t\t\t\t\t\t\tString notes = """";\n\t\t\t\t\t\t\tString noteTags="""";\n\t\t\t\t\t\t\tif(ufrDTO.getNotes()!=null){\n\t\t\t\t\t\t\t\tnotes=getValue(ufrDTO.getNotes(),firstOrderElement,0);\n\t\t\t\t\t\t\t\tnoteTags=ufrDTO.getNotes();\n\t\t\t\t\t\t\t\tif(noteTags!=null && noteTags!=""""){\n\t\t\t\t\t\t\t\t\tString[] tags = noteTags.split(""?"");\n\t\t\t\t\t\t\t\t\tfor(int a = 0 ; a <tags.length; a ++){\n\t\t\t\t\t\t\t\t\t\tnotes = notes + getValue(tags[a],doc,a);\n\t\t\t\t\t\t\t\t\t\tif(a <tags.length-1 )\n\t\t\t\t\t\t\t\t\t\t\tnotes=notes+(""?"");\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tufDataDTO.setOrderFileInfo(notes);\n\n\t\t\t\t\t\t\t//--------------- 24:Client product number <client_item_number>  -------------------------\n\t\t\t\t\t\t\tString clientProductNumber="""";\n\t\t\t\t\t\t\tif(ufrDTO.getClientProductNumber()!=null){\n\t\t\t\t\t\t\t\tclientProductNumber=getValue(ufrDTO.getClientProductNumber(), firstOrderElement,i);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tufDataDTO.setClientProductNumber(clientProductNumber);\n\n\t\t\t\t\t\t\t//--------------- 25:clientOtherId -------------------------\n\t\t\t\t\t\t\tString clientOtherId="""";\n\t\t\t\t\t\t\tif(ufrDTO.getClientOtherId()!=null){\n\t\t\t\t\t\t\t\tclientOtherId=getValue(ufrDTO.getClientOtherId(), firstOrderElement, 0);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tufDataDTO.setClientOtherId(clientOtherId);\n\n\t\t\t\t\t\t\t//--------------- 26:clientOrderNumber, <client_po_detail> = Client Order ID-------------------------\n\t\t\t\t\t\t\tString clientOrderNumber="""";\n\t\t\t\t\t\t\tif(ufrDTO.getClientOrderNumber()!=null){\n\t\t\t\t\t\t\t\tclientOrderNumber=getValue(ufrDTO.getClientOrderNumber(), firstOrderElement, i);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tufDataDTO.setClientOrderNumber(clientOrderNumber);\n\n\t\t\t\t\t\t\t//--------------- 27:customer product number-------------------------\n\t\t\t\t\t\t\tString cstProductNumber="""";\n\t\t\t\t\t\t\tif(ufrDTO.getCstProductNumber()!=null){\n\t\t\t\t\t\t\t\tcstProductNumber=getValue(ufrDTO.getCstProductNumber(), firstOrderElement, 0);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tufDataDTO.setCstProductNumber(cstProductNumber);\n\n\t\t\t\t\t\t\tufDataDTO.setCreationDate(new Date());\n\n\t\t\t\t\t\t\tlistOrdersDTO.add(ufDataDTO);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}//end of if clause\n\t\t\t}//end of for loop with s var\n\t\t}//end if with condition ufrDTO!=null\n\t\treturn listOrdersDTO;\n\t}\n\n\n\tprivate static String getValue(String tag, Element element , int i) {\n\t\tString nodeValue="""";\n\t\tNodeList nodeList = element.getElementsByTagName(tag);\n\t\tif(nodeList!=null && nodeList.getLength()> 0){\n\t\t\tElement nodeElement = (Element)nodeList.item(i);\n\t\t\tif(nodeElement!=null){\n\t\t\t\tNodeList nodes = nodeElement.getChildNodes();\n\t\t\t\tif(nodes!=null && nodes.getLength()>0){\n\t\t\t\t\tnodeValue =((Node)nodes.item(0)).getNodeValue().trim(); \n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn nodeValue;\n\t}\n\n\tprivate static String getValue(String tag, Document doc , int i) {\n\t\tString nodeValue="""";\n\t\tNodeList nodeList = doc.getElementsByTagName(tag);\n\t\tif(nodeList!=null && nodeList.getLength()> 0){\n\t\t\tElement nodeElement = (Element)nodeList.item(0);\n\t\t\tif(nodeElement!=null){\n\t\t\t\tNodeList nodes = nodeElement.getChildNodes();\n\t\t\t\tif(nodes!=null && nodes.getLength()>0){\n\t\t\t\t\tnodeValue =((Node)nodes.item(0)).getNodeValue().trim(); \n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn nodeValue;\n\t}\n\t@Override\n\tpublic boolean updateFileSequenceShipping(final Long userId ,final int fileSequenceNo) throws ServiceException {\n\t\tboolean result=false;\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresult = (Boolean) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().updateFileSequenceShipping(userId,fileSequenceNo);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry {\n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\t@Override\n\tpublic boolean updateFileSequenceInvoice(final Long userId ,final int fileSequenceNo) throws ServiceException {\n\t\tboolean result=false;\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresult = (Boolean) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().updateFileSequenceInvoice(userId,fileSequenceNo);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry {\n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\t/**----------------------------------------------------------\n\t *GET ORDER DTO BY LS_ORDER_ID*\n  \t-----------------------------------------------------------*/\t\n\t@Override\n\tpublic OrdersDTO getInvoiceOrderByLsOrderId(final String lsOrderId)\tthrows ServiceException { \n\t\tOrders order=null;\t\n\t\tOrdersDTO result=null;\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\torder = (Orders) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().getInvoiceOrderByLsOrderId(lsOrderId);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry {\n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\tif(order!=null)result=DTOFactory.getOrderDTOFromOrder(order);\n\t\treturn result;\n\n\t}\n\n\t@Override\n\tpublic Double getTotalShippedQuantityForSplitOrders(final String lsOrderId){ \n\t\tDouble count= new Double(0); \n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tcount = (Double) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().getTotalShippedQuantityForSplitOrders(lsOrderId);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry {\n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn count;\n\t}\n\n\t@Override\n\tpublic Double getOrderedQuantity(final String lsOrderId) throws ServiceException {\n\t\tDouble count= new Double(0); \n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tcount = (Double) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().getOrderedQuantity(lsOrderId);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry {\n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn count;\n\t}\n\n\t/*// Update Stock\n\t@Override\n\tpublic boolean updateStock(final List<OrdersDTO> listStock) throws ServiceException {\n\t\tboolean result=false;\n\t\tfinal List<Orders>listOrders=DTOFactory.getListOrdersFromListOrdersDTO(listStock);\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresult = (Boolean) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().updateStock(listOrders);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry {\n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}*/\n\n\t//check if there are orders that wern't saved\n\t@Override\n\tpublic Integer nbOrdersNotSaved(List<OrdersDTO> ordersDTOListImported) throws ServiceException {\n\t\tInteger count=0;\n\t\tif(ordersDTOListImported==null)return count;\n\t\tfinal List<Orders> ordersListImported=DTOFactory.getListOrdersFromListOrdersDTO(ordersDTOListImported);\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tcount = (Integer) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().nbOrdersNotSaved(ordersListImported);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry {\n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn count;\n\t}\n\t\n\t/**----------------------------------------------------------\n\t * getCurrencyIdByUserId *\n\t  -----------------------------------------------------------*/\n\t@Override\n\tpublic CurrencyDTO getCurrencyIdByUserId(final Long userId){ \n\t\tCurrency currencyResult = new Currency();\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tcurrencyResult = (Currency) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\n\t\t\t\t\treturn daoManager.getOrdersDao().getCurrencyIdByUserId(userId);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry {\n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn DTOFactory.getCurrencyDTOBySymbol(currencyResult);\n\t}\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\n\t/**----------------------------------------------------------\n\t *Get ETA Orders List* (ufr.getEtaFieldName(),user.getId(),filePathData)\n\t  -----------------------------------------------------------*/\n\t@Override\n\tpublic List<OrdersDTO> getEtaOrdersList(String etaFieldName,Long userId,String destEtaOrderXLSFile)throws Exception{\n\t\tString errorReport="""";\n\t\t//variable indicating the numbers of columns in the XLS file\n\t\tint ROW_TO_START = 0;\n\t\tfinal int COL_PO=1;\n\t\tString  PO="""";\n\t\t//Cells\n\t\tCell cellPO= null;\n\t\tWorkbook existingWorkbook = Workbook.getWorkbook(new File(destEtaOrderXLSFile+""etaOrders.xls""));\n\t\tSheet sheetToRead=existingWorkbook.getSheet(0);\n\t\tint ROW_MAX = sheetToRead.getRows();\n\t\tList<OrdersDTO> orderList = new ArrayList<OrdersDTO>() ;\n\t\tList<OrdersDTO> etaFieldNameOrderlist =null;\n\t\tOrdersDTO orderDTO;\n\t\tfor(int row=ROW_TO_START; row< ROW_MAX;row++) {\n\t\t\t//--------------- 1: PO\n\t\t\tcellPO = sheetToRead.getCell(COL_PO-1, row);\t\t\t\n\t\t\tif(cellPO!=null)PO = cellPO.getContents();\n\t\t\tif(PO==null || PO.equals("""")){\n\t\t\t\terrorReport+="" ""+(row+1)+"" ,PO:""+PO+"" ,|---->dosen't exist \\n"";\n\t\t\t}else{\n\t\t\t\tint index=PO.indexOf(""/"");\n\t\t\t\tif(index>0)PO=PO.substring(0, index);\n\n\t\t\t}\n\t\t\torderDTO = new OrdersDTO();\n\t\t\torderDTO.setEtaFieldName(etaFieldName);\n\t\t\torderDTO.setUserId(userId);\n\t\t\torderDTO.setEtaFieldValue(PO);\n\t\t\tetaFieldNameOrderlist=getEtaOrderlistByFieldName(orderDTO);\n\t\t\tint size=etaFieldNameOrderlist.size();\n\t\t\tswitch (size) {\n\t\t\tcase 0:\n\t\t\t\torderDTO.setNotation(size+"""");\n\t\t\t\tetaFieldNameOrderlist=new ArrayList<OrdersDTO>();\n\t\t\t\tetaFieldNameOrderlist.add(orderDTO);\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tetaFieldNameOrderlist.get(0).setNotation(size+"""");\n\t\t\tdefault:\n\t\t\t\t//etaFieldNameOrderlist.get(0).setNotation(""1"");\n\t\t\t\tfor(int i=0;i<size;i++ ){\n\t\t\t\t\tetaFieldNameOrderlist.get(i).setNotation(size+"""");\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\torderList.addAll(etaFieldNameOrderlist);\n\t\t}\n\t\treturn orderList;\n\t}\n\n\n\t@SuppressWarnings(""unchecked"")\n\t@Override\n\tpublic List<OrdersDTO> getEtaOrderlistByFieldName(OrdersDTO orderDTO) throws ServiceException {\n\t\tList<Orders> result = null;\n\t\tfinal Orders order=new Orders();\n\t\torder.setUserId(orderDTO.getUserId());\n\t\torder.setEtaFieldName(orderDTO.getEtaFieldName());\n\t\torder.setEtaFieldValue(orderDTO.getEtaFieldValue());\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresult = (List<Orders>) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().getEtaOrderlistByFieldName(order);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry {\n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn DTOFactory.getListOrderDTOFromListOrder(result);\n\t}\n\n\t\n}\n\n----------------------------------- SOURCE END -------------------------------------",1421271173280
error,log,,,"Problems occurred when invoking code from plug-in: ""org.eclipse.jdt.ui"".",1421271173282
error,log,,,"Error in JDT Core during reconcile",1421271173283
error,log,,,"Exception occurred during problem detection:\n----------------------------------- SOURCE BEGIN -------------------------------------\npackage com.loyauty.web.struts.action.orders;\n\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.io.FileOutputStream;\nimport java.io.InputStream;\nimport java.io.OutputStream;\nimport org.apache.commons.io.FileUtils;\nimport java.io.IOException;\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport lombok.Getter;\nimport lombok.Setter;\n\nimport com.loyauty.exception.ServiceLocatorException;\nimport com.loyauty.model.User;\nimport com.loyauty.service.core.dto.BasicUserDTO;\nimport com.loyauty.service.core.dto.OrdersDTO;\nimport com.loyauty.service.core.dto.ProductDTO;\nimport com.loyauty.service.core.dto.UserFileRecoveryDTO;\nimport com.loyauty.service.core.dto.UserSessionDTO;\nimport com.loyauty.service.orders.OrdersService;\nimport com.loyauty.service.product.ProductService;\nimport com.loyauty.service.user.UserService;\nimport com.loyauty.web.struts.action.LoyautyAction;\nimport javax.servlet.http.HttpSession;\n\npublic class UploadAdminXLS extends LoyautyAction {\n\n\tprivate static final long serialVersionUID = 6649940042042023814L;\n\tprivate OrdersService orderService;\n\tprivate UserService userService;\n\tprivate ProductService productService;\n\t@Getter @Setter\n\tprivate File fileXLS;\n\t@Getter @Setter\n\tprivate String myFileContentType;\n\t@Getter @Setter\n\tprivate String myFileFileName;\n\t@Getter @Setter\n\tprivate String destPath;\n\t@Getter @Setter\n\tprivate String message="""";\n\t@Getter @Setter\n\tprivate String showNotificationPop;\n\t@Getter @Setter\n\tprivate String showWaitPop;\n\t@Getter @Setter\n\tprivate Long okNotificationPop;\n\t@Getter @Setter\n\tprivate int init;\n\t@Getter @Setter\n\tprivate List<User> usersList;\n\t@Getter @Setter\n\tprivate String userLogo;\n\t@Getter @Setter\n\tStringBuffer rapportError;\n\t@Getter @Setter\n\tprivate String userLogin;\n\tprivate User user;\n\tprivate String userAdminLogin;\n\tprivate static int USER_TYPE = 2;\n\t@Getter @Setter\n\tprivate List<ProductDTO>listProductDTOFormXLS;\n\t@Getter @Setter\n\tprivate Integer doUpdate;\n\t@Getter @Setter\n\tList<ProductDTO> listProductNotFound;\n\n\tprivate List<OrdersDTO> etaOrdersList;\n\t\n\tpublic UploadAdminXLS()throws ServiceLocatorException{\n\t\tsuper();\n\t\torderService = getServiceLocator().getOrderService();\n\t\tuserService = getServiceLocator().getUserService();\n\t\tproductService=getServiceLocator().getProductService();\n\t}\n\n\t@SuppressWarnings({ ""unchecked"" })\n\t@Override\n\tpublic String execute() throws Exception {\n\t\trapportError=new StringBuffer();\n\t\tshowNotificationPop=""visibility:hidden;display:none;"";\n\t\tshowWaitPop=""visibility:hidden;display:none;"";\n\t\tHttpSession session = request.getSession(true);\n\t\tUser userAdmin=(User)session.getAttribute(""userAdmin"");\n\t\tinit=(Integer)session.getAttribute(""init"");\n\t\tuserLogo=(String)session.getAttribute(""userLogo"");\n\t\tlistProductDTOFormXLS=(List<ProductDTO>)session.getAttribute(""listProductDTOFormXLS"");\n\t\tif(listProductDTOFormXLS==null)listProductDTOFormXLS=new ArrayList<ProductDTO>();\n\t\t// -------------------------- recovery users if not exit --------------------\n\t\tBasicUserDTO basicUserDTO = new BasicUserDTO();\n\t\tbasicUserDTO.setTypeId(USER_TYPE);\n\t\tList<User> usersListSession=(List<User>)session.getAttribute(""usersListSession"");\n\t\tif(usersListSession==null){\n\t\t\tList<UserSessionDTO> listAllUsers= userService.getAllUsers(basicUserDTO);\n\t\t\tusersList=new ArrayList<User>();\n\t\t\tfor(UserSessionDTO userDTO:listAllUsers){\n\t\t\t\tUser user=new User();\n\t\t\t\tuser.setId(userDTO.getId());\n\t\t\t\tuser.setLogin(userDTO.getLogin());\n\t\t\t\tusersList.add(user);\n\t\t\t}\n\t\t\tsession.setAttribute(""usersListSession"",usersList);\n\t\t}else usersList=usersListSession;\n\n\t\t// ----------------- quit immediately if admin not sign in correctly -----------\n\t\tif(userAdmin==null){\n\t\t\tuserAdminLogin="""";\n\t\t\treturn SUCCESS;\t\n\t\t}else{\n\t\t\tuserAdminLogin=userAdmin.getLogin();\n\t\t}\n\n\t\t// --------------- quit immediately if just notification response(OK) ----------\n\t\tif(okNotificationPop!=null && okNotificationPop!=0L){\n\t\t\trapportError=(StringBuffer)session.getAttribute(""rapportError"");\n\t\t\treturn SUCCESS;\t\n\t\t}\n\n\t\t// ------------------------ check the file name destination --------------------\n\t\tetaOrdersList=new ArrayList<OrdersDTO>();\n\t\tsession.setAttribute(""etaOrdersList"",etaOrdersList);\n\t\tString fileNameToSave=""error.xls"";\n\t\tif(fileXLS!=null || (doUpdate!=0 && doUpdate!=null)){\n\t\t\tswitch (init) {\n\t\t\tcase 1:fileNameToSave=""ordersAdminImport.xls"";\n\t\t\tbreak;\n\t\t\tcase 2:fileNameToSave=""stock.xls"";\n\t\t\tbreak;\n\t\t\tcase 3:fileNameToSave=""specialShipping.xls"";\n\t\t\tbreak;\n\t\t\tcase 4:fileNameToSave=""etaOrders.xls"";\n\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\trapportError=null;\n\t\t\t\tsession.setAttribute(""rapportError"",null);\n\t\t\t\treturn SUCCESS;\t\n\t\t\t}\n\n\t\t\t/*---------------- retrieve file info customer order -------------------------*/\n\t\t\tuser=userService.getUserByLogin(userLogin);\n\t\t\tsession.setAttribute(""userLogin"",userLogin);\n\t\t\tif(user==null && init==3){\n\t\t\t\tuserLogo=null;\n\t\t\t\tsession.setAttribute(""userLogo"",null);\n\t\t\t\trapportError=null;\n\t\t\t\tsession.setAttribute(""rapportError"",null);\n\t\t\t\taddActionError(getText(""loyauty.error.common.userNotFound""));\n\t\t\t\treturn SUCCESS;\n\t\t\t}\n\n\t\t\t//show user logo\n\t\t\tuserLogo=""./images/orders/usersLogos/""+userLogin+"".png"";\n\t\t\tsession.setAttribute(""userLogo"",userLogo);\n\t\t\tString filePath = session.getServletContext().getRealPath(""/"");\n\t\t\tString filePathData = filePath + ""WEB-INF/jsp/orders/data/"";\n\n\t\t\t//if userLogo dosn't exist give him a blank logo\n\t\t\tcreateUserLogo(filePath +""images/orders/usersLogos/BLANK.png"", filePath +""images/orders/usersLogos/""+userLogin+"".png"");\n\n\t\t\tif(doUpdate==null || doUpdate==0){\n\t\t\t\t// ----------------------------------- Upload file xls ----------------------------------\n\t\t\t\tFile destFileXLS = new File(filePathData+fileNameToSave);\n\t\t\t\tif(destFileXLS.exists())destFileXLS.delete();\n\n\t\t\t\ttry {\n\t\t\t\t\tdestFileXLS = new File(filePathData, fileNameToSave);\n\t\t\t\t\tFileUtils.copyFile(fileXLS, destFileXLS);\n\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t\tshowNotificationPop=""display:block;visibility:visible;"";\n\t\t\t\t\tmessage=""The system to a problem.\\nCheck that the file is in XLS format"";\n\t\t\t\t\trapportError=null;\n\t\t\t\t\tsession.setAttribute(""rapportError"",null);\n\t\t\t\t\tuserLogo=null;\n\t\t\t\t\tsession.setAttribute(""userLogo"",null);\n\t\t\t\t\treturn ""input"";\n\t\t\t\t}\n\t\t\t\t/*--------------------------------------------------------------------------------*/\n\t\t\t}\n\n\t\t\ttry {\n\n\t\t\t\tswitch (init) {\n\t\t\t\tcase 1: // Update orders from manifest xls file\n\t\t\t\t\torderService.updateOrdersRowsFromAdminXLS(userAdminLogin,filePathData);\n\t\t\t\t\tmessage=""Update of Orders status is successfully completed"";\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2: // Update stock from  xls file\n\t\t\t\t\tif(doUpdate!=null && doUpdate!=0){\n\t\t\t\t\t\tproductService.updateStock(listProductDTOFormXLS);\n\t\t\t\t\t\tlistProductDTOFormXLS=new ArrayList<ProductDTO>();\n\t\t\t\t\t\tsession.setAttribute(""listProductDTOFormXLS"", listProductDTOFormXLS);\n\t\t\t\t\t\tmessage=""Update of Stock is successfully completed"";\n\t\t\t\t\t}else{\n\t\t\t\t\t\tlistProductDTOFormXLS=productService.listStockFromXLS(filePath, filePathData);\n\t\t\t\t\t\tlistProductNotFound=productService.getProductNotFound(listProductDTOFormXLS);\n\t\t\t\t\t\tsession.setAttribute(""listProductDTOFormXLS"", listProductDTOFormXLS);\n\t\t\t\t\t\tmessage=""Uploading file is successfully completed"";\n\t\t\t\t\t}\n\t\t\t\t\tSystem.out.println(""listProductDTOFormXLS.size=""+listProductDTOFormXLS.size());\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3: // Update special shipping from  xls file\n\t\t\t\t\torderService.updateSpecialShippingFromXLS(rapportError,userAdminLogin,user.getId(),filePathData);\n\t\t\t\t\tmessage=""Saving Shipping Rate is successfully completed"";\n\t\t\t\t\tbreak;\n\t\t\t\t\t\n\t\t\t\tcase 4:  // prepare orders list from xls ETA file for ETA report, to generate this report\n\t\t\t\t\t\t // look at the class OrdersAdminXLS.java\n\t\t\t\t\t//get eta_field_name\n\t\t\t\t\tUserFileRecoveryDTO ufr=orderService.getUserFileRecoveryByUser(userLogin);\n\t\t\t\t\tSystem.out.println(""ufr.getEtaFieldName():""+ufr.getEtaFieldName());\n\t\t\t\t\tSystem.out.println(""[Class:uploadAdminXLS/Method:execute]---> Generate ETA List[etaOrdersList] And save it in session"");\n\t\t\t\t\tetaOrdersList=orderService.getEtaOrdersList(ufr.getEtaFieldName(),user.getId(),filePathData);\n\t\t\t\t\tsession.setAttribute(""etaOrdersList"",etaOrdersList);\n\t\t\t\t\tsession.setAttribute(""allOrdersSelectedSignal"",1L);\n\t\t\t\t\tmessage=""ETA XLS File is successfully Uploaded"";\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\treturn SUCCESS;\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tsession.setAttribute(""rapportError"",rapportError);\n\t\t\t\tshowNotificationPop=""display:block;visibility:visible;"";\n\t\t\t} catch (Exception e) {\n\t\t\t\trapportError=null;\n\t\t\t\tsession.setAttribute(""rapportError"",null);\n\t\t\t\tuserLogo=null;\n\t\t\t\tsession.setAttribute(""userLogo"",null);\n\t\t\t\taddActionError(getText(""loyauty.error.common.fileMustBeXLS""));\n\t\t\t}\n\t\t\treturn SUCCESS;\n\t\t}else{\n\t\t\tshowNotificationPop=""display:block;visibility:visible;"";\n\t\t\tmessage=""The file is empty !"";\n\t\t\trapportError=null;\n\t\t\tsession.setAttribute(""rapportError"",null);\n\t\t\tuserLogo=null;\n\t\t\tsession.setAttribute(""userLogo"",null);\n\t\t\taddActionError(getText(""loyauty.error.common.fileUpload""));\n\t\t\treturn ""input"";\n\t\t}\n\t\t\n\t\t\n\n\t}\n\n\t/*=========================  createUserLogo ===========================\n\t \t\t\t\tCreate  Blank User Logo if not Exist\n\t  =================================================================*/\n\tpublic void createUserLogo(String source, String destination) throws IOException{\n\t\tFile fileLogo=new File(destination);\n\t\tif(!fileLogo.exists()){\n\t\t\tInputStream in = new FileInputStream(source);\n\t\t\tOutputStream out = new FileOutputStream(destination);\n\t\t\tbyte[] buf = new byte[1024];\n\t\t\tint len;\n\t\t\twhile ((len = in.read(buf)) > 0) {\n\t\t\t\tout.write(buf, 0, len);\n\t\t\t}\n\t\t\tin.close();\n\t\t\tout.close();\t\n\t\t}\n\t}\n\n}\n\n----------------------------------- SOURCE END -------------------------------------",1421271174373
error,log,,,"Problems occurred when invoking code from plug-in: ""org.eclipse.jdt.ui"".",1421271174374
error,log,,,"Error in JDT Core during reconcile",1421271174375
error,log,,,"Exception occurred during problem detection:\n----------------------------------- SOURCE BEGIN -------------------------------------\npackage com.loyauty.service.orders;\n\nimport java.io.BufferedReader;\nimport java.io.File;\nimport java.io.FileReader;\nimport java.io.FileWriter;\nimport java.io.PrintWriter;\nimport java.text.DecimalFormat;\nimport java.text.SimpleDateFormat;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Calendar;\nimport java.util.Collection;\nimport java.util.Date;\nimport java.util.HashSet;\nimport java.util.Hashtable;\nimport java.util.List;\nimport java.util.Set;\nimport java.util.logging.SimpleFormatter;\n\nimport javax.xml.parsers.DocumentBuilder;\nimport javax.xml.parsers.DocumentBuilderFactory;\nimport jxl.Cell;\nimport jxl.Sheet;\nimport jxl.Workbook;\nimport jxl.format.Alignment;\nimport jxl.format.BoldStyle;\nimport jxl.format.Border;\nimport jxl.format.BorderLineStyle;\nimport jxl.format.Colour;\nimport jxl.format.VerticalAlignment;\nimport jxl.write.DateFormat;\nimport jxl.write.DateTime;\nimport jxl.write.Label;\nimport jxl.write.WritableCell;\nimport jxl.write.WritableCellFormat;\nimport jxl.write.WritableFont;\nimport jxl.write.WritableSheet;\nimport jxl.write.WritableWorkbook;\n\nimport org.w3c.dom.Document;\nimport org.w3c.dom.Element;\nimport org.w3c.dom.Node;\nimport org.w3c.dom.NodeList;\n\nimport lombok.Getter;\nimport lombok.Setter;\nimport com.loyauty.dao.core.DaoCommand;\nimport com.loyauty.dao.core.DaoManager;\nimport com.loyauty.dao.core.DaoManagerFactory;\nimport com.loyauty.exception.DaoException;\nimport com.loyauty.exception.ServiceException;\nimport com.loyauty.exception.ServiceLocatorException;\nimport com.loyauty.model.Currency;\nimport com.loyauty.model.Orders;\nimport com.loyauty.model.OrdersRows;\nimport com.loyauty.model.OrdersSpecialShipping;\nimport com.loyauty.model.Product;\nimport com.loyauty.model.User;\nimport com.loyauty.model.UserFileRecovery;\nimport com.loyauty.model.UserFilesDownloaded;\nimport com.loyauty.service.ServiceImpl;\nimport com.loyauty.service.ServiceLocator;\nimport com.loyauty.service.core.DTOFactory;\nimport com.loyauty.service.core.dto.BoxDTO;\nimport com.loyauty.service.core.dto.CurrencyDTO;\nimport com.loyauty.service.core.dto.ItemMapDTO;\nimport com.loyauty.service.core.dto.OrdersDTO;\nimport com.loyauty.service.core.dto.OrdersSpecialShippingDTO;\nimport com.loyauty.service.core.dto.ProductDTO;\nimport com.loyauty.service.core.dto.ProvinceDTO;\nimport com.loyauty.service.core.dto.UserDTO;\nimport com.loyauty.service.core.dto.UserFileDataRecoveryDTO;\nimport com.loyauty.service.core.dto.UserFileRecoveryDTO;\nimport com.loyauty.service.core.dto.UserFilesDownloadedDTO;\nimport com.loyauty.service.core.dto.UserProductPriceDTO;\nimport com.loyauty.service.product.ProductService;\nimport com.loyauty.service.user.UserService;\n\n\npublic class OrdersServiceImpl extends ServiceImpl implements OrdersService {\n\n\t//======================================== Admin's Part ========================================\n\t@Setter @Getter\n\tprotected DaoManager daoManager;\n\tprivate static ServiceLocator serviceLocator;\n\tprivate static ProductService productService;\n\tprivate static UserService userService;\n\tprivate static OrdersService orderService;\n\tpublic OrdersServiceImpl() {\n\t\tsetDaoManager(DaoManagerFactory.getDaoManager());\n\t\tserviceLocator = ServiceLocator.getInstance();\n\n\t}\n\n\t/**----------------------------------------------------------\n\t *THIS METHOD ALLOW US TO TRANSLATE ORDER DTO TO ORDER*\n\t  -----------------------------------------------------------*/\t\n\tpublic static Orders buildOrder(OrdersDTO orderDTO){\n\t\tOrders order=new Orders();\n\t\torder.setClientCity(orderDTO.getClientCity());\n\t\torder.setClientEmail(orderDTO.getClientEmail());\n\t\torder.setClientFirstName(orderDTO.getClientFirstName());\n\t\torder.setClientLastName(orderDTO.getClientLastName());\n\t\torder.setClientNumber(orderDTO.getClientNumber());\n\t\torder.setClientOrderNumber(orderDTO.getClientOrderNumber());\n\t\torder.setClientOtherNames(orderDTO.getClientOtherNames());\n\t\torder.setClientOtherStreet(orderDTO.getClientOtherStreet());\n\t\torder.setClientPhone(orderDTO.getClientPhone());\n\t\torder.setClientPostalCode(orderDTO.getClientPostalCode());\n\t\torder.setClientProvince(orderDTO.getClientProvince());\n\t\torder.setClientStreet(orderDTO.getClientStreet());\n\t\torder.setCreationDate(orderDTO.getCreationDate());\n\t\torder.setId(orderDTO.getId());\n\t\torder.setLsOrderId(orderDTO.getLsOrderId());\n\t\torder.setProductOrderNumber(orderDTO.getProductOrderNumber());\n\t\torder.setRowsList(orderDTO.getRowsList());\n\t\torder.setUserId(orderDTO.getUserId());\n\t\treturn order;\n\t}\n\n\t/**----------------------------------------------------------\n\t *GET USER_FILE_RECOVERY BY USER_LOGIN*\n\t  -----------------------------------------------------------*/\t\n\t@Override\n\tpublic UserFileRecoveryDTO getUserFileRecoveryByUser(final String login)\n\tthrows ServiceException {\n\n\t\tUserFileRecovery result=null;\t\t\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresult = (UserFileRecovery) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().getUserFileRecoveryByUser(login);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry {\n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn (DTOFactory.getUserFileRecoveryDTO(result));\n\t}\n\n\n\n\t/**----------------------------------------------------------\n\t *UPDATE ORDERS ROWS BY LIKE LSORDER_ID, DATE, STATUS, CLIENT*\n\t  -----------------------------------------------------------*/\n\t@SuppressWarnings(""unchecked"")\n\t@Override\n\tpublic List<Orders> getAllOrders(){\n\t\tList<Orders> result=null;\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresult = (List<Orders>) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().getAllOrders();\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry {\n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**----------------------------------------------------------\n\t *GET INVOICED COUNT*\n\t  -----------------------------------------------------------*/\n\t@SuppressWarnings(""unchecked"")\n\t@Override\n\tpublic Long getCountInvoicedOrders(final Date creationDateStart,final Date creationDateEnd,final Integer factorDateBetween,\n\t\t\tfinal String userLogin, final String lsOrderId,final String status){\n\t\tOrders result=null;\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresult = (Orders) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().getCountInvoicedOrders(creationDateStart,creationDateEnd,factorDateBetween,userLogin, lsOrderId,status);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry {\n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\tLong count=result.getCount();\n\t\treturn count;\n\t}\n\n\n\n\t/**----------------------------------------------------------\n\t *GET INVOICED COUNT*\n\t  -----------------------------------------------------------*/\n\t@SuppressWarnings(""unchecked"")\n\t@Override\n\tpublic Long getCountOrders(final Date creationDateStart,final Date creationDateEnd,final Integer factorDateBetween,\n\t\t\tfinal String userLogin, final String lsOrderId,final String status){\n\t\tOrders result=null;\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresult = (Orders) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().getCountOrders(creationDateStart,creationDateEnd,factorDateBetween,userLogin,lsOrderId,status);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry {\n\t\t\t\tthrow new ServiceException(de);\n\t\t\t}catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\tLong count=result.getCount();\n\t\treturn count;\n\t}\n\n\t/**----------------------------------------------------------\n\t *THIS FUNCTION ALLOWS US TO TRANSFORM AN XML FILE TO A LIST \n\t   OF ORDERS*\n\t  -----------------------------------------------------------*/\t\n\t@SuppressWarnings({ ""rawtypes"", ""unchecked"" })\n\t@Override\n\tpublic Collection  toArrayListFromXML(File orderFile,String userLogin)throws Exception {\n\t\tCollection listOrdersDTO = new ArrayList();\n\t\tUserFileRecoveryDTO ufrDTO;\n\t\tString formatDate="""";\n\t\tHashtable<String, String>lsOrdersIdHash=new Hashtable<String, String>();\n\t\t/*List<Orders>listOrders=getAllOrders();\n\t\tif(listOrders!=null){\n\t\t\tfor(Orders ord:listOrders){\n\t\t\t\tlsOrdersIdHash.put(ord.getLsOrderId(), ord.getLsOrderId());\n\t\t\t}\n\t\t}*/\n\t\tproductService = serviceLocator.getProductService();\n\n\t\tif(orderFile==null)return listOrdersDTO;\n\t\tList<ProvinceDTO> listProvine= productService.getAllProvinces();\n\t\tUserFileDataRecoveryDTO ufDataDTO=new UserFileDataRecoveryDTO();\n\t\tDocumentBuilderFactory docBuilderFactory = DocumentBuilderFactory.newInstance();\n\t\tDocumentBuilder docBuilder = docBuilderFactory.newDocumentBuilder();\n\t\tDocument doc = docBuilder.parse (orderFile);\n\t\tufrDTO=getUserFileRecoveryByUser(userLogin);\n\t\t// normalize text representation\n\t\tdoc.getDocumentElement ().normalize ();\n\n\t\tif(ufrDTO!=null && ufrDTO.getTagRoot()!=null  && ufrDTO.getFileTypeId()==1){\n\t\t\tNodeList listOfOrders = doc.getElementsByTagName(ufrDTO.getTagRoot());\n\t\t\tfor(int s=0; s<listOfOrders.getLength() ; s++){\n\t\t\t\tufDataDTO=new UserFileDataRecoveryDTO();\n\t\t\t\tufDataDTO.setUserId(ufrDTO.getUserId());\n\t\t\t\tNode firstOrderNode = listOfOrders.item(s);   \n\t\t\t\tif(firstOrderNode.getNodeType() == Node.ELEMENT_NODE){\n\t\t\t\t\tElement firstOrderElement = (Element)firstOrderNode;\n\t\t\t\t\t//--------------- 1:companyHeader -----------\n\t\t\t\t\tString companyHeader="""";\n\t\t\t\t\tif(ufrDTO.getCompanyHeader()!=null){\n\t\t\t\t\t\tNodeList companyHeaderList = firstOrderElement.getElementsByTagName(ufrDTO.getCompanyHeader());\n\t\t\t\t\t\tif(companyHeaderList!=null && companyHeaderList.getLength()>0){\n\t\t\t\t\t\t\tElement companyHeaderElement = (Element)companyHeaderList.item(0);\n\t\t\t\t\t\t\tif(companyHeaderElement!=null){\n\t\t\t\t\t\t\t\tNodeList companyHeaderFNList = companyHeaderElement.getChildNodes();\n\t\t\t\t\t\t\t\tif(companyHeaderFNList!=null && companyHeaderFNList.getLength()>0){\n\t\t\t\t\t\t\t\t\tcompanyHeader =((Node)companyHeaderFNList.item(0)).getNodeValue().trim(); \n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}  \n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tufDataDTO.setCompanyHeader(companyHeader);\n\n\t\t\t\t\t//--------------- 2:productOrderNumber ----------------\n\t\t\t\t\tString productOrderNumber="""";\n\t\t\t\t\tif(ufrDTO.getProductOrderNumber()!=null){\n\t\t\t\t\t\tNodeList productOrderNumberList = firstOrderElement.getElementsByTagName(ufrDTO.getProductOrderNumber());\n\t\t\t\t\t\tif(productOrderNumberList!=null && productOrderNumberList.getLength()>0){\n\t\t\t\t\t\t\tElement productOrderNumberElement = (Element)productOrderNumberList.item(0);\n\t\t\t\t\t\t\tif(productOrderNumberElement!=null){\n\t\t\t\t\t\t\t\tNodeList productOrderNumberFNList = productOrderNumberElement.getChildNodes(); \n\t\t\t\t\t\t\t\tif(productOrderNumberFNList!=null && productOrderNumberFNList.getLength()>0){\n\t\t\t\t\t\t\t\t\tproductOrderNumber =((Node)productOrderNumberFNList.item(0)).getNodeValue().trim();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tufDataDTO.setProductOrderNumber(productOrderNumber);                \n\t\t\t\t\t//--------------- 3:productOrderDate -----------------\n\t\t\t\t\tString productOrderDate="""";\n\t\t\t\t\tif(ufrDTO.getProductOrderDate()!=null){\n\t\t\t\t\t\tNodeList productOrderDateList = firstOrderElement.getElementsByTagName(ufrDTO.getProductOrderDate());\n\t\t\t\t\t\tif(productOrderDateList!=null && productOrderDateList.getLength()>0){\n\t\t\t\t\t\t\tElement productOrderDateElement = (Element)productOrderDateList.item(0);\n\t\t\t\t\t\t\tif(productOrderDateElement!=null){\n\t\t\t\t\t\t\t\tNodeList productOrderDateFNList = productOrderDateElement.getChildNodes();\n\t\t\t\t\t\t\t\tif(productOrderDateFNList!=null && productOrderDateFNList.getLength()>0){\n\t\t\t\t\t\t\t\t\tproductOrderDate =((Node)productOrderDateFNList.item(0)).getNodeValue().trim();\n\t\t\t\t\t\t\t\t\tproductOrderDate=productOrderDate.replaceAll(""^ +| +$|( )+"", ""$1"");\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tformatDate=ufrDTO.getFormatDate();\n\t\t\t\t\tif(formatDate==null)formatDate="""";\n\t\t\t\t\tSimpleDateFormat sdf = new SimpleDateFormat(formatDate);\n\t\t\t\t\tDate dateOrder=null;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tDate date = sdf.parse(productOrderDate);\n\t\t\t\t\t\tdateOrder=date;\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception pe) {\n\t\t\t\t\t\tdateOrder=null;\n\t\t\t\t\t}\n\t\t\t\t\tufDataDTO.setProductOrderDate(dateOrder);\n\n\t\t\t\t\t//--------------- 4:quantity -------------------------\n\t\t\t\t\tString strQuantity="""";\n\t\t\t\t\tif(ufrDTO.getQuantity()!=null){\n\t\t\t\t\t\tNodeList quantityList = firstOrderElement.getElementsByTagName(ufrDTO.getQuantity());\n\t\t\t\t\t\tif(quantityList!=null && quantityList.getLength()>0){\n\t\t\t\t\t\t\tElement quantityElement = (Element)quantityList.item(0);\n\t\t\t\t\t\t\tif(quantityElement!=null){\n\t\t\t\t\t\t\t\tNodeList quantityFNList = quantityElement.getChildNodes();\n\t\t\t\t\t\t\t\tif(quantityFNList!=null && quantityFNList.getLength()>0){\n\t\t\t\t\t\t\t\t\tstrQuantity =((Node)quantityFNList.item(0)).getNodeValue().trim();\n\t\t\t\t\t\t\t\t\tstrQuantity=strQuantity.replaceAll("" "", """");\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif(strQuantity!=null && !strQuantity.equals("""")){\n\t\t\t\t\t\tint index=strQuantity.indexOf("","");\n\t\t\t\t\t\tif(index>=0){\n\t\t\t\t\t\t\tString strUnitPrice1=strQuantity.substring(0, index);\n\t\t\t\t\t\t\tString strUnitPrice2= strQuantity.substring(index+1, strQuantity.length());\n\t\t\t\t\t\t\tstrQuantity=strUnitPrice1+"".""+strUnitPrice2;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tDouble quantity=null;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tquantity = Double.parseDouble(strQuantity);\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception pe) {\n\t\t\t\t\t\tquantity=null;\n\t\t\t\t\t}\n\t\t\t\t\tufDataDTO.setQuantity(quantity);\n\n\t\t\t\t\t//--------------- 5:lsProductID ----------------------\n\t\t\t\t\tString lsProductID="""";\n\t\t\t\t\tif(ufrDTO.getLsProductID()!=null){\n\t\t\t\t\t\tNodeList lsProductIDList = firstOrderElement.getElementsByTagName(ufrDTO.getLsProductID());\n\t\t\t\t\t\tif(lsProductIDList!=null && lsProductIDList.getLength()>0){\n\t\t\t\t\t\t\tElement lsProductIDElement = (Element)lsProductIDList.item(0);\n\t\t\t\t\t\t\tif(lsProductIDElement!=null){\n\t\t\t\t\t\t\t\tNodeList lsProductIDFNList = lsProductIDElement.getChildNodes();\n\t\t\t\t\t\t\t\tif(lsProductIDFNList!=null && lsProductIDFNList.getLength()>0){\n\t\t\t\t\t\t\t\t\tlsProductID =((Node)lsProductIDFNList.item(0)).getNodeValue().trim(); \n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tufDataDTO.setLsProductID(lsProductID);\n\n\t\t\t\t\t//--------------- 6:productDescription ------------------\n\t\t\t\t\tString productDescription="""";\n\t\t\t\t\tif(ufrDTO.getProductDescription()!=null){\n\t\t\t\t\t\tNodeList productDescriptionList = firstOrderElement.getElementsByTagName(ufrDTO.getProductDescription());\n\t\t\t\t\t\tif(productDescriptionList!=null && productDescriptionList.getLength()>0){\n\t\t\t\t\t\t\tElement productDescriptionElement = (Element)productDescriptionList.item(0);\n\t\t\t\t\t\t\tif(productDescriptionElement!=null){\n\t\t\t\t\t\t\t\tNodeList productDescriptionFNList = productDescriptionElement.getChildNodes();\n\t\t\t\t\t\t\t\tif(productDescriptionFNList!=null && productDescriptionFNList.getLength()>0){\n\t\t\t\t\t\t\t\t\tproductDescription =((Node)productDescriptionFNList.item(0)).getNodeValue().trim(); \n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tproductDescription=productDescription.replaceAll("","", "" "");\n\t\t\t\t\tufDataDTO.setProductDescription(productDescription);\n\n\t\t\t\t\t//--------------- 7:unitPrice ---------------------------\n\t\t\t\t\tString strUnitPrice="""";\n\t\t\t\t\tif(ufrDTO.getUnitPrice()!=null){\n\t\t\t\t\t\tNodeList unitPriceList = firstOrderElement.getElementsByTagName(ufrDTO.getUnitPrice());\n\t\t\t\t\t\tif(unitPriceList!=null && unitPriceList.getLength()>0){\n\t\t\t\t\t\t\tElement unitPriceElement = (Element)unitPriceList.item(0);\n\t\t\t\t\t\t\tif(unitPriceElement!=null){\n\t\t\t\t\t\t\t\tNodeList unitPriceFNList = unitPriceElement.getChildNodes();\n\t\t\t\t\t\t\t\tif(unitPriceFNList!=null && unitPriceFNList.getLength()>0){\n\t\t\t\t\t\t\t\t\tstrUnitPrice =((Node)unitPriceFNList.item(0)).getNodeValue().trim();  \n\t\t\t\t\t\t\t\t\tstrUnitPrice= strUnitPrice.replaceAll(""\\\\$"", """");\n\t\t\t\t\t\t\t\t\tstrUnitPrice= strUnitPrice.replaceAll("" "", """");\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif(strUnitPrice!=null && !strUnitPrice.equals("""")){\n\t\t\t\t\t\tint index=strUnitPrice.indexOf("","");\n\t\t\t\t\t\tif(index>=0){\n\t\t\t\t\t\t\tString strUnitPrice1=strUnitPrice.substring(0, index);\n\t\t\t\t\t\t\tString strUnitPrice2= strUnitPrice.substring(index+1, strUnitPrice.length());\n\t\t\t\t\t\t\tstrUnitPrice=strUnitPrice1+"".""+strUnitPrice2;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tDouble ProductUnitPrice=null;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tProductUnitPrice = Double.parseDouble(strUnitPrice);\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception pe) {\n\t\t\t\t\t\tProductUnitPrice=null;\n\t\t\t\t\t}\n\t\t\t\t\tufDataDTO.setUnitPrice(ProductUnitPrice);\n\n\t\t\t\t\t//--------------- 8:clientNumber -------------------------\n\t\t\t\t\tString clientNumber="""";\n\t\t\t\t\tif(ufrDTO.getClientNumber()!=null){\n\t\t\t\t\t\tNodeList clientNumberList = firstOrderElement.getElementsByTagName(ufrDTO.getClientNumber());\n\t\t\t\t\t\tif(clientNumberList!=null && clientNumberList.getLength()>0){\n\t\t\t\t\t\t\tElement clientNumberElement = (Element)clientNumberList.item(0);\n\t\t\t\t\t\t\tif(clientNumberElement!=null){\n\t\t\t\t\t\t\t\tNodeList clientNumberFNList = clientNumberElement.getChildNodes();\n\t\t\t\t\t\t\t\tif(clientNumberFNList!=null && clientNumberFNList.getLength()>0){\n\t\t\t\t\t\t\t\t\tclientNumber =((Node)clientNumberFNList.item(0)).getNodeValue().trim(); \n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tufDataDTO.setClientNumber(clientNumber);\n\n\t\t\t\t\t//--------------- 9:firstName ---------------------------\n\t\t\t\t\tString firstName="""";\n\t\t\t\t\tif(ufrDTO.getClientFirstName()!=null){\n\t\t\t\t\t\tNodeList firstNameList = firstOrderElement.getElementsByTagName(ufrDTO.getClientFirstName());\n\t\t\t\t\t\tif(firstNameList!=null && firstNameList.getLength()>0){\n\t\t\t\t\t\t\tElement firstNameElement = (Element)firstNameList.item(0);\n\t\t\t\t\t\t\tif(firstNameElement!=null){\n\t\t\t\t\t\t\t\tNodeList firstNameFNList = firstNameElement.getChildNodes();\n\t\t\t\t\t\t\t\tif(firstNameFNList!=null && firstNameFNList.getLength()>0){\n\t\t\t\t\t\t\t\t\tfirstName =((Node)firstNameFNList.item(0)).getNodeValue().trim();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tufDataDTO.setClientFirstName(firstName);\n\n\t\t\t\t\t//--------------- 10:lastName ---------------------------\n\t\t\t\t\tString lastName="""";\n\t\t\t\t\tif(ufrDTO.getClientLastName()!=null){\n\t\t\t\t\t\tNodeList lastNameList = firstOrderElement.getElementsByTagName(ufrDTO.getClientLastName());\n\t\t\t\t\t\tif(lastNameList!=null && lastNameList.getLength()>0){\n\t\t\t\t\t\t\tElement lastNameElement = (Element)lastNameList.item(0);\n\t\t\t\t\t\t\tif(lastNameElement!=null){\n\t\t\t\t\t\t\t\tNodeList lastNameFNList = lastNameElement.getChildNodes();\n\t\t\t\t\t\t\t\tif(lastNameFNList!=null && lastNameFNList.getLength()>0){\n\t\t\t\t\t\t\t\t\tlastName =((Node)lastNameFNList.item(0)).getNodeValue().trim();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tufDataDTO.setClientLastName(lastName);\n\n\t\t\t\t\t//--------------- 11:addressStreet ----------------------\n\t\t\t\t\tString addressStreet="""";\n\t\t\t\t\tif(ufrDTO.getClientStreet()!=null){\n\t\t\t\t\t\tNodeList addressStreetList = firstOrderElement.getElementsByTagName(ufrDTO.getClientStreet());\n\t\t\t\t\t\tif(addressStreetList!=null && addressStreetList.getLength()>0){\n\t\t\t\t\t\t\tElement addressStreetElement = (Element)addressStreetList.item(0);\n\t\t\t\t\t\t\tif(addressStreetElement!=null){\n\t\t\t\t\t\t\t\tNodeList addressStreetFNList = addressStreetElement.getChildNodes();\n\t\t\t\t\t\t\t\tif(addressStreetFNList!=null && addressStreetFNList.getLength()>0){\n\t\t\t\t\t\t\t\t\taddressStreet =((Node)addressStreetFNList.item(0)).getNodeValue().trim();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\taddressStreet=addressStreet.replaceAll("","", "" "");\n\t\t\t\t\tufDataDTO.setClientStreet(addressStreet);\n\n\t\t\t\t\t//--------------- 12:addressStreetOther ----------------\n\t\t\t\t\tString addressStreetOther="""";\n\t\t\t\t\tif(ufrDTO.getClientOtherStreet()!=null){\n\t\t\t\t\t\tNodeList addressStreetOtherList = firstOrderElement.getElementsByTagName(ufrDTO.getClientOtherStreet());\n\t\t\t\t\t\tif(addressStreetOtherList!=null && addressStreetOtherList.getLength()>0){\n\t\t\t\t\t\t\tElement addressStreetOtherElement = (Element)addressStreetOtherList.item(0);\n\t\t\t\t\t\t\tif(addressStreetOtherElement!=null){\n\t\t\t\t\t\t\t\tNodeList addressStreetOtherFNList = addressStreetOtherElement.getChildNodes();\n\t\t\t\t\t\t\t\tif(addressStreetOtherFNList!=null && addressStreetOtherFNList.getLength()>0){\n\t\t\t\t\t\t\t\t\taddressStreetOther =((Node)addressStreetOtherFNList.item(0)).getNodeValue().trim();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tufDataDTO.setClientOtherStreet(addressStreetOther);\n\n\t\t\t\t\t//--------------- 13:addressCity ------------------------\n\t\t\t\t\tString addressCity="""";\n\t\t\t\t\tif(ufrDTO.getClientCity()!=null){\n\t\t\t\t\t\tNodeList addressCityList = firstOrderElement.getElementsByTagName(ufrDTO.getClientCity());\n\t\t\t\t\t\tif(addressCityList!=null && addressCityList.getLength()>0){\n\t\t\t\t\t\t\tElement addressCityElement = (Element)addressCityList.item(0);\n\t\t\t\t\t\t\tif(addressCityElement!=null){\n\t\t\t\t\t\t\t\tNodeList addressCityLNList = addressCityElement.getChildNodes();\n\t\t\t\t\t\t\t\tif(addressCityLNList!=null && addressCityLNList.getLength()>0){\n\t\t\t\t\t\t\t\t\taddressCity =((Node)addressCityLNList.item(0)).getNodeValue().trim();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tufDataDTO.setClientCity(addressCity);\n\n\t\t\t\t\t//--------------- 14:addressPostalCode ---------------------\n\t\t\t\t\tString addressPostalCode="" "";\n\t\t\t\t\tif(ufrDTO.getClientPostalCode()!=null){\n\t\t\t\t\t\tNodeList addressPostalCodeList = firstOrderElement.getElementsByTagName(ufrDTO.getClientPostalCode());\n\t\t\t\t\t\tif(addressPostalCodeList!=null && addressPostalCodeList.getLength()>0){\n\t\t\t\t\t\t\tElement addressPostalCodeElement = (Element)addressPostalCodeList.item(0);\n\t\t\t\t\t\t\tif(addressPostalCodeElement!=null){\n\t\t\t\t\t\t\t\tNodeList addressPostalCodeLNList = addressPostalCodeElement.getChildNodes();\n\t\t\t\t\t\t\t\tif(addressPostalCodeLNList!=null && addressPostalCodeLNList.getLength()>0){\n\t\t\t\t\t\t\t\t\taddressPostalCode =((Node)addressPostalCodeLNList.item(0)).getNodeValue().trim();  \n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\taddressPostalCode=addressPostalCode.replaceAll("" "", """");\n\t\t\t\t\tufDataDTO.setClientPostalCode(addressPostalCode);\n\n\t\t\t\t\t//--------------- 15:addressState -------------------------\n\t\t\t\t\tString addressState="""";\n\t\t\t\t\tif(ufrDTO.getClientProvince()!=null){\n\t\t\t\t\t\tNodeList addressStateList = firstOrderElement.getElementsByTagName(ufrDTO.getClientProvince());\n\t\t\t\t\t\tif(addressStateList!=null && addressStateList.getLength()>0){\n\t\t\t\t\t\t\tElement addressStateElement = (Element)addressStateList.item(0);\n\t\t\t\t\t\t\tif(addressStateElement!=null){\n\t\t\t\t\t\t\t\tNodeList addressStateLNList = addressStateElement.getChildNodes();\n\t\t\t\t\t\t\t\tif(addressStateLNList!=null && addressStateLNList.getLength()>0){\n\t\t\t\t\t\t\t\t\taddressState =((Node)addressStateLNList.item(0)).getNodeValue().trim(); \n\t\t\t\t\t\t\t\t\tString clientProvinceToCompar=addressState.toLowerCase();\n\t\t\t\t\t\t\t\t\tclientProvinceToCompar=clientProvinceToCompar.replaceAll("" "", """");\n\t\t\t\t\t\t\t\t\tclientProvinceToCompar=clientProvinceToCompar.replaceAll(""canada"", """");\n\t\t\t\t\t\t\t\t\tclientProvinceToCompar=clientProvinceToCompar.replaceAll("","", """");\n\t\t\t\t\t\t\t\t\tclientProvinceToCompar=clientProvinceToCompar.replaceAll(""\\\\."", """");\n\t\t\t\t\t\t\t\t\tfor(ProvinceDTO prov:listProvine){\n\t\t\t\t\t\t\t\t\t\tString provName=prov.getName();\n\t\t\t\t\t\t\t\t\t\tprovName=provName.replaceAll("" "", """");\n\t\t\t\t\t\t\t\t\t\tprovName= provName.toLowerCase();\n\t\t\t\t\t\t\t\t\t\tif(clientProvinceToCompar.equals(provName) || clientProvinceToCompar.equals(prov.getCode()) ){\n\t\t\t\t\t\t\t\t\t\t\taddressState=\tprov.getCode();\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\taddressState=addressState.replaceAll(""\\\\."", """");\n\t\t\t\t\t\t\t\t\tif(clientProvinceToCompar.equals(""""))addressState=""""; \n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tufDataDTO.setClientProvince(addressState);\n\n\t\t\t\t\t//--------------- 16:clientPhone --------------------------\n\t\t\t\t\tString clientPhone="""";\n\t\t\t\t\tif(ufrDTO.getClientPhone()!=null){\n\t\t\t\t\t\tNodeList clientPhoneList = firstOrderElement.getElementsByTagName(ufrDTO.getClientPhone());\n\t\t\t\t\t\tif(clientPhoneList!=null && clientPhoneList.getLength()>0){\n\t\t\t\t\t\t\tElement clientPhoneElement = (Element)clientPhoneList.item(0);\n\t\t\t\t\t\t\tif(clientPhoneElement!=null){\n\t\t\t\t\t\t\t\tNodeList clientPhoneLNList = clientPhoneElement.getChildNodes();\n\t\t\t\t\t\t\t\tif(clientPhoneLNList!=null && clientPhoneLNList.getLength()>0){\n\t\t\t\t\t\t\t\t\tclientPhone =((Node)clientPhoneLNList.item(0)).getNodeValue().trim(); \n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t//--------------- 17:client_phone_zone -------------------------\n\t\t\t\t\tString clientPhoneZone="""";\n\t\t\t\t\tif(ufrDTO.getClientPhoneZone()!=null){\n\t\t\t\t\t\tNodeList clientPhoneZoneList = firstOrderElement.getElementsByTagName(ufrDTO.getClientPhoneZone());\n\t\t\t\t\t\tif(clientPhoneZoneList!=null && clientPhoneZoneList.getLength()>0){\n\t\t\t\t\t\t\tElement clientPhoneZoneElement = (Element)clientPhoneZoneList.item(0);\n\t\t\t\t\t\t\tif(clientPhoneZoneElement!=null){\n\t\t\t\t\t\t\t\tNodeList clientPhoneZoneLNList = clientPhoneZoneElement.getChildNodes();\n\t\t\t\t\t\t\t\tif(clientPhoneZoneLNList!=null && clientPhoneZoneLNList.getLength()>0){\n\t\t\t\t\t\t\t\t\tclientPhoneZone =((Node)clientPhoneZoneLNList.item(0)).getNodeValue().trim(); \n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(clientPhoneZone!=null && !clientPhoneZone.equals(""""))clientPhone=clientPhoneZone+"" ""+clientPhone;\n\t\t\t\t\tufDataDTO.setClientPhone(clientPhone);\n\n\t\t\t\t\t//--------------- 18:clientEmail -------------------------\n\t\t\t\t\tString clientEmail="""";\n\t\t\t\t\tif(ufrDTO.getClientEmail()!=null){\n\t\t\t\t\t\tNodeList clientEmailList = firstOrderElement.getElementsByTagName(ufrDTO.getClientEmail());\n\t\t\t\t\t\tif(clientEmailList!=null && clientEmailList.getLength()>0){\n\t\t\t\t\t\t\tElement clientEmailElement = (Element)clientEmailList.item(0);\n\t\t\t\t\t\t\tif(clientEmailElement!=null){\n\t\t\t\t\t\t\t\tNodeList clientEmailLNList = clientEmailElement.getChildNodes();\n\t\t\t\t\t\t\t\tif(clientEmailLNList!=null && clientEmailLNList.getLength()>0){\n\t\t\t\t\t\t\t\t\tclientEmail =((Node)clientEmailLNList.item(0)).getNodeValue().trim(); \n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tufDataDTO.setClientEmail(clientEmail);\n\n\t\t\t\t\t//--------------- 19:requiredDate -------------------------\n\t\t\t\t\tString requiredDate="""";\n\t\t\t\t\tif(ufrDTO.getRequiredDate()!=null){\n\t\t\t\t\t\tNodeList requiredDateList = firstOrderElement.getElementsByTagName(ufrDTO.getRequiredDate());\n\t\t\t\t\t\tif(requiredDateList!=null && requiredDateList.getLength()>0){\n\t\t\t\t\t\t\tElement requiredDateElement = (Element)requiredDateList.item(0);\n\t\t\t\t\t\t\tif(requiredDateElement!=null){\n\t\t\t\t\t\t\t\tNodeList requiredDateLNList = requiredDateElement.getChildNodes();\n\t\t\t\t\t\t\t\tif(requiredDateLNList!=null && requiredDateLNList.getLength()>0){\n\t\t\t\t\t\t\t\t\trequiredDate =((Node)requiredDateLNList.item(0)).getNodeValue().trim(); \n\t\t\t\t\t\t\t\t\trequiredDate=requiredDate.replaceAll("" "", """");\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tformatDate=ufrDTO.getFormatDate();\n\t\t\t\t\tif(formatDate==null)formatDate="""";\n\t\t\t\t\tsdf = new SimpleDateFormat(formatDate);\n\t\t\t\t\tDate requiredDateOrder=null;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tDate date = sdf.parse(requiredDate);\n\t\t\t\t\t\trequiredDateOrder=date;\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception pe) {\n\t\t\t\t\t\trequiredDateOrder=null;\n\t\t\t\t\t}                     \n\t\t\t\t\tufDataDTO.setRequiredDate(requiredDateOrder);\n\n\t\t\t\t\t//--------------- 20:clients_other_names -------------------------\n\t\t\t\t\tString clientsOtherNames="""";\n\t\t\t\t\tif(ufrDTO.getClientOtherNames()!=null){\n\t\t\t\t\t\tNodeList clientsOtherNamesList = firstOrderElement.getElementsByTagName(ufrDTO.getClientOtherNames());\n\t\t\t\t\t\tif(clientsOtherNamesList!=null && clientsOtherNamesList.getLength()>0){\n\t\t\t\t\t\t\tElement clientsOtherNamesElement = (Element)clientsOtherNamesList.item(0);\n\t\t\t\t\t\t\tif(clientsOtherNamesElement!=null){\n\t\t\t\t\t\t\t\tNodeList clientsOtherNamesLNList = clientsOtherNamesElement.getChildNodes();\n\t\t\t\t\t\t\t\tif(clientsOtherNamesLNList!=null && clientsOtherNamesLNList.getLength()>0){\n\t\t\t\t\t\t\t\t\tclientsOtherNames =((Node)clientsOtherNamesLNList.item(0)).getNodeValue().trim(); \n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tufDataDTO.setClientOtherNames(clientsOtherNames);\n\n\t\t\t\t\t//--------------- 21:lsOrderId ------------------------\n\t\t\t\t\tString code=userLogin.substring(0, 2).toUpperCase();\n\t\t\t\t\tString lsOrderId=ufDataDTO.getProductOrderNumber();\n\n\t\t\t\t\tint inc=0;//increment\n\t\t\t\t\tString lsOrderIdParent=lsOrderId;\n\t\t\t\t\tlsOrderIdParent=lsOrderIdParent.replaceFirst(""-"", """");\n\t\t\t\t\tlsOrderIdParent=lsOrderIdParent.replaceFirst(""_"", """");\n\t\t\t\t\tlsOrderIdParent=lsOrderIdParent.replaceFirst(""R"", """");\n\t\t\t\t\tlsOrderIdParent=lsOrderIdParent.replaceAll("" "", """");\n\t\t\t\t\tif(lsOrderIdParent.length()>14){\n\t\t\t\t\t\tint index=lsOrderIdParent.length()-14;\n\t\t\t\t\t\tlsOrderIdParent=lsOrderIdParent.substring(index, lsOrderIdParent.length());\n\t\t\t\t\t}\n\t\t\t\t\tString lsOrderIdToGenerate=code+""O""+ufDataDTO.getUserId()+lsOrderIdParent;;\n\t\t\t\t\twhile(isLsOrderIdUsed(lsOrderIdToGenerate) || lsOrdersIdHash.containsKey(lsOrderIdToGenerate)){\n\t\t\t\t\t\tinc++; \n\t\t\t\t\t\tlsOrderIdToGenerate=code+""O""+ufDataDTO.getUserId()+lsOrderIdParent+""R""+inc;\n\t\t\t\t\t}\n\t\t\t\t\tlsOrdersIdHash.put(lsOrderIdToGenerate, lsOrderIdToGenerate);\n\t\t\t\t\tufDataDTO.setLsOrderId(lsOrderIdToGenerate);\n\n\t\t\t\t\t//--------------- 22:clients_other_names -------------------------\n\t\t\t\t\tString shippingCompany="""";\n\t\t\t\t\tif(ufrDTO.getShippingCompany()!=null){\n\t\t\t\t\t\tNodeList shippingCompanyList = firstOrderElement.getElementsByTagName(ufrDTO.getShippingCompany());\n\t\t\t\t\t\tif(shippingCompanyList!=null && shippingCompanyList.getLength()>0){\n\t\t\t\t\t\t\tElement shippingCompanyElement = (Element)shippingCompanyList.item(0);\n\t\t\t\t\t\t\tif(shippingCompanyElement!=null){\n\t\t\t\t\t\t\t\tNodeList shippingCompanyLNList = shippingCompanyElement.getChildNodes();\n\t\t\t\t\t\t\t\tif(shippingCompanyLNList!=null && shippingCompanyLNList.getLength()>0){\n\t\t\t\t\t\t\t\t\tshippingCompany =((Node)shippingCompanyLNList.item(0)).getNodeValue().trim(); \n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tufDataDTO.setShippingCompany(shippingCompany);\n\n\t\t\t\t\t//--------------- 23:Notes -------------------------\n\t\t\t\t\tString notes="""";\n\t\t\t\t\tif(ufrDTO.getNotes()!=null){\n\t\t\t\t\t\tNodeList notesList = firstOrderElement.getElementsByTagName(ufrDTO.getNotes());\n\t\t\t\t\t\tif(notesList!=null && notesList.getLength()>0){\n\t\t\t\t\t\t\tElement notesElement = (Element)notesList.item(0);\n\t\t\t\t\t\t\tif(notesElement!=null){\n\t\t\t\t\t\t\t\tNodeList notesLNList = notesElement.getChildNodes();\n\t\t\t\t\t\t\t\tif(notesLNList!=null && notesLNList.getLength()>0){\n\t\t\t\t\t\t\t\t\tnotes =((Node)notesLNList.item(0)).getNodeValue().trim(); \n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tufDataDTO.setNotes(notes);\n\n\n\t\t\t\t\t//--------------- 24:Notes -------------------------\n\t\t\t\t\tString clientProductNumber="""";\n\t\t\t\t\tif(ufrDTO.getClientProductNumber()!=null){\n\t\t\t\t\t\tNodeList clientProductNumberList = firstOrderElement.getElementsByTagName(ufrDTO.getClientProductNumber());\n\t\t\t\t\t\tif(clientProductNumberList!=null && clientProductNumberList.getLength()>0){\n\t\t\t\t\t\t\tElement clientProductNumberElement = (Element)clientProductNumberList.item(0);\n\t\t\t\t\t\t\tif(clientProductNumberElement!=null){\n\t\t\t\t\t\t\t\tNodeList clientProductNumberLNList = clientProductNumberElement.getChildNodes();\n\t\t\t\t\t\t\t\tif(clientProductNumberLNList!=null && clientProductNumberLNList.getLength()>0){\n\t\t\t\t\t\t\t\t\tclientProductNumber =((Node)clientProductNumberLNList.item(0)).getNodeValue().trim(); \n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tufDataDTO.setClientProductNumber(clientProductNumber);\n\n\t\t\t\t\t//--------------- 25:clientOtherId -------------------------\n\t\t\t\t\tString clientOtherId="""";\n\t\t\t\t\tif(ufrDTO.getClientOtherId()!=null){\n\t\t\t\t\t\tNodeList clientOtherIdList = firstOrderElement.getElementsByTagName(ufrDTO.getClientOtherId());\n\t\t\t\t\t\tif(clientOtherIdList!=null && clientOtherIdList.getLength()>0){\n\t\t\t\t\t\t\tElement clientOtherIdElement = (Element)clientOtherIdList.item(0);\n\t\t\t\t\t\t\tif(clientOtherIdElement!=null){\n\t\t\t\t\t\t\t\tNodeList clientOtherIdLNList = clientOtherIdElement.getChildNodes();\n\t\t\t\t\t\t\t\tif(clientOtherIdLNList!=null && clientOtherIdLNList.getLength()>0){\n\t\t\t\t\t\t\t\t\tclientOtherId =((Node)clientOtherIdLNList.item(0)).getNodeValue().trim(); \n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tufDataDTO.setClientOtherId(clientOtherId);\n\n\t\t\t\t\tufDataDTO.setCreationDate(new Date());\n\n\t\t\t\t\tlistOrdersDTO.add(ufDataDTO);\n\t\t\t\t}//end of if clause\n\t\t\t}//end of for loop with s var\n\t\t}//end if with condition ufrDTO!=null \n\t\treturn listOrdersDTO;\n\t}\n\n\t/**----------------------------------------------------------\n\t *THIS FUNCTION ALLOWS US TO TRANSFORM AN XLS FILE TO A LIST \n\t   OF ORDERS*\n\t  -----------------------------------------------------------*/\t\n\t@SuppressWarnings({ ""rawtypes"", ""unchecked"" })\n\t@Override\n\tpublic Collection toArrayListFromXLS(File orderFile,String userLogin) throws Exception {\n\n\t\tUserFileRecoveryDTO ufrDTO=null;\n\t\tHashtable<String, String>lsOrdersIdHash=new Hashtable<String, String>();\n\t\t/*List<Orders>listOrders=getAllOrders();\n\t\tif(listOrders!=null){\n\t\t\tfor(Orders ord:listOrders){\n\t\t\t\tlsOrdersIdHash.put(ord.getLsOrderId(), ord.getLsOrderId());\n\t\t\t}\n\t\t}*/\n\n\t\tufrDTO=getUserFileRecoveryByUser(userLogin);\n\t\tproductService = serviceLocator.getProductService();\n\n\t\tCollection listOrderDTO = new ArrayList();\n\n\t\tif(orderFile!=null && ufrDTO!=null && (ufrDTO.getFileTypeId()==2 || ufrDTO.getFileTypeId()==3 )){\n\t\t\t//variable indicating the numbers of columns in the XLS file\n\t\t\tint ROW_TO_START = 1;\n\t\t\tint COL_COMPANY_HEADER=Integer.parseInt(ufrDTO.getCompanyHeader())-1 ;\n\t\t\tint COL_PRODUCT_ORDER_NUMBER=Integer.parseInt(ufrDTO.getProductOrderNumber())-1;//poNumber\n\t\t\tint COL_PRODUCT_ORDER_DATE=Integer.parseInt(ufrDTO.getProductOrderDate())-1; //poDate\n\t\t\tint COL_QUANTITY=Integer.parseInt(ufrDTO.getQuantity())-1;//quantity\n\t\t\tint COL_LS_PRODUCT_ID=Integer.parseInt(ufrDTO.getLsProductID())-1;//productId\n\t\t\tint COL_CLIENT_PRODUCT_NUMBER=Integer.parseInt(ufrDTO.getClientProductNumber())-1;//productId\n\t\t\tint COL_PRODUCT_DESCRIPTION=Integer.parseInt(ufrDTO.getProductDescription())-1;//description\t\n\t\t\tint COL_UNIT_PRICE=Integer.parseInt(ufrDTO.getUnitPrice())-1; //price\n\t\t\tint COL_CLIENT_NUMBER=Integer.parseInt(ufrDTO.getClientNumber())-1;//clientNumber\n\t\t\tint COL_FIRST_NAME=Integer.parseInt(ufrDTO.getClientFirstName())-1;//clientFirstName\n\t\t\tint COL_LAST_NAME=Integer.parseInt(ufrDTO.getClientLastName())-1; //clientLastName\n\t\t\tint COL_ADDRESSS_TREET=Integer.parseInt(ufrDTO.getClientStreet())-1; //clientAdress\n\t\t\tint COL_ADDRESSS_TREET_OTHER=Integer.parseInt(ufrDTO.getClientOtherStreet())-1;//clientAdressOther\n\t\t\tint COL_ADDRESS_CITY=Integer.parseInt(ufrDTO.getClientCity())-1;//clientCity\n\t\t\tint COL_ADDRESS_POSTAL_CODE=Integer.parseInt(ufrDTO.getClientPostalCode())-1;//clientPostalCode\n\t\t\tint COL_ADDRESS_STATE=Integer.parseInt(ufrDTO.getClientProvince())-1;//clientProvince\t\n\t\t\tint COL_CLIENT_PHONE=Integer.parseInt(ufrDTO.getClientPhone())-1;//clientPhone\n\t\t\tint COL_CLIENT_EMAIL=Integer.parseInt(ufrDTO.getClientEmail())-1;//clientEmail\n\n\t\t\tint COL_REQUIRE_DATE=Integer.parseInt(ufrDTO.getRequiredDate())-1;//requiredDate\n\t\t\tint COL_CLIENT_OTHER_NAMES=Integer.parseInt(ufrDTO.getClientOtherNames())-1;//clientsOtherNames\n\t\t\tint COL_CLIENT_PHONE_ZONE=Integer.parseInt(ufrDTO.getClientPhoneZone())-1;//clientPhoneZone\n\t\t\tint CLIENT_ORDER_NUMBER=Integer.parseInt(ufrDTO.getClientOrderNumber())-1;\n\t\t\tint CST_PRODUCT_NUMBER=Integer.parseInt(ufrDTO.getCstProductNumber())-1;\n\t\t\tint SHIPPING_COMPANY=Integer.parseInt(ufrDTO.getShippingCompany())-1;;\n\t\t\tint NOTES=Integer.parseInt(ufrDTO.getNotes())-1;\n\t\t\tint COL_CLIENT_OTHER_ID=Integer.parseInt(ufrDTO.getClientOtherId())-1;\n\n\t\t\t//Values of cells\n\t\t\tString companyHeader="""";\n\t\t\tString productOrderNumber="""";//poNumber\n\t\t\tString clientOrderNumber="""";\n\t\t\tString cstProductNumber="""";\n\t\t\tString shippingCompany="""";\n\t\t\tString notes;\n\t\t\tDate productOrderDate; //poDate\n\t\t\tDouble quantity=0D;//quantity\n\t\t\tString lsProductID="""";//productId\n\t\t\tString productDescription="""";//description\t\n\t\t\tDouble unitPrice=0D; //price\n\t\t\tString clientNumber="""";//clientNumber\n\t\t\tString clientFirstName="""";//clientFirstName\n\t\t\tString clientLastName=""""; //clientLastName\n\t\t\tString clientStreet=""""; //clientAdress\n\t\t\tString clientOtherStreet="""";//clientAdressOther\n\t\t\tString clientCity="""";//clientCity\n\t\t\tString clientPostalCode="" "";//clientPostalCode\n\t\t\tString clientProvince="""";//clientProvince\t\n\t\t\tString clientPhone="""";//clientPhone\n\t\t\tString clientEmail="""";//clientEmail\t\n\t\t\tDate   requiredDate=null;\n\t\t\tString clientOtherNames="""";\n\t\t\tString clientPhoneZone = """";\n\t\t\tString clientProductNumber = """";\n\t\t\tString clientOtherId="""";\n\n\t\t\t//Cells\n\t\t\tCell cellClientProductNumber=null;\n\t\t\tCell cellCompanyHeader= null;\n\t\t\tCell cellProductOrderNumber= null;//poNumber\n\t\t\tCell cellProductOrderDate= null;//poDate\n\t\t\tCell cellQuantity= null;//quantity\n\t\t\tCell cellLsProductID= null;;//productId\n\t\t\tCell cellProductDescription= null;//description\t\n\t\t\tCell cellUnitPrice= null;//price\n\t\t\tCell cellClientNumber= null;//clientNumber\n\t\t\tCell cellClientFirstName= null;//clientFirstName\n\t\t\tCell cellClientLastName= null; //clientLastName\n\t\t\tCell cellClientStreet= null;//clientAdress\n\t\t\tCell cellClientOtherStreet= null;//clientAdressOther\n\t\t\tCell cellClientCity= null;//clientCity\n\t\t\tCell cellClientPostalCode= null;//clientPostalCode\n\t\t\tCell cellClientProvince= null;//clientProvince\t\n\t\t\tCell cellClientPhone= null;//clientPhone\n\t\t\tCell cellClientEmail= null;//clientEmail\t\n\t\t\tCell cellRequiredDate=null;\t\t//requiredDate\n\t\t\tCell cellClientOtherNames=null; //clientsOtherNames\n\t\t\tCell cellClientPhoneZone = null;\t//clientPhoneZone\n\t\t\tCell cellClientOrderNumber=null;\n\t\t\tCell cellCstProductNumber=null;\n\t\t\tCell cellShippingCompany=null;\n\t\t\tCell cellNotes=null;\n\t\t\tCell cellClientOtherId=null;\n\n\t\t\t//try {\n\t\t\tList<ProvinceDTO> listProvine= productService.getAllProvinces();\n\t\t\tWorkbook existingWorkbook = Workbook.getWorkbook(orderFile);\n\t\t\tSheet sheetToRead=existingWorkbook.getSheet(0);\n\t\t\tint ROW_MAX = sheetToRead.getRows();\n\n\t\t\tfor(int row=ROW_TO_START; row< ROW_MAX;row++) {\n\n\t\t\t\t/*cellProductOrderNumber = sheetToRead.getCell(13, 1);\t\t\t\n\t\t\t\tif(cellProductOrderNumber!=null)productOrderNumber = cellProductOrderNumber.getContents();\n\n\t\t\t\tcellProductOrderNumber = sheetToRead.getCell(13, 2);\t\t\t\n\t\t\t\tif(cellProductOrderNumber!=null)productOrderNumber = cellProductOrderNumber.getContents();*/\n\n\t\t\t\tUserFileDataRecoveryDTO ufDataDTO=new UserFileDataRecoveryDTO();\n\t\t\t\tufDataDTO.setUserId(ufrDTO.getUserId());\n\t\t\t\t//--------------- 1: poNumber.\n\t\t\t\tif(COL_PRODUCT_ORDER_NUMBER>=0)cellProductOrderNumber = sheetToRead.getCell(COL_PRODUCT_ORDER_NUMBER, row);\t\t\t\n\t\t\t\tif(cellProductOrderNumber!=null)productOrderNumber = cellProductOrderNumber.getContents();\n\t\t\t\tufDataDTO.setProductOrderNumber(productOrderNumber);\n\n\t\t\t\t//--------------- 2: clientOrderNumber.\n\t\t\t\tif(CLIENT_ORDER_NUMBER>=0)cellClientOrderNumber = sheetToRead.getCell(CLIENT_ORDER_NUMBER, row);\t\t\t\n\t\t\t\tif(cellClientOrderNumber!=null)clientOrderNumber = cellClientOrderNumber.getContents();\n\t\t\t\tufDataDTO.setClientOrderNumber(clientOrderNumber);\n\n\n\t\t\t\t//--------------- 3: cstProductNumber.\n\t\t\t\tif(CST_PRODUCT_NUMBER>=0)cellCstProductNumber = sheetToRead.getCell(CST_PRODUCT_NUMBER, row);\t\t\t\n\t\t\t\tif(cellCstProductNumber!=null)cstProductNumber = cellCstProductNumber.getContents();\n\t\t\t\tufDataDTO.setCstProductNumber(cstProductNumber);\n\n\t\t\t\t//shippingCompany\n\n\t\t\t\t//--------------- 2: companyHeader\n\t\t\t\tif(COL_COMPANY_HEADER>=0)cellCompanyHeader = sheetToRead.getCell(COL_COMPANY_HEADER, row);\t\t\t\n\t\t\t\tif(cellCompanyHeader!=null)companyHeader = cellCompanyHeader.getContents();\n\t\t\t\tufDataDTO.setCompanyHeader(companyHeader);\n\n\t\t\t\t//--------------- 3: productOrderDate.\n\t\t\t\tproductOrderDate=null;\n\t\t\t\tif(COL_PRODUCT_ORDER_DATE>=0)cellProductOrderDate = sheetToRead.getCell(COL_PRODUCT_ORDER_DATE, row);\t\t\t\n\t\t\t\tif(cellProductOrderDate!=null){\n\t\t\t\t\tString strDate=cellProductOrderDate.getContents();\n\t\t\t\t\t//strDate=strDate.replaceAll("" "", """");\n\t\t\t\t\tSimpleDateFormat sdf = new SimpleDateFormat(ufrDTO.getFormatDate());//(""yyyy-MM-dd HH:mm:ss"");\t\n\t\t\t\t\ttry {\n\t\t\t\t\t\tDate date = sdf.parse(strDate);\n\t\t\t\t\t\tproductOrderDate=date;\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception pe) {\n\t\t\t\t\t\tproductOrderDate=null;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tufDataDTO.setProductOrderDate(productOrderDate);\n\n\t\t\t\t//--------------- 4: Quantity.\n\t\t\t\tif(COL_QUANTITY>=0)cellQuantity = sheetToRead.getCell(COL_QUANTITY, row);\t\t\t\n\t\t\t\tif(cellQuantity!=null){\n\t\t\t\t\tString strQuantity = cellQuantity.getContents();\n\t\t\t\t\tstrQuantity=strQuantity.replaceAll("" "", """");\n\t\t\t\t\tif(strQuantity!=null && !strQuantity.equals("""")){\n\t\t\t\t\t\tint index=strQuantity.indexOf("","");\n\t\t\t\t\t\tif(index>=0){\n\t\t\t\t\t\t\tString strQuantity1=strQuantity.substring(0, index);\n\t\t\t\t\t\t\tString strQuantity2= strQuantity.substring(index+1, strQuantity.length());\n\t\t\t\t\t\t\tstrQuantity=strQuantity1+"".""+strQuantity2;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tquantity=null;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tquantity = Double.parseDouble(strQuantity);\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception pe) {\n\t\t\t\t\t\tquantity=null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tufDataDTO.setQuantity(quantity);\n\n\t\t\t\t//--------------- 5: lsProductID.\n\t\t\t\tif(COL_LS_PRODUCT_ID>=0)cellLsProductID = sheetToRead.getCell(COL_LS_PRODUCT_ID, row);\t\t\t\n\t\t\t\tif(cellLsProductID!=null)lsProductID = cellLsProductID.getContents();\n\t\t\t\tufDataDTO.setLsProductID(lsProductID);\n\n\t\t\t\t//--------------- 6: productDescription.\n\t\t\t\tif(COL_PRODUCT_DESCRIPTION>=0)cellProductDescription = sheetToRead.getCell(COL_PRODUCT_DESCRIPTION, row);\t\t\t\n\t\t\t\tif(cellProductDescription!=null)productDescription = cellProductDescription.getContents();\n\t\t\t\tproductDescription=productDescription.replaceAll("","", "" "");\n\t\t\t\tufDataDTO.setProductDescription(productDescription);\n\n\t\t\t\t//--------------- 7: unitPrice.\n\t\t\t\tif(COL_UNIT_PRICE>=0)cellUnitPrice = sheetToRead.getCell(COL_UNIT_PRICE, row);\t\t\t\n\t\t\t\tif(cellUnitPrice!=null){\n\t\t\t\t\tString strUnitPrice = cellUnitPrice.getContents();\n\t\t\t\t\tstrUnitPrice= strUnitPrice.replaceAll(""\\\\$"", """");\n\t\t\t\t\tstrUnitPrice= strUnitPrice.replaceAll("" "", """");\n\t\t\t\t\tstrUnitPrice= strUnitPrice.replaceAll(""\\"""", """");\n\t\t\t\t\tif(strUnitPrice!=null && !strUnitPrice.equals("""")){\n\t\t\t\t\t\tint index=strUnitPrice.indexOf("","");\n\t\t\t\t\t\tif(index>=0){\n\t\t\t\t\t\t\tString strUnitPrice1=strUnitPrice.substring(0, index);\n\t\t\t\t\t\t\tString strUnitPrice2= strUnitPrice.substring(index+1, strUnitPrice.length());\n\t\t\t\t\t\t\tstrUnitPrice=strUnitPrice1+"".""+strUnitPrice2;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tunitPrice=null;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tunitPrice = Double.parseDouble(strUnitPrice);\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception pe) {\n\t\t\t\t\t\tunitPrice=null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tufDataDTO.setUnitPrice(unitPrice);\n\n\t\t\t\t//--------------- 8: clientNumber.\n\t\t\t\tif(COL_CLIENT_NUMBER>=0)cellClientNumber = sheetToRead.getCell(COL_CLIENT_NUMBER, row);\t\t\t\n\t\t\t\tif(cellClientNumber!=null)clientNumber = cellClientNumber.getContents();\n\t\t\t\tufDataDTO.setClientNumber(clientNumber);\n\n\t\t\t\t//--------------- 9: FirstName.\n\t\t\t\tif(COL_FIRST_NAME>=0)cellClientFirstName = sheetToRead.getCell(COL_FIRST_NAME, row);\t\t\t\n\t\t\t\tif(cellClientFirstName!=null)clientFirstName = cellClientFirstName.getContents();\n\t\t\t\tufDataDTO.setClientFirstName(clientFirstName);\n\n\t\t\t\t//--------------- 10: LastName.\n\t\t\t\tif(COL_LAST_NAME>=0)cellClientLastName = sheetToRead.getCell(COL_LAST_NAME, row);\t\t\t\n\t\t\t\tif(cellClientLastName!=null)clientLastName = cellClientLastName.getContents();\n\t\t\t\tufDataDTO.setClientLastName(clientLastName);\n\n\t\t\t\t//=========== special cases for clients ""AsiaMiles"" 29  ""VibeSMG"" 45================\n\t\t\t\tOrdersDTO orderDTO=new OrdersDTO();\n\t\t\t\tString[] elems;\n\t\t\t\tint option;\n\t\t\t\tint userId=Integer.parseInt(ufrDTO.getUserId().toString());\n\t\t\t\tString lsProductIdAsiaM=ufDataDTO.getProductDescription();\n\t\t\t\tString[] elemsLsProductId;\n\t\t\t\tswitch (userId) {\n\t\t\t\tcase 29: \n\t\t\t\t\t// split last name to client ""AsiaMiles"" to last and first name\n\t\t\t\t\tif(clientLastName!=null && !clientLastName.equals("""")){\n\t\t\t\t\t\torderDTO=new OrdersDTO();\n\t\t\t\t\t\torderDTO.setId(ufDataDTO.getUserId());\n\t\t\t\t\t\torderDTO.setClientLastName(clientLastName);\n\t\t\t\t\t\telems  = clientLastName.split(""\\\\s"");\n\t\t\t\t\t\toption=elems.length;\t\n\t\t\t\t\t\torderDTO=orderDTOSplitFirstLastName(orderDTO, option);\n\t\t\t\t\t\tclientFirstName=orderDTO.getClientFirstName();\n\t\t\t\t\t\tclientLastName=orderDTO.getClientLastName();\n\t\t\t\t\t\tufDataDTO.setClientFirstName(clientFirstName);\n\t\t\t\t\t\tufDataDTO.setClientLastName(clientLastName);\n\t\t\t\t\t}\n\t\t\t\t\t//recovery AsiaMiles's lsProductId \n\t\t\t\t\tString lsProductId="""";\n\t\t\t\t\tif(lsProductIdAsiaM!=null && !lsProductIdAsiaM.equals("""")){\n\t\t\t\t\t\t//lsProductIdAsiaM=lsProductIdAsiaM.replaceAll(""\\\\*"", ""_"");\n\t\t\t\t\t\telemsLsProductId=lsProductIdAsiaM.split(""\\\\*"");\n\t\t\t\t\t\tif(elemsLsProductId.length>1){\n\t\t\t\t\t\t\tlsProductId=elemsLsProductId[0];\n\t\t\t\t\t\t}/*else{\n\t\t\t\t\t\t\t\telemsLsProductId=lsProductIdAsiaM.split(""_"");\n\t\t\t\t\t\t\t\tif(elemsLsProductId.length!=0){\n\t\t\t\t\t\t\t\t\tlsProductId=elemsLsProductId[0];\n\t\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\t\telemsLsProductId=lsProductIdAsiaM.split(""-"");\n\t\t\t\t\t\t\t\t\tif(elemsLsProductId.length!=0)lsProductId=elemsLsProductId[0];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}*/\n\t\t\t\t\t}\n\t\t\t\t\tlsProductId=lsProductId.replaceAll("" "", """");\n\t\t\t\t\tufDataDTO.setLsProductID(lsProductId);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 45: // split last name of client ""VibeSMG"" to last and first name\n\t\t\t\t\tif(clientLastName!=null && !clientLastName.equals("""")){\n\t\t\t\t\t\torderDTO=new OrdersDTO();\n\t\t\t\t\t\torderDTO.setId(ufDataDTO.getUserId());\n\t\t\t\t\t\tclientLastName=""MR ""+clientLastName;\n\t\t\t\t\t\torderDTO.setClientLastName(clientLastName);\n\t\t\t\t\t\telems  = clientLastName.split(""\\\\s"");\n\t\t\t\t\t\toption=elems.length;\n\t\t\t\t\t\torderDTO=orderDTOSplitFirstLastName(orderDTO, option);\n\t\t\t\t\t\tclientFirstName=orderDTO.getClientFirstName();\n\t\t\t\t\t\tclientLastName=orderDTO.getClientLastName();\n\t\t\t\t\t\tufDataDTO.setClientFirstName(clientFirstName);\n\t\t\t\t\t\tufDataDTO.setClientLastName(clientLastName);\t\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\n\t\t\t\t//====================================================================================\n\t\t\t\t//--------------- 11: cellAddressStreet.\n\t\t\t\tif(COL_ADDRESSS_TREET>=0)cellClientStreet = sheetToRead.getCell(COL_ADDRESSS_TREET, row);\t\t\t\n\t\t\t\tif(cellClientStreet!=null)clientStreet = cellClientStreet.getContents();\n\t\t\t\tclientStreet=clientStreet.replaceAll("","", "" "");\n\t\t\t\tufDataDTO.setClientStreet(clientStreet);\n\n\t\t\t\t//--------------- 12: addressStreetOther.\n\t\t\t\tif(COL_ADDRESSS_TREET_OTHER>=0)cellClientOtherStreet = sheetToRead.getCell(COL_ADDRESSS_TREET_OTHER, row);\t\t\t\n\t\t\t\tif(cellClientOtherStreet!=null)clientOtherStreet = cellClientOtherStreet.getContents();\n\t\t\t\tclientOtherStreet=clientOtherStreet.replaceAll("","", "" "");\n\t\t\t\tufDataDTO.setClientOtherStreet(clientOtherStreet);\n\n\t\t\t\t//--------------- 13: addressCity.\n\t\t\t\tif(COL_ADDRESS_CITY>=0)cellClientCity = sheetToRead.getCell(COL_ADDRESS_CITY, row);\t\t\t\n\t\t\t\tif(cellClientCity!=null)clientCity = cellClientCity.getContents();\n\t\t\t\tufDataDTO.setClientCity(clientCity);\n\n\t\t\t\t//--------------- 14: addressPostalCode.\n\t\t\t\tif(COL_ADDRESS_POSTAL_CODE>=0)cellClientPostalCode = sheetToRead.getCell(COL_ADDRESS_POSTAL_CODE, row);\t\t\t\n\t\t\t\tif(cellClientPostalCode!=null)clientPostalCode = cellClientPostalCode.getContents();\n\t\t\t\tclientPostalCode=clientPostalCode.replaceAll("" "", """");\n\t\t\t\tufDataDTO.setClientPostalCode(clientPostalCode);\n\n\t\t\t\t//--------------- 15: addressState.\n\t\t\t\tif(COL_ADDRESS_STATE>=0)cellClientProvince = sheetToRead.getCell(COL_ADDRESS_STATE, row);\t\t\t\n\t\t\t\tif(cellClientProvince!=null)clientProvince = cellClientProvince.getContents();\n\n\t\t\t\tString clientProvinceToCompar=clientProvince.toLowerCase();\n\t\t\t\tclientProvinceToCompar=clientProvinceToCompar.replaceAll("" "", """");\n\t\t\t\tclientProvinceToCompar=clientProvinceToCompar.replaceAll(""canada"", """");\n\t\t\t\tclientProvinceToCompar=clientProvinceToCompar.replaceAll("","", """");\n\t\t\t\tclientProvinceToCompar=clientProvinceToCompar.replaceAll(""\\\\."", """");\n\t\t\t\tfor(ProvinceDTO prov:listProvine){\n\t\t\t\t\tString provName=prov.getName();\n\t\t\t\t\tprovName=provName.replaceAll("" "", """");\n\t\t\t\t\tprovName= provName.toLowerCase();\n\t\t\t\t\tif(clientProvinceToCompar.equals(provName) || clientProvinceToCompar.equals(prov.getCode()) ){\n\t\t\t\t\t\tclientProvince=\tprov.getCode();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t\tclientProvince=clientProvince.replaceAll(""\\\\."", """");\n\t\t\t\tif(clientProvinceToCompar.equals(""""))clientProvince="""";\n\t\t\t\tufDataDTO.setClientProvince(clientProvince);\n\n\t\t\t\t//--------------- 16: clientPhone.\n\t\t\t\tif(COL_CLIENT_PHONE>=0)cellClientPhone = sheetToRead.getCell(COL_CLIENT_PHONE, row);\t\t\t\n\t\t\t\tif(cellClientPhone!=null)clientPhone = cellClientPhone.getContents();\n\n\t\t\t\t//--------------- 17: clientPhoneZone.\n\t\t\t\tif(COL_CLIENT_PHONE_ZONE>=0)cellClientPhoneZone = sheetToRead.getCell(COL_CLIENT_PHONE_ZONE, row);\t\t\t\n\t\t\t\tif(cellClientPhoneZone!=null)clientPhoneZone = cellClientPhoneZone.getContents();\t\t\t\n\t\t\t\tif(clientPhoneZone!=null && clientPhoneZone!="""")clientPhone=clientPhoneZone+"" ""+clientPhone;\n\t\t\t\tufDataDTO.setClientPhone(clientPhone);\n\n\t\t\t\t//--------------- 18: clientEmail.\n\t\t\t\tif(COL_CLIENT_EMAIL>=0)cellClientEmail = sheetToRead.getCell(COL_CLIENT_EMAIL, row);\t\t\t\n\t\t\t\tif(cellClientEmail!=null)clientEmail = cellClientEmail.getContents();\n\t\t\t\tufDataDTO.setClientEmail(clientEmail);\n\n\t\t\t\t//--------------- 19:requiredDate -------------------------\n\t\t\t\tString strRequiredDate="""";\n\t\t\t\tif(COL_REQUIRE_DATE>=0)cellRequiredDate = sheetToRead.getCell(COL_REQUIRE_DATE, row);\t\t\t\n\t\t\t\tif(cellRequiredDate!=null){\n\t\t\t\t\tstrRequiredDate = cellRequiredDate.getContents();\n\t\t\t\t\tstrRequiredDate=strRequiredDate.replaceAll("" "", """");\n\t\t\t\t\tSimpleDateFormat sdf = new SimpleDateFormat(ufrDTO.getFormatDate());\n\t\t\t\t\ttry {\n\t\t\t\t\t\tDate date = sdf.parse(strRequiredDate);\n\t\t\t\t\t\trequiredDate=date;\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception pe) {\n\t\t\t\t\t\trequiredDate=null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tufDataDTO.setRequiredDate(requiredDate);\n\n\t\t\t\t//--------------- 20:clients_other_names ----------------\n\t\t\t\tclientOtherNames="""";\n\t\t\t\tif(COL_CLIENT_OTHER_NAMES>=0)cellClientOtherNames = sheetToRead.getCell(COL_CLIENT_OTHER_NAMES, row);\t\t\t\n\t\t\t\tif(cellClientOtherNames!=null)clientOtherNames = cellClientOtherNames.getContents();\n\t\t\t\tufDataDTO.setClientOtherNames(clientOtherNames);\n\n\t\t\t\t//--------------- 21:lsOrderId ------------------------\n\t\t\t\tString code=userLogin.substring(0, 2).toUpperCase();\n\t\t\t\tString lsOrderId=ufDataDTO.getProductOrderNumber();\n\n\t\t\t\tint inc=0;//increment\n\t\t\t\tString lsOrderIdParent=lsOrderId;\n\t\t\t\tlsOrderIdParent=lsOrderIdParent.replaceFirst(""-"", """");\n\t\t\t\tlsOrderIdParent=lsOrderIdParent.replaceFirst(""_"", """");\n\t\t\t\tlsOrderIdParent=lsOrderIdParent.replaceFirst(""R"", """");\n\t\t\t\tlsOrderIdParent=lsOrderIdParent.replaceAll("" "", """");\n\t\t\t\tif(lsOrderIdParent.length()>14){\n\t\t\t\t\tint index=lsOrderIdParent.length()-14;\n\t\t\t\t\tlsOrderIdParent=lsOrderIdParent.substring(index, lsOrderIdParent.length());\n\t\t\t\t}\n\n\t\t\t\t//lsOrderIdParent=code+""O""+ufDataDTO.getUserId()+lsOrderIdParent;\n\t\t\t\tString lsOrderIdToGenerate=code+""O""+ufDataDTO.getUserId()+lsOrderIdParent;;\n\t\t\t\twhile(isLsOrderIdUsed(lsOrderIdToGenerate) || lsOrdersIdHash.containsKey(lsOrderIdToGenerate)){\n\t\t\t\t\tinc++; \n\t\t\t\t\tlsOrderIdToGenerate=code+""O""+ufDataDTO.getUserId()+lsOrderIdParent+""R""+inc;\n\t\t\t\t}\n\t\t\t\tlsOrdersIdHash.put(lsOrderIdToGenerate, lsOrderIdToGenerate);\n\t\t\t\tufDataDTO.setLsOrderId(lsOrderIdToGenerate);\n\n\t\t\t\t//--------------- 22:shipping company -------------------\n\t\t\t\tshippingCompany="""";\n\t\t\t\tif(SHIPPING_COMPANY>=0)cellShippingCompany = sheetToRead.getCell(SHIPPING_COMPANY, row);\t\t\t\n\t\t\t\tif(cellShippingCompany!=null)shippingCompany = cellShippingCompany.getContents();\n\t\t\t\tufDataDTO.setShippingCompany(shippingCompany);\n\n\t\t\t\t//--------------- 23:Notes -------------------\n\t\t\t\tnotes="""";\n\t\t\t\tif(NOTES>=0)cellNotes = sheetToRead.getCell(NOTES, row);\t\t\t\n\t\t\t\tif(cellNotes!=null)notes = cellNotes.getContents();\n\t\t\t\tufDataDTO.setNotes(notes);\n\n\t\t\t\tufDataDTO.setCreationDate(new Date());\n\n\t\t\t\t//--------------- 24: ClientProductNumber.\n\t\t\t\tif(COL_CLIENT_PRODUCT_NUMBER>=0)cellClientProductNumber = sheetToRead.getCell(COL_CLIENT_PRODUCT_NUMBER, row);\t\t\t\n\t\t\t\tif(cellClientProductNumber!=null)clientProductNumber = cellClientProductNumber.getContents();\n\t\t\t\tufDataDTO.setClientProductNumber(clientProductNumber);\n\n\t\t\t\t//--------------- 25: cellClientOtherId.\n\t\t\t\tif(COL_CLIENT_OTHER_ID>=0)cellClientOtherId = sheetToRead.getCell(COL_CLIENT_OTHER_ID, row);\t\t\t\n\t\t\t\tif(cellClientOtherId!=null)clientOtherId = cellClientOtherId.getContents();\n\t\t\t\tufDataDTO.setClientOtherId(clientOtherId);\n\t\t\t\tif(ufDataDTO.getProductOrderNumber()!=null && !ufDataDTO.getProductOrderNumber().equals(""""))listOrderDTO.add(ufDataDTO);\n\t\t\t}\n\t\t\t//} catch (Exception x) {\n\t\t\t//\tx.printStackTrace();\n\t\t\t//}\n\t\t}\n\t\treturn listOrderDTO;\n\n\t}\n\n\n\t/**----------------------------------------------------------\n\t \tcheck if the LsOrderId is already in use\n\t  -----------------------------------------------------------*/\t\n\t@SuppressWarnings(""unused"")\n\t@Override\n\tpublic boolean isLsOrderIdUsed(final String lsOrderId){\n\t\tboolean result=false;\t\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresult = (Boolean) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().isLsOrderIdUsed(lsOrderId);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry {\n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**----------------------------------------------------------\n\t *GET HASHtABLE WITH HIERARCHICAL (ORDER<->ROWS)\n\t \t OF ORDERS FROM LIST OF USER FILE RECOVERY*\n\t  -----------------------------------------------------------*/\t\n\t@SuppressWarnings(""unused"")\n\t@Override\n\tpublic Hashtable<String, OrdersDTO> getHashOrdersFromUserDataRecovery(Long userId,ArrayList<UserFileDataRecoveryDTO> list)\n\tthrows ServiceException {\n\t\tHashtable<String, OrdersDTO> result=new Hashtable<String, OrdersDTO>();\n\n\t\ttry {\n\t\t\tproductService = serviceLocator.getProductService(); \n\t\t\tuserService= serviceLocator.getUserService();\n\t\t} catch (ServiceLocatorException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\n\t\tfor(UserFileDataRecoveryDTO orDTO: list){\n\t\t\tOrdersDTO ordDTOCheck=result.get(orDTO.getLsOrderId());\n\t\t\tString lsProductID=orDTO.getLsProductID();\n\t\t\tString providedLsProductId=orDTO.getLsProductID();\n\t\t\t//String clientProductNumber=lsProductID;\n\t\t\t//ProductDTO pDTO=hashProductDTO.get(lsProductID);\n\t\t\tlsProductID=lsProductID.replaceAll("" "", """");\n\t\t\t//ProductDTO pDTO=productService.getProductByLsProductId(lsProductID);\n\t\t\tUserProductPriceDTO pDTO=productService.getUsrPPriceByLsproductId(userId, lsProductID);\n\t\t\tif(pDTO==null){\n\t\t\t\tint index=lsProductID.indexOf(""-"");\n\t\t\t\tif(index==-1)index=lsProductID.indexOf("" "");\n\t\t\t\tif(index<=2)lsProductID=lsProductID.substring(index+1, lsProductID.length());\n\t\t\t\t//pDTO=productService.getProductByLsProductId(lsProductID);\n\t\t\t\tpDTO=productService.getUsrPPriceByLsproductId(userId, lsProductID);\n\t\t\t}\n\t\t\tif(pDTO==null){\n\t\t\t\tint index=lsProductID.indexOf(""_"");\n\t\t\t\tif(index==-1)index=lsProductID.indexOf("" "");\n\t\t\t\tif(index<=2)lsProductID=lsProductID.substring(index+1, lsProductID.length());\n\t\t\t\t//pDTO=productService.getProductByLsProductId(lsProductID);\n\t\t\t\tpDTO=productService.getUsrPPriceByLsproductId(userId, lsProductID);\n\t\t\t}\n\t\t\tUserDTO uDTO=userService.getUserInformation(userId);\n\t\t\tString userLogin=""anonymous"";\n\t\t\tif(uDTO!=null)userLogin=uDTO.getLogin();\n\t\t\tif(ordDTOCheck==null){\n\t\t\t\tOrdersDTO ordDTOToAdd=new OrdersDTO();\n\t\t\t\tordDTOToAdd=DTOFactory.getOrderDTOFromUserDataRecovery(userId,orDTO);\n\t\t\t\tordDTOToAdd.setUserLogin(userLogin);\n\t\t\t\t//ordDTOToAdd.setClientProductNumber(clientProductNumber);\n\t\t\t\tOrdersRows ordRow=ordDTOToAdd.getRowsList().get(0);\n\t\t\t\tif(ordRow!=null){\n\t\t\t\t\tordRow.setLsProductID(lsProductID);\n\t\t\t\t\tif(pDTO!=null){\n\t\t\t\t\t\t//ordRow.setProductId(pDTO.getId());\n\t\t\t\t\t\tordRow.setProductId(pDTO.getProductId());\n\t\t\t\t\t\t//if client is ""AsiaMiles"" then unitPrice=cost\n\t\t\t\t\t\tString strUserId=userId.toString();\n\t\t\t\t\t\tint intUserId=Integer.parseInt(strUserId);\n\t\t\t\t\t\tswitch (intUserId) {\n\t\t\t\t\t\tcase 29:\n\t\t\t\t\t\t\tif(pDTO.getPrice()!=null && !pDTO.getPrice().equals("""")){\n\t\t\t\t\t\t\t\tString strProductPrice=pDTO.getPrice();\n\t\t\t\t\t\t\t\tint index=strProductPrice.indexOf("","");\n\t\t\t\t\t\t\t\tif(index>=0){\n\t\t\t\t\t\t\t\t\tString strProductPrice1=strProductPrice.substring(0, index);\n\t\t\t\t\t\t\t\t\tString strProductPrice2= strProductPrice.substring(index+1, strProductPrice.length());\n\t\t\t\t\t\t\t\t\tstrProductPrice=strProductPrice1+"".""+strProductPrice2;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tDouble productPrice=null;\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tproductPrice = Double.parseDouble(strProductPrice);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcatch (Exception pe) {\n\t\t\t\t\t\t\t\t\tproductPrice=null;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tordRow.setUnitPrice(productPrice);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tordRow.setUnitPrice(orDTO.getUnitPrice());\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//ordRow.setUnitPrice(orDTO.getUnitPrice());\n\t\t\t\t\t\tordRow.setRequiredDate(orDTO.getRequiredDate());\n\t\t\t\t\t\tordRow.setShippingCompany(orDTO.getShippingCompany());\n\t\t\t\t\t\t//ordRow.setClientProductNumber(clientProductNumber);\n\t\t\t\t\t\tordRow.setClientProductNumber(orDTO.getClientProductNumber());\n\t\t\t\t\t\tordRow.setStock(pDTO.getStock());\n\t\t\t\t\t}else{\n\t\t\t\t\t\tordRow.setProductId(null);\n\t\t\t\t\t\tordRow.setUnitPrice(null);\n\t\t\t\t\t\tordRow.setRequiredDate(null);\n\t\t\t\t\t\tordRow.setShippingCompany(null);\n\t\t\t\t\t\t//ordRow.setClientProductNumber(clientProductNumber);\n\t\t\t\t\t\tordRow.setClientProductNumber(orDTO.getClientProductNumber());\n\t\t\t\t\t\tordRow.setStock(null);\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t\tresult.put(orDTO.getLsOrderId(), ordDTOToAdd);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**----------------------------------------------------------\n\t *GET HASHtABLE FROM LIST ORDERS DTO*\n\t  -----------------------------------------------------------*/\t\n\t@Override\n\tpublic Hashtable<String, OrdersDTO> getHashOrdersDTOFromListOrdersDTO(List<OrdersDTO> list)\n\tthrows ServiceException {\n\t\tHashtable<String, OrdersDTO> result=new Hashtable<String, OrdersDTO>();\n\n\t\tfor(OrdersDTO orDTO: list){\n\t\t\tresult.put(orDTO.getLsOrderId(), orDTO);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**----------------------------------------------------------\n\t *SAVING ORDERS WITH THERE ROWS IN DATABASE*\n\t  -----------------------------------------------------------*/\t\n\t@SuppressWarnings(""unchecked"")\n\t@Override\n\tpublic List<OrdersDTO> insertListOrders(List<OrdersDTO> listOrdersDTO)throws Exception {\n\t\tList<OrdersDTO> listOrdersDTOResult=null;\n\t\tList<Orders> result=null;\n\t\tfinal List<Orders>listOrders=DTOFactory.getListOrdersFromListOrdersDTO(listOrdersDTO);\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresult = (List<Orders>) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().insertListOrders(listOrders);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry {\n\t\t\t\tthrow new Exception(de);\n\t\t\t} catch (Exception e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\tlistOrdersDTOResult=DTOFactory.getListOrderDTOFromListOrder(result);\n\t\treturn listOrdersDTOResult;\n\t}\n\n\n\t/**----------------------------------------------------------\n\t *INSERT INVOICED ORDER IN DATABASES*\n\t  -----------------------------------------------------------*/\t\n\n\t@Override\n\tpublic boolean insertInvoicedOrder(OrdersDTO orderDTO){\n\t\tboolean result=false;\n\t\tfinal Orders order=DTOFactory.getOrderFromOrderDTO(orderDTO);\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresult = (Boolean) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().insertInvoicedOrder(order);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry {\n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**----------------------------------------------------------\n\t *INSERT ORDERS IF ARE EXISTING IN DATABASE*\n\t  -----------------------------------------------------------*/\t\n\t@Override\n\tpublic boolean insertListOrdersIfNotExist(List<OrdersDTO> listOrdersDTO){\n\t\tboolean result=false;\n\t\tfinal List<Orders>listOrders=DTOFactory.getListOrdersFromListOrdersDTO(listOrdersDTO);\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresult = (Boolean) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().insertListOrdersIfNotExist(listOrders);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry {\n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\t// TODO Auto-generated catch block\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**----------------------------------------------------------\n\t *INSERT ORDER WHITH ROW*\n\t  -----------------------------------------------------------*/\t\n\t@Override\n\tpublic boolean insertOrderWithRows(OrdersDTO orderDTO) {\n\t\tboolean result=false;\n\t\tfinal Orders order=DTOFactory.getOrderFromOrderDTO(orderDTO);\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresult = (Boolean) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().insertOrderWithRows(order);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry {\n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**----------------------------------------------------------\n\t *MAKE ORDER IN PROGRESS*\n\t  -----------------------------------------------------------*/\t\n\t@Override\n\tpublic boolean makeOrderInProgress(OrdersDTO orderDTO){\n\t\tboolean result=false;\n\t\tfinal Orders order=new Orders();\n\t\torder.setLsOrderId(orderDTO.getLsOrderId());\n\t\torder.setSpecialHandlingName(orderDTO.getSpecialHandlingName());\n\t\torder.setSpecialHandlingFee(orderDTO.getSpecialHandlingFee());\n\t\torder.setTotalPrice(orderDTO.getTotalPrice());\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresult = (Boolean) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().makeOrderInProgress(order);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry {\n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\t// TODO Auto-generated catch block\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**----------------------------------------------------------\n\t *GET ORDER DTO BY LS_ORDER_ID*\n\t  -----------------------------------------------------------*/\t\n\t@Override\n\tpublic OrdersDTO getOrderDTOByLsOrderId(final String lsOrderId)\n\tthrows ServiceException { \n\n\t\tOrders order=null;\t\n\t\tOrdersDTO result=null;\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\torder = (Orders) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().getOrderByLsOrderId(lsOrderId);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry {\n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\tif(order!=null)result=DTOFactory.getOrderDTOFromOrder(order);\n\t\treturn result;\n\n\t}\n\n\t/**----------------------------------------------------------\n\t *IF FOUND ANY ORDER DUPLICATE RETURN TRUE*\n\t  -----------------------------------------------------------*/\t\n\t@Override\n\tpublic boolean isThereDuplicate(List<OrdersDTO> listOrdersDTO){\n\t\tboolean result=false;\n\t\tif(listOrdersDTO!=null){\n\t\t\tfor(OrdersDTO orderDTO:listOrdersDTO){\n\t\t\t\tif(orderDTO.getDuplicate()!=null && orderDTO.getDuplicate()==true){\n\t\t\t\t\tresult=true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**----------------------------------------------------------\n\t *GET ORDER DTO BY ProductOrderNumber*\n\t  -----------------------------------------------------------*/\t\n\t@SuppressWarnings(""unchecked"")\n\t@Override\n\tpublic List<OrdersDTO> getListOrdersByPONumber(final List<OrdersDTO> listOrdersDTO){ \n\t\tfinal List<Orders>listOrders=DTOFactory.getListOrdersFromListOrdersDTO(listOrdersDTO);\n\t\tList<Orders>resultList=null;\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresultList= (List<Orders>) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().getListOrdersByPONumber(listOrders);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry {\n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\tList<ProvinceDTO> listProvinces;\n\t\tHashtable<String, ProvinceDTO> hashProvinces=new Hashtable<String, ProvinceDTO>(); \n\n\t\ttry {\n\t\t\tproductService = serviceLocator.getProductService(); \n\t\t\tuserService= serviceLocator.getUserService();\n\t\t\tlistProvinces = productService.getAllProvinces();\n\t\t\tfor(ProvinceDTO provinceDTO:listProvinces){\n\t\t\t\thashProvinces.put(provinceDTO.getCode(), provinceDTO);\n\t\t\t}\n\t\t} catch (Exception e) {\n\t\t\t// TODO Auto-generated catch block\n\t\t\te.printStackTrace();\n\t\t}\n\t\treturn DTOFactory.getListOrderDTOFromListOrderSorted(resultList,hashProvinces);\n\n\t}\n\n\t\n\t@SuppressWarnings(""unchecked"")\n\t@Override\n\tpublic List<OrdersDTO> getOrdersItemsExistInDB(final List<OrdersDTO> listOrdersDTO){ \n\t\tfinal List<Orders>listOrders=DTOFactory.getListOrdersFromListOrdersDTO(listOrdersDTO);\n\t\tList<Orders>resultList=null;\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresultList= (List<Orders>) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().getOrdersItemsExistInDB(listOrders);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry {\n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn DTOFactory.getListOrderDTOFromListOrder(resultList);\n\t}\n\t\n\t/**----------------------------------------------------------\n\t *CHECK IF ANY ORDERS IS ALREADY EXISTE IN DATABASE*\n\t  -----------------------------------------------------------*/\n\t@Override\n\tpublic boolean isExistAnyLsOrderIdInDB(List<OrdersDTO>listOrdersDTO){\n\t\tboolean result=false;\n\t\t//List<OrdersDTO>resultListOrdersDTO=getListOrdersByPONumber(listOrdersDTO);\n\t\tList<OrdersDTO>resultListOrdersDTO=getOrdersItemsExistInDB(listOrdersDTO);\n\t\tif(resultListOrdersDTO!=null && resultListOrdersDTO.size()>0)result=true;\n\t\treturn result;\n\t}\n\n\t/**----------------------------------------------------------\n\t *CALCULATE NUMBER OF ORDERS WHICH HAVE NOT PLANNED\n\t \t TO DALETE*\n\t  -----------------------------------------------------------*/\n\t@Override\n\tpublic Integer nbOrderRowsNotDeleted(List<OrdersRows>listOrdersRows){\n\t\tint result=0;\n\t\tif(listOrdersRows!=null){\n\t\t\tfor(OrdersRows orderR:listOrdersRows){\n\t\t\t\tif(orderR.getToDelete()==0)result++;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**----------------------------------------------------------\n\t *CALCULATING THE NUMBER OF ORDERS IN LIST WHICH HAVE \n\t \t NOT REGISTERED IN DATABASE*\n\t  -----------------------------------------------------------*/\n\t@Override\n\tpublic Long nbOrdersNotSavedInDB(List<OrdersDTO>listOrders){\n\t\tlong result=0L;\n\t\tif(listOrders!=null){\n\t\t\tfor(OrdersDTO orderDTO:listOrders){\n\t\t\t\ttry {\n\t\t\t\t\tString productOrderNumber=orderDTO.getProductOrderNumber();\n\t\t\t\t\tLong userId=orderDTO.getUserId();\n\t\t\t\t\tLong count= getCountOrderByPONumber(productOrderNumber, userId);\n\t\t\t\t\tif(count==0){\n\t\t\t\t\t\tresult++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} catch (Exception e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**----------------------------------------------------------\n\t *GET CountOrderByPONumber*\n  \t   -----------------------------------------------------------*/\t\n\t@Override\n\tpublic Long getCountOrderByPONumber(final String productOrderNumber, final Long userId){ \n\t\tLong count=0L;\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tcount = (Long) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().getCountOrderByPONumber(productOrderNumber, userId);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry {\n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn count;\n\n\t}\n\n\t/**----------------------------------------------------------\n\t *GENERATE LS_ORDER_ID FOR ORDER DUPLICATED*\n\t  -----------------------------------------------------------*/\n\t@Override\n\tpublic String generateLsOrderId(String lsOrder,Hashtable<String, OrdersDTO>hashOrders){\n\t\tString result=lsOrder;\n\t\tString resultSub=lsOrder;\n\t\tint index=result.indexOf(""_"");\n\t\tif(index>=1)resultSub=result.substring(0,index);\n\t\tint NB=1;\n\t\tString ext=""_"";\n\t\tresult=resultSub+ext+NB;\n\t\twhile(hashOrders.containsKey(result)){\n\t\t\tNB++;\n\t\t\tresult=resultSub+ext+NB;\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**----------------------------------------------------------\n\t *GENERATE LS_ORDER_ID FOR MANUAL ORDERS*\n\t  -----------------------------------------------------------*/\n\n\t@Override\n\tpublic String generateManLsOrderId(final String lsOrderFirstPart) throws ServiceException {  \n\t\tHashtable<String, String>lsOrdersIdHash=new Hashtable<String, String>();\n\t\tList<Orders>listOrders=getAllOrders();\n\t\tif(listOrders!=null){\n\t\t\tfor(Orders ord:listOrders){\n\t\t\t\tlsOrdersIdHash.put(ord.getLsOrderId(), ord.getLsOrderId());\n\t\t\t}\n\t\t}\n\t\tint inc=0;//increment\n\t\tString lsOrderIdToGenerate=lsOrderFirstPart;;\n\t\twhile(lsOrdersIdHash.containsKey(lsOrderIdToGenerate)){\n\t\t\tinc++; \n\t\t\tlsOrderIdToGenerate=lsOrderFirstPart+""R""+inc;\n\t\t}\n\t\treturn lsOrderIdToGenerate;\n\t}\n\n\t/**----------------------------------------------------------\n\t *GET LIST ORDERS BY DATE, CLIENT AND LIKE LSORDER_ID*\n\t  -----------------------------------------------------------*/\n\t@SuppressWarnings(""unchecked"")\n\t@Override\n\tpublic List<OrdersDTO> getOrdersByDateClientLikeLsOrderId(final Date creationDate, final String userLogin, final String lsOrderId,String status){\n\t\tList<Orders> result=null;\n\t\tList<Orders> resultCleaned=new ArrayList<Orders>();\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresult = (List<Orders>) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().getOrdersByDateClientLikeLsOrderId(creationDate, userLogin,lsOrderId);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry {\n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\tif(result!=null){\n\t\t\tfor(Orders ord:result){\n\t\t\t\tArrayList<OrdersRows>listR=getRowsByLsOrderIdLikeStatus(ord.getLsOrderId(),status,0);\n\t\t\t\tord.setRowsList(listR);\n\t\t\t\tif(listR!=null && listR.size()>0)resultCleaned.add(ord);\n\t\t\t}\n\t\t}\n\t\treturn DTOFactory.getListOrderDTOFromListOrder(resultCleaned);\n\t}\n\n\t/**----------------------------------------------------------\n\t *SEARCH ORDERS BY OPTIONS*\n\t  -----------------------------------------------------------*/\t\n\t@SuppressWarnings(""unchecked"")\n\t@Override\n\tpublic List<OrdersDTO> searchOrdersWithOptions(final Date creationDateStart,final Date creationDateEnd, final String userLogin, final String lsOrderId,String status){\n\t\tList<Orders> result=null;\n\t\tList<Orders> resultCleaned=new ArrayList<Orders>();\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresult = (List<Orders>) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().searchOrdersWithOptions(creationDateStart,creationDateEnd, userLogin,lsOrderId);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry {\n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) { \n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\tif(result!=null){\n\t\t\tfor(Orders ord:result){\n\t\t\t\tArrayList<OrdersRows>listR=getRowsByLsOrderIdLikeStatus(ord.getLsOrderId(),status,0);\n\t\t\t\tord.setRowsList(listR);\n\t\t\t\tif(listR!=null && listR.size()>0)resultCleaned.add(ord);\n\t\t\t}\n\t\t}\n\t\treturn DTOFactory.getListOrderDTOFromListOrder(resultCleaned);\n\t}\n\n\t/**----------------------------------------------------------\n\t *SEARCH ORDERS BY OPTIONS AND SORTING*\n\t  -----------------------------------------------------------*/\n\t@SuppressWarnings(""unchecked"")\n\t@Override\n\tpublic List<OrdersDTO> searchOrdersWithOptionsAndSorting(final Date creationDateStart,final Date creationDateEnd,final Integer factorDateBetween,\n\t\t\tfinal String userLogin, final String lsOrderId,final String status,\n\t\t\tfinal List<Integer>listIndexColumn,final Integer PAGE_ITEMS_COUNT,final Integer indexSet){\n\t\tList<Orders> result=null;\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresult = (List<Orders>) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().searchOrdersWithOptionsAndSorting(creationDateStart, creationDateEnd,factorDateBetween,userLogin, lsOrderId, status, listIndexColumn,PAGE_ITEMS_COUNT,indexSet);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry {\n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) { \n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\tList<ProvinceDTO> listProvinces;\n\t\tHashtable<String, ProvinceDTO> hashProvinces=new Hashtable<String, ProvinceDTO>(); \n\t\ttry {\n\t\t\tproductService = serviceLocator.getProductService(); \n\t\t\tuserService= serviceLocator.getUserService();\n\t\t\tlistProvinces = productService.getAllProvinces();\n\t\t\tfor(ProvinceDTO provinceDTO:listProvinces){\n\t\t\t\thashProvinces.put(provinceDTO.getCode(), provinceDTO);\n\t\t\t}\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t}\n\n\t\tif(result!=null) {\n\t\t\tfor(Orders order: result) {\n\t\t\t\tif(order.getCurrencyId()!=null && order.getCurrencyRate()!=null) {\n\t\t\t\t\tif(order.getLsPrice()!=null) {\n\t\t\t\t\t\tDouble currencyPrice = order.getLsPrice()*order.getCurrencyRate();\n\t\t\t\t\t\tcurrencyPrice = (double) Math.round(currencyPrice*100) / 100;\n\t\t\t\t\t\torder.setCurrencyPrice(currencyPrice);\n\t\t\t\t\t}\n\t\t\t\t\tif(order.getUnitPrice()!=null) {\n\t\t\t\t\t\tDouble currencyUnitPrice = order.getUnitPrice()*order.getCurrencyRate();\n\t\t\t\t\t\tcurrencyUnitPrice = (double) Math.round(currencyUnitPrice*100) / 100;\n\t\t\t\t\t\torder.setCurrencyUnitPrice(currencyUnitPrice);\n\t\t\t\t\t}\n\t\t\t\t\t/*\n\t\t\t\t\tif(order.getShippingPrice()!=null) {\n\t\t\t\t\t\tDouble currencyShippingPrice = order.getShippingPrice()*order.getCurrencyRate();\n\t\t\t\t\t\tcurrencyShippingPrice = (double) Math.round(currencyShippingPrice*100) / 100;\n\t\t\t\t\t\torder.setCurrencyShippingPrice(currencyShippingPrice);\n\t\t\t\t\t}\n\t\t\t\t\t*/\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn DTOFactory.getListOrderDTOFromListOrderSorted(result,hashProvinces);\n\t}\n\n\n\t/**----------------------------------------------------------\n\t *SEARCH INVOICED ORDERS BY OPTIONS AND SORTING*\n\t  -----------------------------------------------------------*/\n\t@SuppressWarnings(""unchecked"")\n\t@Override\n\tpublic List<OrdersDTO> searchInvoicedWithSorting(final Date creationDateStart,final Date creationDateEnd,final Integer factorDateBetween,final String userLogin, final String lsOrderId,final String status,final List<Integer>listIndexColumn,final int PAGE_ITEMS_COUNT,final int indexSet){\n\t\tList<Orders> result=null;\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresult = (List<Orders>) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().searchInvoicedWithSorting(creationDateStart, creationDateEnd,factorDateBetween,userLogin, lsOrderId, status, listIndexColumn,PAGE_ITEMS_COUNT,indexSet);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry {\n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) { \n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\tList<ProvinceDTO> listProvinces;\n\t\tHashtable<String, ProvinceDTO> hashProvinces=new Hashtable<String, ProvinceDTO>(); \n\t\ttry {\n\t\t\tproductService = serviceLocator.getProductService(); \n\t\t\tuserService= serviceLocator.getUserService();\n\t\t\tlistProvinces = productService.getAllProvinces();\n\t\t\tfor(ProvinceDTO provinceDTO:listProvinces){\n\t\t\t\thashProvinces.put(provinceDTO.getCode(), provinceDTO);\n\t\t\t}\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t\t\n\t\tif(result!=null) {\n\t\t\tfor(Orders order: result) {\n\t\t\t\tif(order.getCurrencyId()!=null && order.getCurrencyRate()!=null) {\n\t\t\t\t\tif(order.getLsPrice()!=null) {\n\t\t\t\t\t\tDouble currencyPrice = order.getLsPrice()*order.getCurrencyRate();\n\t\t\t\t\t\tcurrencyPrice = (double) Math.round(currencyPrice*100) / 100;\n\t\t\t\t\t\torder.setCurrencyPrice(currencyPrice);\n\t\t\t\t\t}\n\t\t\t\t\tif(order.getUnitPrice()!=null) {\n\t\t\t\t\t\tDouble currencyUnitPrice = order.getUnitPrice()*order.getCurrencyRate();\n\t\t\t\t\t\tcurrencyUnitPrice = (double) Math.round(currencyUnitPrice*100) / 100;\n\t\t\t\t\t\torder.setCurrencyUnitPrice(currencyUnitPrice);\n\t\t\t\t\t}\n\t\t\t\t\t/*\n\t\t\t\t\tif(order.getShippingPrice()!=null) {\n\t\t\t\t\t\tDouble currencyShippingPrice = order.getShippingPrice()*order.getCurrencyRate();\n\t\t\t\t\t\tcurrencyShippingPrice = (double) Math.round(currencyShippingPrice*100) / 100;\n\t\t\t\t\t\torder.setCurrencyShippingPrice(currencyShippingPrice);\n\t\t\t\t\t}\n\t\t\t\t\t*/\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn DTOFactory.getListOrderDTOFromListOrderSorted(result,hashProvinces);\n\t}\n\n\n\t/**----------------------------------------------------------\n\t *GET LIST ROWS BY LSORDER_ID LIKE STATUS*\n\t  -----------------------------------------------------------*/\n\t@SuppressWarnings(""unchecked"")\n\t@Override\n\tpublic ArrayList<OrdersRows> getRowsByLsOrderIdLikeStatus(final String lsOrderId, final String status,final Integer sort){\n\t\tArrayList<OrdersRows> result=null;\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresult = (ArrayList<OrdersRows>) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().getRowsByLsOrderIdLikeStatus(lsOrderId, status,sort);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry {\n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**----------------------------------------------------------\n\t *UPDATE ORDERS ROWS BY LIKE LSORDER_ID, DATE, STATUS, CLIENT*\n\t  -----------------------------------------------------------*/\n\t@SuppressWarnings(""unchecked"")\n\t@Override\n\tpublic ArrayList<OrdersRows> getRowsByLsOrderIdLikeStatusSorted(final String lsOrderId, final String status,final Integer sort){\n\t\tArrayList<OrdersRows> result=null;\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresult = (ArrayList<OrdersRows>) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().getRowsByLsOrderIdLikeStatusSorted(lsOrderId, status,sort);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry {\n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**----------------------------------------------------------\n\t *UPDATE ORDER BY LSORDER_ID*\n\t  -----------------------------------------------------------*/\n\t@Override\n\tpublic boolean updateOrderByLsOrderId(OrdersDTO orderDTO){\n\t\tboolean result=false;\n\t\tfinal Orders order=DTOFactory.getOrderFromOrderDTO(orderDTO);\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresult = (Boolean) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().updateOrderByLsOrderId(order);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry {\n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\n\t/**----------------------------------------------------------\n\t *UPDATE ROW ORDER SHIPPING ELEMENTS(NOTES,SHIPPING_COMPANY, TRACKING_NUMBER) BY LSORDER_ID*\n\t  -----------------------------------------------------------*/\n\t@Override\n\tpublic boolean updateShippingOrderElements(OrdersDTO orderDTO){\n\t\tboolean result=false;\n\t\tfinal Orders order=DTOFactory.getOrderFromOrderDTO(orderDTO);\n\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresult = (Boolean) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().updateShippingOrderElements(order);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry {\n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\n\n\n\t/**----------------------------------------------------------\n\t *UPDATE ROW ORDER SHIPPING ELEMENTS(NOTES,SHIPPING_COMPANY, TRACKING_NUMBER) BY LSORDER_ID*\n\t  -----------------------------------------------------------*/\n\t@Override\n\tpublic boolean updateShippingInvoicedOrder(OrdersDTO orderDTO){\n\t\tboolean result=false;\n\t\tfinal Orders order=DTOFactory.getOrderFromOrderDTO(orderDTO);\n\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresult = (Boolean) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().updateShippingInvoicedOrder(order);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry {\n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\n\t@Override\n\tpublic boolean updateQuantityOrderByLsOrderId(OrdersDTO orderDTO){\n\t\tboolean result=false;\n\t\tfinal Orders order=DTOFactory.getOrderFromOrderDTO(orderDTO);\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresult = (Boolean) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().updateQuantityOrderByLsOrderId(order);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry {\n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\n\t@Override\n\tpublic boolean updateStatusByLsOrderId(final String lsOrderId,final String status){\n\t\tboolean result=false;\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresult = (Boolean) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().updateStatusByLsOrderId(lsOrderId,status);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry {\n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\n\t@Override\n\tpublic boolean deleteOrderByLsOrderId(OrdersDTO orderDTO){\n\t\tfinal Orders order =DTOFactory.getOrderFromOrderDTO(orderDTO);\n\t\tboolean result=false;\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresult = (Boolean) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().deleteOrderByLsOrderId(order);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry {\n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\t/**----------------------------------------------------------\n\t *GET ORDER ROW BY ID ROW*\n\t  -----------------------------------------------------------*/\n\t@Override\n\tpublic OrdersRows getRowsByRowId(final Long rowId){\n\t\tOrdersRows result=null;\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresult = (OrdersRows) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().getRowsByRowId(rowId);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry { \n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn result;\t\n\t}\n\n\n\n\t/**----------------------------------------------------------\n\t *GET ROW ORDER  BY lsOrderId*\n\t  -----------------------------------------------------------*/\n\t@Override\n\tpublic OrdersRows getRowByLsOrderId(final String lsOrderId){\n\t\tOrdersRows result=null;\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresult = (OrdersRows) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().getRowByLsOrderId(lsOrderId);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry { \n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn result;\t\n\t}\n\n\t/**----------------------------------------------------------\n\t *CHANGE STATUS OF ROW ORDER TO SHIPPED IN DATABASE*\n\t  -----------------------------------------------------------*/\n\t@Override\n\tpublic boolean makeRowOrderInShippedById(final OrdersRows orderRow){\n\t\tboolean result=false;\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresult = (Boolean) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().makeRowOrderInShippedById(orderRow);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry { \n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn result;\t\n\t}\n\n\t/**----------------------------------------------------------\n\t *CHANGE STATUS OF ROW ORDER TO OPEN*\n\t  -----------------------------------------------------------*/\n\t@Override\n\tpublic boolean makeRowOrderInOpenById(final OrdersRows orderRow){\n\t\tboolean result=false;\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresult = (Boolean) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().makeRowOrderInOpenById(orderRow);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry { \n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn result;\t\n\t}\n\n\t/**----------------------------------------------------------\n\t *CHECK IF PRODUCT ALREADY EXIST IN TABLE STOCK*\n\t  -----------------------------------------------------------*/\n\t@Override\n\tpublic boolean isExistProductInStock(ProductDTO productDTO){\n\t\tboolean result=false;\n\t\tfinal Product product=new Product();\n\t\tproduct.setId(productDTO.getId());\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresult = (Boolean) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().isExistProductInStock(product);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry { \n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn result;\t\n\t}\n\n\t/**----------------------------------------------------------\n\t *INSERT PRODUCT IN TABLE STOCK WHITH QANTITY STOCK*\n\t  -----------------------------------------------------------*/\n\t/*@Override\n\tpublic boolean insertProductInStock(ProductDTO productDTO){\n\t\tboolean result=false;\n\t\tfinal Product product=new Product();\n\t\tproduct.setId(productDTO.getId());\n\t\tproduct.setStock(productDTO.getStock());\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresult = (Boolean) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().insertProductInStock(product);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry { \n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn result;\t\n\t}*/\n\n\t/**----------------------------------------------------------\n\t *CREATE XLS FILE FROM THE LIST ORDERS*\n\t  -----------------------------------------------------------*/\n\t@Override\n\tpublic void generateAdminXLS(List<OrdersDTO> listOrdersDTO,String ordersAdminTemplateFolder,Long allOrdersSelected){\n\t\tfinal String sheetName = ""Sheet1"";\n\t\tfinal int ROW_TO_BEGIN=1;\n\t\t//COLUMNS NUMBER if(allOrdersSelectedSignal==null || allOrdersSelectedSignal==0L)\n\t\tfinal int COL_LS_ORDER_ID=1,\n\t\tCOL_PO_NUMBER=2,\n\t\tCOL_CLIENT_NUMBER=3,\n\t\tCOL_CLIENT_ORDER_ID=4,\n\t\tCOL_CLIENT_OTHER_ID=5,\n\t\tCOL_USER_LOGIN=6,\n\t\tCOL_LS_PRODUCT_ID=7,\n\t\tCOL_CLIENT_PRODUCT_NUMBER=8,\n\t\tCOL_P_DESCRIPTION=9,\n\t\tCOL_QUANTITY=10,\n\t\tCOL_UNIT_PRICE=11,\n\t\tCOL_LS_PRICE=12,\n\t\tCOL_TRACKING_NUMBER=13,\n\t\tCOL_STATUS=14,\n\t\tCO_STOCK=15,\n\t\tCOL_CLIENT_FIRST_NAME=16,\n\t\tCOL_CLIENT_LAST_NAME=17,\n\t\tCOL_CLIENT_OTHER_NAMES=18,\n\t\tCOL_CLIENT_STREET=19,\n\t\tCOL_CLIENT_OTHER_STREET=20,\n\t\tCOL_CLIENT_CITY=21,\n\t\tCOL_CLIENT_PROVINCE=22,\n\t\tCOL_CLIENT_POSTAL_CODE=23,\n\t\tCOL_CLIENT_PHONE=24,\n\t\tCOL_CLIENT_EMAIL=25;\n\t\t//COLUMNS Data\n\t\tString LS_ORDER_ID=null;\n\t\tString PO_NUMBER="""";\n\t\tString CLIENT_NUMBER="""";\n\t\tString CLIENT_ORDER_ID="""";\n\t\tString CLIENT_OTHER_ID="""";\n\t\tString LS_PRODUCT_ID="""";\n\t\tString CLIENT_PRODUCT_NUMBER="""";\n\t\tDouble QUANTITY=0D;\n\t\tString P_DESCRIPTION="""";\n\t\tDouble UNIT_PRICE=0D;\n\t\tDouble LS_PRICE=0D;\n\t\tString TRACKING_NUMBER="""";\n\t\tString STATUS="""";\n\t\tDouble STOCK=0D;\n\t\tString USER_LOGIN="""";\n\t\tString CLIENT_FIRST_NAME="""";\n\t\tString CLIENT_LAST_NAME="""";\n\t\tString CLIENT_OTHER_NAMES="""";\n\t\tString CLIENT_STREET="""";\n\t\tString CLIENT_OTHER_ADRESS="""";\n\t\tString CLIENT_CITY="""";\n\t\tString CLIENT_PROVINCE="""";\n\t\tString CLIENT_POSTAL_CODE="""";\n\t\tString CLIENT_PHONE="""";\n\t\tString CLIENT_EMAIL="""";\n\t\tint row = 0;\n\t\ttry {\n\t\t\tWorkbook existingWorkbook = Workbook.getWorkbook(new File(ordersAdminTemplateFolder+""ordersAdminTemplate.xls""));\n\t\t\tWritableWorkbook workbookCopy = Workbook.createWorkbook(new File(ordersAdminTemplateFolder+""ordersAdminExport.xls""), existingWorkbook);\n\t\t\tWritableSheet sheetToEdit = workbookCopy.getSheet(sheetName);\n\n\t\t\tint heightInPoints = 27*27;\n\n\n\t\t\t// Create cell font and format\n\t\t\t/* WritableFont cellFont = new WritableFont(WritableFont.TIMES, 12);\n\t    cellFont.setColour(Colour.BLACK);\n\t    WritableCellFormat cellFormat = new WritableCellFormat(cellFont);\n\t    cellFormat.setBackground(Colour.ORANGE);\n\t    cellFormat.setVerticalAlignment(VerticalAlignment.CENTRE);\n\t    cellFormat.setBorder(Border.ALL, BorderLineStyle.THIN);*/\n\n\t\t\t// Create cell font and format\n\t\t\tWritableFont cellFont = new WritableFont(WritableFont.TIMES, 12);\n\t\t\tcellFont.setColour(Colour.BLACK);\n\n\t\t\tWritableCellFormat cellFormatAlert = new WritableCellFormat(cellFont);\n\t\t\t//cellFormatOrange.setBackground(Colour.ORANGE);\n\t\t\tcellFormatAlert.setBackground(Colour.ORANGE);\n\t\t\tcellFormatAlert.setVerticalAlignment(VerticalAlignment.CENTRE);\n\t\t\tcellFormatAlert.setAlignment(Alignment.CENTRE);\n\t\t\tcellFormatAlert.setWrap(true);\n\t\t\tcellFormatAlert.setBorder(Border.ALL, BorderLineStyle.THIN);\n\n\t\t\tWritableCellFormat cellFormatNormal = new WritableCellFormat(cellFont);\n\t\t\t//cellFormatOrange.setBackground(Colour.ORANGE);\n\t\t\tcellFormatNormal.setBackground(Colour.LIGHT_TURQUOISE);\n\t\t\tcellFormatNormal.setVerticalAlignment(VerticalAlignment.CENTRE);\n\t\t\tcellFormatNormal.setAlignment(Alignment.CENTRE);\n\t\t\tcellFormatNormal.setWrap(true);\n\t\t\tcellFormatNormal.setBorder(Border.ALL, BorderLineStyle.THIN);\n\n\t\t\t//WritableFont cellFont = new WritableFont(WritableFont.TIMES, 12);\n\t\t\tcellFont.setColour(Colour.BLACK);\n\t\t\tWritableCellFormat cellFormatWhite = new WritableCellFormat(cellFont);\n\t\t\tcellFormatWhite.setBackground(Colour.WHITE);\n\t\t\tcellFormatWhite.setVerticalAlignment(VerticalAlignment.CENTRE);\n\t\t\tcellFormatWhite.setAlignment(Alignment.CENTRE);\n\t\t\tcellFormatWhite.setWrap(true);\n\t\t\tcellFormatWhite.setBorder(Border.ALL, BorderLineStyle.THIN);\n\t\t\tWritableCellFormat cellFormat=null;\n\n\t\t\tWritableCell cellROW_ID=null;\n\t\t\tWritableCell cellCLIENT_FIRST_NAME=null;\n\t\t\tWritableCell cellCLIENT_LAST_NAME=null;\n\t\t\tWritableCell cellCLIENT_OTHER_NAMES=null;\n\t\t\tWritableCell cellCLIENT_STREET=null;\n\t\t\tWritableCell cellCLIENT_OTHER_ADRESS=null;\n\t\t\tWritableCell cellCLIENT_CITY=null;\n\t\t\tWritableCell cellCLIENT_PROVINCE=null;\n\t\t\tWritableCell cellCLIENT_POSTAL_CODE=null;\n\t\t\tWritableCell cellCLIENT_PHONE=null;\n\t\t\tWritableCell cellCLIENT_EMAIL=null;\n\t\t\tWritableCell cellLS_PRODUCT_ID=null;\n\t\t\tWritableCell cellQUANTITY=null;\n\t\t\tWritableCell cellUNIT_PRICE=null;\n\t\t\tWritableCell cellLS_PRICE=null;\n\t\t\tWritableCell cellSTATUS=null;\n\t\t\tWritableCell cellSTOCK=null;\n\t\t\tWritableCell cellUSER_LOGIN=null;\n\t\t\tWritableCell cellP_DESCRIPTION=null;\n\t\t\tWritableCell cellPO_NUMBER=null;\n\t\t\tWritableCell cellCLIENT_NUMBER=null;\n\t\t\tWritableCell cellCLIENT_PRODUCT_NUMBER=null;\n\t\t\tWritableCell cellTRACKING_NUMBER=null;\n\t\t\tWritableCell cellCLIENT_ORDER_ID=null;\n\t\t\tWritableCell cellCLIENT_OTHER_ID=null;\n\t\t\t//LABELS\n\t\t\tLabel labelROW_ID=null,\n\t\t\tlabelCLIENT_FIRST_NAME=null,\n\t\t\tlabelCLIENT_LAST_NAME=null,\n\t\t\tlabelCLIENT_OTHER_NAMES=null,\n\t\t\tlabelCLIENT_STREET=null,\n\t\t\tlabelCLIENT_OTHER_ADRESS=null,\n\t\t\tlabelCLIENT_CITY=null,\n\t\t\tlabelCLIENT_PROVINCE=null,\n\t\t\tlabelCLIENT_POSTAL_CODE=null,\n\t\t\tlabelCLIENT_PHONE=null,\n\t\t\tlabelCLIENT_EMAIL=null,\n\t\t\tlabelLS_PRODUCT_ID=null,\n\t\t\tlabelQUANTITY=null,\n\t\t\tlabelUNIT_PRICE=null,\n\t\t\tlabelLS_PRICE=null,\n\t\t\tlabelSTATUS=null,\n\t\t\tlabelSTOCK=null,\n\t\t\tlabelUSER_LOGIN=null,\n\t\t\tlabelP_DESCRIPTION=null,\n\t\t\tlabelPO_NUMBER=null,\n\t\t\tlabelCLIENT_NUMBER=null,\n\t\t\tlabelCLIENT_PRODUCT_NUMBER=null,\n\t\t\tlabelTRACKING_NUMBER=null,\n\t\t\tlabelCLIENT_ORDER_ID=null,\n\t\t\tlabelCLIENT_OTHER_ID=null;\n\n\t\t\t//START FROM ROW_TO_BEGIN\n\t\t\trow = ROW_TO_BEGIN;\n\t\t\tint orderIndex=0;\n\t\t\tint pair=0;\n\t\t\tList<OrdersDTO>listOrdersDTOFilter=new ArrayList<OrdersDTO>();\n\t\t\tif(allOrdersSelected==null || allOrdersSelected==0L){\n\t\t\t\tfor (OrdersDTO ordDTO : listOrdersDTO){\n\t\t\t\tif(ordDTO.getPrint())listOrdersDTOFilter.add(ordDTO);\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tlistOrdersDTOFilter=listOrdersDTO;\n\t\t\t}\n\t\t\tfor (OrdersDTO orderDTO : listOrdersDTOFilter) {\n\n\t\t\t\torderIndex++;\n\t\t\t\tpair=orderIndex%2;\n\t\t\t\tswitch (pair) {\n\t\t\t\tcase 0:\n\t\t\t\t\tcellFormat=cellFormatWhite;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 1:\n\t\t\t\t\tcellFormat=cellFormatNormal;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tLS_ORDER_ID="""";\n\t\t\t\tPO_NUMBER="""";\n\t\t\t\tCLIENT_NUMBER="""";\n\t\t\t\tLS_PRODUCT_ID="""";\n\t\t\t\tCLIENT_PRODUCT_NUMBER="""";\n\t\t\t\tQUANTITY=0D;\n\t\t\t\tP_DESCRIPTION="""";\n\t\t\t\tUNIT_PRICE=0D;\n\t\t\t\tLS_PRICE=0D;\n\t\t\t\tTRACKING_NUMBER="""";\n\t\t\t\tSTATUS="""";\n\t\t\t\tSTOCK=null;\n\t\t\t\tUSER_LOGIN="""";\n\t\t\t\tCLIENT_FIRST_NAME="""";\n\t\t\t\tCLIENT_LAST_NAME="""";\n\t\t\t\tCLIENT_OTHER_NAMES="""";\n\t\t\t\tCLIENT_STREET="""";\n\t\t\t\tCLIENT_OTHER_ADRESS="""";\n\t\t\t\tCLIENT_CITY="""";\n\t\t\t\tCLIENT_PROVINCE="""";\n\t\t\t\tCLIENT_POSTAL_CODE="""";\n\t\t\t\tCLIENT_PHONE="""";\n\t\t\t\tCLIENT_EMAIL="""";\n\n\t\t\t\t// 1: LS_ORDER_ID (must be lest than 35 letters)\n\t\t\t\tif (orderDTO.getLsOrderId() != null)LS_ORDER_ID = orderDTO.getLsOrderId();\n\t\t\t\tlabelROW_ID = new Label(COL_LS_ORDER_ID-1, row, LS_ORDER_ID,cellFormat);\n\t\t\t\tcellROW_ID = (WritableCell) labelROW_ID;\n\t\t\t\tsheetToEdit.addCell(cellROW_ID);\n\n\t\t\t\t// 2: COL_PO_NUMBER\n\t\t\t\tif (orderDTO.getProductOrderNumber() != null)PO_NUMBER = orderDTO.getProductOrderNumber();\n\t\t\t\tlabelPO_NUMBER = new Label(COL_PO_NUMBER-1, row, PO_NUMBER,cellFormat);\n\t\t\t\tcellPO_NUMBER = (WritableCell)labelPO_NUMBER;\n\t\t\t\tsheetToEdit.addCell(cellPO_NUMBER);\n\n\t\t\t\t// 3: COL_CLIENT_NUMBER\n\t\t\t\tif (orderDTO.getClientNumber() != null)CLIENT_NUMBER = orderDTO.getClientNumber();\n\t\t\t\tlabelCLIENT_NUMBER = new Label(COL_CLIENT_NUMBER-1, row, CLIENT_NUMBER,cellFormat);\n\t\t\t\tcellCLIENT_NUMBER = (WritableCell)labelCLIENT_NUMBER;\n\t\t\t\tsheetToEdit.addCell(cellCLIENT_NUMBER);\n\n\t\t\t\t// 4: CLIENT_ORDER_ID\n\t\t\t\tif (orderDTO.getClientOrderNumber() == null)orderDTO.setClientOrderNumber("""");\n\t\t\t\tCLIENT_ORDER_ID = orderDTO.getClientOrderNumber();\n\t\t\t\tlabelCLIENT_ORDER_ID = new Label(COL_CLIENT_ORDER_ID-1, row, CLIENT_ORDER_ID,cellFormat);\n\t\t\t\tcellCLIENT_ORDER_ID = (WritableCell) labelCLIENT_ORDER_ID;\n\t\t\t\tsheetToEdit.addCell(cellCLIENT_ORDER_ID);\n\n\t\t\t\t// 5: CLIENT_OTHER_ID\n\t\t\t\tif (orderDTO.getClientOtherId()!= null)\tCLIENT_OTHER_ID = orderDTO.getClientOtherId();\n\t\t\t\tlabelCLIENT_OTHER_ID = new Label(COL_CLIENT_OTHER_ID-1, row, CLIENT_OTHER_ID,cellFormat);\n\t\t\t\tcellCLIENT_OTHER_ID = (WritableCell) labelCLIENT_OTHER_ID;\n\t\t\t\tsheetToEdit.addCell(cellCLIENT_OTHER_ID);\n\n\t\t\t\t// 6: PARTNER NAME (must be lest than 30 letters)\n\t\t\t\tif (orderDTO.getUserLogin() != null)USER_LOGIN = orderDTO.getUserLogin();\n\t\t\t\tif( USER_LOGIN.length()>30 || USER_LOGIN.equals("""") ){\n\t\t\t\t\tlabelUSER_LOGIN = new Label(COL_USER_LOGIN-1, row, USER_LOGIN,cellFormatAlert);\n\t\t\t\t}else{\n\t\t\t\t\tlabelUSER_LOGIN = new Label(COL_USER_LOGIN-1, row, USER_LOGIN,cellFormat);\n\t\t\t\t}\n\t\t\t\tcellUSER_LOGIN = (WritableCell) labelUSER_LOGIN;\n\t\t\t\tsheetToEdit.addCell(cellUSER_LOGIN);\n\n\t\t\t\t// 7: LS_PRODUCT_ID (must be lest than 30 letters)\n\t\t\t\tif (orderDTO.getLsProductID() != null)LS_PRODUCT_ID = orderDTO.getLsProductID();\n\t\t\t\tlabelLS_PRODUCT_ID = new Label(COL_LS_PRODUCT_ID-1, row, LS_PRODUCT_ID,cellFormat);\n\t\t\t\tcellLS_PRODUCT_ID = (WritableCell) labelLS_PRODUCT_ID;\n\t\t\t\tsheetToEdit.addCell(cellLS_PRODUCT_ID);\n\n\t\t\t\t// 8: COL_CLIENT_PRODUCT_NUMBER\n\t\t\t\tif (orderDTO.getClientProductNumber()!= null)CLIENT_PRODUCT_NUMBER = orderDTO.getClientProductNumber();\n\t\t\t\tlabelCLIENT_PRODUCT_NUMBER = new Label(COL_CLIENT_PRODUCT_NUMBER-1, row, CLIENT_PRODUCT_NUMBER,cellFormat);\n\t\t\t\tcellCLIENT_PRODUCT_NUMBER = (WritableCell)labelCLIENT_PRODUCT_NUMBER;\n\t\t\t\tsheetToEdit.addCell(cellCLIENT_PRODUCT_NUMBER);\n\n\t\t\t\t// 9: DESCRIPTION\n\t\t\t\tif (orderDTO.getProductDescription() != null)P_DESCRIPTION = orderDTO.getProductDescription();\n\t\t\t\tlabelP_DESCRIPTION = new Label(COL_P_DESCRIPTION-1, row, P_DESCRIPTION,cellFormat);\n\t\t\t\tcellP_DESCRIPTION = (WritableCell) labelP_DESCRIPTION;\n\t\t\t\tsheetToEdit.addCell(cellP_DESCRIPTION);\n\n\t\t\t\t// 10: QANTITY\n\t\t\t\tif (orderDTO.getQuantity() != null)QUANTITY = orderDTO.getQuantity();\n\t\t\t\tString strQUANTITY=QUANTITY.toString();\n\t\t\t\tlabelQUANTITY = new Label(COL_QUANTITY-1, row, strQUANTITY,cellFormat);\n\t\t\t\tcellQUANTITY = (WritableCell) labelQUANTITY;\n\t\t\t\tsheetToEdit.addCell(cellQUANTITY);\n\n\t\t\t\t// 11: UNIT_PRICE\n\t\t\t\tif (orderDTO.getUnitPrice() != null)UNIT_PRICE = orderDTO.getUnitPrice();\n\t\t\t\tString strUNIT_PRICE=UNIT_PRICE.toString();\n\t\t\t\tlabelUNIT_PRICE = new Label(COL_UNIT_PRICE-1, row, strUNIT_PRICE,cellFormat);\n\t\t\t\tcellUNIT_PRICE = (WritableCell) labelUNIT_PRICE;\n\t\t\t\tsheetToEdit.addCell(cellUNIT_PRICE);\n\n\t\t\t\t// 12: LS_PRICE\n\t\t\t\tif (orderDTO.getLsPrice() != null)LS_PRICE = orderDTO.getLsPrice();\n\t\t\t\tString strLS_PRICE=LS_PRICE.toString();\n\t\t\t\tlabelLS_PRICE = new Label(COL_LS_PRICE-1, row, strLS_PRICE,cellFormat);\n\t\t\t\tcellLS_PRICE = (WritableCell) labelLS_PRICE;\n\t\t\t\tsheetToEdit.addCell(cellLS_PRICE);\n\n\t\t\t\t// 13:COL_TRACKING_NUMBER\n\t\t\t\tif (orderDTO.getTrackingNumber()!= null)TRACKING_NUMBER = orderDTO.getTrackingNumber();\n\t\t\t\tlabelTRACKING_NUMBER = new Label(COL_TRACKING_NUMBER-1, row, TRACKING_NUMBER,cellFormat);\n\t\t\t\tcellTRACKING_NUMBER = (WritableCell)labelTRACKING_NUMBER;\n\t\t\t\tsheetToEdit.addCell(cellTRACKING_NUMBER);\n\n\t\t\t\t// 14: STATUS\n\t\t\t\tif (orderDTO.getStatus() != null)STATUS = orderDTO.getStatus();\n\t\t\t\tlabelSTATUS = new Label(COL_STATUS-1, row, STATUS,cellFormat);\n\t\t\t\tcellSTATUS = (WritableCell) labelSTATUS;\n\t\t\t\tsheetToEdit.addCell(cellSTATUS);\n\n\t\t\t\t// 15: STOCK \n\t\t\t\tif (orderDTO.getStock() != null)STOCK = orderDTO.getStock();\n\t\t\t\tString strSTOCK=STOCK.toString();\n\t\t\t\tlabelSTOCK = new Label(CO_STOCK-1, row, strSTOCK,cellFormat);\n\t\t\t\tcellSTOCK = (WritableCell) labelSTOCK;\n\t\t\t\tsheetToEdit.addCell(cellSTOCK);\n\n\t\t\t\t// 16: CLIENT_FIRST_NAME (must be lest than 30 letters)\n\t\t\t\tif (orderDTO.getClientFirstName() != null)CLIENT_FIRST_NAME = orderDTO.getClientFirstName();\n\t\t\t\tif(CLIENT_FIRST_NAME ==null || CLIENT_FIRST_NAME.length()>30 || CLIENT_FIRST_NAME.equals("""")){\n\t\t\t\t\tlabelCLIENT_FIRST_NAME = new Label(COL_CLIENT_FIRST_NAME-1, row, CLIENT_FIRST_NAME,cellFormatAlert);\n\t\t\t\t}else{\n\t\t\t\t\tlabelCLIENT_FIRST_NAME = new Label(COL_CLIENT_FIRST_NAME-1, row, CLIENT_FIRST_NAME,cellFormat);\n\t\t\t\t}\n\t\t\t\tcellCLIENT_FIRST_NAME = (WritableCell) labelCLIENT_FIRST_NAME;\n\t\t\t\tsheetToEdit.addCell(cellCLIENT_FIRST_NAME);\n\n\t\t\t\t// 17: CLIENT_LAST_NAME (must be lest than 40 letters)\n\t\t\t\tif (orderDTO.getClientLastName() != null)CLIENT_LAST_NAME = orderDTO.getClientLastName();\n\t\t\t\tif(CLIENT_LAST_NAME==null || CLIENT_LAST_NAME.length()>40 || CLIENT_LAST_NAME.equals("""")){\n\t\t\t\t\tlabelCLIENT_LAST_NAME = new Label(COL_CLIENT_LAST_NAME-1, row, CLIENT_LAST_NAME,cellFormatAlert);\n\t\t\t\t}else{\n\t\t\t\t\tlabelCLIENT_LAST_NAME = new Label(COL_CLIENT_LAST_NAME-1, row, CLIENT_LAST_NAME,cellFormat);\n\t\t\t\t}\n\t\t\t\tcellCLIENT_LAST_NAME = (WritableCell) labelCLIENT_LAST_NAME;\n\t\t\t\tsheetToEdit.addCell(cellCLIENT_LAST_NAME);\n\n\t\t\t\t// 18: CLIENT_OTHER_NAMES (must be lest than 15 letters)\n\t\t\t\tif (orderDTO.getClientOtherNames() != null)CLIENT_OTHER_NAMES = orderDTO.getClientOtherNames();\n\t\t\t\tlabelCLIENT_OTHER_NAMES = new Label(COL_CLIENT_OTHER_NAMES-1, row, CLIENT_OTHER_NAMES,cellFormat);\n\t\t\t\tcellCLIENT_OTHER_NAMES = (WritableCell) labelCLIENT_OTHER_NAMES;\n\t\t\t\tsheetToEdit.addCell(cellCLIENT_OTHER_NAMES);\n\n\t\t\t\t// 19: CLIENT_STREET (must be lest than 44 letters)\n\t\t\t\tif (orderDTO.getClientStreet() != null)CLIENT_STREET = orderDTO.getClientStreet();\n\t\t\t\tif(CLIENT_STREET==null || CLIENT_STREET.length()>44 || CLIENT_STREET.equals("""")){\n\t\t\t\t\tlabelCLIENT_STREET = new Label(COL_CLIENT_STREET-1, row, CLIENT_STREET,cellFormatAlert);\n\t\t\t\t}else{\n\t\t\t\t\tlabelCLIENT_STREET = new Label(COL_CLIENT_STREET-1, row, CLIENT_STREET,cellFormat);\n\t\t\t\t}\n\t\t\t\tcellCLIENT_STREET = (WritableCell) labelCLIENT_STREET;\n\t\t\t\tsheetToEdit.addCell(cellCLIENT_STREET);\n\n\t\t\t\t// 20: CLIENT_OTHER_STREET (must be lest than 44 letters)\n\t\t\t\tif (orderDTO.getClientOtherStreet()!= null)CLIENT_OTHER_ADRESS = orderDTO.getClientOtherStreet();\n\t\t\t\tif(CLIENT_OTHER_ADRESS.length()>44){\n\t\t\t\t\tlabelCLIENT_OTHER_ADRESS = new Label(COL_CLIENT_OTHER_STREET-1, row, CLIENT_OTHER_ADRESS,cellFormatAlert);\n\t\t\t\t}else{\n\t\t\t\t\tlabelCLIENT_OTHER_ADRESS = new Label(COL_CLIENT_OTHER_STREET-1, row, CLIENT_OTHER_ADRESS,cellFormat);\n\t\t\t\t}\n\t\t\t\tcellCLIENT_OTHER_ADRESS = (WritableCell) labelCLIENT_OTHER_ADRESS;\n\t\t\t\tsheetToEdit.addCell(cellCLIENT_OTHER_ADRESS);\n\n\t\t\t\t// 21: CLIENT_CITY (must be lest than 25 letters)\n\t\t\t\tif (orderDTO.getClientCity()!= null && orderDTO.getClientCity().length()<=25)CLIENT_CITY = orderDTO.getClientCity();\n\t\t\t\tif(CLIENT_CITY.length()>25 || CLIENT_CITY.equals("""") ){\n\t\t\t\t\tlabelCLIENT_CITY = new Label(COL_CLIENT_CITY-1, row, CLIENT_CITY,cellFormatAlert);\n\t\t\t\t}else{\n\t\t\t\t\tlabelCLIENT_CITY = new Label(COL_CLIENT_CITY-1, row, CLIENT_CITY,cellFormat);\n\t\t\t\t}\n\t\t\t\tcellCLIENT_CITY = (WritableCell) labelCLIENT_CITY;\n\t\t\t\tsheetToEdit.addCell(cellCLIENT_CITY);\n\n\t\t\t\t// 22: CLIENT_PROVINCE (must be lest than 2 letters)\n\t\t\t\tif (orderDTO.getClientProvince()!= null)CLIENT_PROVINCE = orderDTO.getClientProvince();\n\t\t\t\tif(CLIENT_PROVINCE.length()>2 || CLIENT_PROVINCE.equals("""") || (orderDTO.getProvinceNotFound()!=null && orderDTO.getProvinceNotFound()==1L)){\n\t\t\t\t\tlabelCLIENT_PROVINCE = new Label(COL_CLIENT_PROVINCE-1, row, CLIENT_PROVINCE,cellFormatAlert);\n\t\t\t\t}else{\n\t\t\t\t\tlabelCLIENT_PROVINCE = new Label(COL_CLIENT_PROVINCE-1, row, CLIENT_PROVINCE,cellFormat);\n\t\t\t\t}\n\t\t\t\tcellCLIENT_PROVINCE = (WritableCell) labelCLIENT_PROVINCE;\n\t\t\t\tsheetToEdit.addCell(cellCLIENT_PROVINCE);\n\n\t\t\t\t// 23: CLIENT_POSTAL_CODE (must be lest than 14 letters)\n\t\t\t\tif (orderDTO.getClientPostalCode()!= null && orderDTO.getClientPostalCode().length()<=14)CLIENT_POSTAL_CODE = orderDTO.getClientPostalCode();\n\t\t\t\tif(CLIENT_POSTAL_CODE.length()>14 || CLIENT_POSTAL_CODE.equals("""")){\n\t\t\t\t\tlabelCLIENT_POSTAL_CODE = new Label(COL_CLIENT_POSTAL_CODE-1, row, CLIENT_POSTAL_CODE,cellFormatAlert);\n\t\t\t\t}else{\n\t\t\t\t\tlabelCLIENT_POSTAL_CODE = new Label(COL_CLIENT_POSTAL_CODE-1, row,CLIENT_POSTAL_CODE,cellFormat);\n\t\t\t\t}\n\t\t\t\tcellCLIENT_POSTAL_CODE = (WritableCell) labelCLIENT_POSTAL_CODE;\n\t\t\t\tsheetToEdit.addCell(cellCLIENT_POSTAL_CODE);\n\n\t\t\t\t// 24: CLIENT_PHONE (must be lest than 25 letters)\n\t\t\t\tif (orderDTO.getClientPhone()!= null)CLIENT_PHONE = orderDTO.getClientPhone();\n\t\t\t\tif(CLIENT_PHONE.length()>25){\n\t\t\t\t\tlabelCLIENT_PHONE = new Label(COL_CLIENT_PHONE-1, row, CLIENT_PHONE,cellFormatAlert);\n\t\t\t\t}else{\n\t\t\t\t\tlabelCLIENT_PHONE = new Label(COL_CLIENT_PHONE-1, row, CLIENT_PHONE,cellFormat);\n\t\t\t\t}\n\t\t\t\tcellCLIENT_PHONE = (WritableCell) labelCLIENT_PHONE;\n\t\t\t\tsheetToEdit.addCell(cellCLIENT_PHONE);\n\n\t\t\t\t// 25: CLIENT_EMAIL (must be lest than 60 letters)\n\t\t\t\tif (orderDTO.getClientEmail()!= null)CLIENT_EMAIL = orderDTO.getClientEmail();\n\t\t\t\tif(CLIENT_EMAIL.length()>60){\n\t\t\t\t\tlabelCLIENT_EMAIL = new Label(COL_CLIENT_EMAIL-1, row, CLIENT_EMAIL,cellFormatAlert);\n\t\t\t\t}else{\n\t\t\t\t\tlabelCLIENT_EMAIL = new Label(COL_CLIENT_EMAIL-1, row, CLIENT_EMAIL,cellFormat);\n\t\t\t\t}\n\t\t\t\tcellCLIENT_EMAIL = (WritableCell) labelCLIENT_EMAIL;\n\t\t\t\tsheetToEdit.addCell(cellCLIENT_EMAIL);\n\n\t\t\t\t//change height row 32px\n\t\t\t\tsheetToEdit.setRowView(row,heightInPoints);\n\t\t\t\t++row;\n\t\t\t}\n\t\t\tworkbookCopy.write();\n\t\t\tworkbookCopy.close();\n\t\t\texistingWorkbook.close();\n\n\t\t} catch (Exception x) {\n\t\t\tx.printStackTrace();\n\t\t}\n\t}\n\n\n\t\n\t\n\n\n\t/**----------------------------------------------------------\n\t *CREATE XLS FILE FROM THE ETA LIST ORDERS*\n\t  -----------------------------------------------------------*/\n\t@Override\n\tpublic void generateEtaXLS(List<OrdersDTO> listOrdersDTO,String ordersEtaTemplateFolder)throws Exception{\n\t\tfinal String sheetName = ""Sheet1"";\n\t\tfinal int ROW_TO_BEGIN=1;\n\t\tfinal int COL_ETA_FIELD_VALUE=1;\n\t\tfinal int COL_ETA_SHIPPING_INFO=2;\n\t\t//COLUMNS Data\n\t\tString ETA_FIELD_VALUE=null;\n\t\tString ETA_SHIPPING_INFO=null;\n\t\tint row = 0;\n\t\ttry {\n\t\t\n\t\t\tWorkbook existingWorkbook = Workbook.getWorkbook(new File(ordersEtaTemplateFolder+""etaTemplate.xls""));\n\t\t\tWritableWorkbook workbookCopy = Workbook.createWorkbook(new File(ordersEtaTemplateFolder+""etaReport.xls""), existingWorkbook);\n\t\t\tWritableSheet sheetToEdit = workbookCopy.getSheet(sheetName);\n\n\n\t\t\tint heightInPoints = 27*27;\n\n\t\t\t// Create cell font and format\n\t\t\tWritableFont cellFont = new WritableFont(WritableFont.TIMES, 12);\n\t\t\tcellFont.setColour(Colour.BLACK);\n\t\t\t//change style to bold\n\t\t\tWritableFont cellBoldFont = new WritableFont(WritableFont.TIMES, 12);\n\t\t\tcellBoldFont.setColour(Colour.BLACK);\n\t\t\tcellBoldFont.setBoldStyle(WritableFont.BOLD);\n\t\t\t//change style to red color\n\t\t\tWritableFont cellRedFont = new WritableFont(WritableFont.TIMES, 12);\n\t\t\tcellRedFont.setColour(Colour.RED);\n\t\t\tcellRedFont.setBoldStyle(WritableFont.BOLD);\n\t\t\t\n\t\t\t//color row this orange if not exist PO\n\t\t\tWritableCellFormat cellFormatAlert = new WritableCellFormat(cellFont);\n\t\t\tcellFormatAlert.setBackground(Colour.ORANGE);\n\t\t\tcellFormatAlert.setVerticalAlignment(VerticalAlignment.CENTRE);\n\t\t\tcellFormatAlert.setAlignment(Alignment.CENTRE);\n\t\t\tcellFormatAlert.setWrap(true);\n\t\t\tcellFormatAlert.setBorder(Border.ALL, BorderLineStyle.THIN);\n\t\t\t\n\t\t\t//color row with blue color\n\t\t\tWritableCellFormat cellFormatNormal = new WritableCellFormat(cellFont);\n\t\t\tcellFormatNormal.setBackground(Colour.LIGHT_TURQUOISE);\n\t\t\tcellFormatNormal.setVerticalAlignment(VerticalAlignment.CENTRE);\n\t\t\tcellFormatNormal.setAlignment(Alignment.CENTRE);\n\t\t\tcellFormatNormal.setWrap(true);\n\t\t\tcellFormatNormal.setBorder(Border.ALL, BorderLineStyle.THIN);\n\t\t\t//white color for row\n\t\t\tcellFont.setColour(Colour.BLACK);\n\t\t\tWritableCellFormat cellFormatWhite = new WritableCellFormat(cellFont);\n\t\t\tcellFormatWhite.setBackground(Colour.WHITE);\n\t\t\tcellFormatWhite.setVerticalAlignment(VerticalAlignment.CENTRE);\n\t\t\tcellFormatWhite.setAlignment(Alignment.CENTRE);\n\t\t\tcellFormatWhite.setWrap(true);\n\t\t\tcellFormatWhite.setBorder(Border.ALL, BorderLineStyle.THIN);\n\t\t\tWritableCellFormat cellFormat=null;\n\n\t\t\tWritableCell cellETA_FIELD_VALUE=null;\n\t\t\tWritableCell cellETA_SHIPPING_INFO=null;\n\t\t\t//LABELS\n\t\t\tLabel labelETA_FIELD_VALUE=null;\n\t\t\tLabel labelETA_SHIPPING_INFO=null;\n\t\t\t\n\t\t\t//START FROM ROW_TO_BEGIN\n\t\t\trow = ROW_TO_BEGIN;\n\t\t\tint orderIndex=0;\n\t\t\tint pair=0;\n\t\t\t//List<OrdersDTO>listOrdersDTOFilter=new ArrayList<OrdersDTO>();\n\n\t\t\tfor (OrdersDTO orderDTO : listOrdersDTO) {\n\n\t\t\t\torderIndex++;\n\t\t\t\tpair=orderIndex%2;\n\t\t\t\tswitch (pair) {\n\t\t\t\tcase 0:\n\t\t\t\t\tcellFormat=cellFormatWhite;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 1:\n\t\t\t\t\tcellFormat=cellFormatNormal;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif(orderDTO.getNotation()!=null && !orderDTO.getNotation().equals("""")){\n\t\t\t\t\tint notation=Integer.parseInt(orderDTO.getNotation());\n\t\t\t\t\tif(notation==0){ //order not found\n\t\t\t\t\t\tcellFormat.setFont(cellRedFont);\n\t\t\t\t\t}else if(notation>1){//exist more than\n\t\t\t\t\t\tcellFormat.setFont(cellBoldFont);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\tETA_FIELD_VALUE="""";\n\t\t\t\tETA_SHIPPING_INFO="""";\n\t\t\t\t\n\t\t\t\t//--------------- COL_ETA_FIELD_VALUE ---------------\n\t\t\t\tif (orderDTO.getEtaFieldValue() != null)ETA_FIELD_VALUE = orderDTO.getEtaFieldValue();\n\t\t\t\tlabelETA_FIELD_VALUE = new Label(COL_ETA_FIELD_VALUE-1, row, ETA_FIELD_VALUE,cellFormat);\n\t\t\t\tcellETA_FIELD_VALUE = (WritableCell)labelETA_FIELD_VALUE;\n\t\t\t\tsheetToEdit.addCell(cellETA_FIELD_VALUE);\t\t\n\t\t\t\t\n\t\t\t\t//--------------- COL_ETA_STATUS --------------------\n\t\t\t\t\n\t\t\t\t// 2: ETA_SHIPPING_INFO\n\t\t\t\t//shippedDate+trackingNumber+shippingCompany\n\t\t\t\tif (orderDTO.getNotation()!= null && !orderDTO.getNotation().equals(""0"")){\n\t\t\t\t\tint cases=Integer.parseInt(orderDTO.getNotation());\n\t\t\t\t\tSimpleDateFormat sfd=new SimpleDateFormat(""dd/MM/yyyy"");\n\t\t\t\t\tif(cases!=0){\n\t\t\t\t\t\tETA_SHIPPING_INFO=sfd.format(orderDTO.getShippedDate())+""   ""+orderDTO.getTrackingNumber()+""   ""+orderDTO.getShippingCompany();\n\t\t\t\t\t}\n\t\t\t\t\tlabelETA_SHIPPING_INFO = new Label(COL_ETA_SHIPPING_INFO-1, row, ETA_SHIPPING_INFO,cellFormat);\n\t\t\t\t\tcellETA_SHIPPING_INFO = (WritableCell)labelETA_SHIPPING_INFO;\n\t\t\t\t\tsheetToEdit.addCell(cellETA_SHIPPING_INFO);\n\t\t\t\t}else{\n\t\t\t\t\tlabelETA_SHIPPING_INFO = new Label(COL_ETA_SHIPPING_INFO-1, row, """",cellFormat);\n\t\t\t\t\tcellETA_SHIPPING_INFO = (WritableCell)labelETA_SHIPPING_INFO;\n\t\t\t\t\tsheetToEdit.addCell(cellETA_SHIPPING_INFO);\n\t\t\t\t}\n\t\t\t\t//change height row 32px\n\t\t\t\tsheetToEdit.setRowView(row,heightInPoints);\n\t\t\t\t++row;\n\t\t\t}\n\t\t\tworkbookCopy.write();\n\t\t\tworkbookCopy.close();\n\t\t\texistingWorkbook.close();\n\n\t\t} catch (Exception x) {\n\t\t\tx.printStackTrace();\n\t\t}\n\t}\n\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t/**----------------------------------------------------------\n\t *THESE METHODS USED IN CHANGING XLS CELL FORMAT*\n\t  -----------------------------------------------------------*/\n\n\t/*public static WritableCell getWCell(int $colNum, int $rowNum, WritableSheet $writableSheet){\n\t\t return $writableSheet.getWritableCell($colNum, $rowNum);\n\t}\n\n\n\tpublic static boolean isCell(WritableCell $writableCell){\n\t\treturn ($writableCell.getType() == CellType.LABEL) ? true : false;\n\t}\n\n\n\tpublic static WritableCell getValidWritableCell(int $colNum, int $rowNum, WritableSheet $writableSheet) throws RowsExceededException, WriteException{\n\t\tWritableCell cell = getWCell($colNum, $rowNum, $writableSheet);\n\n\t\tif (!isCell(cell)){\n\t\t\t// Cell doesn't exist (well, it's empty), we need to 'add' the cell and re-reference.\n\t\t\t$writableSheet.addCell(new Label($colNum, $rowNum, """")); \n\t\t\tcell = getWCell($colNum, $rowNum, $writableSheet);\n\t\t}\n\n\t\treturn cell;\n\t}*/\n\n\t/**----------------------------------------------------------\n\t *CREATE XLS FILE FROM THE LIST ORDERS*\n\t  -----------------------------------------------------------*/\n\t@Override\n\tpublic void generateInvoicedXLS(List<OrdersDTO> listOrdersDTO,String ordersAdminTemplateFolder,Long  allOrdersSelected){\n\t\tfinal String sheetName = ""Sheet1"";\n\t\tfinal int ROW_TO_BEGIN=1;\n\t\t//COLUMNS NUMBER\n\t\tfinal int COL_PATNER_NAME=2;\n\t\tfinal int COL_INVOICE_NUMBER=3;\n\t\tfinal int COL_QUANTITY=4;\n\t\tfinal int COL_PO_NUMBER=5;\n\t\tfinal int COL_CLIENT_ORDER_NUMBER=6;\n\t\tfinal int COL_CLIENT_OTHER_ID=7;\n\t\tfinal int COL_LS_PRODUCT_ID=8;\n\t\tfinal int COL_CLIENT_PRODUCT_NUMBER=9;\n\t\tfinal int COL_CLIENT_NUMBER=10;\n\t\tfinal int COL_UNIT_PRICE=11;\n\t\tfinal int COL_TRACKING_NUMBER=12;\n\t\tfinal int COL_SHIPPING_PRICE=13;\n\t\tfinal int COL_SHIPED_DATE=14;\n\t\tfinal int COL_SHIPED_PROVINCE=15;\n\n\t\tfinal int COL_FIRST_NAME=16;\n\t\tfinal int COL_LAST_NAME\t=17;\n\t\tfinal int COL_OTHER_NAMES=18;\n\t\tfinal int COL_STREET=19;\n\t\tfinal int COL_OTHER_ADDRESS=20;\t\n\t\tfinal int COL_CITY_CLIENT =21;\n\t\tfinal int COL_PROVINCE=22;\n\t\tfinal int COL_POSTAL_CODE=23;\n\t\tfinal int COL_LS_ORDER_ID=24; \n\n\t\t//Special Handling variables\n\t\tfinal int COL_TOTAL_QUANTITY = 4;\n\t\tfinal int COL_SPECIAL_HANDLING_NAME = 8;\n\t\tfinal int COL_SPECIAL_HANDLING_FEE = 11;\n\n\t\t//Currency\n\t\tfinal int COL_CURRENCY = 25; //Currency SYmbol\n\t\t\n\t\t//COLUMNS Data\n\n\t\tString PATNER_NAME="""";\n\t\tString INVOICE_NUMBER="""";\n\t\tDouble QUANTITY=0D;\n\t\tString PO_NUMBER="""";\n\t\tString CLIENT_ORDER_NUMBER="""";\n\t\tString CLIENT_OTHER_ID="""";\n\t\tString LS_PRODUCT_ID="""";\n\t\tString CLIENT_PRODUCT_NUMBER="""";\n\t\tString CLIENT_NUMBER="""";\n\t\tDouble UNIT_PRICE=0D;\n\t\tString TRACKING_NUMBER="""";\n\t\tDouble SHIPPING_PRICE=0D;\n\t\tDateTime SHIPED_DATE=null;\n\t\tString SHIPED_PROVINCE="""";\n\n\t\tString FIRST_NAME="""";\n\t\tString LAST_NAME="""";\n\t\tString OTHER_NAMES="""";\n\t\tString STREET="""";\n\t\tString OTHER_ADDRESS="""";\t\n\t\tString CITY_CLIENT="""";\n\t\tString PROVINCE="""";\n\t\tString POSTAL_CODE="""";\n\t\tString LS_ORDER_ID="""";\n\n\t\t//Special Handling variables\n\t\tDouble TOTAL_QUANTITY = 0D;\n\t\tString SPECIAL_HANDLING_NAME = """";\n\t\tDouble SPECIAL_HANDLING_FEE = 0D;\n\t\t//Double TOTAL_PRICE = 0D;\n\n\t\t//Currency\n\t\tString CURRENCY="""";\n\t\t\n\t\t// For the empty cells\n\t\tString EMPTY ="""";\n\n\t\tint row = ROW_TO_BEGIN;\n\t\ttry {\n\t\t\tWorkbook existingWorkbook = Workbook.getWorkbook(new File(ordersAdminTemplateFolder+""invoicesTemplate.xls""));\n\t\t\tWritableWorkbook workbookCopy = Workbook.createWorkbook(new File(ordersAdminTemplateFolder+""invoicedOrders.xls""), existingWorkbook);\n\t\t\tWritableSheet sheetToEdit = workbookCopy.getSheet(sheetName);\n\n\t\t\t// Create cell font and format\n\t\t\tWritableFont cellFont = new WritableFont(WritableFont.TIMES, 12);\n\t\t\tcellFont.setColour(Colour.BLACK);\n\t\t\tWritableCellFormat cellFormatOrange = new WritableCellFormat(cellFont);\n\t\t\tcellFormatOrange.setBackground(Colour.LIGHT_ORANGE);\n\t\t\tcellFormatOrange.setVerticalAlignment(VerticalAlignment.CENTRE);\n\t\t\tcellFormatOrange.setAlignment(Alignment.CENTRE);\n\t\t\tcellFormatOrange.setWrap(true);\n\t\t\tcellFormatOrange.setBorder(Border.ALL, BorderLineStyle.THIN);\n\n\t\t\t//WritableFont cellFont = new WritableFont(WritableFont.TIMES, 12);\n\t\t\tcellFont.setColour(Colour.BLACK);\n\t\t\tWritableCellFormat cellFormatWhite = new WritableCellFormat(cellFont);\n\t\t\tcellFormatWhite.setBackground(Colour.WHITE);\n\t\t\tcellFormatWhite.setVerticalAlignment(VerticalAlignment.CENTRE);\n\t\t\tcellFormatWhite.setAlignment(Alignment.CENTRE);\n\t\t\tcellFormatWhite.setWrap(true);\n\t\t\tcellFormatWhite.setBorder(Border.ALL, BorderLineStyle.THIN);\n\n\t\t\tcellFont.setColour(Colour.BLACK);\n\t\t\tWritableCellFormat cellFormatRed = new WritableCellFormat(cellFont);\n\t\t\tcellFormatRed.setBackground(Colour.RED);\n\t\t\tcellFormatRed.setVerticalAlignment(VerticalAlignment.CENTRE);\n\t\t\tcellFormatRed.setAlignment(Alignment.CENTRE);\n\t\t\tcellFormatRed.setWrap(true);\n\t\t\tcellFormatRed.setBorder(Border.ALL, BorderLineStyle.THIN);\n\n\t\t\tWritableCellFormat cellFormat=null;\n\t\t\t//format date:orange color\n\t\t\tDateFormat orangeCustomDateFormat = new DateFormat (""dd/MM/yyyy"");\n\t\t\tWritableCellFormat orangeDateFormat = new WritableCellFormat (orangeCustomDateFormat);\n\t\t\torangeDateFormat.setBackground(Colour.LIGHT_ORANGE);\n\t\t\torangeDateFormat.setVerticalAlignment(VerticalAlignment.CENTRE);\n\t\t\torangeDateFormat.setAlignment(Alignment.CENTRE);\n\t\t\torangeDateFormat.setBorder(Border.ALL, BorderLineStyle.THIN);\n\n\t\t\t//format date:White color\n\t\t\tDateFormat whiteCustomDateFormat = new DateFormat (""dd/MM/yyyy"");\n\t\t\tWritableCellFormat whiteDateFormat = new WritableCellFormat (whiteCustomDateFormat);\n\t\t\twhiteDateFormat.setBackground(Colour.WHITE);\n\t\t\twhiteDateFormat.setVerticalAlignment(VerticalAlignment.CENTRE);\n\t\t\twhiteDateFormat.setAlignment(Alignment.CENTRE);\n\t\t\twhiteDateFormat.setBorder(Border.ALL, BorderLineStyle.THIN);\n\n\t\t\t//format date:Red color\n\t\t\tDateFormat redCustomDateFormat = new DateFormat (""dd/MM/yyyy"");\n\t\t\tWritableCellFormat redDateFormat = new WritableCellFormat (redCustomDateFormat);\n\t\t\tredDateFormat.setBackground(Colour.RED);\n\t\t\tredDateFormat.setVerticalAlignment(VerticalAlignment.CENTRE);\n\t\t\tredDateFormat.setAlignment(Alignment.CENTRE);\n\t\t\tredDateFormat.setBorder(Border.ALL, BorderLineStyle.THIN);\n\n\t\t\tWritableCellFormat cellDateFormat=null;\n\t\t\t//format Number: Orange color\n\t\t\tWritableCellFormat orangeNumberFormat=new WritableCellFormat(new  jxl.write.NumberFormat(""0.00""));\n\t\t\torangeNumberFormat.setBackground(Colour.LIGHT_ORANGE);\n\t\t\torangeNumberFormat.setVerticalAlignment(VerticalAlignment.CENTRE);\n\t\t\torangeNumberFormat.setAlignment(Alignment.CENTRE);\n\t\t\torangeNumberFormat.setBorder(Border.ALL, BorderLineStyle.THIN);\n\n\t\t\t//format Number: White color\n\t\t\tWritableCellFormat whiteNumberFormat=new WritableCellFormat(new  jxl.write.NumberFormat(""0.00""));\n\t\t\twhiteNumberFormat.setBackground(Colour.WHITE);\n\t\t\twhiteNumberFormat.setVerticalAlignment(VerticalAlignment.CENTRE);\n\t\t\twhiteNumberFormat.setAlignment(Alignment.CENTRE);\n\t\t\twhiteNumberFormat.setBorder(Border.ALL, BorderLineStyle.THIN);\n\n\t\t\t//format Number: red color\n\t\t\tWritableCellFormat redNumberFormat=new WritableCellFormat(new  jxl.write.NumberFormat(""0.00""));\n\t\t\tredNumberFormat.setBackground(Colour.RED);\n\t\t\tredNumberFormat.setVerticalAlignment(VerticalAlignment.CENTRE);\n\t\t\tredNumberFormat.setAlignment(Alignment.CENTRE);\n\t\t\tredNumberFormat.setBorder(Border.ALL, BorderLineStyle.THIN);\n\n\t\t\tWritableCellFormat cellNumberFormat=null;\n\t\t\tWritableCellFormat cellShppedDateFormatWhite = new WritableCellFormat(cellFont);\n\t\t\tcellShppedDateFormatWhite.setBackground(Colour.WHITE);\n\t\t\tWritableCellFormat cellShppedDateFormatOrange = new WritableCellFormat(cellFont);\n\t\t\tcellShppedDateFormatOrange.setBackground(Colour.ORANGE);\n\t\t\tWritableCellFormat cellShppedDateFormatRed = new WritableCellFormat(cellFont);\n\t\t\tcellShppedDateFormatRed.setBackground(Colour.RED);\n\n\t\t\tWritableCell cellPATNER_NAME=null;\n\t\t\tWritableCell cellINVOICE_NUMBER=null;\n\t\t\tWritableCell cellQUANTITY=null;\n\t\t\tWritableCell cellPO_NUMBER=null;\n\t\t\tWritableCell cellCLIENT_ORDER_NUMBER=null;\n\t\t\tWritableCell cellCLIENT_OTHER_ID=null;\n\t\t\tWritableCell cellLS_PRODUCT_ID=null;\n\t\t\tWritableCell cellCLIENT_PRODUCT_NUMBER=null;\n\t\t\tWritableCell cellCLIENT_NUMBER=null;\n\t\t\tWritableCell cellUNIT_PRICE=null;\n\t\t\tWritableCell cellTRACKING_NUMBER=null;\n\t\t\tWritableCell cellSHIPPING_PRICE=null;\n\t\t\tWritableCell cellSHIPED_DATE = null;\n\t\t\tWritableCell cellSHIPED_PROVINCE=null;\n\t\t\tWritableCell cellFIRST_NAME=null;\n\t\t\tWritableCell cellLAST_NAME=null;\n\t\t\tWritableCell cellOTHER_NAMES=null;\n\t\t\tWritableCell cellSTREET=null;\n\t\t\tWritableCell cellOTHER_ADDRESS=null;\t\n\t\t\tWritableCell cellCITY_CLIENT=null;\n\t\t\tWritableCell cellPROVINCE=null;\n\t\t\tWritableCell cellPOSTAL_CODE=null;\n\t\t\tWritableCell cellLS_ORDER_ID=null;\n\t\t\t//Special Handling variables\n\t\t\tWritableCell cellTOTAL_QUANTITY = null;\n\t\t\tWritableCell cellSPECIAL_HANDLING_NAME = null;\n\t\t\tWritableCell cellSPECIAL_HANDLING_FEE = null;\n\t\t\t//Currency\n\t\t\tWritableCell cellCURRENCY = null;\n\t\t\n\t\t\t// For the empty cells\n\t\t\tWritableCell cellEMPTY = null;\n\n\t\t\t//LABELS\n\t\t\tLabel labelPATNER_NAME=null;\n\t\t\tLabel labelINVOICE_NUMBER=null;\n\t\t\tLabel labelQUANTITY=null;\n\t\t\tLabel labelPO_NUMBER=null;\n\t\t\tLabel labelCLIENT_ORDER_NUMBER=null;\n\t\t\tLabel labelCLIENT_OTHER_ID=null;\n\t\t\tLabel labelLS_PRODUCT_ID=null;\n\t\t\tLabel labelCLIENT_PRODUCT_NUMBER=null;\n\t\t\tLabel labelCLIENT_NUMBER=null;\n\t\t\tLabel labelUNIT_PRICE=null;\n\t\t\tLabel labelTRACKING_NUMBER=null;\n\t\t\tLabel labelSHIPPING_PRICE=null;\n\t\t\tLabel labelSHIPED_PROVINCE=null;\n\t\t\tLabel labelFIRST_NAME=null;\n\t\t\tLabel labelLAST_NAME=null;\n\t\t\tLabel labelOTHER_NAMES=null;\n\t\t\tLabel labelSTREET=null;\n\t\t\tLabel labelOTHER_ADDRESS=null;\t\n\t\t\tLabel labelCITY_CLIENT=null;\n\t\t\tLabel labelPROVINCE=null;\n\t\t\tLabel labelPOSTAL_CODE=null;\n\t\t\tLabel labelLS_ORDER_ID=null;\n\t\t\t//Special Handling variables\n\t\t\tLabel labelTOTAL_QUANTITY = null;\n\t\t\tLabel labelSPECIAL_HANDLING_NAME = null;\n\t\t\tLabel labelSPECIAL_HANDLING_FEE = null;\n\t\t\t//Currency\n\t\t\tLabel labelCURRENCY = null;\n\t\t\t\n\t\t\t// For the empty cells\n\t\t\tLabel labelEMPTY = null;\n\t\t\tjxl.write.Number number=null;\n\n\t\t\t//START FROM ROW_TO_BEGIN\n\t\t\trow = ROW_TO_BEGIN;\n\t\t\tint orderIndex=0;\n\t\t\tint pair=0;\n\t\t\tLong count=0L;\n\t\t\tString partnerLogin="""";\n\t\t\tboolean userLoginChecked=false;\n\t\t\tUser user=null;\n\t\t\tList<OrdersDTO>listOrdersDTOfiler=new ArrayList<OrdersDTO>();\n\t\t\t//check the first item partner name \n\t\t\tif(listOrdersDTO!=null && listOrdersDTO.size()>0){\n\t\t\t\tOrdersDTO orderDTO=listOrdersDTO.get(0);\n\t\t\t\tpartnerLogin=orderDTO.getUserLogin();\n\t\t\t\tif(partnerLogin==null)partnerLogin="""";\n\t\t\t\tuser=userService.getUserByLogin(partnerLogin);\n\t\t\t\tif(user==null)user=new User();\n\t\t\t}\n\t\t\t//if admin select all orders, select just witch has status progress\n\t\t\tif(allOrdersSelected!=null && allOrdersSelected!=0L){\n\t\t\t\tfor(OrdersDTO ord:listOrdersDTO){\n\t\t\t\t\tif((ord.getRowsList().get(0).getStatus().equals(""shipped"")||ord.getRowsList().get(0).getStatus().equals(""invoiced"")) &&\n\t\t\t\t\t\t\tuser.getLogin().equals(ord.getUserLogin())){\n\t\t\t\t\t\tlistOrdersDTOfiler.add(ord);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//if admin select just some orders to get their cvs Canada post\n\t\t\t} else{\n\t\t\t\tfor(OrdersDTO ord:listOrdersDTO){\n\t\t\t\t\tif((ord.getPrint()!=null && ord.getPrint()==true)&&\n\t\t\t\t\t\t\t(ord.getRowsList().get(0).getStatus()!=null &&\n\t\t\t\t\t\t\t\t\tuser.getLogin().equals(ord.getUserLogin())&&\n\t\t\t\t\t\t\t\t\t(ord.getRowsList().get(0).getStatus().equals(""shipped"")||ord.getRowsList().get(0).getStatus().equals(""invoiced"")))){\n\t\t\t\t\t\tlistOrdersDTOfiler.add(ord);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\t\t\tfor (OrdersDTO orderDTO : listOrdersDTOfiler) {\n\t\t\t\tpartnerLogin=orderDTO.getUserLogin();\n\t\t\t\tif(partnerLogin==null)partnerLogin="""";\n\t\t\t\tuser=userService.getUserByLogin(partnerLogin);\n\t\t\t\tif(user!=null)userLoginChecked=true;\n\t\t\t\tcount = productService.isGroupProductID(orderDTO.getProductId());\n\t\t\t\tif(count>=1){\n\t\t\t\t\tpair= 3;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tpair=orderIndex%2;\n\t\t\t\t\torderIndex++;\n\t\t\t\t}\n\t\t\t\tswitch (pair) {\n\t\t\t\tcase 0:\n\t\t\t\t\tcellFormat=cellFormatWhite;\n\t\t\t\t\tcellDateFormat=whiteDateFormat;\n\t\t\t\t\tcellNumberFormat=whiteNumberFormat;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 1:\n\t\t\t\t\tcellFormat=cellFormatOrange;\n\t\t\t\t\tcellDateFormat=orangeDateFormat;\n\t\t\t\t\tcellNumberFormat=orangeNumberFormat;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tcellFormat=cellFormatRed;\n\t\t\t\t\tcellDateFormat=redDateFormat;\n\t\t\t\t\tcellNumberFormat=redNumberFormat;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tsheetToEdit.setRowView(row, 25*25);\n\n\t\t\t\t//COLUMNS Data\n\t\t\t\tPATNER_NAME="""";\n\t\t\t\tINVOICE_NUMBER="""";\n\t\t\t\tQUANTITY=0D;\n\t\t\t\tPO_NUMBER="""";\n\t\t\t\tCLIENT_ORDER_NUMBER="""";\n\t\t\t\tCLIENT_OTHER_ID="""";\n\t\t\t\tLS_PRODUCT_ID="""";\n\t\t\t\tCLIENT_PRODUCT_NUMBER="""";\n\t\t\t\tCLIENT_NUMBER="""";\n\t\t\t\tUNIT_PRICE=0D;\n\t\t\t\tTRACKING_NUMBER="""";\n\t\t\t\tSHIPPING_PRICE=0D;\n\t\t\t\tSHIPED_DATE=null;\n\t\t\t\tSHIPED_PROVINCE="""";\n\t\t\t\tFIRST_NAME="""";\n\t\t\t\tLAST_NAME="""";\n\t\t\t\tOTHER_NAMES="""";\n\t\t\t\tSTREET="""";\n\t\t\t\tOTHER_ADDRESS="""";\t\n\t\t\t\tCITY_CLIENT="""";\n\t\t\t\tPROVINCE="""";\n\t\t\t\tPOSTAL_CODE="""";\n\t\t\t\tLS_ORDER_ID="""";\n\t\t\t\t\n\t\t\t\t//TOTAL_QUANTITY = 0D;\n\t\t\t\tSPECIAL_HANDLING_NAME = """";\n\t\t\t\tSPECIAL_HANDLING_FEE = 0D;\n\t\t\t\t//TOTAL_PRICE = 0D;\n\t\t\t\tCURRENCY="""";\n\n\t\t\t\t//================== Data Order ==================\n\t\t\t\t//------------------ COL_2: PATNER_NAME ----------\n\t\t\t\tif (orderDTO.getUserLogin()!= null)\tPATNER_NAME = orderDTO.getUserLogin();\n\t\t\t\tlabelPATNER_NAME = new Label(COL_PATNER_NAME-1, row, PATNER_NAME,cellFormat);\n\t\t\t\tcellPATNER_NAME = (WritableCell) labelPATNER_NAME;\n\t\t\t\tsheetToEdit.addCell(cellPATNER_NAME);\n\n\t\t\t\t//------------------ COL_3: INVOICE_NUMBER --------\n\t\t\t\t//Nothing in this column\n\t\t\t\tlabelINVOICE_NUMBER = new Label(COL_INVOICE_NUMBER-1, row, """",cellFormat);\n\t\t\t\tcellINVOICE_NUMBER = (WritableCell) labelINVOICE_NUMBER;\n\t\t\t\tsheetToEdit.addCell(cellINVOICE_NUMBER);\n\n\t\t\t\t//------------------ COL_4: QUANTITY ---------------\n\t\t\t\tif (orderDTO.getQuantity() != null) {\n\t\t\t\t\tQUANTITY = orderDTO.getQuantity();\n\t\t\t\t\tTOTAL_QUANTITY = TOTAL_QUANTITY + QUANTITY;\n\t\t\t\t}\n\t\t\t\tlabelQUANTITY = new Label(COL_QUANTITY-1, row, QUANTITY+"""",cellFormat);\n\t\t\t\tcellQUANTITY = (WritableCell) labelQUANTITY;\n\t\t\t\tsheetToEdit.addCell(cellQUANTITY);\n\n\t\t\t\t//------------------ COL_5: PO_NUMBER ---------------\n\t\t\t\tif (orderDTO.getProductOrderNumber() != null)PO_NUMBER = orderDTO.getProductOrderNumber();\n\t\t\t\tlabelPO_NUMBER = new Label(COL_PO_NUMBER-1, row, PO_NUMBER,cellFormat);\n\t\t\t\tcellPO_NUMBER = (WritableCell) labelPO_NUMBER;\n\t\t\t\tsheetToEdit.addCell(cellPO_NUMBER);\n\n\t\t\t\t//------------------ COL_6: CLIENT_ORDER_NUMBER -----\n\t\t\t\tif (orderDTO.getClientOrderNumber() == null)orderDTO.setClientOrderNumber("""");\n\t\t\t\tCLIENT_ORDER_NUMBER = orderDTO.getClientOrderNumber();\n\t\t\t\tlabelCLIENT_ORDER_NUMBER = new Label(COL_CLIENT_ORDER_NUMBER-1, row, CLIENT_ORDER_NUMBER,cellFormat);\n\t\t\t\tcellCLIENT_ORDER_NUMBER = (WritableCell) labelCLIENT_ORDER_NUMBER;\n\t\t\t\tsheetToEdit.addCell(cellCLIENT_ORDER_NUMBER);\n\n\t\t\t\t//------------------ COL_7: LS_PRODUCT_ID ------------\n\t\t\t\tif (orderDTO.getLsProductID() != null)LS_PRODUCT_ID = orderDTO.getLsProductID();\n\t\t\t\tlabelLS_PRODUCT_ID = new Label(COL_LS_PRODUCT_ID-1, row, LS_PRODUCT_ID,cellFormat);\n\t\t\t\tcellLS_PRODUCT_ID = (WritableCell) labelLS_PRODUCT_ID;\n\t\t\t\tsheetToEdit.addCell(cellLS_PRODUCT_ID);\n\n\t\t\t\t//------------------ COL_8: CLIENT_OTHER_ID -----------\n\t\t\t\tif (orderDTO.getClientOtherId()!= null)\tCLIENT_OTHER_ID = orderDTO.getClientOtherId();\n\t\t\t\tlabelCLIENT_OTHER_ID = new Label(COL_CLIENT_OTHER_ID-1, row, CLIENT_OTHER_ID,cellFormat);\n\t\t\t\tcellCLIENT_OTHER_ID = (WritableCell) labelCLIENT_OTHER_ID;\n\t\t\t\tsheetToEdit.addCell(cellCLIENT_OTHER_ID);\n\n\t\t\t\t//------------------ COL_9: CLIENT_PRODUCT_NUMBER ------\n\t\t\t\tif (orderDTO.getClientProductNumber()!= null)CLIENT_PRODUCT_NUMBER = orderDTO.getClientProductNumber();\n\t\t\t\tlabelCLIENT_PRODUCT_NUMBER = new Label(COL_CLIENT_PRODUCT_NUMBER-1, row, CLIENT_PRODUCT_NUMBER,cellFormat);\n\t\t\t\tcellCLIENT_PRODUCT_NUMBER = (WritableCell) labelCLIENT_PRODUCT_NUMBER;\n\t\t\t\tsheetToEdit.addCell(cellCLIENT_PRODUCT_NUMBER);\n\n\t\t\t\t//------------------ COL_10: CLIENT_NUMBER --------------\n\t\t\t\tif (orderDTO.getClientNumber() != null)CLIENT_NUMBER = orderDTO.getClientNumber();\n\t\t\t\tlabelCLIENT_NUMBER = new Label(COL_CLIENT_NUMBER-1, row, CLIENT_NUMBER,cellFormat);\n\t\t\t\tcellCLIENT_NUMBER = (WritableCell) labelCLIENT_NUMBER;\n\t\t\t\tsheetToEdit.addCell(cellCLIENT_NUMBER);\n\n\t\t\t\t//------------------ COL_11: COL_UNIT_PRICE --------------\n\t\t\t\tString strUNIT_PRICE="""";\n\t\t\t\tif (orderDTO.getUnitPrice() != null) {\n\t\t\t\t\tUNIT_PRICE = orderDTO.getUnitPrice();\n\t\t\t\t\t//Currency\n\t\t\t\t\tif((orderDTO.getCurrencyId()!=null && orderDTO.getCurrencyId()!=1 && orderDTO.getCurrencyRate()!=null)) {\n\t\t\t\t\t\tUNIT_PRICE = UNIT_PRICE*orderDTO.getCurrencyRate();\n\t\t\t\t\t\tUNIT_PRICE = (double) Math.round(UNIT_PRICE*100)/100;\n\t\t\t\t\t}\n\t\t\t\t\t//TOTAL_PRICE = TOTAL_PRICE + UNIT_PRICE*TOTAL_QUANTITY; \n\t\t\t\t\tstrUNIT_PRICE = UNIT_PRICE+"""";\n\t\t\t\t\tstrUNIT_PRICE=strUNIT_PRICE.replaceAll("" "", """");\n\t\t\t\t\tif(strUNIT_PRICE!=null && !strUNIT_PRICE.equals("""")){\n\t\t\t\t\t\tint index=strUNIT_PRICE.indexOf("","");\n\t\t\t\t\t\tif(index<0)index=strUNIT_PRICE.indexOf(""."");\n\t\t\t\t\t\tif(index>=0){\n\t\t\t\t\t\t\tString strUNIT_PRICE1=strUNIT_PRICE.substring(0, index);\n\t\t\t\t\t\t\tString strUNIT_PRICE2= strUNIT_PRICE.substring(index+1, strUNIT_PRICE.length());\n\t\t\t\t\t\t\tstrUNIT_PRICE=strUNIT_PRICE1+"".""+strUNIT_PRICE2;\n\t\t\t\t\t\t\tif(strUNIT_PRICE2!=null){\n\t\t\t\t\t\t\t\tif(strUNIT_PRICE2.length()<=1)strUNIT_PRICE=strUNIT_PRICE+""0"";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlabelUNIT_PRICE = new Label(COL_UNIT_PRICE-1, row, strUNIT_PRICE,cellFormat);\n\t\t\t\tcellUNIT_PRICE = (WritableCell) labelUNIT_PRICE;\n\t\t\t\tsheetToEdit.addCell(cellUNIT_PRICE);\n\n\t\t\t\t//------------------ COL_12: TRACKING_NUMBER ------------\n\t\t\t\tlabelTRACKING_NUMBER = new Label(COL_TRACKING_NUMBER-1, row, """",cellFormat);\n\t\t\t\tcellTRACKING_NUMBER = (WritableCell) labelTRACKING_NUMBER;\n\t\t\t\tsheetToEdit.addCell(cellTRACKING_NUMBER);\n\n\t\t\t\t//------------------ COL_13: cellSHIPPING_PRICE ---------\n\t\t\t\tlabelSHIPPING_PRICE = new Label(COL_SHIPPING_PRICE-1, row, """",cellFormat);\n\t\t\t\tcellSHIPPING_PRICE = (WritableCell) labelSHIPPING_PRICE;\n\t\t\t\tsheetToEdit.addCell(cellSHIPPING_PRICE);\n\n\t\t\t\t//------------------ COL_14: SHIPED_DATE ----------------\n\t\t\t\tif(orderDTO.getShippedDate()!=null){\n\t\t\t\t\tSHIPED_DATE = new DateTime(COL_SHIPED_DATE-1, row, orderDTO.getShippedDate(),cellDateFormat);\n\t\t\t\t\tsheetToEdit.addCell(SHIPED_DATE);\n\t\t\t\t}\n\n\t\t\t\t//------------------ COL_15: SHIPED_PROVINCE ------------\n\t\t\t\tif (orderDTO.getClientProvince()!= null) {\n\t\t\t\t\tString code=orderDTO.getClientProvince();\n\t\t\t\t\tProvinceDTO provinceDTO=productService.getProvinceByCode(code);\n\t\t\t\t\tSHIPED_PROVINCE = provinceDTO.getTaxe();\n\t\t\t\t}\n\t\t\t\tlabelSHIPED_PROVINCE = new Label(COL_SHIPED_PROVINCE-1, row, SHIPED_PROVINCE,cellFormat);\n\t\t\t\tcellSHIPED_PROVINCE = (WritableCell) labelSHIPED_PROVINCE;\n\t\t\t\tsheetToEdit.addCell(cellSHIPED_PROVINCE);\n\n\t\t\t\t//------------------ COL_16: COL_FIRST_NAME -----------------\n\t\t\t\tif (orderDTO.getClientFirstName() != null)FIRST_NAME = orderDTO.getClientFirstName();\n\t\t\t\tlabelFIRST_NAME = new Label(COL_FIRST_NAME-1, row, FIRST_NAME,cellFormat);\n\t\t\t\tcellFIRST_NAME = (WritableCell) labelFIRST_NAME;\n\t\t\t\tsheetToEdit.addCell(cellFIRST_NAME);\n\n\t\t\t\t//------------------ COL_17: COL_LAST_NAME ------------------\n\t\t\t\tif (orderDTO.getClientLastName() != null)LAST_NAME = orderDTO.getClientLastName();\n\t\t\t\tlabelLAST_NAME = new Label(COL_LAST_NAME-1, row, LAST_NAME,cellFormat);\n\t\t\t\tcellLAST_NAME = (WritableCell) labelLAST_NAME;\n\t\t\t\tsheetToEdit.addCell(cellLAST_NAME);\n\n\t\t\t\t//------------------ COL_18: COL_OTHER_NAMES -----------------\n\t\t\t\tif (orderDTO.getClientOtherNames() != null)OTHER_NAMES = orderDTO.getClientOtherNames();\n\t\t\t\tlabelOTHER_NAMES = new Label(COL_OTHER_NAMES-1, row, OTHER_NAMES,cellFormat);\n\t\t\t\tcellOTHER_NAMES = (WritableCell) labelOTHER_NAMES;\n\t\t\t\tsheetToEdit.addCell(cellOTHER_NAMES);\n\n\t\t\t\t//------------------ COL_19: COL_STREET ----------------------\n\t\t\t\tif (orderDTO.getClientStreet()!= null)STREET = orderDTO.getClientStreet();\n\t\t\t\tlabelSTREET = new Label(COL_STREET-1, row, STREET,cellFormat);\n\t\t\t\tcellSTREET = (WritableCell) labelSTREET;\n\t\t\t\tsheetToEdit.addCell(cellSTREET);\n\n\t\t\t\t//------------------ COL_20: COL_OTHER_ADDRESS ---------------\n\t\t\t\tif (orderDTO.getClientOtherStreet()!= null)OTHER_ADDRESS = orderDTO.getClientOtherStreet();\n\t\t\t\tlabelOTHER_ADDRESS = new Label(COL_OTHER_ADDRESS-1, row, OTHER_ADDRESS,cellFormat);\n\t\t\t\tcellOTHER_ADDRESS = (WritableCell) labelOTHER_ADDRESS;\n\t\t\t\tsheetToEdit.addCell(cellOTHER_ADDRESS);\n\n\t\t\t\t//------------------ COL_21: COL_CITY_CLIENT -----------------\n\t\t\t\tif (orderDTO.getClientCity()!= null)CITY_CLIENT = orderDTO.getClientCity();\n\t\t\t\tlabelCITY_CLIENT = new Label(COL_CITY_CLIENT-1, row, CITY_CLIENT,cellFormat);\n\t\t\t\tcellCITY_CLIENT = (WritableCell) labelCITY_CLIENT;\n\t\t\t\tsheetToEdit.addCell(cellCITY_CLIENT);\n\n\t\t\t\t//------------------ COL_22: COL_PROVINCE --------------------\n\t\t\t\tif (orderDTO.getClientProvince()!= null)PROVINCE = orderDTO.getClientProvince();\n\t\t\t\tlabelPROVINCE = new Label(COL_PROVINCE-1, row, PROVINCE,cellFormat);\n\t\t\t\tcellPROVINCE = (WritableCell) labelPROVINCE;\n\t\t\t\tsheetToEdit.addCell(cellPROVINCE);\n\n\t\t\t\t//------------------ COL_23: COL_POSTAL_CODE -----------------\n\t\t\t\tif (orderDTO.getClientPostalCode()!= null)POSTAL_CODE = orderDTO.getClientPostalCode();\n\t\t\t\tlabelPOSTAL_CODE = new Label(COL_POSTAL_CODE-1, row, POSTAL_CODE,cellFormat);\n\t\t\t\tcellPOSTAL_CODE = (WritableCell) labelPOSTAL_CODE;\n\t\t\t\tsheetToEdit.addCell(cellPOSTAL_CODE);\n\n\t\t\t\t//------------------ COL_24: COL_LS_ORDER_ID -----------------\n\t\t\t\tif (orderDTO.getLsOrderId()!= null)LS_ORDER_ID = orderDTO.getLsOrderId();\n\t\t\t\tlabelLS_ORDER_ID = new Label(COL_LS_ORDER_ID-1, row, LS_ORDER_ID,cellFormat);\n\t\t\t\tcellLS_ORDER_ID = (WritableCell) labelLS_ORDER_ID;\n\t\t\t\tsheetToEdit.addCell(cellLS_ORDER_ID);\n\t\t\t\t\n\t\t\t\t//------------------ COL_25: CURRENCY --------\n\t\t\t\tif(orderDTO.getCurrencyId()!=null && orderDTO.getCurrencySymbol()!=null) {\n\t\t\t\t\tCURRENCY = orderDTO.getCurrencySymbol();\n\t\t\t\t}\n\t\t\t\tlabelCURRENCY = new Label(COL_CURRENCY-1, row, CURRENCY,cellFormat);\n\t\t\t\tcellCURRENCY = (WritableCell) labelCURRENCY;\n\t\t\t\tsheetToEdit.addCell(cellCURRENCY);\n\n\t\t\t\trow++;\n\t\t\t\tsheetToEdit.setRowView(row, 25*25);\n\n\t\t\t\t//================== Data SHIPPING ======================\n\t\t\t\t//------------------ COL_2: PATNER_NAME -----------------\n\t\t\t\tif (orderDTO.getUserLogin()!= null) {\n\t\t\t\t\tPATNER_NAME = orderDTO.getUserLogin();\n\t\t\t\t\tlabelPATNER_NAME = new Label(COL_PATNER_NAME-1, row, PATNER_NAME,cellFormat);\n\t\t\t\t\tcellPATNER_NAME = (WritableCell) labelPATNER_NAME;\n\t\t\t\t\tsheetToEdit.addCell(cellPATNER_NAME);\n\t\t\t\t}\n\n\t\t\t\t//------------------ COL_3: INVOICE_NUMBER --------------\n\t\t\t\tlabelINVOICE_NUMBER = new Label(COL_INVOICE_NUMBER-1, row, """",cellFormat);\n\t\t\t\tcellINVOICE_NUMBER = (WritableCell) labelINVOICE_NUMBER;\n\t\t\t\tsheetToEdit.addCell(cellINVOICE_NUMBER);\n\n\t\t\t\t//------------------ COL_4: QUANTITY --------------------\n\t\t\t\tString strQty = ""1"";\n\t\t\t\tlabelQUANTITY = new Label(COL_QUANTITY-1, row, strQty,cellFormat);\n\t\t\t\tcellQUANTITY = (WritableCell) labelQUANTITY;\n\t\t\t\tsheetToEdit.addCell(cellQUANTITY);\n\n\t\t\t\t//------------------ COL_5: PO_NUMBER --------------------\n\t\t\t\tlabelPO_NUMBER = new Label(COL_PO_NUMBER-1, row, """",cellFormat);\n\t\t\t\tcellPO_NUMBER = (WritableCell) labelPO_NUMBER;\n\t\t\t\tsheetToEdit.addCell(cellPO_NUMBER);\n\n\t\t\t\t//------------------ COL_6: CLIENT_ORDER_NUMBER -----------\n\t\t\t\tlabelCLIENT_ORDER_NUMBER = new Label(COL_CLIENT_ORDER_NUMBER-1, row, """",cellFormat);\n\t\t\t\tcellCLIENT_ORDER_NUMBER = (WritableCell) labelCLIENT_ORDER_NUMBER;\n\t\t\t\tsheetToEdit.addCell(cellCLIENT_ORDER_NUMBER);\n\n\t\t\t\t//------------------ COL_7: LS_PRODUCT_ID ------------------\n\t\t\t\tlabelLS_PRODUCT_ID = new Label(COL_LS_PRODUCT_ID-1, row, ""SHIPPING"",cellFormat);\n\t\t\t\tcellLS_PRODUCT_ID = (WritableCell) labelLS_PRODUCT_ID;\n\t\t\t\tsheetToEdit.addCell(cellLS_PRODUCT_ID);\n\n\t\t\t\t//------------------ COL_8: CLIENT_OTHER_ID -----------------\n\t\t\t\tlabelCLIENT_OTHER_ID = new Label(COL_CLIENT_OTHER_ID-1, row, """",cellFormat);\n\t\t\t\tcellCLIENT_OTHER_ID = (WritableCell) labelCLIENT_OTHER_ID;\n\t\t\t\tsheetToEdit.addCell(cellCLIENT_OTHER_ID);\n\n\t\t\t\t//------------------ COL_9: CLIENT_PRODUCT_NUMBER -------------\n\t\t\t\tlabelCLIENT_PRODUCT_NUMBER = new Label(COL_CLIENT_PRODUCT_NUMBER-1, row, CLIENT_PRODUCT_NUMBER,cellFormat);\n\t\t\t\tcellCLIENT_PRODUCT_NUMBER = (WritableCell) labelCLIENT_PRODUCT_NUMBER;\n\t\t\t\tsheetToEdit.addCell(cellCLIENT_PRODUCT_NUMBER);\n\t\t\t\t\n\t\t\t\t//------------------ COL_10: CLIENT_NUMBER ---------------------\n\t\t\t\tlabelCLIENT_NUMBER = new Label(COL_CLIENT_NUMBER-1, row, """",cellFormat);\n\t\t\t\tcellCLIENT_NUMBER = (WritableCell) labelCLIENT_NUMBER;\n\t\t\t\tsheetToEdit.addCell(cellCLIENT_NUMBER);\n\n\t\t\t\t// COL_11: COL_UNIT_PRICE\n\t\t\t\tlabelUNIT_PRICE = new Label(COL_UNIT_PRICE-1, row, """",cellFormat);\n\t\t\t\tcellUNIT_PRICE = (WritableCell) labelUNIT_PRICE;\n\t\t\t\tsheetToEdit.addCell(cellUNIT_PRICE);\n\n\t\t\t\t//------------------ COL_12: TRACKING_NUMBER --------------------\n\t\t\t\tif (orderDTO.getTrackingNumber()!= null) {\n\t\t\t\t\tTRACKING_NUMBER = orderDTO.getTrackingNumber();\n\t\t\t\t\tlabelTRACKING_NUMBER = new Label(COL_TRACKING_NUMBER-1, row, TRACKING_NUMBER,cellFormat);\n\t\t\t\t\tcellTRACKING_NUMBER = (WritableCell) labelTRACKING_NUMBER;\n\t\t\t\t\tsheetToEdit.addCell(cellTRACKING_NUMBER);\n\t\t\t\t}\n\n\t\t\t\t//------------------ COL_13: cellSHIPPING_PRICE ------------------\n\t\t\t\tif (orderDTO.getShippingPrice() != null) {\n\t\t\t\t\tSHIPPING_PRICE = orderDTO.getShippingPrice();\n\t\t\t\t\t//SHIPPING_PRICE = (orderDTO.getCurrencyId()!=null && orderDTO.getCurrencyId()!=1 && orderDTO.getCurrencyRate()!=null ? SHIPPING_PRICE*orderDTO.getCurrencyRate() : SHIPPING_PRICE);\n\t\t\t\t\t//Add Shipping Insurance Multiplier\n\t\t\t\t\tif(orderDTO.getShippingInsuranceMultiplier()==null) {//new = insert into invoicing_orders\n\t\t\t\t\t\tif(user!=null && UNIT_PRICE!=null){\n\t\t\t\t\t\t\tif(user.getShippingInsuranceMultiplier()!=null) {\n\t\t\t\t\t\t\t\tSHIPPING_PRICE=SHIPPING_PRICE + UNIT_PRICE*QUANTITY*(user.getShippingInsuranceMultiplier()/100);\n\t\t\t\t\t\t\t\torderDTO.setShippingInsuranceMultiplier(user.getShippingInsuranceMultiplier());\n\t\t\t\t\t\t\t} else orderDTO.setShippingInsuranceMultiplier(0D);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {//old = already exists in invoicing_orders\n\t\t\t\t\t\tSHIPPING_PRICE = SHIPPING_PRICE + UNIT_PRICE*QUANTITY*(orderDTO.getShippingInsuranceMultiplier()/100);\n\t\t\t\t\t}\n\n\t\t\t\t\t//Add Shipping Multiplier\n\t\t\t\t\tif(user.getMultiplier()!=null) {\n\t\t\t\t\t\tDouble multiplier=Double.parseDouble(user.getMultiplier());\n\t\t\t\t\t\tSHIPPING_PRICE=SHIPPING_PRICE*(1+multiplier/100);\n\t\t\t\t\t}\n\n\t\t\t\t\t//if user has a special shipping\n\t\t\t\t\tOrdersSpecialShippingDTO ordSpecialShipDTO=new OrdersSpecialShippingDTO();\n\t\t\t\t\tordSpecialShipDTO.setProductId(orderDTO.getProductId());\n\t\t\t\t\tordSpecialShipDTO.setUserId(orderDTO.getUserId());\n\t\t\t\t\tOrdersSpecialShippingDTO OrdSpecialShip=getOrderSpecialShipping(ordSpecialShipDTO);\n\t\t\t\t\tif(OrdSpecialShip!=null){\n\t\t\t\t\t\tSHIPPING_PRICE=orderDTO.getShippingPrice();\n\t\t\t\t\t\t//SHIPPING_PRICE = (orderDTO.getCurrencyId()!=null && orderDTO.getCurrencyId()!=1 && orderDTO.getCurrencyRate()!=null ? SHIPPING_PRICE*orderDTO.getCurrencyRate() : SHIPPING_PRICE);\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\tSHIPPING_PRICE = (double) Math.round(SHIPPING_PRICE * 100) / 100;\n\t\t\t\t\tString strSHIPPING_PRICE=SHIPPING_PRICE+"""";\n\t\t\t\t\tlabelSHIPPING_PRICE = new Label(COL_SHIPPING_PRICE-1, row, strSHIPPING_PRICE,cellFormat);\n\t\t\t\t\tcellSHIPPING_PRICE = (WritableCell) labelSHIPPING_PRICE;\n\t\t\t\t\tsheetToEdit.addCell(cellSHIPPING_PRICE);\n\t\t\t\t}\n\n\t\t\t\t//------------------ COL_14: SHIPED_DATE --------------------------\n\t\t\t\tif(orderDTO.getShippedDate()!=null){\n\t\t\t\t\tSHIPED_DATE = new DateTime(COL_SHIPED_DATE-1, row, orderDTO.getShippedDate(),cellDateFormat);\n\t\t\t\t\tsheetToEdit.addCell(SHIPED_DATE);\n\t\t\t\t}\n\n\t\t\t\t//------------------ COL_15: SHIPED_PROVINCE ----------------------\n\t\t\t\tif (orderDTO.getClientProvince()!= null) {\n\t\t\t\t\tString code=orderDTO.getClientProvince();\n\t\t\t\t\tProvinceDTO provinceDTO=productService.getProvinceByCode(code);\n\t\t\t\t\tSHIPED_PROVINCE = provinceDTO.getTaxe();\n\t\t\t\t\tlabelSHIPED_PROVINCE = new Label(COL_SHIPED_PROVINCE-1, row, SHIPED_PROVINCE,cellFormat);\n\t\t\t\t\tcellSHIPED_PROVINCE = (WritableCell) labelSHIPED_PROVINCE;\n\t\t\t\t\tsheetToEdit.addCell(cellSHIPED_PROVINCE);\n\t\t\t\t}\n\n\t\t\t\t//------------------ COL_16: COL_FIRST_NAME -----------------\n\t\t\t\tlabelFIRST_NAME = new Label(COL_FIRST_NAME-1, row, """",cellFormat);\n\t\t\t\tcellFIRST_NAME = (WritableCell) labelFIRST_NAME;\n\t\t\t\tsheetToEdit.addCell(cellFIRST_NAME);\n\n\t\t\t\t//------------------ COL_17: COL_LAST_NAME ------------------\n\t\t\t\tlabelLAST_NAME = new Label(COL_LAST_NAME-1, row, """",cellFormat);\n\t\t\t\tcellLAST_NAME = (WritableCell) labelLAST_NAME;\n\t\t\t\tsheetToEdit.addCell(cellLAST_NAME);\n\n\t\t\t\t//------------------ COL_18: COL_OTHER_NAMES -----------------\n\t\t\t\tlabelOTHER_NAMES = new Label(COL_OTHER_NAMES-1, row, """",cellFormat);\n\t\t\t\tcellOTHER_NAMES = (WritableCell) labelOTHER_NAMES;\n\t\t\t\tsheetToEdit.addCell(cellOTHER_NAMES);\n\n\t\t\t\t//------------------ COL_19: COL_STREET ----------------------\n\t\t\t\tlabelSTREET = new Label(COL_STREET-1, row, """",cellFormat);\n\t\t\t\tcellSTREET = (WritableCell) labelSTREET;\n\t\t\t\tsheetToEdit.addCell(cellSTREET);\n\n\t\t\t\t//------------------ COL_20: COL_OTHER_ADDRESS ---------------\n\t\t\t\tlabelOTHER_ADDRESS = new Label(COL_OTHER_ADDRESS-1, row, """",cellFormat);\n\t\t\t\tcellOTHER_ADDRESS = (WritableCell) labelOTHER_ADDRESS;\n\t\t\t\tsheetToEdit.addCell(cellOTHER_ADDRESS);\n\n\t\t\t\t//------------------ COL_21: COL_CITY_CLIENT -----------------\n\t\t\t\tlabelCITY_CLIENT = new Label(COL_CITY_CLIENT-1, row, """",cellFormat);\n\t\t\t\tcellCITY_CLIENT = (WritableCell) labelCITY_CLIENT;\n\t\t\t\tsheetToEdit.addCell(cellCITY_CLIENT);\n\n\t\t\t\t//------------------ COL_22: COL_PROVINCE --------------------\n\t\t\t\tlabelPROVINCE = new Label(COL_PROVINCE-1, row, """",cellFormat);\n\t\t\t\tcellPROVINCE = (WritableCell) labelPROVINCE;\n\t\t\t\tsheetToEdit.addCell(cellPROVINCE);\n\n\t\t\t\t//------------------ COL_23: COL_POSTAL_CODE -----------------\n\t\t\t\tlabelPOSTAL_CODE = new Label(COL_POSTAL_CODE-1, row, """",cellFormat);\n\t\t\t\tcellPOSTAL_CODE = (WritableCell) labelPOSTAL_CODE;\n\t\t\t\tsheetToEdit.addCell(cellPOSTAL_CODE);\n\n\t\t\t\t//------------------ COL_24: COL_LS_ORDER_ID-----------------\n\t\t\t\tlabelLS_ORDER_ID = new Label(COL_LS_ORDER_ID-1, row, """",cellFormat);\n\t\t\t\tcellLS_ORDER_ID = (WritableCell) labelLS_ORDER_ID;\n\t\t\t\tsheetToEdit.addCell(cellLS_ORDER_ID);\n\t\t\t\t\n\t\t\t\t//------------------ COL_25: COL_CURRENCY-----------------\n\t\t\t\tlabelCURRENCY = new Label(COL_CURRENCY-1, row, """",cellFormat);\n\t\t\t\tcellCURRENCY = (WritableCell) labelCURRENCY;\n\t\t\t\tsheetToEdit.addCell(cellCURRENCY);\n\n\t\t\t\t//Special handling calculation\n\t\t\t\tif(user!=null){\n\t\t\t\t\tDouble totalPrice=null;\n\t\t\t\t\torderDTO.setSpecialHandlingName(user.getSpecialHandlingName());\n\t\t\t\t\torderDTO.setSpecialHandlingFee(user.getSpecialHandlingFee());\n\t\t\t\t\tif(orderDTO.getRowsList().get(0).getQuantity()!=null && orderDTO.getRowsList().get(0).getUnitPrice()!=null){\n\t\t\t\t\t\ttotalPrice=orderDTO.getRowsList().get(0).getQuantity()*orderDTO.getRowsList().get(0).getUnitPrice();\n\t\t\t\t\t\t//Currency\n\t\t\t\t\t\tif(totalPrice!=null && orderDTO.getCurrencyId()!=null && orderDTO.getCurrencyId()!=1 && orderDTO.getCurrencyRate()!=null) {\n\t\t\t\t\t\t\ttotalPrice = totalPrice*orderDTO.getCurrencyRate();\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttotalPrice = (double) Math.round(totalPrice * 100) / 100;\n\t\t\t\t\t}\n\t\t\t\t\torderDTO.setTotalPrice(totalPrice);\n\t\t\t\t}\n\t\t\t\tinsertInvoicedOrder(orderDTO);\n\t\t\t\t++row;\n\t\t\t}\n\n\t\t\t//Add special handling row\n\t\t\tif(user!=null){\n\t\t\t\tSPECIAL_HANDLING_NAME =user.getSpecialHandlingName();\n\t\t\t\tSPECIAL_HANDLING_FEE = user.getSpecialHandlingFee();\n\t\t\t}\n\t\t\tif(listOrdersDTOfiler!=null && listOrdersDTOfiler.size()>0){\n\t\t\t\t// row empty\n\t\t\t\tcellFont = new WritableFont(WritableFont.TIMES, 12);\n\t\t\t\tcellFont.setColour(Colour.BLACK);\n\t\t\t\tcellFormat = new WritableCellFormat(cellFont);\n\t\t\t\tcellFormat.setBackground(Colour.GREY_25_PERCENT);\n\t\t\t\tcellFormat.setVerticalAlignment(VerticalAlignment.CENTRE);\n\t\t\t\tcellFormat.setAlignment(Alignment.CENTRE);\n\t\t\t\tcellFormat.setWrap(true);\n\t\t\t\tcellFormat.setBorder(Border.ALL, BorderLineStyle.THIN,Colour.BLACK);\n\t\t\t\tsheetToEdit.setRowView(row, 25*25);\n\t\t\t\tfor (int i=2; i<=25; i++) { \n\t\t\t\t\tEMPTY="""";\n\t\t\t\t\tlabelEMPTY = new Label(i-1, row, EMPTY,cellFormat);\n\t\t\t\t\tcellEMPTY = (WritableCell) labelEMPTY;\n\t\t\t\t\tsheetToEdit.addCell(cellEMPTY);\n\t\t\t\t}\n\n\t\t\t\tcellFont = new WritableFont(WritableFont.TIMES, 12);\n\t\t\t\tcellFont.setColour(Colour.BLACK);\n\t\t\t\tcellFormat = new WritableCellFormat(cellFont);\n\t\t\t\tcellFormat.setBackground(Colour.VERY_LIGHT_YELLOW);\n\t\t\t\tcellFormat.setVerticalAlignment(VerticalAlignment.CENTRE);\n\t\t\t\tcellFormat.setAlignment(Alignment.CENTRE);\n\t\t\t\tcellFormat.setWrap(true);\n\t\t\t\tcellFormat.setBorder(Border.ALL, BorderLineStyle.THIN,Colour.BLUE);\n\n\t\t\t\trow++;\n\t\t\t\tsheetToEdit.setRowView(row, 25*25);\n\t\t\t\t//------------------ COL_2: PARTNER_NAME --------------\n\t\t\t\tPATNER_NAME="""";\n\t\t\t\tif (user!= null) {\n\t\t\t\t\tPATNER_NAME = user.getLogin();\n\t\t\t\t\tlabelPATNER_NAME = new Label(COL_PATNER_NAME-1, row, PATNER_NAME,cellFormat);\n\t\t\t\t\tcellPATNER_NAME = (WritableCell) labelPATNER_NAME;\n\t\t\t\t\tsheetToEdit.addCell(cellPATNER_NAME);\n\t\t\t\t}\n\n\t\t\t\t//------------------ COL_3: INVOICE_NUMBER --------------\n\t\t\t\tlabelINVOICE_NUMBER = new Label(COL_INVOICE_NUMBER-1, row, """",cellFormat);\n\t\t\t\tcellINVOICE_NUMBER = (WritableCell) labelINVOICE_NUMBER;\n\t\t\t\tsheetToEdit.addCell(cellINVOICE_NUMBER);\n\n\t\t\t\t//------------------ COL_4: TOTAL_QUANTITY --------------------\n\t\t\t\tlabelTOTAL_QUANTITY = new Label(COL_TOTAL_QUANTITY-1, row, TOTAL_QUANTITY + """", cellFormat);\n\t\t\t\tcellTOTAL_QUANTITY = (WritableCell) labelTOTAL_QUANTITY;\n\t\t\t\tsheetToEdit.addCell(cellTOTAL_QUANTITY);\n\n\t\t\t\t//------------------ COL_5: PO_NUMBER --------------------\n\t\t\t\tlabelPO_NUMBER = new Label(COL_PO_NUMBER-1, row, """",cellFormat);\n\t\t\t\tcellPO_NUMBER = (WritableCell) labelPO_NUMBER;\n\t\t\t\tsheetToEdit.addCell(cellPO_NUMBER);\n\n\t\t\t\t//------------------ COL_6: CLIENT_ORDER_NUMBER -----------\n\t\t\t\tlabelCLIENT_ORDER_NUMBER = new Label(COL_CLIENT_ORDER_NUMBER-1, row, """",cellFormat);\n\t\t\t\tcellCLIENT_ORDER_NUMBER = (WritableCell) labelCLIENT_ORDER_NUMBER;\n\t\t\t\tsheetToEdit.addCell(cellCLIENT_ORDER_NUMBER);\n\n\t\t\t\t//------------------ COL_7: SPECIAL_HANDLING_NAME ------------------\n\t\t\t\tif(SPECIAL_HANDLING_NAME==null)SPECIAL_HANDLING_NAME="""";\t\n\t\t\t\tlabelSPECIAL_HANDLING_NAME = new Label(COL_SPECIAL_HANDLING_NAME-1, row, SPECIAL_HANDLING_NAME,cellFormat);\n\t\t\t\tcellSPECIAL_HANDLING_NAME = (WritableCell) labelSPECIAL_HANDLING_NAME;\n\t\t\t\tsheetToEdit.addCell(cellSPECIAL_HANDLING_NAME);\n\n\t\t\t\t//------------------ COL_8: CLIENT_OTHER_ID -----------------\n\t\t\t\tlabelCLIENT_OTHER_ID = new Label(COL_CLIENT_OTHER_ID-1, row, """",cellFormat);\n\t\t\t\tcellCLIENT_OTHER_ID = (WritableCell) labelCLIENT_OTHER_ID;\n\t\t\t\tsheetToEdit.addCell(cellCLIENT_OTHER_ID);\n\n\t\t\t\t//------------------ COL_9: CLIENT_PRODUCT_NUMBER -------------\n\t\t\t\tlabelCLIENT_PRODUCT_NUMBER = new Label(COL_CLIENT_PRODUCT_NUMBER-1, row, """",cellFormat);\n\t\t\t\tcellCLIENT_PRODUCT_NUMBER = (WritableCell) labelCLIENT_PRODUCT_NUMBER;\n\t\t\t\tsheetToEdit.addCell(cellCLIENT_PRODUCT_NUMBER);\n\n\t\t\t\t//------------------ COL_10: CLIENT_NUMBER ---------------------\n\t\t\t\tlabelCLIENT_NUMBER = new Label(COL_CLIENT_NUMBER-1, row, """",cellFormat);\n\t\t\t\tcellCLIENT_NUMBER = (WritableCell) labelCLIENT_NUMBER;\n\t\t\t\tsheetToEdit.addCell(cellCLIENT_NUMBER);\n\n\t\t\t\t//------------------ COL_11: COL_UNIT_PRICE --------------\n\t\t\t\tString strSPECIAL_HANDLING_FEE="""";\n\t\t\t\tif (SPECIAL_HANDLING_FEE!= null)strSPECIAL_HANDLING_FEE=SPECIAL_HANDLING_FEE+"""";\n\t\t\t\tlabelUNIT_PRICE = new Label(COL_UNIT_PRICE-1, row, strSPECIAL_HANDLING_FEE,cellFormat);\n\t\t\t\tcellUNIT_PRICE = (WritableCell) labelUNIT_PRICE;\n\t\t\t\tsheetToEdit.addCell(cellUNIT_PRICE);\n\n\t\t\t\t//------------------ COL_12: TRACKING_NUMBER --------------------\n\t\t\t\tlabelTRACKING_NUMBER = new Label(COL_TRACKING_NUMBER-1, row, """",cellFormat);\n\t\t\t\tcellTRACKING_NUMBER = (WritableCell) labelTRACKING_NUMBER;\n\t\t\t\tsheetToEdit.addCell(cellTRACKING_NUMBER);\n\n\t\t\t\t//------------------ COL_13: cellSHIPPING_PRICE ------------------\n\t\t\t\tlabelSHIPPING_PRICE = new Label(COL_SHIPPING_PRICE-1, row, """",cellFormat);\n\t\t\t\tcellSHIPPING_PRICE = (WritableCell) labelSHIPPING_PRICE;\n\t\t\t\tsheetToEdit.addCell(cellSHIPPING_PRICE);\n\n\t\t\t\t//------------------ COL_14: SHIPED_DATE --------------------------\n\t\t\t\tlabelSHIPED_PROVINCE = new Label(COL_SHIPED_DATE-1, row, """",cellFormat);\n\t\t\t\tcellSHIPED_PROVINCE = (WritableCell) labelSHIPED_PROVINCE;\n\t\t\t\tsheetToEdit.addCell(cellSHIPED_PROVINCE);\n\n\t\t\t\t//------------------ COL_15: SHIPED_PROVINCE ----------------------\n\t\t\t\tSHIPED_PROVINCE = ""S13"";\n\t\t\t\tlabelSHIPED_PROVINCE = new Label(COL_SHIPED_PROVINCE-1, row, SHIPED_PROVINCE,cellFormat);\n\t\t\t\tcellSHIPED_PROVINCE = (WritableCell) labelSHIPED_PROVINCE;\n\t\t\t\tsheetToEdit.addCell(cellSHIPED_PROVINCE);\n\n\t\t\t\t//------------------ COL_16: COL_FIRST_NAME -----------------\n\t\t\t\tlabelFIRST_NAME = new Label(COL_FIRST_NAME-1, row, """",cellFormat);\n\t\t\t\tcellFIRST_NAME = (WritableCell) labelFIRST_NAME;\n\t\t\t\tsheetToEdit.addCell(cellFIRST_NAME);\n\n\t\t\t\t//------------------ COL_17: COL_LAST_NAME ------------------\n\t\t\t\tlabelLAST_NAME = new Label(COL_LAST_NAME-1, row, """",cellFormat);\n\t\t\t\tcellLAST_NAME = (WritableCell) labelLAST_NAME;\n\t\t\t\tsheetToEdit.addCell(cellLAST_NAME);\n\n\t\t\t\t//------------------ COL_18: COL_OTHER_NAMES -----------------\n\t\t\t\tlabelOTHER_NAMES = new Label(COL_OTHER_NAMES-1, row, """",cellFormat);\n\t\t\t\tcellOTHER_NAMES = (WritableCell) labelOTHER_NAMES;\n\t\t\t\tsheetToEdit.addCell(cellOTHER_NAMES);\n\n\t\t\t\t//------------------ COL_19: COL_STREET ----------------------\n\t\t\t\tlabelSTREET = new Label(COL_STREET-1, row, """",cellFormat);\n\t\t\t\tcellSTREET = (WritableCell) labelSTREET;\n\t\t\t\tsheetToEdit.addCell(cellSTREET);\n\n\t\t\t\t//------------------ COL_20: COL_OTHER_ADDRESS ---------------\n\t\t\t\tlabelOTHER_ADDRESS = new Label(COL_OTHER_ADDRESS-1, row, """",cellFormat);\n\t\t\t\tcellOTHER_ADDRESS = (WritableCell) labelOTHER_ADDRESS;\n\t\t\t\tsheetToEdit.addCell(cellOTHER_ADDRESS);\n\n\t\t\t\t//------------------ COL_21: COL_CITY_CLIENT -----------------\n\t\t\t\tlabelCITY_CLIENT = new Label(COL_CITY_CLIENT-1, row, """",cellFormat);\n\t\t\t\tcellCITY_CLIENT = (WritableCell) labelCITY_CLIENT;\n\t\t\t\tsheetToEdit.addCell(cellCITY_CLIENT);\n\n\t\t\t\t//------------------ COL_22: COL_PROVINCE --------------------\n\t\t\t\tlabelPROVINCE = new Label(COL_PROVINCE-1, row, """",cellFormat);\n\t\t\t\tcellPROVINCE = (WritableCell) labelPROVINCE;\n\t\t\t\tsheetToEdit.addCell(cellPROVINCE);\n\n\t\t\t\t//------------------ COL_23: COL_POSTAL_CODE -----------------\n\t\t\t\tlabelPOSTAL_CODE = new Label(COL_POSTAL_CODE-1, row, """",cellFormat);\n\t\t\t\tcellPOSTAL_CODE = (WritableCell) labelPOSTAL_CODE;\n\t\t\t\tsheetToEdit.addCell(cellPOSTAL_CODE);\n\n\t\t\t\t//------------------ COL_24: COL_LS_ORDER_ID-----------------\n\t\t\t\tlabelLS_ORDER_ID = new Label(COL_LS_ORDER_ID-1, row, """",cellFormat);\n\t\t\t\tcellLS_ORDER_ID = (WritableCell) labelLS_ORDER_ID;\n\t\t\t\tsheetToEdit.addCell(cellLS_ORDER_ID);\n\t\t\t\t\n\t\t\t\t//------------------ COL_25: COL_CURRENCY-----------------\n\t\t\t\tlabelCURRENCY = new Label(COL_CURRENCY-1, row, """",cellFormat);\n\t\t\t\tcellCURRENCY = (WritableCell) labelCURRENCY;\n\t\t\t\tsheetToEdit.addCell(cellCURRENCY);\n\t\t\t}\n\t\t\tworkbookCopy.write();\n\t\t\tworkbookCopy.close();\n\t\t\texistingWorkbook.close();\n\t\t} catch (Exception x) {\n\t\t\tx.printStackTrace();\n\t\t}\n\t}\n\n\t/**----------------------------------------------------------\n\t *CREATE CSV FOR EST TOOL*\n\t  -----------------------------------------------------------*/\n\t@Override\n\tpublic void generateAdminEstTool(List<OrdersDTO >listOrdersDTO, String filePathData,boolean selection){\n\t\t//COLUMNS Data\n\t\tString RECORD_TYPE=""2""; \t\t// 1:Recode Type\n\t\tString LS_ORDER_ID="""";\t\t\t// 2:Imported Order ID\n\t\tString CLIENT_LOGIN="""";\t\t\t// 3:Client ID\n\t\tString TITLE_NAME="""";\t\t\t// 4:Title Name\n\t\tString CLIENT_FIRST_NAME="""";\t// 5:First Name\n\t\tString CLIENT_LAST_NAME="""";\t\t// 6:Last Name\n\t\tString DEPT="""";\t\t\t\t\t// 7:Title/Dept\n\t\tString COMPANY_HEADER="""";\t\t// 8:Company Name\n\t\tString CLIENT_STREET_INF="""";\t\t// 9:Add'1 Address Information\n\t\tString CLIENT_STREET1="""";\t// 10:Address Line 1\n\t\tString CLIENT_STREET2="""";\t\t// 11:Address Line 2\n\t\tString CLIENT_CITY="""";\t\t\t// 12:City\n\n\t\tString CLIENT_PROVINCE="""";\t\t// 13:Province or State\n\t\tString CLIENT_POSTAL_CODE="""";\t// 14:Postal Code or Zip Code\n\t\tString COUNTRY_CODE=""CA"";\t\t// 15:Country Code\n\n\t\tString CLIENT_PHONE="""";\t\t\t// 16:Client Voice Phone\n\t\tString CLIENT_FAX="""";\t\t\t// 17:Client FAX Number\n\n\t\tString CLIENT_EMAIL="""";\t\t\t// 18:Client Email Address\n\t\tString WEIGHT=""0"";\t\t\t\t// 19:Weight\n\n\t\tString data;\n\n\t\ttry{\n\n\t\t\tString fileName=filePathData+""EST_TOOL.csv"";\n\t\t\tFile file = new File(fileName);\n\t\t\tif(file.exists())file.delete();\n\t\t\tfile = new File(fileName);\n\t\t\tPrintWriter pw= new PrintWriter(new FileWriter(fileName,true),true);\n\t\t\t\n\t\t\tList<OrdersDTO>listOrdersDTOfiler=new ArrayList<OrdersDTO>();\n\t\t\t//if admin select just some orders to get their cvs Canada post\n\t\t\tif(selection){\n\t\t\t\tfor(OrdersDTO ord:listOrdersDTO){\n\t\t\t\t\tif((ord.getPrint()!=null && ord.getPrint()==true)\n\t\t\t\t\t\t\t&&(ord.getRowsList().get(0).getStatus()!=null && ord.getRowsList().get(0).getStatus().equals(""progress"")))listOrdersDTOfiler.add(ord);\n\t\t\t\t}\n\t\t\t//if admin select all orders, select just witch has status progress\n\t\t\t}else{\n\t\t\t\tfor(OrdersDTO ord:listOrdersDTO){\n\t\t\t\t\tif(ord.getRowsList().get(0).getStatus()!=null && ord.getRowsList().get(0).getStatus().equals(""progress"")){\n\t\t\t\t\t\tlistOrdersDTOfiler.add(ord);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t//Creation of csv for Canada Post\n\t\t\tfor (OrdersDTO orderDTO : listOrdersDTOfiler) {\n\t\t\t\tLS_ORDER_ID="""";\n\t\t\t\tCLIENT_LOGIN="""";\n\t\t\t\tTITLE_NAME="""";\n\t\t\t\tCLIENT_FIRST_NAME="""";\n\t\t\t\tCLIENT_LAST_NAME="""";\n\t\t\t\tDEPT="""";\n\t\t\t\tCOMPANY_HEADER="""";\n\t\t\t\tCLIENT_STREET_INF="""";\n\t\t\t\tCLIENT_STREET1="""";\n\t\t\t\tCLIENT_STREET2="""";\n\t\t\t\tCLIENT_CITY="""";\n\t\t\t\tCLIENT_PROVINCE="""";\n\t\t\t\tCLIENT_POSTAL_CODE="""";\n\t\t\t\tCOUNTRY_CODE=""CA"";\n\t\t\t\tCLIENT_PHONE="""";\n\t\t\t\tCLIENT_FAX="""";\n\t\t\t\tCLIENT_EMAIL="""";\n\n\t\t\t\tdata="""";\n\t\t\t\t// 1: RECORD TYPE (must be always 2)\n\t\t\t\tdata+=RECORD_TYPE+"","";\n\n\t\t\t\t// 2: LS_ORDER_ID (must be lest than 35 letters)\n\t\t\t\tLS_ORDER_ID = orderDTO.getLsOrderId();\n\t\t\t\tif(LS_ORDER_ID.length()>30){\n\t\t\t\t\tLS_ORDER_ID=""?????"";\n\t\t\t\t}\n\t\t\t\tdata+=""\\""""+LS_ORDER_ID+""\\"","";\n\n\n\t\t\t\t// 3: CLIENT_LOGIN="""" (must be lest than 30 letters)\n\t\t\t\tif(orderDTO.getUserLogin()!=null)CLIENT_LOGIN = orderDTO.getUserLogin();\n\t\t\t\tif(CLIENT_LOGIN.length()>30){\n\t\t\t\t\tLS_ORDER_ID=""?????"";\n\t\t\t\t}\n\t\t\t\tdata+=""\\""""+CLIENT_LOGIN+""\\"","";\n\n\n\t\t\t\t// 4: TITLE_NAME (must be lest than 14 letters)\n\t\t\t\tdata+=""\\""""+TITLE_NAME+""\\"","";\n\n\n\t\t\t\t// 5: CLIENT_FIRST_NAME (must be lest than 30 letters)\n\t\t\t\tif(orderDTO.getClientFirstName()!=null)CLIENT_FIRST_NAME=orderDTO.getClientFirstName();\n\t\t\t\tif(CLIENT_FIRST_NAME.length()>30){\n\t\t\t\t\tCLIENT_FIRST_NAME=""?????"";\n\t\t\t\t}\n\t\t\t\tdata+=""\\""""+CLIENT_FIRST_NAME+""\\"","";\n\n\n\t\t\t\t// 6: CLIENT_LAST_NAME (must be lest than 40 letters)\n\t\t\t\tif(orderDTO.getClientLastName()!=null)CLIENT_LAST_NAME=orderDTO.getClientLastName();\n\t\t\t\tif(CLIENT_LAST_NAME.length()>40){\n\t\t\t\t\tCLIENT_LAST_NAME=""?????"";\n\t\t\t\t}\n\t\t\t\tdata+=""\\""""+CLIENT_LAST_NAME+""\\"","";\n\n\n\t\t\t\t// 7: TITLE_NAME (must be lest than 44 letters)\n\t\t\t\tdata+=""\\""""+DEPT+""\\"","";\n\n\n\t\t\t\t// 8: COMPANY_HEADER\n\t\t\t\tif(orderDTO.getCompanyHeader()!=null)COMPANY_HEADER=orderDTO.getCompanyHeader();\n\t\t\t\tif(COMPANY_HEADER.length()>40){\n\t\t\t\t\tCOMPANY_HEADER=""?????"";\n\t\t\t\t}\n\t\t\t\tdata+=""\\""""+COMPANY_HEADER+""\\"","";\n\n\n\t\t\t\t// 9: CLIENT_STREET_INF (must be lest than 44 letters)\n\t\t\t\tOrdersRows orderR=orderDTO.getRowsList().get(0);\n\t\t\t\tif(orderR.getLsProductID()!=null)CLIENT_STREET_INF=orderR.getLsProductID();\n\t\t\t\tCLIENT_STREET_INF="""";\n\t\t\t\tif(CLIENT_STREET_INF!=null && CLIENT_STREET_INF.length()>44){\n\t\t\t\t\tCLIENT_STREET_INF=""?????"";\n\t\t\t\t}\n\t\t\t\tdata+=""\\""""+CLIENT_STREET_INF+""\\"","";\n\n\n\t\t\t\t// 10: CLIENT_STREET1 (must be lest than 44 letters)\n\t\t\t\tif(orderDTO.getClientStreet()!=null)CLIENT_STREET1=orderDTO.getClientStreet();\n\t\t\t\tif(CLIENT_STREET1.length()>44){\n\t\t\t\t\tCLIENT_STREET1=""?????"";\n\t\t\t\t}\n\t\t\t\tCLIENT_STREET1=CLIENT_STREET1.replaceAll("","", "" "");\n\n\t\t\t\tdata+=""\\""""+CLIENT_STREET1+""\\"","";\n\n\n\t\t\t\t// 11: CLIENT_STREET3 (must be lest than 44 letters)\n\t\t\t\tif(orderDTO.getClientOtherStreet()!=null)CLIENT_STREET2=orderDTO.getClientOtherStreet();\n\t\t\t\tif(CLIENT_STREET2.length()>44){\n\t\t\t\t\tCLIENT_STREET2=""?????"";\n\t\t\t\t}\n\t\t\t\tCLIENT_STREET2=CLIENT_STREET2.replaceAll("","", "" "");\n\t\t\t\tdata+=""\\""""+CLIENT_STREET2+""\\"","";\n\n\t\t\t\t// 12: CLIENT_CITY (must be lest than 25 letters)\n\t\t\t\tif(orderDTO.getClientCity()!=null)CLIENT_CITY=orderDTO.getClientCity();\n\t\t\t\tif(CLIENT_CITY.length()>25){\n\t\t\t\t\tCLIENT_CITY=""?????"";\n\t\t\t\t}\n\t\t\t\tdata+=""\\""""+CLIENT_CITY+""\\"","";\n\n\t\t\t\t// 13: CLIENT_PROVINCE (must be lest than 2 letters)\n\t\t\t\tif(orderDTO.getClientProvince()!=null)CLIENT_PROVINCE=orderDTO.getClientProvince();\n\t\t\t\tif(CLIENT_PROVINCE.length()>2){\n\t\t\t\t\tCLIENT_PROVINCE=""?????"";\n\t\t\t\t}\n\t\t\t\tdata+=""\\""""+CLIENT_PROVINCE+""\\"","";\n\n\n\t\t\t\t// 14: CLIENT_POSTAL_CODE (must be lest than 14 letters)\n\t\t\t\tif(orderDTO.getClientPostalCode()!=null)CLIENT_POSTAL_CODE=orderDTO.getClientPostalCode();\n\t\t\t\tif(CLIENT_POSTAL_CODE.length()>14){\n\t\t\t\t\tCLIENT_POSTAL_CODE=""?????"";\n\t\t\t\t}\n\t\t\t\tdata+=""\\""""+CLIENT_POSTAL_CODE+""\\"","";\n\n\n\t\t\t\t// 15: COUNTRY_CODE(must be lest than 3 letters)\n\t\t\t\tdata+=""\\""""+COUNTRY_CODE+""\\"","";\n\n\n\t\t\t\t// 16: CLIENT_PHONE (must be lest than 25 letters)\n\t\t\t\tif(orderDTO.getClientPhone()!=null)CLIENT_PHONE = orderDTO.getClientPhone();\n\t\t\t\tif(CLIENT_PHONE.length()>25){\n\t\t\t\t\tCLIENT_PHONE=""?????"";\n\t\t\t\t}\n\t\t\t\tdata+=""\\""""+CLIENT_PHONE+""\\"","";\n\n\t\t\t\t// 17: CLIENT_FAX (must be lest than 25 letters)\n\t\t\t\tdata+=""\\""""+CLIENT_FAX+""\\"","";\n\n\n\t\t\t\t// 18: CLIENT_EMAIL (must be lest than 60 letters)\n\t\t\t\tif(orderDTO.getClientEmail()!=null)CLIENT_EMAIL = orderDTO.getClientEmail();\n\t\t\t\tif(CLIENT_EMAIL.length()>60){\n\t\t\t\t\tCLIENT_EMAIL=""?????"";\n\t\t\t\t}\n\t\t\t\tdata+=""\\""""+CLIENT_EMAIL+""\\"","";\n\n\n\t\t\t\t// 3: WEIGHT (must be lest than 9 letters)\n\t\t\t\tdata+=WEIGHT;\n\n\t\t\t\tpw.println(data);\n\t\t\t\t//}\n\t\t\t}\n\t\t\tpw.close();\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\n\n\t}\n\n\t/**----------------------------------------------------------\n\t *UPDATE TABLE ORDERS ROWS IN DATABASES FROM XLS FILE*\n\t *WE SAVE TRACKING NUMBER,SHUPPING DATE AND SHIPPING PRICE*\n\t  -----------------------------------------------------------*/\n\t@Override\n\tpublic void updateOrdersRowsFromAdminXLS(String userAdminLogin,String destFileAdminXLS)throws Exception{\n\t\tString errorReport="""";\n\t\t//variable indicating the numbers of columns in the XLS file\n\t\tint ROW_TO_START = 0;\n\t\t//F:6 G:7 H:8\n\t\tfinal int COL_F = 6;\n\t\tfinal int COL_G = 7;\n\t\tfinal int COL_H = 8;\n\t\tfinal int COL_I = 9;\n\t\tfinal int COL_LS_ORDER_ID=31;\n\t\tfinal int COL_TRACKING_NUMBER=17;\n\t\tfinal int COL_SHIPPING_PRICE=10;\n\t\tfinal int COL_BOX_LENGTH = 12;\t\t//In cm\n\t\tfinal int COL_BOX_WIDTH = 13;\t\t//In cm\n\t\tfinal int COL_BOX_HEIGTH = 14;\t\t//In cm\n\t\tfinal int COL_BOX_TOTAL_WEIGHT = 5;\t//In kg\n\t\t\n\t\tString  strSHIPPING_PRICE="""";\n\t\t//Values of cells\n\t\tString  LS_ORDER_ID="""";\n\t\tDate SHIPPED_DATE=null;\n\t\tString TRACKING_NUMBER = null;\n\t\tDouble SHIPPING_PRICE = null;\n\t\tDouble VAL_F = null;\n\t\tDouble VAL_G = null;\n\t\tDouble VAL_H = null;\n\t\tDouble VAL_I = null;\n\t\tDouble BOX_LENGTH = null;\n\t\tDouble BOX_WIDTH = null;\n\t\tDouble BOX_HEIGTH = null;\n\t\tDouble BOX_TOTAL_WEIGHT = null;\n\t\t\n\t\t//Cells\n\t\tCell cellLS_ORDER_ID= null;\n\t\tCell cellTRACKING_NUMBER= null;\n\t\tCell cellSHIPPING_PRICE= null;\n\n\t\tCell cellF = null;\n\t\tCell cellG = null;\n\t\tCell cellH = null;\n\t\tCell cellI = null;\n\t\tCell cellBOX_LENGTH = null;\n\t\tCell cellBOX_WIDTH = null;\n\t\tCell cellBOX_HEIGTH = null;\n\t\tCell cellBOX_TOTAL_WEIGHT = null;\n\n\t\t//try {\n\t\tWorkbook existingWorkbook = Workbook.getWorkbook(new File(destFileAdminXLS+""ordersAdminImport.xls""));\n\t\tSheet sheetToRead=existingWorkbook.getSheet(0);\n\t\tint ROW_MAX = sheetToRead.getRows();\n\t\t\n\t\tfor(int row=ROW_TO_START; row< ROW_MAX;row++) {\n\n\t\t\t//--------------- 31: LS_ORDER_ID\n\t\t\tcellLS_ORDER_ID = sheetToRead.getCell(COL_LS_ORDER_ID-1, row);\t\t\t\n\t\t\tif(cellLS_ORDER_ID!=null){\n\t\t\t\tLS_ORDER_ID = cellLS_ORDER_ID.getContents();\n\t\t\t\tLS_ORDER_ID=LS_ORDER_ID.replaceAll("" "", """");\n\t\t\t}\n\t\t\tif(LS_ORDER_ID==null || LS_ORDER_ID.equals("""")){\n\t\t\t\terrorReport+="" ""+(row+1)+"" ,LS_ORDER_ID:""+LS_ORDER_ID+"" ,|---->dosen't exist \\n"";\n\t\t\t}\n\n\t\t\t//--------------- SHIPPED_DATE\n\t\t\tSHIPPED_DATE=new Date();\n\n\t\t\t//--------------- 17: TRACKING_NUMBER\n\t\t\tcellTRACKING_NUMBER = sheetToRead.getCell(COL_TRACKING_NUMBER-1, row);\t\t\t\n\t\t\tif(cellTRACKING_NUMBER!=null){\n\t\t\t\tTRACKING_NUMBER = cellTRACKING_NUMBER.getContents();\n\t\t\t\tTRACKING_NUMBER=TRACKING_NUMBER.replaceAll("" "", """");\n\t\t\t}\n\t\t\tif(TRACKING_NUMBER==null || TRACKING_NUMBER.equals("""")){\n\t\t\t\terrorReport+="" ""+(row+1)+"" ,TRACKING_NUMBER:""+TRACKING_NUMBER+"" ,|---->dosen't exist \\n"";\n\t\t\t}\n\n\t\t\t//--------------- 10:SHIPPING_PRICE\n\n\t\t\t// COL 6:value of column H VAL_F\n\t\t\tcellF = sheetToRead.getCell(COL_F-1, row);\t\t\t\n\t\t\tif(cellF!=null){\n\t\t\t\tString strVAL_F = cellF.getContents();\n\t\t\t\tVAL_F=getDoubleFromString(strVAL_F,3);\n\t\t\t}\n\t\t\t// COL 7:value of column H VAL_G\n\t\t\tcellG = sheetToRead.getCell(COL_G-1, row);\t\t\t\n\t\t\tif(cellG!=null){\n\t\t\t\tString strVAL_G = cellG.getContents();\n\t\t\t\tVAL_G=getDoubleFromString(strVAL_G,3);\n\t\t\t}\n\t\t\t// COL 8:value of column H VAL_H\n\t\t\tcellH = sheetToRead.getCell(COL_H-1, row);\t\t\t\n\t\t\tif(cellH!=null){\n\t\t\t\tString strVAL_H = cellH.getContents();\n\t\t\t\tVAL_H=getDoubleFromString(strVAL_H,3);\n\t\t\t}\n\t\t\t// COL 9:value of column I VAL_I\n\t\t\tcellI = sheetToRead.getCell(COL_I-1, row);\t\t\t\n\t\t\tif(cellI!=null){\n\t\t\t\tString strVAL_I = cellI.getContents();\n\t\t\t\tVAL_I=getDoubleFromString(strVAL_I,3);\n\t\t\t}\n\t\t\tif(VAL_F!=null && VAL_G!=null && VAL_H!=null && VAL_I!=null){\n\t\t\t\tSHIPPING_PRICE=VAL_F+VAL_G+VAL_H+VAL_I;\n\t\t\t\tSHIPPING_PRICE = (double) Math.round(SHIPPING_PRICE * 100) / 100;\n\t\t\t}else errorReport+="" ""+(row+1)+"" ,SHIPPING_PRICE:""+strSHIPPING_PRICE+"" ,|---->is null \\n"";\n\t\t\t//--------------- 12: BOX_LENGTH\n\t\t\tcellBOX_LENGTH = sheetToRead.getCell(COL_BOX_LENGTH-1, row);\n\t\t\tif(cellBOX_LENGTH!=null){\n\t\t\t\tString strBOX_LENGTH = cellBOX_LENGTH.getContents().replaceAll("" "", """");\n\t\t\t\tif(!strBOX_LENGTH.equals("""")) {\n\t\t\t\t\tBOX_LENGTH = getDoubleFromString(strBOX_LENGTH,3);\n\t\t\t\t} else errorReport+="" ""+(row+1)+"" ,BOX_LENGTH:""+strBOX_LENGTH+"" ,|---->is empty \\n"";\n\t\t\t} else errorReport+="" ""+(row+1)+"" ,BOX_LENGTH: ""+"" ,|---->is null \\n"";\n\t\t\t\n\t\t\t//--------------- 13: BOX_WIDTH\n\t\t\tcellBOX_WIDTH = sheetToRead.getCell(COL_BOX_WIDTH-1, row);\t\t\t\n\t\t\tif(cellBOX_WIDTH!=null){\n\t\t\t\tString strBOX_WIDTH = cellBOX_WIDTH.getContents().replaceAll("" "", """");\n\t\t\t\tif(!strBOX_WIDTH.equals("""")) {\n\t\t\t\t\tBOX_WIDTH = getDoubleFromString(strBOX_WIDTH,3);\n\t\t\t\t} else errorReport+="" ""+(row+1)+"" ,BOX_WIDTH:""+strBOX_WIDTH+"" ,|---->is empty \\n"";\n\t\t\t} else errorReport+="" ""+(row+1)+"" ,BOX_WIDTH: ""+"" ,|---->is null \\n"";\n\t\t\t\n\t\t\t//--------------- 14: BOX_HEIGTH\n\t\t\tcellBOX_HEIGTH = sheetToRead.getCell(COL_BOX_HEIGTH-1, row);\t\t\t\n\t\t\tif(cellBOX_HEIGTH!=null){\n\t\t\t\tString strBOX_HEIGTH = cellBOX_HEIGTH.getContents().replaceAll("" "", """");\n\t\t\t\tif(!strBOX_HEIGTH.equals("""")) {\n\t\t\t\t\tBOX_HEIGTH = getDoubleFromString(strBOX_HEIGTH,3);\n\t\t\t\t} else errorReport+="" ""+(row+1)+"" ,BOX_HEIGTH:""+strBOX_HEIGTH+"" ,|---->is empty \\n"";\n\t\t\t} else errorReport+="" ""+(row+1)+"" ,BOX_HEIGTH: ""+"" ,|---->is null \\n"";\n\t\t\t\n\t\t\t//--------------- 5:  BOX_TOTAL_WEIGHT\n\t\t\tcellBOX_TOTAL_WEIGHT = sheetToRead.getCell(COL_BOX_TOTAL_WEIGHT-1, row);\t\t\t\n\t\t\tif(cellBOX_TOTAL_WEIGHT!=null){\n\t\t\t\tString strBOX_TOTAL_WEIGHT = cellBOX_TOTAL_WEIGHT.getContents().replaceAll("" "", """");\n\t\t\t\tif(!strBOX_TOTAL_WEIGHT.equals("""")) {\n\t\t\t\t\tBOX_TOTAL_WEIGHT = getDoubleFromString(strBOX_TOTAL_WEIGHT,3);\n\t\t\t\t} else errorReport+="" ""+(row+1)+"" ,BOX_TOTAL_WEIGHT:""+strBOX_TOTAL_WEIGHT+"" ,|---->is empty \\n"";\n\t\t\t} else errorReport+="" ""+(row+1)+"" ,BOX_TOTAL_WEIGHT: ""+"" ,|---->is null \\n"";\n\t\t\ttry {\n\t\t\t//--------------- Update Row if shipped\n\t\t\tif(LS_ORDER_ID!=null){\n\t\t\t\tOrdersRows orderRow=getRowByLsOrderId(LS_ORDER_ID);\n\t\t\t\tif(orderRow!=null){\n\t\t\t\t\tLong productId = orderRow.getProductId();\n\t\t\t\t\tDouble quantity = orderRow.getQuantity();\n\t\t\t\t\tOrdersDTO orderDTO=getOrderDTOByLsOrderId(orderRow.getLsOrderId());\n\t\t\t\t\tOrdersSpecialShippingDTO ordSpecialShipDTO=new OrdersSpecialShippingDTO();\n\t\t\t\t\tordSpecialShipDTO.setProductId(orderRow.getProductId());\n\t\t\t\t\tordSpecialShipDTO.setUserId(orderDTO.getUserId());\n\t\t\t\t\tOrdersSpecialShippingDTO OrdSpecialShip=getOrderSpecialShipping(ordSpecialShipDTO);\n\t\t\t\t\tif(OrdSpecialShip!=null){\n\t\t\t\t\t\tSHIPPING_PRICE=OrdSpecialShip.getShippingPrice();\n\t\t\t\t\t\tSHIPPING_PRICE = (double) Math.round(SHIPPING_PRICE * 100) / 100;\n\t\t\t\t\t}\n\t\t\t\t\tif(TRACKING_NUMBER!=null && !TRACKING_NUMBER.equals("""")&& SHIPPING_PRICE!=null){\n\t\t\t\t\t\torderRow.setShippedDate(SHIPPED_DATE);\n\t\t\t\t\t\torderRow.setShippingPrice(SHIPPING_PRICE);\n\t\t\t\t\t\torderRow.setTrackingNumber(TRACKING_NUMBER);\n\t\t\t\t\t\torderRow.setShippingCompany(""Canada Post"");\n\t\t\t\t\t\tmakeRowOrderInShippedById(orderRow);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tmakeRowOrderInOpenById(orderRow);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t//update Box sizes and make them verified if they are not\n\t\t\t\t\tif(productId != null) {\n\t\t\t\t\t  if(quantity == 1) {\n\t\t\t\t\t\t  if(BOX_LENGTH!=null && BOX_WIDTH!=null && BOX_HEIGTH!=null && BOX_TOTAL_WEIGHT!=null) {\n\t\t\t\t\t\t\tBoxDTO boxDTO = new BoxDTO();\n\t\t\t\t\t\t\tproductService = getServiceLocator().getProductService();\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tboxDTO = productService.getBoxByProductId(productId);\n\t\t\t\t\t\t\t} catch (Exception e) {\n\t\t\t\t\t\t\t\te.printStackTrace();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t//Make Lenght the biggest size between L,W and H\n\t\t\t\t\t\t\tDouble permute;\n\t\t\t\t\t\t\tif(BOX_LENGTH < BOX_HEIGTH) {\n\t\t\t\t\t\t\t\tpermute    = BOX_LENGTH;\n\t\t\t\t\t\t\t\tBOX_LENGTH = BOX_HEIGTH;\n\t\t\t\t\t\t\t\tBOX_HEIGTH = permute;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(BOX_LENGTH < BOX_WIDTH) {\n\t\t\t\t\t\t\t\tpermute = BOX_LENGTH;\n\t\t\t\t\t\t\t\tBOX_LENGTH = BOX_WIDTH;\n\t\t\t\t\t\t\t\tBOX_WIDTH = permute;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(BOX_WIDTH < BOX_HEIGTH) {\n\t\t\t\t\t\t\t\tpermute = BOX_WIDTH;\n\t\t\t\t\t\t\t\tBOX_WIDTH = BOX_HEIGTH;\n\t\t\t\t\t\t\t\tBOX_HEIGTH = permute;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t//Convert from ""cm"" to ""inch"" and from ""kg"" to ""lbs""\n\t\t\t\t\t\t\tDecimalFormat twoDForm = new DecimalFormat(""#.##"");\n\t\t\t\t\t\t\tDouble boxLengthInch = \tDouble.valueOf(twoDForm.format(BOX_LENGTH *0.393701));\n\t\t\t\t\t\t\tDouble boxWidthInch  =  Double.valueOf(twoDForm.format(BOX_WIDTH  *0.393701));\n\t\t\t\t\t\t\tDouble boxHeightInch =  Double.valueOf(twoDForm.format(BOX_HEIGTH *0.393701));\n\t\t\t\t\t\t\tDouble boxTotalWeightLbs = Double.valueOf(twoDForm.format(BOX_TOTAL_WEIGHT * 2.20462));\n\t\t\t\t\t\t\t//If the product doesn't exist in the ""product_box"" table\n\t\t\t\t\t\t\tif(boxDTO==null) {\n\t\t\t\t\t\t\t\tboxDTO = new BoxDTO();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tboxDTO.setProductId(productId);\n\t\t\t\t\t\t\tboxDTO.setLength(boxLengthInch);\n\t\t\t\t\t\t\tboxDTO.setWidth(boxWidthInch);\n\t\t\t\t\t\t\tboxDTO.setHeight(boxHeightInch);\n\t\t\t\t\t\t\tboxDTO.setTotalWeight(boxTotalWeightLbs);\n\t\t\t\t\t\t\tboxDTO.setStatusId(1);\n\t\t\t\t\t\t\tproductService.updateProductBoxIfCpNotVerified(boxDTO);\n\t\t\t\t\t\t  }\n\t\t\t\t\t  }// End -- if(quantity == 1)\n\t\t\t\t\t}//End -- if(productId != null)\n\t\t\t\t\t\n\t\t\t\t} else errorReport+="" ""+(row+1)+"" ,LS_ORDER_ID:""+LS_ORDER_ID+"" ,|---->dosen't exist \\n"";\n\t\t\t}\n\t\t\t}catch (Exception e) {\n\t\t\t\tSystem.out.println(""row:""+row);\n\t\t\t\te.printStackTrace();\n\t\t\t\t// TODO: handle exception\n\t\t\t}\n\t\t\t\n\t\t}\n\n\t\tcreateLogsFile(userAdminLogin,destFileAdminXLS, errorReport,2);\n\t\tFile ordersAdminImport=new File(destFileAdminXLS+""ordersAdminImport.xls"");\n\t\tordersAdminImport.delete();\n\n\n\t}\n\n\tpublic Double getDoubleFromString(String str,int nbDecimal){\n\t\tDouble result=null;\n\t\tstr=str.replaceAll("" "", """");\n\t\tif(str!=null && !str.equals("""")){\n\t\t\tint index=str.indexOf("","");\n\t\t\tif(index<0)index=str.indexOf(""."");\n\t\t\tif(index>=0){\n\t\t\t\tString str1=str.substring(0, index);\n\t\t\t\tString str2= str.substring(index+1, str.length());\n\t\t\t\tif(str2.length()>nbDecimal)str2=str2.substring(0, nbDecimal);\n\t\t\t\tstr=str1+"".""+str2;\n\t\t\t}\n\t\t}\n\t\ttry {\n\t\t\tresult = Double.parseDouble(str);\n\t\t}\n\t\tcatch (Exception pe) {\n\t\t\tresult=null;\n\t\t}\n\t\treturn result;\n\t}\n\n\t@Override\n\tpublic String getStringFromDouble(Double value,int nbDecimal){\n\t\tString result=null;\n\t\tif(value!=null){\n\t\t\tString str=value+"""";\n\t\t\tString str1="""";\n\t\t\tString str2="""";\n\t\t\tstr=str.replaceAll("" "", """");\n\t\t\tif(str!=null && !str.equals("""")){\n\t\t\t\tint index=str.indexOf("","");\n\t\t\t\tif(index<0)index=str.indexOf(""."");\n\t\t\t\tif(index>=0){\n\t\t\t\t\tstr1=str.substring(0, index);\n\t\t\t\t\tstr2= str.substring(index+1, str.length());\n\t\t\t\t\tint decimal=str2.length();\n\t\t\t\t\tswitch (decimal) {\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tstr2=""0000"";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tstr2=str2+""000"";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tstr2=str2+""00"";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tstr2=str2+""0"";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\tstr2=""0000"";\n\t\t\t\t}\n\t\t\t}\n\t\t\tstr2=str2.substring(0, nbDecimal);\t\t\t\t\t\n\t\t\tstr=str1+"".""+str2;\n\t\t\tresult=str;\n\t\t}\n\t\treturn result;\n\t}\n\n\t\n\t\n\t\n\t/**----------------------------------------------------------\n\t *UPDATE TABLE STOCK IN DATABASES FROM XLS FILE*\n\t  -----------------------------------------------------------*/\n/*\t@Override\n\tpublic List<OrdersDTO> listStockFromXLS(String userAdminLogin,String destFileStockXLS)throws Exception{\n\t\tString errorReport="""";\n\t\t//variable indicating the numbers of columns in the XLS file\n\t\tint ROW_TO_START = 1;\n\t\tfinal int COL_LS_PRODUCT_ID=1;\n\t\tfinal int COL_STOCK=2;\n\n\t\tString  strSTOCK="""";\n\n\t\t//Values of cells\n\t\tString  LS_PRODUCT_ID="""";\n\t\tDouble STOCK = null;\n\n\t\t//Cells\n\t\tCell cellLS_PRODUCT_ID= null;\n\t\tCell cellSTOCK= null;\n\n\t\tproductService=serviceLocator.getProductService();\n\t\torderService = serviceLocator.getOrderService();\n\n\t\tWorkbook existingWorkbook = Workbook.getWorkbook(new File(destFileStockXLS+""stock.xls""));\n\t\tSheet sheetToRead=existingWorkbook.getSheet(0);\n\t\tint ROW_MAX = sheetToRead.getRows();\n\t\tList<OrdersDTO> listStock = new ArrayList<OrdersDTO>() ;\n\t\tOrdersDTO orderDTO;\n\t\tfor(int row=ROW_TO_START; row< ROW_MAX;row++) {\n\n\t\t\t//--------------- 1: LS_PRODUCT_ID\n\t\t\tcellLS_PRODUCT_ID = sheetToRead.getCell(COL_LS_PRODUCT_ID-1, row);\t\t\t\n\t\t\tif(cellLS_PRODUCT_ID!=null)LS_PRODUCT_ID = cellLS_PRODUCT_ID.getContents();\n\t\t\tif(LS_PRODUCT_ID==null || LS_PRODUCT_ID.equals("""")){\n\t\t\t\terrorReport+="" ""+(row+1)+"" ,LS_PRODUCT_ID:""+LS_PRODUCT_ID+"" ,|---->dosen't exist \\n"";\n\t\t\t}else{\n\t\t\t\tint index=LS_PRODUCT_ID.indexOf(""/"");\n\t\t\t\tif(index>0)LS_PRODUCT_ID=LS_PRODUCT_ID.substring(0, index);\n\n\t\t\t}\n\t\t\t//--------------- 2:STOCK\n\t\t\tcellSTOCK = sheetToRead.getCell(COL_STOCK-1, row);\t\t\t\n\t\t\tif(cellSTOCK!=null){\n\t\t\t\tstrSTOCK = cellSTOCK.getContents();\n\t\t\t\tstrSTOCK=strSTOCK.replaceAll("" "", """");\n\t\t\t\tif(strSTOCK!=null && !strSTOCK.equals("""")){\n\t\t\t\t\tint index=strSTOCK.indexOf("","");\n\t\t\t\t\tif(index>=0){\n\t\t\t\t\t\tString strSTOCK1=strSTOCK.substring(0, index);\n\t\t\t\t\t\tString strSTOCK2= strSTOCK.substring(index+1, strSTOCK.length());\n\t\t\t\t\t\tstrSTOCK=strSTOCK1+"".""+strSTOCK2;\n\t\t\t\t\t}\n\t\t\t\t}else errorReport+="" ""+(row+1)+"" ,STOCK:""+strSTOCK+"" ,|---->is null \\n"";\n\t\t\t\tSTOCK=null;\n\t\t\t\ttry {\n\t\t\t\t\tSTOCK = Double.parseDouble(strSTOCK);\n\t\t\t\t}\n\t\t\t\tcatch (Exception pe) {\n\t\t\t\t\tSTOCK=null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t\n\t\t\t//--------------- Update Row if shipped\n\t\t\tif(LS_PRODUCT_ID!=null){\n\t\t\t\t// Replace all white spaces\n\t\t\t\tLS_PRODUCT_ID = LS_PRODUCT_ID.replaceAll(""\\\\s"","""");\n\t\t\t\tProductDTO pDTO=productService.getProductByLsProductId(LS_PRODUCT_ID);\n\t\t\t\tif(pDTO!=null){\n\t\t\t\t\tLong productId = pDTO.getId();\n\t\t\t\t\tif (productId!=null && STOCK!=null) {\n\t\t\t\t\t\torderDTO = new OrdersDTO();\n\t\t\t\t\t\torderDTO.setProductId(productId);\n\t\t\t\t\t\torderDTO.setStock(STOCK);\n\t\t\t\t\t\tlistStock.add(orderDTO);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tList<Orders>listOrders=getOrdersList();\n\t\t//orderService.updateStock(listStock);\n\t\tcreateLogsFile(userAdminLogin,destFileStockXLS, errorReport,1);\n\t\treturn listStock;\n\n\t}\n\t*/\n\t\n\t\n\t\n\t/**----------------------------------------------------------\n\t *UPDATE TABLE STOCK IN DATABASES FROM XLS FILE*\n\t  -----------------------------------------------------------*/\n\t/*@Override\n\tpublic void updateStockFromStockXLS(List<OrdersDTO>listStock)throws Exception{\n\t\tString errorReport="""";\n\t\t//variable indicating the numbers of columns in the XLS file\n\t\tint ROW_TO_START = 1;\n\t\tfinal int COL_LS_PRODUCT_ID=1;\n\t\tfinal int COL_STOCK=2;\n \n\t\tString  strSTOCK="""";\n\n\t\t//Values of cells\n\t\tString  LS_PRODUCT_ID="""";\n\t\tDouble STOCK = null;\n\n\t\t//Cells\n\t\tCell cellLS_PRODUCT_ID= null;\n\t\tCell cellSTOCK= null;\n\n\t\tproductService=serviceLocator.getProductService();\n\t\torderService = serviceLocator.getOrderService();\n\n\t\tWorkbook existingWorkbook = Workbook.getWorkbook(new File(destFileStockXLS+""stock.xls""));\n\t\tSheet sheetToRead=existingWorkbook.getSheet(0);\n\t\tint ROW_MAX = sheetToRead.getRows();\n\t\tList<Orders> listStock = new ArrayList<Orders>() ;\n\t\tOrders order;\n\t\tfor(int row=ROW_TO_START; row< ROW_MAX;row++) {\n\n\t\t\t//--------------- 1: LS_PRODUCT_ID\n\t\t\tcellLS_PRODUCT_ID = sheetToRead.getCell(COL_LS_PRODUCT_ID-1, row);\t\t\t\n\t\t\tif(cellLS_PRODUCT_ID!=null)LS_PRODUCT_ID = cellLS_PRODUCT_ID.getContents();\n\t\t\tif(LS_PRODUCT_ID==null || LS_PRODUCT_ID.equals("""")){\n\t\t\t\terrorReport+="" ""+(row+1)+"" ,LS_PRODUCT_ID:""+LS_PRODUCT_ID+"" ,|---->dosen't exist \\n"";\n\t\t\t}else{\n\t\t\t\tint index=LS_PRODUCT_ID.indexOf(""/"");\n\t\t\t\tif(index>0)LS_PRODUCT_ID=LS_PRODUCT_ID.substring(0, index);\n\n\t\t\t}\n\t\t\t//--------------- 2:STOCK\n\t\t\tcellSTOCK = sheetToRead.getCell(COL_STOCK-1, row);\t\t\t\n\t\t\tif(cellSTOCK!=null){\n\t\t\t\tstrSTOCK = cellSTOCK.getContents();\n\t\t\t\tstrSTOCK=strSTOCK.replaceAll("" "", """");\n\t\t\t\tif(strSTOCK!=null && !strSTOCK.equals("""")){\n\t\t\t\t\tint index=strSTOCK.indexOf("","");\n\t\t\t\t\tif(index>=0){\n\t\t\t\t\t\tString strSTOCK1=strSTOCK.substring(0, index);\n\t\t\t\t\t\tString strSTOCK2= strSTOCK.substring(index+1, strSTOCK.length());\n\t\t\t\t\t\tstrSTOCK=strSTOCK1+"".""+strSTOCK2;\n\t\t\t\t\t}\n\t\t\t\t}else errorReport+="" ""+(row+1)+"" ,STOCK:""+strSTOCK+"" ,|---->is null \\n"";\n\t\t\t\tSTOCK=null;\n\t\t\t\ttry {\n\t\t\t\t\tSTOCK = Double.parseDouble(strSTOCK);\n\t\t\t\t}\n\t\t\t\tcatch (Exception pe) {\n\t\t\t\t\tSTOCK=null;\n\t\t\t\t}\n\t\t\t}\n\t\t\t//--------------- Update Row if shipped\n\t\t\tif(LS_PRODUCT_ID!=null){\n\t\t\t\t// Replace all white spaces\n\t\t\t\tLS_PRODUCT_ID = LS_PRODUCT_ID.replaceAll(""\\\\s"","""");\n\t\t\t\tProductDTO pDTO=productService.getProductByLsProductId(LS_PRODUCT_ID);\n\t\t\t\tif(pDTO!=null){\n\t\t\t\t\tLong productId = pDTO.getId();\n\t\t\t\t\tif (productId!=null && STOCK!=null) {\n\t\t\t\t\t\torder = new Orders();\n\t\t\t\t\t\torder.setProductId(productId);\n\t\t\t\t\t\torder.setStock(STOCK);\n\t\t\t\t\t\tlistStock.add(order);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\torderService.updateStock(listStock);\n\t\t//createLogsFile(userAdminLogin,destFileStockXLS, errorReport,1);\n\t}\n*/\n\t/**----------------------------------------------------------\n\t *UPDATE TABLE STOCK IN DATABASES FROM XLS FILE*\n\t  -----------------------------------------------------------*/\n\t@Override\n\tpublic void updateSpecialShippingFromXLS(StringBuffer rapport,String userAdminLogin,Long userId,String destFileXLS)throws Exception{\n\t\tString errorReport="""";\n\t\tString errorReportHtml=""<table border='0'>"";\n\t\t//variable indicating the numbers of columns in the XLS file\n\n\t\t//user_id,ls_product_id,shipping_price,product_id\n\t\tOrdersSpecialShippingDTO specialShippingDTO=null;\n\n\t\tint ROW_TO_START = 1;\n\t\tfinal int COL_LS_PRODUCT_ID=1;\n\t\tfinal int COL_SHIPPING_PRICE=2;\n\n\t\tString  strSHIPPING_PRICE="""";\n\n\t\t//Values of cells\n\t\tString  LS_PRODUCT_ID="""";\n\t\tDouble SHIPPING_PRICE = null;\n\n\t\t//Cells\n\t\tCell cellLS_PRODUCT_ID= null;\n\t\tCell cellSHIPPING_PRICE= null;\n\n\t\tproductService=serviceLocator.getProductService();\n\t\tWorkbook existingWorkbook = Workbook.getWorkbook(new File(destFileXLS+""specialShipping.xls""));\n\t\tSheet sheetToRead=existingWorkbook.getSheet(0);\n\t\tint ROW_MAX = sheetToRead.getRows();\n\t\tfor(int row=ROW_TO_START; row< ROW_MAX;row++) {\n\n\t\t\t//--------------- 1: LS_PRODUCT_ID\n\t\t\tcellLS_PRODUCT_ID = sheetToRead.getCell(COL_LS_PRODUCT_ID-1, row);\t\t\t\n\t\t\tif(cellLS_PRODUCT_ID!=null)LS_PRODUCT_ID = cellLS_PRODUCT_ID.getContents();\n\t\t\tLS_PRODUCT_ID=LS_PRODUCT_ID.replaceAll("" "", """");\n\t\t\tif(LS_PRODUCT_ID!=null && !LS_PRODUCT_ID.equals("""")){\n\t\t\t\tint index=LS_PRODUCT_ID.indexOf(""_"");\n\t\t\t\tif(index==2 && LS_PRODUCT_ID.length()>=3)LS_PRODUCT_ID=LS_PRODUCT_ID.substring(index+1, LS_PRODUCT_ID.length());\n\t\t\t}\n\n\t\t\t//--------------- 2:COL_SHIPPING_PRICE\n\t\t\tcellSHIPPING_PRICE = sheetToRead.getCell(COL_SHIPPING_PRICE-1, row);\t\t\t\n\t\t\tif(cellSHIPPING_PRICE!=null){\n\t\t\t\tstrSHIPPING_PRICE = cellSHIPPING_PRICE.getContents();\n\t\t\t\tstrSHIPPING_PRICE=strSHIPPING_PRICE.replaceAll("" "", """");\n\t\t\t\tstrSHIPPING_PRICE=strSHIPPING_PRICE.replaceAll(""\\\\$"", """");\n\t\t\t\tif(strSHIPPING_PRICE!=null && !strSHIPPING_PRICE.equals("""")){\n\t\t\t\t\tSHIPPING_PRICE=getDoubleFromString(strSHIPPING_PRICE, 3);\n\t\t\t\t}else if(LS_PRODUCT_ID!=null && !LS_PRODUCT_ID.equals("""")){\n\t\t\t\t\terrorReport+="" ""+(row+1)+"",SHIPPING_PRICE:""+strSHIPPING_PRICE+"" ,|---->is null \\n"";\n\t\t\t\t\terrorReportHtml+=""<tr height='20px'><td>Line:""+(row+1)+""</td><td style='padding-left:15px;'>SHIPPING_PRICE:<font style='color:red;'>""+strSHIPPING_PRICE+""</font></td><td style='padding-left:15px;'>dosen't exist</td></tr>"";\n\t\t\t\t}\n\t\t\t\tstrSHIPPING_PRICE=null;\n\t\t\t}\n\n\t\t\t//--------------- Update Row if shipped \n\t\t\tif(LS_PRODUCT_ID!=null){\n\t\t\t\tProductDTO pDTO=productService.getProductByLsProductId(LS_PRODUCT_ID);\n\t\t\t\tif(pDTO!=null){\n\t\t\t\t\tspecialShippingDTO=new OrdersSpecialShippingDTO();\n\t\t\t\t\tspecialShippingDTO.setLsProductId(pDTO.getLoyaltyProductId());\n\t\t\t\t\tspecialShippingDTO.setProductId(pDTO.getId());\n\t\t\t\t\tspecialShippingDTO.setUserId(userId);\n\t\t\t\t\tspecialShippingDTO.setShippingPrice(SHIPPING_PRICE);\n\t\t\t\t\tOrdersSpecialShippingDTO specShippCheck=getOrderSpecialShipping(specialShippingDTO);\n\t\t\t\t\tif(specShippCheck==null){\n\t\t\t\t\t\tinsertOrderSpecialShipping(specialShippingDTO);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tupdateOrderSpecialShipping(specialShippingDTO);\n\t\t\t\t\t}\n\t\t\t\t}else if(LS_PRODUCT_ID!=null && !LS_PRODUCT_ID.equals("""")){\n\t\t\t\t\terrorReport+="" ""+(row+1)+"",LS_PRODUCT_ID:""+LS_PRODUCT_ID+"" ,|--->DOSEN'T EXIST!\\n"";\n\t\t\t\t\terrorReportHtml+=""<tr height='20px'><td>Line:""+(row+1)+""</td><td style='padding-left:15px;'>LS_PRODUCT_ID:<font style='color:red;'>""+LS_PRODUCT_ID+""</font></td><td style='padding-left:15px;'>dosen't exist</td></tr>"";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\terrorReportHtml+=""</table>"";\n\t\trapport.append(errorReportHtml);\n\t\tcreateLogsFile(userAdminLogin,destFileXLS, errorReport,3);\n\t}\n\n\t/**----------------------------------------------------------\n\t *CREATION FILE LOGS OF UPDATING STOCK*\n\t  -----------------------------------------------------------*/\n\t@Override\n\tpublic void createLogsFile(String userAdminLogin,String folderDest, String errorReport,int option){ \n\n\t\ttry{\n\t\t\tSimpleDateFormat frm=new SimpleDateFormat(""yyyy-MM-dd"");\n\t\t\tString logFileName = null;\n\t\t\tString logFileNameHystic=null;\n\t\t\tDate date=new Date();\n\t\t\tCalendar myCalendar = Calendar.getInstance();\n\t\t\tmyCalendar.setTime(date);\n\t\t\tmyCalendar.add(Calendar.DATE, -6);\n\t\t\t//File folderLog = new File(folderDest+""logs""); \n\t\t\t//check path of wtpwebapps in server\n\t\t\tString wtpwebapps=folderDest;\n\t\t\tfor(int i=0;i<=4;i++){\n\t\t\t\tFile folderLogParent= new File(wtpwebapps);\n\t\t\t\twtpwebapps=folderLogParent.getParent();\n\t\t\t}\n\n\t\t\tFile folderLog = new File(wtpwebapps+""/logs"");\n\t\t\tfolderLog.mkdirs();\n\t\t\tFile folderOrderLog = new File(wtpwebapps+""/logs/orders"");\n\t\t\tfolderOrderLog.mkdirs();\n\n\t\t\tswitch (option) {\n\t\t\tcase 1://STOCK\n\t\t\t\tlogFileName=wtpwebapps+""/logs/orders/stock_""+frm.format(date)+"".txt"";\n\t\t\t\tlogFileNameHystic=wtpwebapps+""/logs/orders/stock_"";\n\t\t\t\tbreak;\n\t\t\tcase 2://UPDATE ORDERS\n\t\t\t\tlogFileName=wtpwebapps+""/logs/orders/orders_""+frm.format(date)+"".txt"";\n\t\t\t\tlogFileNameHystic=wtpwebapps+""/logs/orders/orders_"";\n\t\t\t\tbreak;\n\t\t\tcase 3://UPDATE/INSERT SPECIAL SHIPPING\n\t\t\t\tlogFileName=wtpwebapps+""/logs/orders/specialShipping_""+frm.format(date)+"".txt"";\n\t\t\t\tlogFileNameHystic=wtpwebapps+""/logs/orders/specialShipping_"";\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tfor(int i=1; i<=6;i++){\n\t\t\t\tmyCalendar.add(Calendar.DATE, -1);\n\t\t\t\tDate d=myCalendar.getTime();\n\t\t\t\tString logFileNameHysticItem=logFileNameHystic+frm.format(d);\t\t\n\t\t\t\tFile fileLog=new File(logFileNameHysticItem+"".txt"");\n\t\t\t\tfileLog.delete();\t\t\n\t\t\t}\n\t\t\tPrintWriter pw= new PrintWriter(new FileWriter(logFileName,true),true);\n\t\t\tDate today=new Date();\n\t\t\tSimpleDateFormat frmTime=new SimpleDateFormat(""dd/MM/yyyy HH:mm:ss"");\n\t\t\tString strToday=frmTime.format(today);\n\t\t\tString rapport=""===============================================\\n"";\n\t\t\trapport=rapport+strToday+ "" By:""+userAdminLogin+""\\n""+""===============================================\\n"";\t\n\t\t\tpw.println(rapport+errorReport);\n\t\t\tpw.close();\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n\n\t/**----------------------------------------------------------\n\t *PARCING CSV*\n\t  -----------------------------------------------------------*/\n\t@Override\n\tpublic void csvParsing(String csvFolder,String userLogin)throws Exception{\n\n\t\tBufferedReader pr=null;\n\t\tString result="""";\n\t\tString ligne="""";\n\t\tUser user=null;\n\t\tInteger id=0;\n\t\tArrayList<String[]> arraylist=new ArrayList<String[]>();\n\n\t\tuserService= serviceLocator.getUserService();\n\t\tuser=userService.getUserByLogin(userLogin);\n\t\tid=Integer.parseInt(user.getId().toString());\n\t\tpr=new BufferedReader(new FileReader(csvFolder+userLogin+"".csv"")); \n\t\twhile((ligne=pr.readLine())!=null){\n\t\t\tligne=ligne.replaceAll(""\\"""", """");\n\t\t\tString[] data=ligne.split("","");\n\t\t\tarraylist.add(data);\n\t\t\tresult+=ligne;\n\t\t} //End loop while\n\t\tpr.close();\n\t\tfinal String sheetName = ""Sheet1"";\n\t\tint row = 0;\n\t\tWorkbook existingWorkbook = Workbook.getWorkbook(new File(csvFolder+""transCsvTemplate.xls""));\n\t\tWritableWorkbook workbookCopy = Workbook.createWorkbook(new File(csvFolder+userLogin+"".xls""), existingWorkbook);\n\t\tWritableSheet sheetToEdit = workbookCopy.getSheet(sheetName);\n\t\t//LABELS\n\t\tLabel label=null;\n\t\trow=0;\n\t\tint col=0;\n\t\t// Create cell font and format\n\t\tWritableFont cellFontHeader = new WritableFont(WritableFont.TIMES, 12);\n\t\tcellFontHeader.setColour(Colour.BLACK);\n\t\tcellFontHeader.setBoldStyle(WritableFont.BOLD);\n\t\tWritableFont cellFontData = new WritableFont(WritableFont.TIMES);\n\t\tWritableCellFormat cellFormatHeader = new WritableCellFormat(cellFontHeader);\n\t\tWritableCellFormat cellFormatData = new WritableCellFormat(cellFontData);\n\t\tcellFormatHeader.setVerticalAlignment(VerticalAlignment.CENTRE);\n\t\tcellFormatHeader.setBorder(Border.ALL, BorderLineStyle.HAIR);\n\t\tcellFormatData.setVerticalAlignment(VerticalAlignment.CENTRE);\n\t\tWritableCell cell;\n\t\tfor (String[] d : arraylist) {\n\t\t\tcol=0;\n\t\t\tfor(int i=0;i< d.length;i++){\n\t\t\t\tif(row==0){\n\t\t\t\t\tlabel = new Label(col, row, d[col],cellFormatHeader);\n\t\t\t\t}else{\n\n\t\t\t\t\tString lsOrderId=d[col];\n\t\t\t\t\tif(col==16){\n\t\t\t\t\t\tswitch (id) {\n\t\t\t\t\t\tcase 39:\n\t\t\t\t\t\t\tlsOrderId=lsOrderId.replace(""LYS-CA-AC-"", """");\n\t\t\t\t\t\t\tlsOrderId=user.getCode()+lsOrderId;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\t\n\t\t\t\t\t}\t\t\n\t\t\t\t\tlabel = new Label(col, row, lsOrderId,cellFormatData);\n\t\t\t\t}\n\t\t\t\tcell = (WritableCell) label;\n\t\t\t\tsheetToEdit.addCell(cell);\n\t\t\t\tcol++;\n\t\t\t}\n\t\t\trow++;\n\t\t}\t\n\t\tworkbookCopy.write();\n\t\tworkbookCopy.close();\n\t\texistingWorkbook.close();\n\t}\n\n\t/**----------------------------------------------------------\n\t *Insert special cost into table Order_special_shipping*\n\t  -----------------------------------------------------------*/\n\t@Override\n\n\tpublic\tboolean insertOrderSpecialShipping(OrdersSpecialShippingDTO orderSpecialDTO){\n\t\tboolean result=false;\n\t\tfinal OrdersSpecialShipping orderSpecial=DTOFactory.getOrderSpecialFromOrderSpecialDTO(orderSpecialDTO);\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresult = (Boolean) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().insertOrderSpecialShipping(orderSpecial);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry { \n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn result;\t\n\t}\n\n\n\t/**----------------------------------------------------------\n\t *Update special cost into table Order_special_shipping*\n\t  -----------------------------------------------------------*/\n\t@Override\n\n\tpublic\tboolean updateOrderSpecialShipping(OrdersSpecialShippingDTO orderSpecialDTO){\n\t\tboolean result=false;\n\t\tfinal OrdersSpecialShipping orderSpecial=DTOFactory.getOrderSpecialFromOrderSpecialDTO(orderSpecialDTO);\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresult = (Boolean) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().updateOrderSpecialShipping(orderSpecial);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry { \n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn result;\t\n\t}\n\n\t/**----------------------------------------------------------\n\t *get special Shipping cost by user and product_id*\n\t  -----------------------------------------------------------*/\n\t@Override\n\n\tpublic\tOrdersSpecialShippingDTO getOrderSpecialShipping(OrdersSpecialShippingDTO orderSpecialDTO){\n\t\tOrdersSpecialShipping result=null;\n\t\tfinal OrdersSpecialShipping orderSpecial=DTOFactory.getOrderSpecialFromOrderSpecialDTO(orderSpecialDTO);\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresult = (OrdersSpecialShipping) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().getOrderSpecialShipping(orderSpecial);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry { \n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn DTOFactory.getOrderSpecialDTOFromOrderSpecial(result);\n\t}\n\n\n\t/***\n\t * \n\t * @param orderDTO\n\t * @param option\n\t * @return\n\t */\n\n\tpublic OrdersDTO orderDTOSplitFirstLastName(OrdersDTO orderDTO,int option){\n\t\tString whole = orderDTO.getClientLastName();\n\t\tString[] elems = null;\n\t\tif (whole != null) {\n\t\t\telems = whole.split(""\\\\s"");\n\t\t\tswitch (option) {\n\t\t\tcase 0:\n\t\t\t\torderDTO.setClientFirstName("""");\n\t\t\t\torderDTO.setClientLastName("""");\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\torderDTO.setClientFirstName("""");\n\t\t\t\torderDTO.setClientLastName("""");\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\torderDTO.setClientFirstName("""");\n\t\t\t\torderDTO.setClientLastName(elems[1]);\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\torderDTO.setClientFirstName(elems[2]);\n\t\t\t\torderDTO.setClientLastName(elems[1]);\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\torderDTO.setClientFirstName(elems[3]);\n\t\t\t\torderDTO.setClientLastName(elems[1]+"" ""+elems[2]);\n\t\t\t\tbreak;\n\t\t\tcase 5:\n\t\t\t\torderDTO.setClientFirstName(elems[4]);\n\t\t\t\torderDTO.setClientLastName(elems[1] + "" "" + elems[2]+"" ""+ elems[3]);\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t}\n\t\treturn orderDTO;\n\t}\n\n\n\t//========================================= Client's Part ============================================\n\n\t@SuppressWarnings(""unchecked"")\n\t/**----------------------------------------------------------\n\t *get All Clients By User*\n\t  -----------------------------------------------------------*/\n\t@Override\n\tpublic List<OrdersDTO>getAllClientsByUser(final Long userId){\n\t\tList<Orders> result=null;\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresult = (List<Orders>) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().getAllClientsByUser(userId);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry { \n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn DTOFactory.getListOrderDTOFromListOrder(result) ;\t\n\t}\n\t/**----------------------------------------------------------\n\t *Add New Destination*\n  \t -----------------------------------------------------------*/\n\t@Override\n\tpublic boolean insertNewDestination(OrdersDTO orderDTO){\n\t\tfinal Orders order=DTOFactory.getOrderFromOrderDTO(orderDTO);\n\t\tboolean result=false;\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresult = (Boolean) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().insertNewDestination(order);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry {\n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\t@Override\n\tpublic boolean insertUserFileRecovery(UserFileRecoveryDTO userFileRecoveryDTO) throws ServiceException {\n\t\tfinal UserFileRecovery userFileRecovery = DTOFactory.BuildUserFileRecovery(userFileRecoveryDTO) ;\n\t\tboolean result=false;\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresult = (Boolean) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getUserFileRecoveryDao().insertUserFileRecovery(userFileRecovery);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry {\n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\t// A method that read all the columns of the first row for userFileRecovery\n\t@Override\n\tpublic  List<ItemMapDTO> getItemsUserFileMapping(File fileToMap, int fileType) throws Exception{\n\t\tList<ItemMapDTO> listOfitem = new ArrayList<ItemMapDTO>();\n\t\tItemMapDTO imDTO;\n\t\tswitch (fileType) {\n\t\tcase 1://for xml file.\n\t\t\tString fileName = fileToMap.getAbsolutePath();\n\t\t\tString[] xmlTagNames = getAllTagNames(fileName);\n\t\t\tif(xmlTagNames != null && xmlTagNames.length>0){\n\t\t\t\tSet<String> mySet = new HashSet<String>(Arrays.asList(xmlTagNames));\n\t\t\t\tfor(String str : mySet){\n\t\t\t\t\timDTO = new ItemMapDTO();\n\t\t\t\t\timDTO.setKey(str);\n\t\t\t\t\timDTO.setValue(str);\n\t\t\t\t\tlistOfitem.add(imDTO);\t\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 2: case 3: // For reading the columns of the xls , csv file\n\n\t\t\tWorkbook workbook = Workbook.getWorkbook(fileToMap);\n\t\t\tSheet sheetToRead = workbook.getSheet(0);\n\t\t\tint COL_MAX = sheetToRead.getColumns();\n\n\t\t\tfor(int col=0; col < COL_MAX;col++) {\n\t\t\t\tString itemLabel=sheetToRead.getCell(col, 0).getContents();\n\t\t\t\tif(itemLabel!=null && !itemLabel.equals("""")){\n\t\t\t\t\timDTO = new ItemMapDTO();\n\t\t\t\t\timDTO.setKey(Integer.toString(col+1));\n\t\t\t\t\timDTO.setValue(itemLabel);\n\t\t\t\t\tlistOfitem.add(imDTO);\t\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\n\t\t}\n\t\treturn listOfitem;\n\t}\n\n\t// A method that read an xml and returns a String array with the all the Tag names.\n\tpublic String[] getAllTagNames(String fileName) throws Exception {\n\t\t// TODO Auto-generated method stub\n\t\tString[] xmlTagNames = null;\n\t\tDocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n\t\tDocumentBuilder db = dbf.newDocumentBuilder();\n\t\tFile file = new File(fileName);\n\t\tif(file.exists()){\n\t\t\tDocument doc = db.parse(file);\n\t\t\tElement docEle = doc.getDocumentElement();\n\t\t\tNodeList nodeList=doc.getElementsByTagName(""*"");\n\t\t\txmlTagNames =  new String[nodeList.getLength()];\n\t\t\tfor (int i=0; i<nodeList.getLength(); i++){\n\t\t\t\tElement element = (Element)nodeList.item(i);\n\t\t\t\txmlTagNames[i]=(element.getNodeName());\n\t\t\t}\n\t\t}\n\t\treturn xmlTagNames;\t\n\t}\n\n\t@Override\n\tpublic boolean isFileDownloaded(UserFilesDownloadedDTO ufdDTO) throws ServiceException {\n\t\tfinal UserFilesDownloaded ufd = DTOFactory.BuildUserFilesDownloaded(ufdDTO) ;\n\t\tboolean result=false;\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresult = (Boolean) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().isFileDownloaded(ufd);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry {\n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\t@Override\n\tpublic boolean insertUserFilesDownloaded(UserFilesDownloadedDTO ufdDTO) throws ServiceException {\n\t\tfinal UserFilesDownloaded ufd = DTOFactory.BuildUserFilesDownloaded(ufdDTO) ;\n\t\tboolean result=false;\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresult = (Boolean) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().insertUserFilesDownloaded(ufd);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry {\n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\n\t@SuppressWarnings(""unchecked"")\n\t@Override\n\tpublic List<UserFilesDownloadedDTO> getListFileDownloadedDTO(final String userLogin, final Integer userLoginOption,final Integer treatedOption) throws ServiceException{\n\t\tList<UserFilesDownloaded> result=null;\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresult = (List<UserFilesDownloaded>) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().getListFileDownloaded(userLogin,userLoginOption,treatedOption);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) { \n\t\t\ttry { \n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn DTOFactory.getListFileDownloadedDTOFromModel(result) ;\t\n\t}\n\n\t@Override\n\tpublic boolean isFileForUser(final String fileToImport, final String userLogin) throws ServiceException{\n\t\tBoolean result=false;\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresult = (Boolean) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().isFileForUser(fileToImport, userLogin);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry {\n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\n\t@Override\n\tpublic boolean updateFilesDownloadedStatus(final String fileToImport, final String userLogin, final boolean treated)throws Exception{\n\t\tBoolean result=false;\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresult = (Boolean) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().updateFilesDownloadedStatus(fileToImport,userLogin,treated);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry {\n\t\t\t\tthrow new Exception(de);\n\t\t\t} catch (Exception e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn result;\n\n\t}\n\n\t/**----------------------------------------------------------\n\t *THIS FUNCTION ALLOWS US TO TRANSFORM AN XML FILE TO A LIST \n\t   OF ORDERS FOR RIDEAU*\n\t  -----------------------------------------------------------*/\t\n\t@SuppressWarnings({ ""rawtypes"", ""unchecked"" })\n\t@Override\n\tpublic Collection  toArrayListFromXML_Rideau(File orderFile,String userLogin,String fileToImport)throws Exception {\n\t\tCollection listOrdersDTO = new ArrayList();\n\t\tUserFileRecoveryDTO ufrDTO;\n\t\tString formatDate="""";\n\t\tHashtable<String, String>lsOrdersIdHash=new Hashtable<String, String>();\n\t\tproductService = serviceLocator.getProductService();\n\n\t\tif(orderFile==null)return listOrdersDTO;\n\t\tList<ProvinceDTO> listProvine= productService.getAllProvinces();\n\t\tUserFileDataRecoveryDTO ufDataDTO=new UserFileDataRecoveryDTO();\n\t\tDocumentBuilderFactory docBuilderFactory = DocumentBuilderFactory.newInstance();\n\t\tDocumentBuilder docBuilder = docBuilderFactory.newDocumentBuilder();\n\t\tDocument doc = docBuilder.parse (orderFile);\n\t\tufrDTO=getUserFileRecoveryByUser(userLogin);\n\t\t// normalize text representation\n\t\tdoc.getDocumentElement ().normalize ();\n\n\t\tif(fileToImport!=null && fileToImport.length()==12){ \n\t\t\tint index =fileToImport.lastIndexOf(""."");\n\t\t\tString fileNameWithout_OD_ext=fileToImport.substring(2,index); \n\t\t\tLong fileCounter= Long.parseLong(fileNameWithout_OD_ext);\n\t\t\tString file_seq = getValue(""file_sequence"",doc,0);\n\t\t\tLong fileSeqNo=0L;\n\t\t\tif(file_seq != null)\n\t\t\t\tfileSeqNo = Long.parseLong(file_seq);\n\t\t\tif(fileCounter.longValue()!=fileSeqNo.longValue()){\n\t\t\t\treturn listOrdersDTO;\n\t\t\t}\n\t\t}\n\t\tif(ufrDTO!=null && ufrDTO.getTagRoot()!=null  && ufrDTO.getFileTypeId()==1){\n\t\t\tNodeList listOfOrders = doc.getElementsByTagName(ufrDTO.getTagRoot());\n\t\t\tfor(int s=0; s<listOfOrders.getLength() ; s++){\n\t\t\t\tNode firstOrderNode = listOfOrders.item(s);   \n\t\t\t\tif(firstOrderNode.getNodeType() == Node.ELEMENT_NODE){\n\t\t\t\t\tElement firstOrderElement = (Element)firstOrderNode;\n\t\t\t\t\tint numberOfOrders = firstOrderElement.getElementsByTagName(""item_detail"").getLength();\n\t\t\t\t\tfor(int i = 0 ; i < numberOfOrders; i++){\n\t\t\t\t\t\tif(getValue(""detail_type"", firstOrderElement,i)!=null &&  getValue(""detail_type"", firstOrderElement,i).equalsIgnoreCase(""SO"") ){\n\t\t\t\t\t\t\tufDataDTO=new UserFileDataRecoveryDTO();\n\t\t\t\t\t\t\tufDataDTO.setUserId(ufrDTO.getUserId());\n\t\t\t\t\t\t\t//--------------- 1:companyHeader -----------\n\t\t\t\t\t\t\tString companyHeader="""";\n\t\t\t\t\t\t\tif(ufrDTO.getCompanyHeader()!=null){\n\t\t\t\t\t\t\t\tcompanyHeader=getValue(""ship_to_company_name"", firstOrderElement, 0);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tufDataDTO.setCompanyHeader(companyHeader);\n\n\t\t\t\t\t\t\t//--------------- 2:productOrderNumber <source>+<program_id>+ <client_po> = PO number (ex: C RM C-H1281210)----------------\n\t\t\t\t\t\t\tString productOrderNumber="""";\n\t\t\t\t\t\t\tString source="""";\n\t\t\t\t\t\t\tString programId="""";\n\t\t\t\t\t\t\tif(ufrDTO.getProductOrderNumber()!=null){\n\t\t\t\t\t\t\t\tproductOrderNumber=getValue(ufrDTO.getProductOrderNumber(), firstOrderElement, 0);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tsource=getValue(""source"", firstOrderElement, 0);\n\t\t\t\t\t\t\tprogramId=getValue(""program_id"", firstOrderElement, 0);\n\t\t\t\t\t\t\tufDataDTO.setProductOrderNumber(source+"" ""+programId+"" ""+productOrderNumber);   \n\n\t\t\t\t\t\t\t//--------------- 3:productOrderDate -----------------\n\t\t\t\t\t\t\tString productOrderDate="""";\n\t\t\t\t\t\t\tif(ufrDTO.getProductOrderDate()!=null){\n\t\t\t\t\t\t\t\tproductOrderDate= getValue(ufrDTO.getProductOrderDate(), firstOrderElement, 0);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tformatDate=""yyyy-MM-dd hh:mm:ss"";\n\t\t\t\t\t\t\tSimpleDateFormat sdf = new SimpleDateFormat(formatDate);\n\t\t\t\t\t\t\tDate dateOrder=null;\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tDate date = sdf.parse(productOrderDate);\n\t\t\t\t\t\t\t\tdateOrder=date;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcatch (Exception pe) {\n\t\t\t\t\t\t\t\tdateOrder=null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tufDataDTO.setProductOrderDate(dateOrder);\n\n\t\t\t\t\t\t\t//--------------- 4:quantity -------------------------\n\t\t\t\t\t\t\tString strQuantity="""";\n\t\t\t\t\t\t\tif(ufrDTO.getQuantity()!=null){\n\t\t\t\t\t\t\t\tstrQuantity=getValue(ufrDTO.getQuantity(), firstOrderElement, i);\n\t\t\t\t\t\t\t\tif(strQuantity!=null)\n\t\t\t\t\t\t\t\t\tstrQuantity=strQuantity.replaceAll("" "", """");\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif(strQuantity!=null && !strQuantity.equals("""")){\n\t\t\t\t\t\t\t\tint index=strQuantity.indexOf("","");\n\t\t\t\t\t\t\t\tif(index>=0){\n\t\t\t\t\t\t\t\t\tString strUnitPrice1=strQuantity.substring(0, index);\n\t\t\t\t\t\t\t\t\tString strUnitPrice2= strQuantity.substring(index+1, strQuantity.length());\n\t\t\t\t\t\t\t\t\tstrQuantity=strUnitPrice1+"".""+strUnitPrice2;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tDouble quantity=null;\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tquantity = Double.parseDouble(strQuantity);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcatch (Exception pe) {\n\t\t\t\t\t\t\t\tquantity=null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tufDataDTO.setQuantity(quantity);\n\n\t\t\t\t\t\t\t//--------------- 5:lsProductID - Vendor item number ----------------------\n\t\t\t\t\t\t\tString lsProductID="""";\n\t\t\t\t\t\t\tif(ufrDTO.getLsProductID()!=null){\n\t\t\t\t\t\t\t\tlsProductID=getValue(ufrDTO.getLsProductID(), firstOrderElement, i);\n\t\t\t\t\t\t\t\t/*if(lsProductID.length()>3){\n\t\t\t\t\t\t\t\t\tlsProductID=lsProductID.substring(3);\n\t\t\t\t\t\t\t\t}*/\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tufDataDTO.setLsProductID(lsProductID);\n\n\t\t\t\t\t\t\t//--------------- 6:productDescription - client_item_detail------------------\n\t\t\t\t\t\t\tString productDescription="""";\n\t\t\t\t\t\t\tif(ufrDTO.getProductDescription()!=null){\n\t\t\t\t\t\t\t\tproductDescription=getValue(ufrDTO.getProductDescription(), firstOrderElement, i);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tproductDescription=productDescription.replaceAll("","", "" "");\n\t\t\t\t\t\t\tufDataDTO.setProductDescription(productDescription);\n\n\t\t\t\t\t\t\t//--------------- 7:unitPrice <item_price> = Unit Price---------------------------\n\t\t\t\t\t\t\tString strUnitPrice="""";\n\t\t\t\t\t\t\tif(ufrDTO.getUnitPrice()!=null){\n\t\t\t\t\t\t\t\tstrUnitPrice=getValue(ufrDTO.getUnitPrice(), firstOrderElement, i);\n\t\t\t\t\t\t\t\tif(strUnitPrice!=null && strUnitPrice.length()>0){\n\t\t\t\t\t\t\t\t\tstrUnitPrice= strUnitPrice.replaceAll(""\\\\$"", """");\n\t\t\t\t\t\t\t\t\tstrUnitPrice= strUnitPrice.replaceAll("" "", """");\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif(strUnitPrice!=null && !strUnitPrice.equals("""")){\n\t\t\t\t\t\t\t\tint index=strUnitPrice.indexOf("","");\n\t\t\t\t\t\t\t\tif(index>=0){\n\t\t\t\t\t\t\t\t\tString strUnitPrice1=strUnitPrice.substring(0, index);\n\t\t\t\t\t\t\t\t\tString strUnitPrice2= strUnitPrice.substring(index+1, strUnitPrice.length());\n\t\t\t\t\t\t\t\t\tstrUnitPrice=strUnitPrice1+"".""+strUnitPrice2;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tDouble ProductUnitPrice=null;\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tProductUnitPrice = Double.parseDouble(strUnitPrice);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcatch (Exception pe) {\n\t\t\t\t\t\t\t\tProductUnitPrice=null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tufDataDTO.setUnitPrice(ProductUnitPrice);\n\n\t\t\t\t\t\t\t//--------------- 8:clientNumber -------------------------\n\t\t\t\t\t\t\tString clientNumber="""";\n\t\t\t\t\t\t\tif(ufrDTO.getClientNumber()!=null){\n\t\t\t\t\t\t\t\tNodeList clientNumberList = doc.getElementsByTagName(ufrDTO.getClientNumber());\n\t\t\t\t\t\t\t\tif(clientNumberList!=null && clientNumberList.getLength()>0){\n\t\t\t\t\t\t\t\t\tElement clientNumberElement = (Element)clientNumberList.item(0);\n\t\t\t\t\t\t\t\t\tif(clientNumberElement!=null){\n\t\t\t\t\t\t\t\t\t\tNodeList clientNumberFNList = clientNumberElement.getChildNodes();\n\t\t\t\t\t\t\t\t\t\tif(clientNumberFNList!=null && clientNumberFNList.getLength()>0){\n\t\t\t\t\t\t\t\t\t\t\tclientNumber =((Node)clientNumberFNList.item(0)).getNodeValue().trim(); \n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tufDataDTO.setClientNumber(clientNumber);\n\n\t\t\t\t\t\t\t//--------------- 9 and 10 :full name <ship_to_name> = Client First Name + Client Last Name (split after space) ---------------------------\n\t\t\t\t\t\t\t//CASE 1: If productOrderNumber dosen't started with ""C RM""\n\t\t\t\t\t\t\tString fullName="""";\n\t\t\t\t\t\t\tif(ufrDTO.getClientFirstName()!=null){\n\t\t\t\t\t\t\t\tfullName=getValue(ufrDTO.getClientFirstName(), firstOrderElement, 0);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tfullName=fullName.replaceAll("","", "" "");\n\t\t\t\t\t\t\tString[] tokens = fullName.split("" "");\n\t\t\t\t\t\t\tString firstName="""";\n\t\t\t\t\t\t\tString lastName="""";\n\t\t\t\t\t\t\tif(tokens.length > 1) {\n\t\t\t\t\t\t\t\tfirstName= tokens[0];\n\t\t\t\t\t\t\t\tlastName = fullName.substring(fullName.indexOf("" ""));\n\t\t\t\t\t\t\t\tfirstName=firstName.replaceAll("" "", """");\n\t\t\t\t\t\t\t\tlastName=lastName.replaceAll("" "", """");\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\tfirstName= tokens[0];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tufDataDTO.setClientFirstName(firstName);\n\t\t\t\t\t\t\t//lastName\n\t\t\t\t\t\t\tufDataDTO.setClientLastName(lastName);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t//CASE 2: If productOrderNumber dosen't started with ""C RM""\n\t\t\t\t\t\t\tproductOrderNumber=ufDataDTO.getProductOrderNumber();\n\t\t\t\t\t\t\tproductOrderNumber=productOrderNumber.replaceAll("" "", """");\n\t\t\t\t\t\t\tif(productOrderNumber!=null && productOrderNumber.startsWith(""CRMC"")){\n\t\t\t\t\t\t\t\tfullName="""";\n\t\t\t\t\t\t\t\tif(ufrDTO.getClientLastName()!=null){\n\t\t\t\t\t\t\t\t\tfullName=getValue(ufrDTO.getClientLastName(), firstOrderElement, 0);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tufDataDTO.setClientFirstName(""Rideau"");\n\t\t\t\t\t\t\t\t//lastName\n\t\t\t\t\t\t\t\tufDataDTO.setClientLastName(fullName);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t//--------------- 11:addressStreet,  <ship_to_street_1>----------------------\n\t\t\t\t\t\t\tString addressStreet="""";\n\t\t\t\t\t\t\tif(ufrDTO.getClientStreet()!=null){\n\t\t\t\t\t\t\t\taddressStreet=getValue(ufrDTO.getClientStreet(), firstOrderElement, 0);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\taddressStreet=addressStreet.replaceAll("","", "" "");\n\t\t\t\t\t\t\tufDataDTO.setClientStreet(addressStreet);\n\n\t\t\t\t\t\t\t//--------------- 12:addressStreetOther <ship_to_street_2>----------------\n\t\t\t\t\t\t\tString addressStreetOther="""";\n\t\t\t\t\t\t\tif(ufrDTO.getClientOtherStreet()!=null){\n\t\t\t\t\t\t\t\taddressStreetOther=getValue(ufrDTO.getClientOtherStreet(), firstOrderElement, 0);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tufDataDTO.setClientOtherStreet(addressStreetOther);\n\n\t\t\t\t\t\t\t//--------------- 13:addressCity, <ship_to_city> ------------------------\n\t\t\t\t\t\t\tString addressCity="""";\n\t\t\t\t\t\t\tif(ufrDTO.getClientCity()!=null){\n\t\t\t\t\t\t\t\taddressCity=getValue(ufrDTO.getClientCity(), firstOrderElement, 0);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tufDataDTO.setClientCity(addressCity);\n\n\t\t\t\t\t\t\t//--------------- 14:addressPostalCode, ship_to_postal_code ---------------------\n\t\t\t\t\t\t\tString addressPostalCode="" "";\n\t\t\t\t\t\t\tif(ufrDTO.getClientPostalCode()!=null){\n\t\t\t\t\t\t\t\taddressPostalCode=getValue(ufrDTO.getClientPostalCode(), firstOrderElement, 0);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\taddressPostalCode=addressPostalCode.replaceAll("" "", """");\n\t\t\t\t\t\t\tufDataDTO.setClientPostalCode(addressPostalCode);\n\n\t\t\t\t\t\t\t//--------------- 15:addressState ship_to_province-------------------------\n\t\t\t\t\t\t\tString addressState="""";\n\t\t\t\t\t\t\tif(ufrDTO.getClientProvince()!=null){\n\t\t\t\t\t\t\t\taddressState=getValue(ufrDTO.getClientProvince(), firstOrderElement, 0);\n\t\t\t\t\t\t\t\tif(addressState!=null && addressState.length()>0){\n\t\t\t\t\t\t\t\t\tString clientProvinceToCompar=addressState.toLowerCase();\n\t\t\t\t\t\t\t\t\tclientProvinceToCompar=clientProvinceToCompar.replaceAll("" "", """");\n\t\t\t\t\t\t\t\t\tclientProvinceToCompar=clientProvinceToCompar.replaceAll(""canada"", """");\n\t\t\t\t\t\t\t\t\tclientProvinceToCompar=clientProvinceToCompar.replaceAll("","", """");\n\t\t\t\t\t\t\t\t\tclientProvinceToCompar=clientProvinceToCompar.replaceAll(""\\\\."", """");\n\t\t\t\t\t\t\t\t\tfor(ProvinceDTO prov:listProvine){\n\t\t\t\t\t\t\t\t\t\tString provName=prov.getName();\n\t\t\t\t\t\t\t\t\t\tprovName=provName.replaceAll("" "", """");\n\t\t\t\t\t\t\t\t\t\tprovName= provName.toLowerCase();\n\t\t\t\t\t\t\t\t\t\tif(clientProvinceToCompar.equals(provName) || clientProvinceToCompar.equals(prov.getCode()) ){\n\t\t\t\t\t\t\t\t\t\t\taddressState=\tprov.getCode();\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\taddressState=addressState.replaceAll(""\\\\."", """");\n\t\t\t\t\t\t\t\t\tif(clientProvinceToCompar.equals(""""))addressState=""""; \n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tufDataDTO.setClientProvince(addressState);\n\n\t\t\t\t\t\t\t//--------------- 16:clientPhone, ship_to_phone --------------------------\n\t\t\t\t\t\t\tString clientPhone="""";\n\t\t\t\t\t\t\tif(ufrDTO.getClientPhone()!=null){\n\t\t\t\t\t\t\t\tclientPhone=getValue(ufrDTO.getClientPhone(), firstOrderElement, 0);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t//--------------- 17:client_phone_zone -------------------------\n\t\t\t\t\t\t\tString clientPhoneZone="""";\n\t\t\t\t\t\t\tif(ufrDTO.getClientPhoneZone()!=null){\n\t\t\t\t\t\t\t\tclientPhoneZone=getValue(ufrDTO.getClientPhoneZone(), firstOrderElement, 0);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(clientPhoneZone!=null && !clientPhoneZone.equals(""""))clientPhone=clientPhoneZone+"" ""+clientPhone;\n\t\t\t\t\t\t\tufDataDTO.setClientPhone(clientPhone);\n\n\t\t\t\t\t\t\t//--------------- 18:clientEmail -------------------------\n\t\t\t\t\t\t\tString clientEmail="""";\n\t\t\t\t\t\t\tif(ufrDTO.getClientEmail()!=null){\n\t\t\t\t\t\t\t\tclientEmail=getValue(ufrDTO.getClientEmail(), firstOrderElement, 0);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tufDataDTO.setClientEmail(clientEmail);\n\n\t\t\t\t\t\t\t//--------------- 19:requiredDate, required_date -------------------------\n\t\t\t\t\t\t\tString requiredDate="""";\n\t\t\t\t\t\t\tif(ufrDTO.getRequiredDate()!=null){\n\t\t\t\t\t\t\t\trequiredDate=getValue(ufrDTO.getRequiredDate(), firstOrderElement, i);\n\t\t\t\t\t\t\t\tif(requiredDate!=null && requiredDate.length()>0){\n\t\t\t\t\t\t\t\t\trequiredDate=requiredDate.replaceAll("" "", """");\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tformatDate=ufrDTO.getFormatDate();\n\t\t\t\t\t\t\tif(formatDate==null)formatDate="""";\n\t\t\t\t\t\t\tsdf = new SimpleDateFormat(formatDate);\n\t\t\t\t\t\t\tDate requiredDateOrder=null;\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tDate date = sdf.parse(requiredDate);\n\t\t\t\t\t\t\t\trequiredDateOrder=date;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcatch (Exception pe) {\n\t\t\t\t\t\t\t\trequiredDateOrder=null;\n\t\t\t\t\t\t\t}                     \n\t\t\t\t\t\t\tufDataDTO.setRequiredDate(requiredDateOrder);\n\n\t\t\t\t\t\t\t//--------------- 20:clients_other_names, <ship_to_company_name>+<ship_to_other1_name>+<ship_to_other2_name>  -------------------------\n\t\t\t\t\t\t\tString clientsOtherNames = """";\n\t\t\t\t\t\t\tString shipToOtherNames1 = """";\n\t\t\t\t\t\t\tString shipToOtherNames2 = """";\n\t\t\t\t\t\t\tif (ufrDTO.getClientOtherNames() != null) {\n\t\t\t\t\t\t\t\tclientsOtherNames=getValue(ufrDTO.getClientOtherNames(), firstOrderElement, 0);\n\t\t\t\t\t\t\t\tshipToOtherNames2=getValue(""ship_to_other2_name"", firstOrderElement, 0);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tufDataDTO.setClientOtherNames(clientsOtherNames +"" "" + shipToOtherNames1 + "" "" + shipToOtherNames2);\n\n\t\t\t\t\t\t\t//--------------- 21:lsOrderId ------------------------\n\t\t\t\t\t\t\tString code=userLogin.substring(0, 2).toUpperCase();\n\t\t\t\t\t\t\tString lsOrderId=ufDataDTO.getProductOrderNumber();\n\n\t\t\t\t\t\t\tint inc=0;//increment\n\t\t\t\t\t\t\tString lsOrderIdParent=lsOrderId;\n\t\t\t\t\t\t\tlsOrderIdParent=lsOrderIdParent.replaceFirst(""-"", """");\n\t\t\t\t\t\t\tlsOrderIdParent=lsOrderIdParent.replaceFirst(""_"", """");\n\t\t\t\t\t\t\tlsOrderIdParent=lsOrderIdParent.replaceFirst(""R"", """");\n\t\t\t\t\t\t\tlsOrderIdParent=lsOrderIdParent.replaceAll("" "", """");\n\t\t\t\t\t\t\tif(lsOrderIdParent.length()>14){\n\t\t\t\t\t\t\t\tint index=lsOrderIdParent.length()-14;\n\t\t\t\t\t\t\t\tlsOrderIdParent=lsOrderIdParent.substring(index, lsOrderIdParent.length());\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tString lsOrderIdToGenerate=code+""O""+ufDataDTO.getUserId()+lsOrderIdParent;;\n\t\t\t\t\t\t\twhile(isLsOrderIdUsed(lsOrderIdToGenerate) || lsOrdersIdHash.containsKey(lsOrderIdToGenerate)){\n\t\t\t\t\t\t\t\tinc++; \n\t\t\t\t\t\t\t\tlsOrderIdToGenerate=code+""O""+ufDataDTO.getUserId()+lsOrderIdParent+""R""+inc;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlsOrdersIdHash.put(lsOrderIdToGenerate, lsOrderIdToGenerate);\n\t\t\t\t\t\t\tufDataDTO.setLsOrderId(lsOrderIdToGenerate);\n\n\t\t\t\t\t\t\t//--------------- 22:Shipping company  - comments -------------------------\n\t\t\t\t\t\t\t/*\n\t\t\t\t\t\t\t * Note : just copy the shipping details only when program id is RM for all other case, put blank in DB*/\n\t\t\t\t\t\t\tString shippingCompany="""";\n\t\t\t\t\t\t\tif(ufrDTO.getShippingCompany()!=null && programId.equalsIgnoreCase(""RM"")){\n\t\t\t\t\t\t\t\tshippingCompany=getValue(ufrDTO.getShippingCompany(), firstOrderElement,0);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(shippingCompany!= null && shippingCompany.length()> 30){\n\t\t\t\t\t\t\t\tint index = shippingCompany.indexOf(""Shipping info:"");\n\t\t\t\t\t\t\t\tif(index >= 0){\n\t\t\t\t\t\t\t\t\tshippingCompany=shippingCompany.substring(15).trim();\n\t\t\t\t\t\t\t\t\tif(shippingCompany.length()>30){\n\t\t\t\t\t\t\t\t\t\tint idx=shippingCompany.length()-30;\n\t\t\t\t\t\t\t\t\t\tshippingCompany=shippingCompany.substring(idx, shippingCompany.length());\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tufDataDTO.setShippingCompany(shippingCompany);\n\n\t\t\t\t\t\t\t//--------------- 23:Notes ---------------------------------------------------------\n\t\t\t\t\t\t\tString notes = """";\n\t\t\t\t\t\t\tString noteTags="""";\n\t\t\t\t\t\t\tif(ufrDTO.getNotes()!=null){\n\t\t\t\t\t\t\t\tnotes=getValue(ufrDTO.getNotes(),firstOrderElement,0);\n\t\t\t\t\t\t\t\tnoteTags=ufrDTO.getNotes();\n\t\t\t\t\t\t\t\tif(noteTags!=null && noteTags!=""""){\n\t\t\t\t\t\t\t\t\tString[] tags = noteTags.split(""?"");\n\t\t\t\t\t\t\t\t\tfor(int a = 0 ; a <tags.length; a ++){\n\t\t\t\t\t\t\t\t\t\tnotes = notes + getValue(tags[a],doc,a);\n\t\t\t\t\t\t\t\t\t\tif(a <tags.length-1 )\n\t\t\t\t\t\t\t\t\t\t\tnotes=notes+(""?"");\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tufDataDTO.setOrderFileInfo(notes);\n\n\t\t\t\t\t\t\t//--------------- 24:Client product number <client_item_number>  -------------------------\n\t\t\t\t\t\t\tString clientProductNumber="""";\n\t\t\t\t\t\t\tif(ufrDTO.getClientProductNumber()!=null){\n\t\t\t\t\t\t\t\tclientProductNumber=getValue(ufrDTO.getClientProductNumber(), firstOrderElement,i);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tufDataDTO.setClientProductNumber(clientProductNumber);\n\n\t\t\t\t\t\t\t//--------------- 25:clientOtherId -------------------------\n\t\t\t\t\t\t\tString clientOtherId="""";\n\t\t\t\t\t\t\tif(ufrDTO.getClientOtherId()!=null){\n\t\t\t\t\t\t\t\tclientOtherId=getValue(ufrDTO.getClientOtherId(), firstOrderElement, 0);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tufDataDTO.setClientOtherId(clientOtherId);\n\n\t\t\t\t\t\t\t//--------------- 26:clientOrderNumber, <client_po_detail> = Client Order ID-------------------------\n\t\t\t\t\t\t\tString clientOrderNumber="""";\n\t\t\t\t\t\t\tif(ufrDTO.getClientOrderNumber()!=null){\n\t\t\t\t\t\t\t\tclientOrderNumber=getValue(ufrDTO.getClientOrderNumber(), firstOrderElement, i);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tufDataDTO.setClientOrderNumber(clientOrderNumber);\n\n\t\t\t\t\t\t\t//--------------- 27:customer product number-------------------------\n\t\t\t\t\t\t\tString cstProductNumber="""";\n\t\t\t\t\t\t\tif(ufrDTO.getCstProductNumber()!=null){\n\t\t\t\t\t\t\t\tcstProductNumber=getValue(ufrDTO.getCstProductNumber(), firstOrderElement, 0);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tufDataDTO.setCstProductNumber(cstProductNumber);\n\n\t\t\t\t\t\t\tufDataDTO.setCreationDate(new Date());\n\n\t\t\t\t\t\t\tlistOrdersDTO.add(ufDataDTO);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}//end of if clause\n\t\t\t}//end of for loop with s var\n\t\t}//end if with condition ufrDTO!=null\n\t\treturn listOrdersDTO;\n\t}\n\n\n\tprivate static String getValue(String tag, Element element , int i) {\n\t\tString nodeValue="""";\n\t\tNodeList nodeList = element.getElementsByTagName(tag);\n\t\tif(nodeList!=null && nodeList.getLength()> 0){\n\t\t\tElement nodeElement = (Element)nodeList.item(i);\n\t\t\tif(nodeElement!=null){\n\t\t\t\tNodeList nodes = nodeElement.getChildNodes();\n\t\t\t\tif(nodes!=null && nodes.getLength()>0){\n\t\t\t\t\tnodeValue =((Node)nodes.item(0)).getNodeValue().trim(); \n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn nodeValue;\n\t}\n\n\tprivate static String getValue(String tag, Document doc , int i) {\n\t\tString nodeValue="""";\n\t\tNodeList nodeList = doc.getElementsByTagName(tag);\n\t\tif(nodeList!=null && nodeList.getLength()> 0){\n\t\t\tElement nodeElement = (Element)nodeList.item(0);\n\t\t\tif(nodeElement!=null){\n\t\t\t\tNodeList nodes = nodeElement.getChildNodes();\n\t\t\t\tif(nodes!=null && nodes.getLength()>0){\n\t\t\t\t\tnodeValue =((Node)nodes.item(0)).getNodeValue().trim(); \n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn nodeValue;\n\t}\n\t@Override\n\tpublic boolean updateFileSequenceShipping(final Long userId ,final int fileSequenceNo) throws ServiceException {\n\t\tboolean result=false;\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresult = (Boolean) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().updateFileSequenceShipping(userId,fileSequenceNo);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry {\n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\t@Override\n\tpublic boolean updateFileSequenceInvoice(final Long userId ,final int fileSequenceNo) throws ServiceException {\n\t\tboolean result=false;\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresult = (Boolean) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().updateFileSequenceInvoice(userId,fileSequenceNo);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry {\n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\t/**----------------------------------------------------------\n\t *GET ORDER DTO BY LS_ORDER_ID*\n  \t-----------------------------------------------------------*/\t\n\t@Override\n\tpublic OrdersDTO getInvoiceOrderByLsOrderId(final String lsOrderId)\tthrows ServiceException { \n\t\tOrders order=null;\t\n\t\tOrdersDTO result=null;\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\torder = (Orders) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().getInvoiceOrderByLsOrderId(lsOrderId);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry {\n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\tif(order!=null)result=DTOFactory.getOrderDTOFromOrder(order);\n\t\treturn result;\n\n\t}\n\n\t@Override\n\tpublic Double getTotalShippedQuantityForSplitOrders(final String lsOrderId){ \n\t\tDouble count= new Double(0); \n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tcount = (Double) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().getTotalShippedQuantityForSplitOrders(lsOrderId);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry {\n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn count;\n\t}\n\n\t@Override\n\tpublic Double getOrderedQuantity(final String lsOrderId) throws ServiceException {\n\t\tDouble count= new Double(0); \n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tcount = (Double) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().getOrderedQuantity(lsOrderId);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry {\n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn count;\n\t}\n\n\t/*// Update Stock\n\t@Override\n\tpublic boolean updateStock(final List<OrdersDTO> listStock) throws ServiceException {\n\t\tboolean result=false;\n\t\tfinal List<Orders>listOrders=DTOFactory.getListOrdersFromListOrdersDTO(listStock);\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresult = (Boolean) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().updateStock(listOrders);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry {\n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}*/\n\n\t//check if there are orders that wern't saved\n\t@Override\n\tpublic Integer nbOrdersNotSaved(List<OrdersDTO> ordersDTOListImported) throws ServiceException {\n\t\tInteger count=0;\n\t\tif(ordersDTOListImported==null)return count;\n\t\tfinal List<Orders> ordersListImported=DTOFactory.getListOrdersFromListOrdersDTO(ordersDTOListImported);\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tcount = (Integer) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().nbOrdersNotSaved(ordersListImported);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry {\n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn count;\n\t}\n\t\n\t/**----------------------------------------------------------\n\t * getCurrencyIdByUserId *\n\t  -----------------------------------------------------------*/\n\t@Override\n\tpublic CurrencyDTO getCurrencyIdByUserId(final Long userId){ \n\t\tCurrency currencyResult = new Currency();\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tcurrencyResult = (Currency) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\n\t\t\t\t\treturn daoManager.getOrdersDao().getCurrencyIdByUserId(userId);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry {\n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn DTOFactory.getCurrencyDTOBySymbol(currencyResult);\n\t}\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\n\t/**----------------------------------------------------------\n\t *Get ETA Orders List* (ufr.getEtaFieldName(),user.getId(),filePathData)\n\t  -----------------------------------------------------------*/\n\t@Override\n\tpublic List<OrdersDTO> getEtaOrdersList(String etaFieldName,Long userId,String destEtaOrderXLSFile)throws Exception{\n\t\tString errorReport="""";\n\t\t//variable indicating the numbers of columns in the XLS file\n\t\tint ROW_TO_START = 0;\n\t\tfinal int COL_PO=1;\n\t\tString  PO="""";\n\t\t//Cells\n\t\tCell cellPO= null;\n\t\tWorkbook existingWorkbook = Workbook.getWorkbook(new File(destEtaOrderXLSFile+""etaOrders.xls""));\n\t\tSheet sheetToRead=existingWorkbook.getSheet(0);\n\t\tint ROW_MAX = sheetToRead.getRows();\n\t\tList<OrdersDTO> orderList = new ArrayList<OrdersDTO>() ;\n\t\tList<OrdersDTO> etaFieldNameOrderlist =null;\n\t\tOrdersDTO orderDTO;\n\t\tfor(int row=ROW_TO_START; row< ROW_MAX;row++) {\n\t\t\t//--------------- 1: PO\n\t\t\tcellPO = sheetToRead.getCell(COL_PO-1, row);\t\t\t\n\t\t\tif(cellPO!=null)PO = cellPO.getContents();\n\t\t\tif(PO==null || PO.equals("""")){\n\t\t\t\terrorReport+="" ""+(row+1)+"" ,PO:""+PO+"" ,|---->dosen't exist \\n"";\n\t\t\t}else{\n\t\t\t\tint index=PO.indexOf(""/"");\n\t\t\t\tif(index>0)PO=PO.substring(0, index);\n\n\t\t\t}\n\t\t\torderDTO = new OrdersDTO();\n\t\t\torderDTO.setEtaFieldName(etaFieldName);\n\t\t\torderDTO.setUserId(userId);\n\t\t\torderDTO.setEtaFieldValue(PO);\n\t\t\tetaFieldNameOrderlist=getEtaOrderlistByFieldName(orderDTO);\n\t\t\tint size=etaFieldNameOrderlist.size();\n\t\t\tswitch (size) {\n\t\t\tcase 0:\n\t\t\t\torderDTO.setNotation(size+"""");\n\t\t\t\tetaFieldNameOrderlist=new ArrayList<OrdersDTO>();\n\t\t\t\tetaFieldNameOrderlist.add(orderDTO);\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tetaFieldNameOrderlist.get(0).setNotation(size+"""");\n\t\t\tdefault:\n\t\t\t\t//etaFieldNameOrderlist.get(0).setNotation(""1"");\n\t\t\t\tfor(int i=0;i<size;i++ ){\n\t\t\t\t\tetaFieldNameOrderlist.get(i).setNotation(size+"""");\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\torderList.addAll(etaFieldNameOrderlist);\n\t\t}\n\t\treturn orderList;\n\t}\n\n\n\t@SuppressWarnings(""unchecked"")\n\t@Override\n\tpublic List<OrdersDTO> getEtaOrderlistByFieldName(OrdersDTO orderDTO) throws ServiceException {\n\t\tList<Orders> result = null;\n\t\tfinal Orders order=new Orders();\n\t\torder.setUserId(orderDTO.getUserId());\n\t\torder.setEtaFieldName(orderDTO.getEtaFieldName());\n\t\torder.setEtaFieldValue(orderDTO.getEtaFieldValue());\n\t\ttry{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tresult = (List<Orders>) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\t\t\t\n\t\t\t\t\treturn daoManager.getOrdersDao().getEtaOrderlistByFieldName(order);\n\t\t\t\t}\n\t\t\t});\n\t\t}catch (DaoException de) {\n\t\t\ttry {\n\t\t\t\tthrow new ServiceException(de);\n\t\t\t} catch (ServiceException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn DTOFactory.getListOrderDTOFromListOrder(result);\n\t}\n\n\t\n}\n\n----------------------------------- SOURCE END -------------------------------------",1421271174466
error,log,,,"Problems occurred when invoking code from plug-in: ""org.eclipse.jdt.ui"".",1421271174467
error,log,,,"Error in JDT Core during reconcile",1421271174468
activated,view,org.eclipse.ui.console,3.5.0.v20100526,"org.eclipse.ui.console.ConsoleView",1421271174579
error,log,,,"Exception occurred during problem detection:\n----------------------------------- SOURCE BEGIN -------------------------------------\npackage com.loyauty.service.core.dto;\n\nimport java.util.Comparator;\nimport java.util.Date;\nimport java.util.List;\n\nimport lombok.Data;\nimport lombok.ToString;\n\nimport com.loyauty.enums.ProductStatus;\n\n/**\n * Contains data for the product.\n */\n@Data @ToString(callSuper=true)\npublic class ProductDTO extends BasicDTO{\n\t\t\n\tprivate static final long serialVersionUID = 1L;\n\t\n\tprivate Long selected;\n\tprivate String upc;\n\tprivate BrandDTO brand;\n\tprivate CategoryDTO category;\n\tprivate Long mainFilterTypeId;\n\tprivate String manufacturerProductId;\n\tprivate String loyaltyProductId;\n\tprivate CommonDTO nameEng;\n\tprivate CommonDTO nameFr;\n\tprivate ImageDTO image;\n\tprivate CommonDTO descriptionEng;\n\tprivate CommonDTO descriptionFr;\n\tprivate CommonDTO specificationEng;\n\tprivate CommonDTO specificationFr;\n\tprivate CommonDTO otherEng;\n\tprivate CommonDTO otherFr;\n\tprivate String msrp;\n\tprivate String cost;\n\tprivate String width;\n\tprivate String high;\n\tprivate String large;\n\tprivate String weight;\n\tprivate List<ProductModelDTO> manufactureProductList;\n\tprivate Date creationDate;\n\tprivate ProductStatus status;\n\tprivate String statusName;\n\tprivate String nameProduc;\n\tprivate String descriptiProduct;\n\tprivate String specificationProduct;\n\tprivate String otherProduct;\n\tprivate String priceProduct;  \n\tprivate String hrefName;\n\tprivate String localizedPriceProduct;\n\tprivate String note;\t\n\tprivate List<ProductLinkDTO> linkList;\t\n\tprivate Date discontinuedStartDate;\n\tprivate String loyaltyProductIdSub;\n\tprivate CommonDTO warrantyEng;\n\tprivate CommonDTO warrantyFr;\n\tprivate Long warrantyTranslationId;\n\tprivate Double discount;\n\tprivate Boolean wereWgtDimChanged;\n\tprivate Boolean consideredForXML;\n\tprivate String oldImageRealName;\n\tprivate Double stock;\n\tprivate String actualWidth;\n\tprivate String actualLength;\n\tprivate String actualHeight;\n\tprivate String actualWeight;\n\t\t\n\tprivate Double boxLength;\n\tprivate Double boxWidth;\n\tprivate Double boxHeight;\n\tprivate Double boxTotalWeight;\n\t\n\tprivate Double classification;\n\tprivate Double profit;\n\tprivate Double qtSold;\n\t\n\tpublic ProductDTO(){}\n        public static class Builder {\n         \n\t\t\t// Required parameters\n            private final Long id;\n            private final BrandDTO brand;\n            private final CategoryDTO categoryId;\n            \n            // Optional parameters - initialized to default values\n            private Long mainFilterTypeId = new Long(0);\n            private String manufacturerProductId = """";\n            private String loyaltyProductId = """";\n            private CommonDTO nameEng = null;\n            private CommonDTO nameFr = null;\n            private ImageDTO image = null;\n            private CommonDTO descriptionEng = null;\n            private CommonDTO descriptionFr = null;\n            private CommonDTO specificationEng = null;\n            private CommonDTO specificationFr = null;\n        \tprivate CommonDTO otherEng = null;\n        \tprivate CommonDTO otherFr = null;\n            private String msrp = """";\n            private String cost = """";\n            private String width = ""0"";\n            private String high = ""0"";\n            private String large = ""0"";\n            private String weight = """";\n            private String actualWidth = ""0"";\n        \tprivate String actualHeight= ""0"";\n        \tprivate String actualLength = ""0"";\n        \tprivate String actualWeight = """";           \n            private List<ProductModelDTO> manufactureProductList = null;\n            private Date creationDate = null;\n            private String nameProduc;\n        \tprivate String descriptiProduct;\n        \tprivate String specificationProduct;\n        \tprivate String otherProduct;    \n        \tprivate String priceProduct;\n        \tprivate String localizedPriceProduct;\n        \tprivate ProductStatus status;\n        \tprivate String statusName;        \t\n        \tprivate String note;        \t\n        \tprivate List<ProductLinkDTO> linkList;\n        \tprivate Date discontinuedStartDate = null;\n        \tprivate String loyaltyProductIdSub;\n        \tprivate CommonDTO warrantyEng;\n        \tprivate CommonDTO warrantyFr;\n        \tprivate Long warrantyTranslationId;\n        \tprivate Double discount;\n        \tprivate Boolean wereWgtDimChanged;\n        \tprivate Boolean consideredForXML;\t\n        \tprivate String oldImageRealName;\n            public Builder(Long Id, BrandDTO brand, CategoryDTO categoryId) {\n        \tthis.id = Id;\n        \tthis.brand = brand;\n        \tthis.categoryId = categoryId;\n            }\n            \n            public Builder mainFilterTypeId(Long val) { \n                mainFilterTypeId = val; \n                return this; \n            }\n            public Builder manufacturerProductId(String val) { \n\t        \tmanufacturerProductId = val; \n\t        \treturn this; \n            }\n            public Builder loyaltyProductId(String val) { \n\t        \tloyaltyProductId = val; \n\t        \treturn this; \n            }\n            public Builder nameEng(CommonDTO val) { \n\t        \tnameEng = val; \n\t        \treturn this; \n            }\n            public Builder nameFr(CommonDTO val) { \n\t        \tnameFr = val; \n\t        \treturn this; \n            }\n            public Builder descriptionEng(CommonDTO val) { \n\t        \tdescriptionEng = val; \n\t        \treturn this; \n            }\n            public Builder descriptionFr(CommonDTO val) { \n\t        \tdescriptionFr = val; \n\t        \treturn this; \n            }\n            public Builder specificationEng(CommonDTO val) { \n\t        \tspecificationEng = val; \n\t        \treturn this; \n            }\n            public Builder specificationFr(CommonDTO val) { \n\t        \tspecificationFr = val; \n\t        \treturn this; \n            }\n            public Builder otherEng(CommonDTO val) {\n            \totherEng = val;\n            \treturn this;\n            }\n            public Builder otherFr(CommonDTO val) {\n            \totherFr = val;\n            \treturn this;\n            }\n            public Builder image(ImageDTO val) { \n\t        \timage = val; \n\t        \treturn this; \n            }\n            public Builder msrp(String val) { \n\t        \tmsrp = val; \n\t        \treturn this; \n            }\n            public Builder cost(String val) { \n\t        \tcost = val; \n\t        \treturn this; \n            }\n            public Builder weight(String val) { \n\t        \tweight = val; \n\t        \treturn this; \n            }\n            public Builder width(String val) { \n\t        \twidth = val; \n\t        \treturn this; \n            }\n            public Builder high(String val) { \n\t        \thigh = val; \n\t        \treturn this; \n            }\n            public Builder large(String val) { \n\t        \tlarge = val; \n\t        \treturn this; \n            }\n            public Builder actualWeight(String val) { \n            \tactualWeight = val; \n\t        \treturn this; \n            }\n            public Builder actualWidth(String val) { \n            \tactualWidth = val; \n\t        \treturn this; \n            }\n            public Builder actualHeight(String val) { \n            \tactualHeight = val; \n\t        \treturn this; \n            }\n            public Builder actualLength(String val) { \n            \tactualLength = val; \n\t        \treturn this; \n            }\n            public Builder manufactureProductList(List<ProductModelDTO> val) { \n\t        \tmanufactureProductList = val; \n\t        \treturn this; \n            }\n            public Builder nameProduc(String val) {\n            \tnameProduc = val;\n\t            return this;\n            }\n            public Builder descriptiProduct(String val) {\n            \tdescriptiProduct = val;\n\t            return this;\n            }\n            public Builder specificationProduct(String val) {\n            \tspecificationProduct = val;\n\t            return this;\n            }\n            public Builder otherProduct(String val) {\n            \totherProduct = val;\n\t            return this;\n            }\n            public Builder creationDate(Date val) {\n\t            creationDate = val;\n\t            return this;\n            }            \n            public Builder priceProduct(String val) {\n            \tpriceProduct = val;\n\t            return this;\n            }            \n            public Builder localizedPriceProduct(String val) {\n            \tlocalizedPriceProduct = val;\n\t            return this;\n            }            \n            public Builder status(ProductStatus val) { \n\t        \tstatus = val; \n\t        \treturn this; \n            }\n            public Builder statusName(String val) { \n\t        \tstatusName = val; \n\t        \treturn this; \n            }            \n            public Builder linkList(List<ProductLinkDTO> val) {\n            \tlinkList = val;\n            \treturn this;\n            }            \n            public Builder note(String val) {\n            \tnote = val;\n            \treturn this;\n            }\n            public Builder discontinuedStartDate(Date val) { \n            \tdiscontinuedStartDate = val; \n\t        \treturn this; \n            }\n            public Builder loyaltyProductIdSub(String val) { \n            \tloyaltyProductIdSub = val; \n\t        \treturn this; \n            }\n            public Builder warantyEng(CommonDTO val) {\n            \twarrantyEng = val;\n            \treturn this;\n            }            \n            public Builder warantyFr(CommonDTO val) {\n            \twarrantyFr = val;\n            \treturn this;\n            }            \n            public Builder warrantyTranslationId(Long val) {\n            \twarrantyTranslationId = val;\n            \treturn this;\n            }\n            public Builder discount(Double val) {\n            \tdiscount = val;\n            \treturn this;\n            }\n            public Builder wereWgtDimChanged(Boolean val) {\n            \twereWgtDimChanged = val;\n            \treturn this;\n            }\n            public Builder consideredForXML(Boolean val) {\n            \tconsideredForXML = val;\n            \treturn this;\n            }\n            public Builder oldImageIdBeforeUpdate(String val) {\n            \toldImageRealName = val;\n            \treturn this;\n            }\n            \n            public ProductDTO build() {\n            \treturn new ProductDTO(this);\n            }\n         }\n\t\n        private ProductDTO(Builder builder) {\n            setId(builder.id);\n            brand = builder.brand;\n            category = builder.categoryId;\n            mainFilterTypeId = builder.mainFilterTypeId;\n            manufacturerProductId = builder.manufacturerProductId;\n            loyaltyProductId = builder.loyaltyProductId;\n            nameEng = builder.nameEng;\n            nameFr = builder.nameFr;\n            image = builder.image;\n            descriptionEng = builder.descriptionEng;\n            descriptionFr = builder.descriptionFr;\n            specificationEng = builder.specificationEng;\n            specificationFr = builder.specificationFr;\n            otherEng = builder.otherEng;\n            otherFr = builder.otherFr;\n            msrp = builder.msrp;\n            cost = builder.cost;\n            width = builder.width;\n            high = builder.high;\n            large = builder.large;\n            weight = builder.weight;\n            actualWeight =builder.actualWeight;\n            actualLength=builder.actualLength;\n            actualHeight=builder.actualHeight;\n            actualWidth=builder.actualWidth;\n            manufactureProductList = builder.manufactureProductList;\n            creationDate = builder.creationDate;\n            nameProduc = builder.nameProduc;\n            descriptiProduct = builder.descriptiProduct;\n            specificationProduct = builder.specificationProduct;\n            otherProduct = builder.otherProduct;\n            priceProduct = builder.priceProduct;\n            localizedPriceProduct = builder.localizedPriceProduct;\n            status = builder.status;\n            statusName = builder.statusName;\n            linkList = builder.linkList;\n            note = builder.note;\n        \tdiscontinuedStartDate = builder.discontinuedStartDate;\n        \tloyaltyProductIdSub = builder.loyaltyProductIdSub; \n        \twarrantyEng = builder.warrantyEng;\n        \twarrantyFr = builder.warrantyFr;       \t\n        \twarrantyTranslationId = builder.warrantyTranslationId;\n        \tdiscount = builder.discount;\n        \twereWgtDimChanged = builder.wereWgtDimChanged;\n        \tconsideredForXML = builder.consideredForXML;\n        \toldImageRealName = builder.oldImageRealName;\n        }\n        \n        public static Comparator<ProductDTO> getComparator(int id){\n    \t\tComparator<ProductDTO> comparator = CREATION_DATE_DESC;\n    \t\tswitch (id) {\n    \t\tcase 1:\n    \t\t\tcomparator = ALPHABITICALLY_ENG_AZ;\n    \t\t\tbreak;\n    \t\tcase 2:\n    \t\t\tcomparator = ALPHABITICALLY_ENG_ZA;\n    \t\t\tbreak;\n    \t\tcase 3:\n    \t\t\tcomparator = ALPHABITICALLY_FR_AZ;\n    \t\t\tbreak;\n    \t\tcase 4:\n    \t\t\tcomparator = ALPHABITICALLY_FR_ZA;\n    \t\t\tbreak;\n    \t\tcase 5:\n    \t\t\tcomparator = CREATION_DATE_DESC;\n    \t\t\tbreak;\t\n    \t\tcase 6:\n    \t\t\tcomparator = CREATION_DATE_ASC;\n    \t\t\tbreak;\n    \t\tcase 7:\n    \t\t\tcomparator = MSRP_DESC;\n    \t\t\tbreak;\n    \t\tcase 8:\n    \t\t\tcomparator = MSRP_ASC;\n    \t\t\tbreak;\n    \t\tcase 9:\n    \t\t\tcomparator = COST_DESC;\n    \t\t\tbreak;\n    \t\tcase 10:\n    \t\t\tcomparator = COST_ASC;\n    \t\t\tbreak;\n    \t\tcase 11:\n    \t\t\tcomparator = ALPHABITICALLY_BRAND_AZ;\n    \t\t\tbreak;\n    \t\tcase 12:\n    \t\t\tcomparator = DISCOUNT_DESC;\n    \t\t\tbreak;    \n    \t\tdefault:\n    \t\t\tbreak;\n    \t\t}    \t\t\n    \t\treturn comparator;\n    \t}\n        \n    \t/**\n    \t * The following are the comparators we use to sort game search results.\n    \t */\n    \tpublic static final Comparator<ProductDTO> ALPHABITICALLY_ENG_AZ = new Comparator<ProductDTO>() {\n\n    \t\t@Override\n    \t\tpublic int compare(ProductDTO o1, ProductDTO o2) {\t\t\t\n    \t\t\treturn o1.getNameEng().compareTo(o2.getNameEng());\n    \t\t}\n    \t\t\n    \t};\n    \t\n    \t/**\n    \t * The following are the comparators we use to sort game search results.\n    \t */\n    \tpublic static final Comparator<ProductDTO> ALPHABITICALLY_ENG_ZA = new Comparator<ProductDTO>() {\n\n    \t\t@Override\n    \t\tpublic int compare(ProductDTO o1, ProductDTO o2) {\t\t\t\n    \t\t\treturn o2.getNameEng().compareTo(o1.getNameEng());\n    \t\t}\n    \t\t\n    \t};\n    \t\n    \t/**\n    \t * The following are the comparators we use to sort game search results.\n    \t */\n    \tpublic static final Comparator<ProductDTO> ALPHABITICALLY_FR_AZ = new Comparator<ProductDTO>() {\n\n    \t\t@Override\n    \t\tpublic int compare(ProductDTO o1, ProductDTO o2) {\t\t\t\n    \t\t\treturn o1.getNameFr().compareTo(o2.getNameFr());\n    \t\t}\n    \t\t\n    \t};\n    \t\n    \t/**\n    \t * The following are the comparators we use to sort game search results.\n    \t */\n    \tpublic static final Comparator<ProductDTO> ALPHABITICALLY_FR_ZA = new Comparator<ProductDTO>() {\n\n    \t\t@Override\n    \t\tpublic int compare(ProductDTO o1, ProductDTO o2) {\t\t\t\n    \t\t\treturn o2.getNameFr().compareTo(o1.getNameFr());\n    \t\t}\n    \t};\n    \t\n    \t/**\n    \t * The following are the comparators we use to sort game search results.\n    \t */\n    \tpublic static final Comparator<ProductDTO> CREATION_DATE_DESC = new Comparator<ProductDTO>() {\n\n    \t\t@Override\n    \t\tpublic int compare(ProductDTO o1, ProductDTO o2) {\t\t\t\n    \t\t\treturn o2.getCreationDate().compareTo(o1.getCreationDate());\n    \t\t}\n    \t};\n    \t\n    \t/**\n    \t * The following are the comparators we use to sort game search results.\n    \t */\n    \tpublic static final Comparator<ProductDTO> CREATION_DATE_ASC = new Comparator<ProductDTO>() {\n\n    \t\t@Override\n    \t\tpublic int compare(ProductDTO o1, ProductDTO o2) {\t\t\t\n    \t\t\treturn o1.getCreationDate().compareTo(o2.getCreationDate());\n    \t\t}\n    \t\t\n    \t};\n    \t\n    \t/**\n    \t * The following are the comparators we use to sort game search results.\n    \t */\n    \tpublic static final Comparator<ProductDTO> MSRP_DESC = new Comparator<ProductDTO>() {\n\n    \t\t@Override\n    \t\tpublic int compare(ProductDTO o1, ProductDTO o2) {\t\t\t    \t\t\t\n    \t\t\tDouble msrp1 = Double.parseDouble(o1.getMsrp());\n    \t\t\tDouble msrp2 = Double.parseDouble(o2.getMsrp());    \t\t\t\n    \t\t\treturn msrp2.compareTo(msrp1);\n    \t\t}\n    \t\t\n    \t};\n    \t\n    \t/**\n    \t * The following are the comparators we use to sort game search results.\n    \t */\n    \tpublic static final Comparator<ProductDTO> MSRP_ASC = new Comparator<ProductDTO>() {\n\n    \t\t@Override\n    \t\tpublic int compare(ProductDTO o1, ProductDTO o2) {\t\t\t    \t\t\t\n    \t\t\tDouble msrp1 = Double.parseDouble(o1.getMsrp());\n    \t\t\tDouble msrp2 = Double.parseDouble(o2.getMsrp());    \t\t\t\n    \t\t\treturn msrp1.compareTo(msrp2);\n    \t\t}\n    \t\t\n    \t};\n\n    \t/**\n    \t * The following are the comparators we use to sort products by price, highest first\n    \t */\n    \tpublic static final Comparator<ProductDTO> COST_DESC = new Comparator<ProductDTO>() {\n    \t\t@Override\n    \t\tpublic int compare(ProductDTO o1, ProductDTO o2) {\t\t\t    \t\t\t\n\t\t\t\tString o1Price = o1.getPriceProduct();\n\t\t\t\tString o2Price = o2.getPriceProduct();\n\t\t\t\tint outcome = 0;\n\t\t\t\tif (o1Price != null && !o1Price.matches(""^\\\\s*$"")) {\n\t\t\t\t\tDouble cost1 = Double.parseDouble(o1Price);\n\t\t\t\t\tif (o2Price != null && !o2Price.matches(""^\\\\s*$"")) {\n\t\t\t\t\t\tDouble cost2 = Double.parseDouble(o2Price);\n\t\t\t\t\t\tint costCompare = cost2.compareTo(cost1);\n\t\t\t\t\t\tif (costCompare == 0) {\n\t\t\t\t\t\t\toutcome = ALPHABITICALLY_BRAND_AZ.compare(o1, o2);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\toutcome = costCompare;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\toutcome = -1;\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\toutcome = 1;\n\t\t\t\t}\n\t\t\t\treturn outcome;\n    \t\t}\n    \t};\n    \t\n    \t/**\n    \t * The following are the comparators we use to sort products by price, lowest first\n    \t */\n    \tpublic static final Comparator<ProductDTO> COST_ASC = new Comparator<ProductDTO>() {\n    \t\t@Override\n    \t\tpublic int compare(ProductDTO o1, ProductDTO o2) {\t\t\t    \t\t\t\n    \t\t\tString o1Price = o1.getPriceProduct();\n\t\t\t\tString o2Price = o2.getPriceProduct();\n\t\t\t\tint outcome = 0;\n\t\t\t\tif (o1Price != null && !o1Price.matches(""^\\\\s*$"")) {\n\t\t\t\t\tDouble cost1 = Double.parseDouble(o1Price);\n\t\t\t\t\tif (o2Price != null && !o2Price.matches(""^\\\\s*$"")) {\n\t\t\t\t\t\tDouble cost2 = Double.parseDouble(o2Price);\n\t\t\t\t\t\tint costCompare = cost1.compareTo(cost2);\n\t\t\t\t\t\tif (costCompare == 0) {\n\t\t\t\t\t\t\toutcome = ALPHABITICALLY_BRAND_AZ.compare(o1, o2);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\toutcome = costCompare;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\toutcome = -1;\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\toutcome = 1;\n\t\t\t\t}\n\t\t\t\treturn outcome;\n    \t\t}\n    \t};    \t\n    \t\n    \t/*\n    \t * The following is the comparator we use to sort products by brand, alphabetically, with numbers first then letters.\n\t\t * Leading numbers are compared naturally.\n    \t */\n    \tpublic static final Comparator<ProductDTO> ALPHABITICALLY_BRAND_AZ = new Comparator<ProductDTO>() {\n       \t\t@Override\n    \t\tpublic int compare(ProductDTO o1, ProductDTO o2) {\t\t\t\n    \t\t\tString o1BrandName = o1.getBrand().getName();\n    \t\t\tString o2BrandName = o2.getBrand().getName();\n    \t\t\tint brandCompare = o1BrandName.compareTo(o2BrandName);\n    \t\t\tif(brandCompare == 0) {\n    \t\t\t\tString o1ProdName = o1.getNameProduc().toLowerCase();\n    \t\t\t\tString o2ProdName = o2.getNameProduc().toLowerCase();\n    \t\t\t\tif (Character.isDigit(o1ProdName.charAt(0)) && Character.isDigit(o2ProdName.charAt(0))) {\n    \t\t\t\t\tInteger o1Number = Integer.parseInt(o1ProdName.split(""\\\\D+"")[0]);\n    \t\t\t\t\tInteger o2Number = Integer.parseInt(o2ProdName.split(""\\\\D+"")[0]);\n    \t\t\t\t\tif (o1Number != o2Number) {\n    \t\t\t\t\t\treturn o1Number.compareTo(o2Number);\n    \t\t\t\t\t}\n    \t\t\t\t}\n    \t\t\t\treturn (o1ProdName.compareTo(o2ProdName));\n    \t\t\t}\n    \t\t\treturn brandCompare;\n    \t\t}\n    \t};\n    \t\n    \t/**\n    \t * The following are the comparators we use to sort game search results.\n    \t */\n    \tpublic static final Comparator<ProductDTO> DISCOUNT_DESC = new Comparator<ProductDTO>() {    \t\t\n    \t\t@Override\n    \t\tpublic int compare(ProductDTO o1, ProductDTO o2) {\n    \t\t\tDouble discount1 = o1.getDiscount();\n    \t\t\tDouble discount2 = o2.getDiscount();\n    \t\t\tint compareToDiscountPct = discount2.compareTo(discount1);\n    \t\t\tint outcome = compareToDiscountPct;\n    \t\t\tif (compareToDiscountPct == 0) {\n    \t\t\t\tString price1 = o1.getPriceProduct();\n    \t\t\t\tString price2 = o2.getPriceProduct();\n    \t\t\t\tString msrp1 = o1.getMsrp();\n    \t\t\t\tString msrp2 = o2.getMsrp();\n    \t\t\t\tDouble discount$1 = getDiscount$(price1, msrp1);\n    \t\t\t\tDouble discount$2 = getDiscount$(price2, msrp2);\n    \t\t\t\tint compareToDiscount$ = discount$2.compareTo(discount$1);\n    \t\t\t\toutcome = compareToDiscount$;\n    \t\t\t\tif (compareToDiscount$ == 0) {\n    \t\t\t\t\tString name1 = o1.getNameProduc();\n    \t\t\t\t\tString name2 = o2.getNameProduc();\t\t\t\t\t\n    \t\t\t\t\tint compareToName = name1.compareTo(name2);\n    \t\t\t\t\toutcome = compareToName;\n    \t\t\t\t\tif (compareToName == 0) {\n    \t\t\t\t\t\tLong id1 = o1.getId();\n    \t\t\t\t\t\tLong id2 = o2.getId();\n    \t\t\t\t\t\toutcome = id1.compareTo(id2);\n    \t\t\t\t\t}\n    \t\t\t\t}\n    \t\t\t}\n    \t\t\treturn outcome;\n    \t\t}\n    \t\t\n    \t\tprivate Double getDiscount$(String price, String msrp) {\n\t\t\t\tdouble priceVal = 0d;\n\t\t\t\tdouble msrpVal = 0d;\n\t\t\t\tdouble discountVal = 0d;\n\t\t\t\tif (price != null) {\n\t\t\t\t\tif (!price.matches(""^\\\\s*$"") && !price.equalsIgnoreCase("""")) {\n\t\t\t\t\t\tpriceVal = Double.parseDouble(price);\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpriceVal = 0d;\n\t\t\t\t\t}\n\t\t\t\t}\t\t\t\t\n\t\t\t\tif (msrp != null) {\t\t\t\t\t\n\t\t\t\t\tif (!msrp.matches(""^\\\\s*$"") && !msrp.equalsIgnoreCase("""")) {\t\n\t\t\t\t\t\tmsrpVal = Double.parseDouble(msrp);\t\n\t\t\t\t\t\tdiscountVal = msrpVal - priceVal;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn discountVal;\n    \t\t}\n    \t};\n}\n----------------------------------- SOURCE END -------------------------------------",1421271174682
error,log,,,"Problems occurred when invoking code from plug-in: ""org.eclipse.jdt.ui"".",1421271174683
error,log,,,"Error in JDT Core during reconcile",1421271174684
activated,view,org.eclipse.wst.server.ui,1.1.207.v20110119,"org.eclipse.wst.server.ui.ServersView",1421271187527
executed,command,org.eclipse.wst.server.ui,1.1.207.v20110119,"org.eclipse.wst.server.debug",1421271191751
activated,view,org.eclipse.ui.console,3.5.0.v20100526,"org.eclipse.ui.console.ConsoleView",1421271194189
activated,view,org.eclipse.wst.server.ui,1.1.207.v20110119,"org.eclipse.wst.server.ui.ServersView",1421271194223
