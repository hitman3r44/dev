what,kind,bundleId,bundleVersion,description,time
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.paste",1401299504550
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.copy",1401299524986
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.copy",1401299525360
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.paste",1401299534408
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.copy",1401299543004
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.paste",1401299544907
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.copy",1401299554938
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.paste",1401299560086
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.delete",1401299563861
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.delete",1401299564080
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.copy",1401299588431
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.paste",1401299590428
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.copy",1401299597869
opened,editor,org.eclipse.jdt.ui,3.6.2.r362_v20110203,"org.eclipse.jdt.ui.CompilationUnitEditor",1401299809484
activated,editor,org.eclipse.jdt.ui,3.6.2.r362_v20110203,"org.eclipse.jdt.ui.CompilationUnitEditor",1401299809499
activated,editor,org.eclipse.jdt.ui,3.6.2.r362_v20110203,"org.eclipse.jdt.ui.CompilationUnitEditor",1401299816129
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.copy",1401299857563
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.paste",1401299860199
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.copy",1401299868779
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.paste",1401299870729
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.copy",1401299898763
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.copy",1401299898997
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.copy",1401299928340
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.paste",1401299932287
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.copy",1401299938589
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.paste",1401299940493
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.text.contentAssist.proposals",1401299963237
deactivated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1401299965250
activated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1401299965499
deactivated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1401299971162
activated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1401299971412
deactivated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1401299981271
activated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1401299981458
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.copy",1401299985483
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.paste",1401299990257
deactivated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1401299997230
activated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1401299997448
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.file.save",1401300002487
deactivated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1401300002986
activated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1401300006826
activated,view,org.eclipse.ui.console,3.5.0.v20100526,"org.eclipse.ui.console.ConsoleView",1401300009135
activated,view,org.eclipse.wst.server.ui,1.1.207.v20110119,"org.eclipse.wst.server.ui.ServersView",1401300013659
deactivated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1401300016358
activated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1401300017356
deactivated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1401300017699
activated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1401300089479
deactivated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1401300094163
activated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1401300095553
executed,command,org.eclipse.ui.ide,3.6.2.M20101201-0800,"org.eclipse.ui.project.cleanAction",1401300095573
deactivated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1401300095846
activated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1401300096074
error,log,,,"Problems occurred when invoking code from plug-in: ""org.eclipse.jdt.ui"".",1401300097458
error,log,,,"Error in JDT Core during AST creation",1401300097459
activated,editor,org.eclipse.jdt.ui,3.6.2.r362_v20110203,"org.eclipse.jdt.ui.CompilationUnitEditor",1401300105122
error,log,,,"Exception occurred during problem detection:\n----------------------------------- SOURCE BEGIN -------------------------------------\npackage com.loyauty.web.struts.action.orders;\n\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.io.FileOutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.OutputStream;\nimport java.util.ArrayList;\nimport java.util.Collection;\nimport java.util.Hashtable;\nimport java.util.List;\nimport javax.servlet.http.HttpSession;\nimport org.apache.commons.io.FileUtils;\nimport lombok.Getter;\nimport lombok.Setter;\n\nimport com.loyauty.exception.ServiceException;\nimport com.loyauty.exception.ServiceLocatorException;\nimport com.loyauty.model.OrdersRows;\nimport com.loyauty.model.User;\nimport com.loyauty.service.core.DTOFactory;\nimport com.loyauty.service.core.dto.BasicUserDTO;\nimport com.loyauty.service.core.dto.OrdersDTO;\nimport com.loyauty.service.core.dto.UserConnectionDTO;\nimport com.loyauty.service.core.dto.UserFileDataRecoveryDTO;\nimport com.loyauty.service.core.dto.UserFileRecoveryDTO;\nimport com.loyauty.service.core.dto.UserFilesDownloadedDTO;\nimport com.loyauty.service.core.dto.UserSessionDTO;\nimport com.loyauty.service.orders.OrdersService;\nimport com.loyauty.service.user.UserService;\nimport com.loyauty.web.struts.action.LoyautyAction;\n\n\npublic class CreateOrdersAutoRemoteFile extends LoyautyAction {\n\tprivate static final long serialVersionUID = -1238269595572206024L;\n\n\tprivate UserService userService;\n\tprivate OrdersService orderService;\n\t@Getter @Setter\n\tprivate String userLogin;\n\t@Getter @Setter\n\tprivate List<User> usersList;\n\tprivate static int USER_TYPE = 2;\n\t@Getter @Setter\n\tprivate File orderFile;\n\t@Getter @Setter\n\tList<OrdersDTO>listOrdersDTO;\n\tHashtable<String, OrdersDTO>hashOrders;\n\t@Getter @Setter\n\tprivate String orderSelected;\n\t@Getter @Setter\n\tprivate Long showOrderSignal;\n\t@Getter @Setter\n\tprivate Long okShowOrderSignal;\n\t@Getter @Setter\n\tprivate Long saveOrdersSignal;\n\t@Getter @Setter\n\tprivate Long confirmSaveOrdersSignal;\n\t@Getter @Setter\n\tprivate Long duplicateOrderSignal;\n\t@Getter @Setter\n\tprivate String lsOrderId;\n\t@Getter @Setter\n\tprivate String message;\n\t@Getter @Setter\n\tprivate String userLogo;\n\t@Getter @Setter\n\tInteger indexOrder;\n\t@Getter @Setter\n\tInteger indexRow;\n\t@Getter @Setter\n\tprivate Double quantityToChange;\n\t@Getter @Setter\n\tprivate Long quantityToChangeSignal;\n\t@Getter @Setter\n\tprivate Long checkBoxPrintSignal;\n\t@Getter @Setter\n\tprivate Long okSaveSuccessPopSignal;\n\t@Getter @Setter\n\tprivate Boolean checkBoxPrintEtem;\n\t@Getter @Setter\n\tprivate Boolean checkBoxPrint;\n\t@Getter @Setter\n\tprivate Long pageTop=0L;\n\t@Getter @Setter\n\tprivate Long saved;\n\t@Getter @Setter\n\tprivate String showNotificationPop=""visibility:hidden;display:none;"";\n\t@Getter @Setter\n\tprivate String showSaveSuccessPop=""visibility:hidden;display:none;"";\n\tprivate Boolean listNotSavedAtFirst;\n\t@Getter @Setter\n\tprivate String oploadedFileName;\n\t@Getter @Setter\n\tList<UserFilesDownloadedDTO>userFilelist;\n\t@Getter @Setter\n\tprivate Long userIdFindedSignal;\n\tprivate String filePath;\n\t@Getter @Setter\n\tprivate String fileToImport;\n\t@Getter @Setter\n\tprivate Boolean checkAllFiles;\n\tpublic  CreateOrdersAutoRemoteFile() throws ServiceLocatorException {\n\t\tsuper();\t\n\t\tuserService = getServiceLocator().getUserService();\n\t\torderService = getServiceLocator().getOrderService();\n\t\tlistOrdersDTO=new ArrayList<OrdersDTO>();\n\t\tcheckAllFiles=false;\n\t}\n\n\t/*=========================================================================================\n\t \t\t\t\t\t\t\t\t\t\t\tmethod execute\n\t  =========================================================================================*/\n\t@SuppressWarnings({ ""rawtypes"", ""unchecked"" })\n\t@Override\n\tpublic String execute() throws Exception {\n\t\thashOrders=new Hashtable<String, OrdersDTO>();\n\t\tHttpSession session = request.getSession(true);\n\t\tfilePath = session.getServletContext().getRealPath(""/"");\n\t\tlistOrdersDTO=\t(ArrayList<OrdersDTO>)session.getAttribute(""listOrdersDTOAuto"");\n\t\tsaved=orderService.nbOrdersNotSavedInDB(listOrdersDTO);\n\t\tboolean isThereDuplicate=orderService.isThereDuplicate(listOrdersDTO);\n\t\tif(isThereDuplicate)saved=1L;\n\t\tuserLogo=(String)session.getAttribute(""userLogo"");\n\t\tlistNotSavedAtFirst=(Boolean)session.getAttribute(""listNotSavedAtFirst"");\n\t\tint rowIndex;\n\t\tString nameFile="""";\n\t\tString dataPath="""";\n\t\ttry {\n\t\t\t\t/*-------------------- recovery users list -----------------------------------\n\t\t\t\t\t\twe access to the database only once to retrieve a list of users\n\t\t\t\t -----------------------------------------------------------------------------*/\n\t\t\t\tBasicUserDTO basicUserDTO = new BasicUserDTO();\n\t\t\t\tbasicUserDTO.setTypeId(USER_TYPE);\n\t\t\t\tList<User> usersListSession=(List<User>)session.getAttribute(""usersListSession"");\n\t\t\t\tif(usersListSession==null){\n\t\t\t\t\tList<UserSessionDTO> listAllUsers= userService.getAllUsers(basicUserDTO);\n\t\t\t\t\tusersList=new ArrayList<User>();\n\t\t\t\t\tfor(UserSessionDTO userDTO:listAllUsers){\n\t\t\t\t\t\tUser user=new User();\n\t\t\t\t\t\tuser.setId(userDTO.getId());\n\t\t\t\t\t\tuser.setLogin(userDTO.getLogin());\n\t\t\t\t\t\tusersList.add(user);\n\t\t\t\t\t}\n\t\t\t\t\tsession.setAttribute(""usersListSession"",usersList);\n\t\t\t\t}else usersList=usersListSession;\n\t\t\t\t\n\t\t\t\tuserFilelist=(List<UserFilesDownloadedDTO>)session.getAttribute(""userFilelist"");\n\t\t\t\tif(userFilelist==null)userFilelist=new ArrayList<UserFilesDownloadedDTO>();\n\t\t\t\t/*-------------------- When user check print item -----------------------------\n\t\t\t\t\t\tAdd or remove this element from the orders to print\n\t\t \t\t -----------------------------------------------------------------------------*/\n\t\t\t\tif(checkBoxPrintSignal!=null && checkBoxPrintSignal!=0L){\n\t\t\t\t\tlistOrdersDTO=\t(ArrayList<OrdersDTO>) session.getAttribute(""listOrdersDTOAuto"");\n\t\t\t\t\thashOrders= (Hashtable<String, OrdersDTO>)session.getAttribute(""hashOrders"");\n\t\t\t\t\tLong count=orderService.nbOrdersNotSavedInDB(listOrdersDTO);\n\t\t\t\t\tif(count>=1L || isThereDuplicate || listNotSavedAtFirst==null || listNotSavedAtFirst==false){\n\t\t\t\t\t\taddActionError(getText(""loyauty.error.common.savingOrders""));\n\t\t\t\t\t\treturn SUCCESS;\n\t\t\t\t\t}\n\t\t\t\t\tOrdersDTO orderDTOInHash=hashOrders.get(lsOrderId);\n\t\t\t\t\torderDTOInHash.setPrint(checkBoxPrint);\n\t\t\t\t\tOrdersDTO orderDTOInList=listOrdersDTO.get(indexOrder);\n\t\t\t\t\torderDTOInList.setPrint(checkBoxPrint);\n\t\t\t\t\treturn SUCCESS;\n\t\t\t\t}\n\n\n\t\t\t\t/*------------- When user check on the button OK of dialog saveSuccessPop ----\n\t\t\t\t\t\t\t \t\t\tjust hide the popup saveSuccessPop\n\t\t \t\t -----------------------------------------------------------------------------*/\n\t\t\t\tif(okSaveSuccessPopSignal!=null && okSaveSuccessPopSignal!=0L){\n\t\t\t\t\tsaved=0L;\n\t\t\t\t\tlistOrdersDTO=\t(ArrayList<OrdersDTO>) session.getAttribute(""listOrdersDTOAuto"");\n\t\t\t\t\treturn SUCCESS;\n\t\t\t\t}\n\n\t\t\t\t/*-------------------- When user change Quantity to split --------------------\n\t\t\t\t\tprepare order to split from two other orders witch\n\t\t\t\t\t one must have a lsOrder with underscore \n\t\t \t\t -----------------------------------------------------------------------------*/\n\t\t\t\tif(quantityToChangeSignal!=null && quantityToChangeSignal!=0L){\n\t\t\t\t\tlistOrdersDTO=\t(ArrayList<OrdersDTO>) session.getAttribute(""listOrdersDTOAuto"");\n\t\t\t\t\thashOrders= (Hashtable<String, OrdersDTO>)session.getAttribute(""hashOrders"");\n\t\t\t\t\tLong count=orderService.nbOrdersNotSavedInDB(listOrdersDTO);\n\t\t\t\t\tif(count>=1L || isThereDuplicate  || listNotSavedAtFirst==null || listNotSavedAtFirst==false){\n\t\t\t\t\t\taddActionError(getText(""loyauty.error.common.savingOrders""));\n\t\t\t\t\t\treturn SUCCESS;\n\t\t\t\t\t}\n\t\t\t\t\tOrdersDTO orderToChangeQt=hashOrders.get(lsOrderId);\n\t\t\t\t\tint index=orderToChangeQt.getIndex();\n\t\t\t\t\tOrdersRows orderRow=listOrdersDTO.get(index).getRowsList().get(indexRow);\n\t\t\t\t\tif(quantityToChange<orderRow.getQuantity())orderRow.setQuantityToSplit(quantityToChange);\n\t\t\t\t\tsession.setAttribute(""listOrdersDTOAuto"",listOrdersDTO);\n\t\t\t\t\treturn SUCCESS;\n\t\t\t\t}\n\n\t\t\t\t/*-------------------- SAVE ORDERS -------------------------------------------\n\t\t\t\t\t\tsave in data bases just orders witch has print checked \n\t\t \t\t -----------------------------------------------------------------------------*/\n\t\t\t\tif(saveOrdersSignal!=null && saveOrdersSignal!=0L){\n\t\t\t\t\tsaved=-1L;\n\t\t\t\t\tlistOrdersDTO=\t(ArrayList<OrdersDTO>) session.getAttribute(""listOrdersDTOAuto"");\n\t\t\t\t\tboolean callNotification=orderService.isExistAnyLsOrderIdInDB(listOrdersDTO);\n\t\t\t\t\tif(callNotification){//ask admin if he want to save all orders\n\t\t\t\t\t\tif(confirmSaveOrdersSignal==null || confirmSaveOrdersSignal==0L){\n\t\t\t\t\t\t\tmessage=""One or more of these Orders already exists.\\n""+\n\t\t\t\t\t\t\t\t\t""Select option:"";\n\t\t\t\t\t\t\tshowNotificationPop=""display:block;visibility:visible;"";\t\n\t\t\t\t\t\t}else if(confirmSaveOrdersSignal==1L){//add all orders in DB\n\t\t\t\t\t\t\tsaved=0L;\n\t\t\t\t\t\t\tsession.setAttribute(""listNotSavedAtFirst"",true);\n\t\t\t\t\t\t\tlistOrdersDTO=orderService.insertListOrders(listOrdersDTO); \n\t\t\t\t\t\t\t//change userFileDownloded Status\n\t\t\t\t\t\t\torderService.updateFilesDownloadedStatus(fileToImport,userLogin,true);\n\t\t\t\t\t\t\tuserFilelist=getUserFilesListByOption(userLogin,checkAllFiles,session);\n\t\t\t\t\t\t\tsession.setAttribute(""listOrdersDTOAuto"",listOrdersDTO);\n\t\t\t\t\t\t\thashOrders =orderService.getHashOrdersDTOFromListOrdersDTO(listOrdersDTO);\n\t\t\t\t\t\t\tsession.setAttribute(""hashOrders"",hashOrders);\n\t\t\t\t\t\t\tmessage=""Saving has completed successfuly"";\n\t\t\t\t\t\t\tshowSaveSuccessPop=""display:block;visibility:visible;"";\n\t\t\t\t\t\t}else if(confirmSaveOrdersSignal==2L){//add just orders if not exist in DB\n\t\t\t\t\t\t\tsaved=0L;\n\t\t\t\t\t\t\t//orderService.insertListOrdersIfNotExist(listOrdersDTO);\n\t\t\t\t\t\t\tsession.setAttribute(""listNotSavedAtFirst"",true);\n\t\t\t\t\t\t\tlistOrdersDTO=orderService.insertListOrders(listOrdersDTO);\n\t\t\t\t\t\t\t//change userFileDownloded Status\n\t\t\t\t\t\t\torderService.updateFilesDownloadedStatus(fileToImport,userLogin,true);\n\t\t\t\t\t\t\tuserFilelist=getUserFilesListByOption(userLogin,checkAllFiles,session);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tlistOrdersDTO=orderService.getListOrdersByPONumber(listOrdersDTO);\n\t\t\t\t\t\t\thashOrders =orderService.getHashOrdersDTOFromListOrdersDTO(listOrdersDTO);\n\t\t\t\t\t\t\tsession.setAttribute(""hashOrders"",hashOrders);\n\t\t\t\t\t\t\tsession.setAttribute(""listOrdersDTOAuto"",listOrdersDTO);\n\t\t\t\t\t\t\tmessage=""Saving has completed successfuly"";\n\t\t\t\t\t\t\tshowSaveSuccessPop=""display:block;visibility:visible;"";\n\t\t\t\t\t\t}\n\t\t\t\t\t}else{\n\t\t\t\t\t\tsaved=0L;\n\t\t\t\t\t\tsession.setAttribute(""listNotSavedAtFirst"",true);\n\t\t\t\t\t\tmessage=""Saving has completed successfuly"";\n\t\t\t\t\t\tshowSaveSuccessPop=""display:block;visibility:visible;"";\n\t\t\t\t\t\tlistOrdersDTO=orderService.insertListOrders(listOrdersDTO);\n\t\t\t\t\t\t//change userFileDownloded Status\n\t\t\t\t\t\torderService.updateFilesDownloadedStatus(fileToImport,userLogin,true);\n\t\t\t\t\t\tuserFilelist=getUserFilesListByOption(userLogin,checkAllFiles,session);\n\t\t\t\t\t\tsession.setAttribute(""listOrdersDTOAuto"",listOrdersDTO);\n\t\t\t\t\t}\n\t\t\t\t\treturn SUCCESS;\n\t\t\t\t}\n\n\t\t\t\t/*-------------------- Duplicate Order ----------------------------------------\n\t\t\t\t\t\tCreate order in just in memory\n\t\t \t\t -----------------------------------------------------------------------------*/\n\t\t\t\tif(duplicateOrderSignal!=null && duplicateOrderSignal!=0L){\n\t\t\t\tlistOrdersDTO=\t(ArrayList<OrdersDTO>) session.getAttribute(""listOrdersDTOAuto"");\n\t\t\t\thashOrders= (Hashtable<String, OrdersDTO>)session.getAttribute(""hashOrders"");\n\t\t\t\tLong count=orderService.nbOrdersNotSavedInDB(listOrdersDTO);\n\t\t\t\tif(count>=1L || isThereDuplicate || listNotSavedAtFirst==null || listNotSavedAtFirst==false){\n\t\t\t\t\taddActionError(getText(""loyauty.error.common.savingOrders""));\n\t\t\t\t\treturn SUCCESS;\n\t\t\t\t}\n\t\t\t\tOrdersDTO orderToClone=hashOrders.get(lsOrderId);\n\t\t\t\tint index=orderToClone.getIndex();\n\t\t\t\tOrdersDTO orderInArrayList=listOrdersDTO.get(index);\n\t\t\t\torderInArrayList.setToUpdate(true);\n\t\t\t\tOrdersDTO orderClone=DTOFactory.getOrderDTOSplitted(orderToClone);\n\t\t\t\torderInArrayList.getRowsList().get(0).setQuantity(orderClone.getQuantity());\n\t\t\t\tif(orderClone!=null){\n\t\t\t\t\torderClone.setDuplicate(true);\n\t\t\t\t\tString lsOrder=orderToClone.getLsOrderId();\n\t\t\t\t\tString strlsOrder=orderService.generateLsOrderId(lsOrder, hashOrders);\n\t\t\t\t\torderClone.setLsOrderId(strlsOrder);\n\t\t\t\t\torderClone.setCssStyle(""background-color:#FFFF99;border-right: 1px solid #CCCCCC;border-left:1px solid #CCCCCC;border-top:  1px solid #CCCCCC;border-bottom:  1px solid #CCCCCC;"");\n\t\t\t\t\trowIndex=0;\n\t\t\t\t\tfor(OrdersRows row: orderClone.getRowsList()){\n\t\t\t\t\t\trow.setIndex(rowIndex);\n\t\t\t\t\t\trowIndex++;\n\t\t\t\t\t}\n\t\t\t\t\tsaved=0L;\n\t\t\t\t\tlistOrdersDTO.add(indexOrder+1,orderClone);\n\t\t\t\t\thashOrders.put(orderClone.getLsOrderId(), orderClone);\n\t\t\t\t\tif(listOrdersDTO.size()>0){\n\t\t\t\t\t\tsession.setAttribute(""listOrdersDTOAuto"",listOrdersDTO);\n\t\t\t\t\t\tsession.setAttribute(""hashOrders"",hashOrders);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tsaved=orderService.nbOrdersNotSavedInDB(listOrdersDTO);\n\t\t\t\tisThereDuplicate=orderService.isThereDuplicate(listOrdersDTO);\n\t\t\t\tif(isThereDuplicate)saved=1L;\n\t\t\t\treturn SUCCESS;\n\t\t\t\t}\n\n\t\t\t\t/*---------------- retrieve file info customer order -------------------------*/\n\t\t\t\t/*UserFileRecoveryDTO ufrDTO=orderService.getUserFileRecoveryByUser(userLogin);\n\t\t\t\tsession.setAttribute(""userLogin"",userLogin);\n\t\t\t\tif(ufrDTO==null || orderFile==null){\n\t\t\t\t\tuserLogo=null;\n\t\t\t\t\tsession.setAttribute(""userLogo"",null);\n\t\t\t\t\taddActionError(getText(""loyauty.error.common.userFilePoOrders""));\n\t\t\t\t\treturn SUCCESS;\n\t\t\t\t}*/\n\t\t\t\t/*--------------------recovery OrderFile client ------------------------------\n\t\t\t\t\trecovered the client file and converts it into a list, and  \n \t\t\t\t\ta Hatable witch allow use to control the orders rows\n\t\t\t\t -----------------------------------------------------------------------------*/\n\n\t\t\t\t/*---------------- retrieve file info customer order -------------------------*/\n\t\t\t\tUserFileRecoveryDTO ufrDTO=orderService.getUserFileRecoveryByUser(userLogin);\n\t\t\t\tsession.setAttribute(""userLogin"",userLogin);\n\t\t\t\tif(ufrDTO==null){\n\t\t\t\t\tuserLogo=null;\n\t\t\t\t\tuserFilelist=new ArrayList<UserFilesDownloadedDTO>();\n\t\t\t\t\tsession.setAttribute(""userFilelist"",userFilelist);\n\t\t\t\t\tsession.setAttribute(""userLogo"",null);\n\t\t\t\t\taddActionError(getText(""loyauty.error.common.userFilePoOrders""));\n\t\t\t\t\treturn SUCCESS;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t/*-------------------- When Admin Find User Login ---------------------------\n\t\t\t\tchange all value of userid list of orders\n\t\t\t\t -----------------------------------------------------------------------------*/\n\t\t\t\tif(userIdFindedSignal!=null && userIdFindedSignal!=0L){\n\t\t\t\t\tUser user=userService.getUserByLogin(userLogin);\n\t\t\t\t\tuserLogo=null;\n\t\t\t\t\tif(user!=null){\n\t\t\t\t\t\t//show user logo\n\t\t\t\t\t\tuserLogo=""./images/orders/usersLogos/""+userLogin+"".png"";\n\t\t\t\t\t\t/*if(checkAllFiles){\n\t\t\t\t\t\t\tuserFilelist=orderService.getListFileDownloadedDTO(user.getLogin(), 1, 3);\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tuserFilelist=orderService.getListFileDownloadedDTO(user.getLogin(), 1, 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tsession.setAttribute(""userFilelist"",userFilelist);*/\n\t\t\t\t\t\tuserFilelist=getUserFilesListByOption(userLogin,checkAllFiles,session);\n\t\t\t\t\t\tlistOrdersDTO=new ArrayList<OrdersDTO>();\n\t\t\t\t\t\tsession.setAttribute(""listOrdersDTOAuto"",listOrdersDTO);\n\t\t\t\t\t}else userLogin=null;\n\t\t\t\t\treturn SUCCESS;\n\t\t\t\t}\t\t\n\n\t\t\t\tFile OrderFilePermanent=null;\n\t\t\t\tsession.setAttribute(""listNotSavedAtFirst"",null);\n\t\t\t\tif(fileToImport!=null){\n\t\t\t\t\t\n\t\t\t\t\t//verify that this file is exactly for the user selected \n\t\t\t\t\tBoolean isFileForThisUser=orderService.isFileForUser(fileToImport,userLogin);\n\t\t\t\t\tif(!isFileForThisUser){\n\t\t\t\t\t\taddActionError(getText(""loyauty.error.common.FileNotFound""));\n\t\t\t\t\t\tlistOrdersDTO=new ArrayList<OrdersDTO>();\n\t\t\t\t\t\tsession.setAttribute(""listOrdersDTOAuto"",listOrdersDTO);\n\t\t\t\t\t\treturn SUCCESS;\n\t\t\t\t\t}\n\t\t\t\t\t//oploadedFileName=fileToImport;\n\t\t\t\t\t//session.setAttribute(""oploadedFileName"",oploadedFileName);\n\t\t\t\t\tUserConnectionDTO userConn=userService.getUserConnectionByLogin(userLogin);\n\t\t\t\t\tif(userConn!=null)orderFile=new File(userConn.getOrdersFolder()+userLogin+""/""+fileToImport);\n\n\t\t\t\t\tString filePath = request.getSession().getServletContext().getRealPath(""/"");\n\t\t\t\t\tdataPath = filePath + ""WEB-INF/jsp/orders/data/"";\n        \t\t\tnameFile=dataPath+userLogin+"".""+ufrDTO.getFileType();\n        \t\t\t//show user logo\n        \t\t\tuserLogo=""./images/orders/usersLogos/""+userLogin+"".png"";\n        \t\t\t\n\n        \t\t\t//if userLogo dosn't exist give him a blank logo\n        \t\t\tcopyFile(filePath +""images/orders/usersLogos/BLANK.png"", filePath +""images/orders/usersLogos/""+userLogin+"".png"");\n        \t\t\tsession.setAttribute(""userLogo"",userLogo);\n        \t\t\tOrderFilePermanent = new File(nameFile);\n\t\t\t\t\tif(OrderFilePermanent.exists())OrderFilePermanent.delete();\n\t\t\t\t\ttry {\n\t\t\t\t\t\tOrderFilePermanent = new File(nameFile);\n\t\t\t\t\t\tcopyFile(userConn.getOrdersFolder()+userLogin+""/""+fileToImport, nameFile);\n\t\t\t\t\t} catch (IOException e) {\n\t\t\t\t\t\taddActionError(getText(""loyauty.error.common.CreateOrdersFromFiles""));\n\t\t\t\t\t\te.printStackTrace();\n\t\t\t\t\t\treturn ""input"";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t/*-------------------- converts the order file to a list and HashTable -------\n\t\t\t\t\trecovered the client file and converts it into a list, and  \n \t\t\t\t\ta Hashtable witch allow use to control the orders rows\n\t\t\t\t -----------------------------------------------------------------------------*/\n\t\t\t\tCollection listUsrDataDTO=null;\n\t\t\t\tsaved=1L;\n\t\t\t\ttry {\n\t\t\t\t\tswitch (ufrDTO.getFileTypeId()) {\n\t\t\t\t\tcase 1: //case xml file\n\t\t\t\t\t\tlistUsrDataDTO=orderService.toArrayListFromXML(OrderFilePermanent, userLogin);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2: //case xls file\n\t\t\t\t\t\tlistUsrDataDTO=orderService.toArrayListFromXLS(OrderFilePermanent, userLogin);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3: // case csv file\n\t\t\t\t\t\torderService.csvParsing(dataPath,userLogin);\n\t\t\t\t\t\tnameFile=dataPath+userLogin+"".xls"";\n\t\t\t\t\t\tOrderFilePermanent = new File(nameFile);\n\t\t\t\t\t\tlistUsrDataDTO=orderService.toArrayListFromXLS(OrderFilePermanent, userLogin);\n\t\t\t\t\t} \n\t\t\t\t} catch (Exception e) {\n\t\t\t\t\taddActionError(getText(""loyauty.error.common.CreateOrdersFromFiles""));\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tArrayList<UserFileDataRecoveryDTO> list=(ArrayList<UserFileDataRecoveryDTO>)listUsrDataDTO;\n\t\t\t\thashOrders =orderService.getHashOrdersFromUserDataRecovery(ufrDTO.getUserId(),list);\n\t\t\t\tlistOrdersDTO=new ArrayList<OrdersDTO>();\n\t\t\t\tint balance=0;\n\t\t\t\tint OrderIndex=0;\n\t\t\t\trowIndex=0;\n\t\t\t\toploadedFileName=(String)session.getAttribute(""oploadedFileName"");\n\t\t\t\tfor(OrdersDTO orDTO: hashOrders.values()){\n\t\t\t\t\tbalance=(balance==1?0:1);\n\t\t\t\t\tif(balance==1){\n\t\t\t\t\t\torDTO.setCssStyle(""background-color: rgb(245,249,252);border-right: 1px solid #CCCCCC;border-left:1px solid #CCCCCC;border-top:  1px solid #CCCCCC;border-bottom:  1px solid #CCCCCC;"");\n\t\t\t\t\t}else{\n\t\t\t\t\t\torDTO.setCssStyle(""background-color: color:white;border-right: 1px solid #CCCCCC;border-left:1px solid #CCCCCC;border-top:  1px solid #CCCCCC;border-bottom:  1px solid #CCCCCC;"");\n\t\t\t\t\t}\n\t\t\t\t\torDTO.setOrderFileName(oploadedFileName);\n\t\t\t\t\torDTO.setIndex(OrderIndex); \n\t\t\t\t\tlistOrdersDTO.add(orDTO);\n\t\t\t\t\trowIndex=0;\n\t\t\t\t\tfor(OrdersRows row: orDTO.getRowsList()){\n\t\t\t\t\t\trow.setIndex(rowIndex);\n\t\t\t\t\t\trowIndex++;\n\t\t\t\t\t}\n\t\t\t\t\tOrderIndex++;\n\t\t\t\t}\n\t\t\t\tif(listOrdersDTO.size()>0){\n\t\t\t\t\tsession.setAttribute(""listOrdersDTOAuto"",listOrdersDTO);\n\t\t\t\t\tsession.setAttribute(""hashOrders"",hashOrders);\n\t\t\t\t}else userLogo=null;\n\t\t\t\tsession.setAttribute(""userLogo"",userLogo);\t\n\t\t\t} catch (Exception e) {\n\t\t\t\te.printStackTrace();\n\t\t\t\treturn ""input"";\n\t\t\t}\n\treturn SUCCESS;\n\t}\n\n\t/*=========================  createUserLogo ===========================\n\t \t\t\t\tCreate  Blank User Logo if not Exist\n\t  =================================================================*/\n\tpublic void copyFile(String source, String destination) throws IOException{\n\t\tFile fileLogo=new File(destination);\n\t\tif(!fileLogo.exists()){\n\t\t\tInputStream in = new FileInputStream(source);\n\t\t\tOutputStream out = new FileOutputStream(destination);\n\t\t\tbyte[] buf = new byte[1024];\n\t\t\tint len;\n\t\t\twhile ((len = in.read(buf)) > 0) {\n\t\t\t\tout.write(buf, 0, len);\n\t\t\t}\n\t\t\tin.close();\n\t\t\tout.close();\t\n\t\t}\n\t}\n\t\n\tpublic List<UserFilesDownloadedDTO> getUserFilesListByOption(String userLogin,Boolean checkAllFiles,HttpSession session) throws ServiceException{\n\t\tList<UserFilesDownloadedDTO> result;\n\t\tif(checkAllFiles){\n\t\t\tresult=orderService.getListFileDownloadedDTO(userLogin, 1, 3);\n\t\t}else{\n\t\t\tresult=orderService.getListFileDownloadedDTO(userLogin, 1, 0);\n\t\t}\n\t\tsession.setAttribute(""userFilelist"",result);\n\t\treturn result;\n\t}\n}\n\n----------------------------------- SOURCE END -------------------------------------",1401300105925
error,log,,,"Problems occurred when invoking code from plug-in: ""org.eclipse.jdt.ui"".",1401300105926
error,log,,,"Error in JDT Core during reconcile",1401300105927
activated,view,org.eclipse.wst.server.ui,1.1.207.v20110119,"org.eclipse.wst.server.ui.ServersView",1401300107878
executed,command,org.eclipse.wst.server.ui,1.1.207.v20110119,"org.eclipse.wst.server.debug",1401300111604
activated,view,org.eclipse.ui.console,3.5.0.v20100526,"org.eclipse.ui.console.ConsoleView",1401300117394
activated,editor,org.eclipse.jdt.ui,3.6.2.r362_v20110203,"org.eclipse.jdt.ui.CompilationUnitEditor",1401300164554
activated,view,org.eclipse.ui.console,3.5.0.v20100526,"org.eclipse.ui.console.ConsoleView",1401300169625
activated,view,org.eclipse.debug.ui,3.6.3.v20101201_r362,"org.eclipse.debug.ui.DebugView",1401300172165
deactivated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1401300174535
activated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1401300290145
executed,command,org.eclipse.debug.ui,3.6.3.v20101201_r362,"org.eclipse.debug.ui.commands.Resume",1401300294420
executed,command,org.eclipse.debug.ui,3.6.3.v20101201_r362,"org.eclipse.debug.ui.commands.Resume",1401300294622
deactivated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1401300296775
activated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1401300297852
executed,command,org.eclipse.debug.ui,3.6.3.v20101201_r362,"org.eclipse.debug.ui.commands.Resume",1401300299692
executed,command,org.eclipse.debug.ui,3.6.3.v20101201_r362,"org.eclipse.debug.ui.commands.Resume",1401300299895
deactivated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1401300303109
activated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1401300306884
executed,command,org.eclipse.debug.ui,3.6.3.v20101201_r362,"org.eclipse.debug.ui.commands.Resume",1401300308850
executed,command,org.eclipse.debug.ui,3.6.3.v20101201_r362,"org.eclipse.debug.ui.commands.Resume",1401300309068
