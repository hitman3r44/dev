what,kind,bundleId,bundleVersion,description,time
activated,view,org.eclipse.wst.server.ui,1.1.207.v20110119,"org.eclipse.wst.server.ui.ServersView",1391728566240
deactivated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1391728567380
activated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1391728568445
deactivated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1391728572180
activated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1391728573320
deactivated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1391728573641
activated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1391728579647
deactivated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1391728583720
activated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1391728585039
executed,command,org.eclipse.ui.ide,3.6.2.M20101201-0800,"org.eclipse.ui.project.cleanAction",1391728585046
deactivated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1391728585323
activated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1391728585490
error,log,,,"Exception occurred during problem detection:\n----------------------------------- SOURCE BEGIN -------------------------------------\npackage com.loyauty.web.struts.action;\n\nimport javax.servlet.http.HttpServletRequest;\n\nimport lombok.AccessLevel;\nimport lombok.Getter;\nimport lombok.Setter;\n\nimport org.apache.log4j.Logger;\nimport org.apache.struts2.ServletActionContext;\nimport org.apache.struts2.interceptor.ServletRequestAware;\n\nimport com.loyauty.service.ServiceLocator;\nimport com.loyauty.util.exception.ExceptionHandler;\nimport com.loyauty.web.MessageKeyConstants;\nimport com.loyauty.web.util.LocaleUtils;\nimport com.opensymphony.xwork2.ActionSupport;\nimport com.opensymphony.xwork2.Preparable;\n\n/**\n * This is the basic GameJab action where common properties and methods should go.\n *  \n * @author Muthanna\n *\n */\n\npublic class LoyautyAction extends ActionSupport implements ServletRequestAware, Preparable {\n\n\tprivate static final String NAMESPACES_SEPARATOR = ""/"";\n\n\tprotected Logger log = Logger.getLogger(this.getClass());\n\t\n\tprotected HttpServletRequest request;\n\t\n\t@Getter\t@Setter\n\tprivate boolean ajax = false;\n\t@Getter\t@Setter\n\tprivate String currentLanguage;\n\t@Getter\t@Setter\n\tprivate String pageTitleKey;\n\t@Getter\t@Setter\n\tprivate String pageKeywordsKey;\n\t@Getter\t@Setter\n\tprivate String pageDescriptionKey;\n\t\n\t@Getter(AccessLevel.PROTECTED)\n\t@Setter(AccessLevel.PRIVATE)\n\tprivate ServiceLocator serviceLocator;\n\t\n\tpublic LoyautyAction() {\n\t\tsetServiceLocator(ServiceLocator.getInstance());\n\t}\n\t\n\t@Override\n\tpublic void prepare() throws Exception {\n\t\t/*\n\t\t * filling of message keys header information\n\t\t */\n\t\tString headerKey = null;\n\t\tString namesSpace = ServletActionContext.getActionMapping().getNamespace();\n\t\tString actionName = ServletActionContext.getActionMapping().getName();\n\t\tif (namesSpace != null && !namesSpace.equals(NAMESPACES_SEPARATOR)) {\n\t\t\theaderKey = namesSpace.replace(NAMESPACES_SEPARATOR, ""."");\n\t\t}\n\t\tif (actionName != null) {\n\t\t\theaderKey = (headerKey!=null?headerKey+""."":""."") + actionName;\n\t\t}\n\t\t\n\t\t\n\t\tsetPageTitleKey(MessageKeyConstants.PAGE_HEADER_TITLE_KEY+headerKey);\n\t\tsetPageKeywordsKey(MessageKeyConstants.PAGE_HEADER_KEYWORDS_KEY+headerKey);\n\t\tsetPageDescriptionKey(MessageKeyConstants.PAGE_HEADER_DESCRIPTION_KEY+headerKey);\n\t\t\n\t\tcurrentLanguage = LocaleUtils.getSessionLanguage(request);\n\t}\n\t\n\t/**\n\t * Use this method when if an Action can be use in a Ajax way.\n\t * If the action succeed, it chooses to return ""success"" in the classic way and ""none"" in a Ajax way.\n\t * method do the choice with an ""ajax=true"" parameter in the request \n\t * @return ""success"" in the classic way and ""none"" in a Ajax way.\n\t */\n\tpublic String getSuccessResult() {\n\t\tif (ajax) {\n\t\t\treturn NONE;\n\t\t} else {\n\t\t\treturn SUCCESS;\n\t\t}\n\t}\n\t\n\t/**\n\t * Use this method when if an Action can be use in a Ajax way.\n\t * If the action failed, it chooses to return ""input"" in the classic way and ""none"" in a Ajax way.\n\t * method do the choice with an ""ajax=true"" parameter in the request \n\t * @return ""success"" in the classic way and ""none"" in a Ajax way.\n\t */\n\tpublic String getInputResult() {\n\t\tif (ajax) {\n\t\t\treturn NONE;\n\t\t} else {\n\t\t\treturn INPUT;\n\t\t}\n\t}\n\t\n\t\n\tpublic String getRedirectResult() {\n\t\tif (ajax) {\n\t\t\treturn NONE;\n\t\t} else {\n\t\t\treturn ""next"";\n\t\t}\n\t}\n\t\n\t@Override\n\tpublic void setServletRequest(HttpServletRequest request) {\n\t\tthis.request = request;\n\t}\n\t\n\tpublic void managerException(Exception e, String desc, String var)\n\t{\n\t\ttry{\n\t\t\tExceptionHandler.handleException(e, desc, var);\n\t\t}\n\t\tcatch (Exception ex) {\n\t\t\tlog.error(e.getMessage());\n\t\t}\n\t}\n\t\n\tpublic void managerException(Exception e, Class c, String var)\n\t{\n\t\ttry{\n\t\t\tExceptionHandler.handleException(e, c, null, var);\n\t\t}\n\t\tcatch (Exception ex) {\n\t\t\tlog.error(e.getMessage());\n\t\t}\t\n\t}\n\t\n\tpublic void managerException(Exception e,Class c, String desc, String var)\n\t{\n\t\ttry{\n\t\t\tExceptionHandler.handleException(e, c, desc, var);}\n\t\tcatch (Exception ex) {\n\t\t\tlog.error(e.getMessage());\n\t\t}\t\n\t}\n\t\n\tpublic void managerException(Exception e)\n\t{\n\t\ttry{\n\t\t\tExceptionHandler.handleException(e, null, null);\n\t\t}\n\t\tcatch (Exception ex) {\n\t\t\tlog.error(e.getMessage());\n\t\t}\n\t}\n\t\n\tpublic void managerException(Exception e , String var)\n\t{\n\t\ttry{\n\t\t\tExceptionHandler.handleException(e, null, var);\n\t\t}\n\t\tcatch (Exception ex) {\n\t\t\tlog.error(e.getMessage());\n\t\t}\n\t}\n}\n\n----------------------------------- SOURCE END -------------------------------------",1391728586275
error,log,,,"Problems occurred when invoking code from plug-in: ""org.eclipse.jdt.ui"".",1391728586276
error,log,,,"Error in JDT Core during reconcile",1391728586277
error,log,,,"Exception occurred during problem detection:\n----------------------------------- SOURCE BEGIN -------------------------------------\npackage com.loyauty.web.struts.action;\n\nimport javax.servlet.http.HttpServletRequest;\n\nimport lombok.AccessLevel;\nimport lombok.Getter;\nimport lombok.Setter;\n\nimport org.apache.log4j.Logger;\nimport org.apache.struts2.ServletActionContext;\nimport org.apache.struts2.interceptor.ServletRequestAware;\n\nimport com.loyauty.service.ServiceLocator;\nimport com.loyauty.util.exception.ExceptionHandler;\nimport com.loyauty.web.MessageKeyConstants;\nimport com.loyauty.web.util.LocaleUtils;\nimport com.opensymphony.xwork2.ActionSupport;\nimport com.opensymphony.xwork2.Preparable;\n\n/**\n * This is the basic GameJab action where common properties and methods should go.\n *  \n * @author Muthanna\n *\n */\n\npublic class LoyautyAction extends ActionSupport implements ServletRequestAware, Preparable {\n\n\tprivate static final String NAMESPACES_SEPARATOR = ""/"";\n\n\tprotected Logger log = Logger.getLogger(this.getClass());\n\t\n\tprotected HttpServletRequest request;\n\t\n\t@Getter\t@Setter\n\tprivate boolean ajax = false;\n\t@Getter\t@Setter\n\tprivate String currentLanguage;\n\t@Getter\t@Setter\n\tprivate String pageTitleKey;\n\t@Getter\t@Setter\n\tprivate String pageKeywordsKey;\n\t@Getter\t@Setter\n\tprivate String pageDescriptionKey;\n\t\n\t@Getter(AccessLevel.PROTECTED)\n\t@Setter(AccessLevel.PRIVATE)\n\tprivate ServiceLocator serviceLocator;\n\t\n\tpublic LoyautyAction() {\n\t\tsetServiceLocator(ServiceLocator.getInstance());\n\t}\n\t\n\t@Override\n\tpublic void prepare() throws Exception {\n\t\t/*\n\t\t * filling of message keys header information\n\t\t */\n\t\tString headerKey = null;\n\t\tString namesSpace = ServletActionContext.getActionMapping().getNamespace();\n\t\tString actionName = ServletActionContext.getActionMapping().getName();\n\t\tif (namesSpace != null && !namesSpace.equals(NAMESPACES_SEPARATOR)) {\n\t\t\theaderKey = namesSpace.replace(NAMESPACES_SEPARATOR, ""."");\n\t\t}\n\t\tif (actionName != null) {\n\t\t\theaderKey = (headerKey!=null?headerKey+""."":""."") + actionName;\n\t\t}\n\t\t\n\t\t\n\t\tsetPageTitleKey(MessageKeyConstants.PAGE_HEADER_TITLE_KEY+headerKey);\n\t\tsetPageKeywordsKey(MessageKeyConstants.PAGE_HEADER_KEYWORDS_KEY+headerKey);\n\t\tsetPageDescriptionKey(MessageKeyConstants.PAGE_HEADER_DESCRIPTION_KEY+headerKey);\n\t\t\n\t\tcurrentLanguage = LocaleUtils.getSessionLanguage(request);\n\t}\n\t\n\t/**\n\t * Use this method when if an Action can be use in a Ajax way.\n\t * If the action succeed, it chooses to return ""success"" in the classic way and ""none"" in a Ajax way.\n\t * method do the choice with an ""ajax=true"" parameter in the request \n\t * @return ""success"" in the classic way and ""none"" in a Ajax way.\n\t */\n\tpublic String getSuccessResult() {\n\t\tif (ajax) {\n\t\t\treturn NONE;\n\t\t} else {\n\t\t\treturn SUCCESS;\n\t\t}\n\t}\n\t\n\t/**\n\t * Use this method when if an Action can be use in a Ajax way.\n\t * If the action failed, it chooses to return ""input"" in the classic way and ""none"" in a Ajax way.\n\t * method do the choice with an ""ajax=true"" parameter in the request \n\t * @return ""success"" in the classic way and ""none"" in a Ajax way.\n\t */\n\tpublic String getInputResult() {\n\t\tif (ajax) {\n\t\t\treturn NONE;\n\t\t} else {\n\t\t\treturn INPUT;\n\t\t}\n\t}\n\t\n\t\n\tpublic String getRedirectResult() {\n\t\tif (ajax) {\n\t\t\treturn NONE;\n\t\t} else {\n\t\t\treturn ""next"";\n\t\t}\n\t}\n\t\n\t@Override\n\tpublic void setServletRequest(HttpServletRequest request) {\n\t\tthis.request = request;\n\t}\n\t\n\tpublic void managerException(Exception e, String desc, String var)\n\t{\n\t\ttry{\n\t\t\tExceptionHandler.handleException(e, desc, var);\n\t\t}\n\t\tcatch (Exception ex) {\n\t\t\tlog.error(e.getMessage());\n\t\t}\n\t}\n\t\n\tpublic void managerException(Exception e, Class c, String var)\n\t{\n\t\ttry{\n\t\t\tExceptionHandler.handleException(e, c, null, var);\n\t\t}\n\t\tcatch (Exception ex) {\n\t\t\tlog.error(e.getMessage());\n\t\t}\t\n\t}\n\t\n\tpublic void managerException(Exception e,Class c, String desc, String var)\n\t{\n\t\ttry{\n\t\t\tExceptionHandler.handleException(e, c, desc, var);}\n\t\tcatch (Exception ex) {\n\t\t\tlog.error(e.getMessage());\n\t\t}\t\n\t}\n\t\n\tpublic void managerException(Exception e)\n\t{\n\t\ttry{\n\t\t\tExceptionHandler.handleException(e, null, null);\n\t\t}\n\t\tcatch (Exception ex) {\n\t\t\tlog.error(e.getMessage());\n\t\t}\n\t}\n\t\n\tpublic void managerException(Exception e , String var)\n\t{\n\t\ttry{\n\t\t\tExceptionHandler.handleException(e, null, var);\n\t\t}\n\t\tcatch (Exception ex) {\n\t\t\tlog.error(e.getMessage());\n\t\t}\n\t}\n}\n\n----------------------------------- SOURCE END -------------------------------------",1391728588544
error,log,,,"Problems occurred when invoking code from plug-in: ""org.eclipse.jdt.ui"".",1391728588545
error,log,,,"Error in JDT Core during reconcile",1391728588546
error,log,,,"Problems occurred when invoking code from plug-in: ""org.eclipse.jdt.ui"".",1391728588555
error,log,,,"Error in JDT Core during AST creation",1391728588556
error,log,,,"Problems occurred when invoking code from plug-in: ""org.eclipse.core.resources"".",1391728588852
error,log,,,"Errors occurred during the build.",1391728589183
deactivated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1391728589200
activated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1391728605994
activated,editor,org.eclipse.jdt.ui,3.6.2.r362_v20110203,"org.eclipse.jdt.ui.ClassFileEditor",1391728608455
activated,editor,org.eclipse.jdt.ui,3.6.2.r362_v20110203,"org.eclipse.jdt.ui.CompilationUnitEditor",1391728609741
closed,editor,org.eclipse.jdt.ui,3.6.2.r362_v20110203,"org.eclipse.jdt.ui.ClassFileEditor",1391728609741
deactivated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1391728619094
activated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1391728620267
executed,command,org.eclipse.ui.ide,3.6.2.M20101201-0800,"org.eclipse.ui.project.cleanAction",1391728620272
deactivated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1391728620543
activated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1391728620703
error,log,,,"Exception occurred during problem detection:\n----------------------------------- SOURCE BEGIN -------------------------------------\npackage com.loyauty.web.struts.action;\n\nimport javax.servlet.http.HttpServletRequest;\n\nimport lombok.AccessLevel;\nimport lombok.Getter;\nimport lombok.Setter;\n\nimport org.apache.log4j.Logger;\nimport org.apache.struts2.ServletActionContext;\nimport org.apache.struts2.interceptor.ServletRequestAware;\n\nimport com.loyauty.service.ServiceLocator;\nimport com.loyauty.util.exception.ExceptionHandler;\nimport com.loyauty.web.MessageKeyConstants;\nimport com.loyauty.web.util.LocaleUtils;\nimport com.opensymphony.xwork2.ActionSupport;\nimport com.opensymphony.xwork2.Preparable;\n\n/**\n * This is the basic GameJab action where common properties and methods should go.\n *  \n * @author Muthanna\n *\n */\n\npublic class LoyautyAction extends ActionSupport implements ServletRequestAware, Preparable {\n\n\tprivate static final String NAMESPACES_SEPARATOR = ""/"";\n\n\tprotected Logger log = Logger.getLogger(this.getClass());\n\t\n\tprotected HttpServletRequest request;\n\t\n\t@Getter\t@Setter\n\tprivate boolean ajax = false;\n\t@Getter\t@Setter\n\tprivate String currentLanguage;\n\t@Getter\t@Setter\n\tprivate String pageTitleKey;\n\t@Getter\t@Setter\n\tprivate String pageKeywordsKey;\n\t@Getter\t@Setter\n\tprivate String pageDescriptionKey;\n\t\n\t@Getter(AccessLevel.PROTECTED)\n\t@Setter(AccessLevel.PRIVATE)\n\tprivate ServiceLocator serviceLocator;\n\t\n\tpublic LoyautyAction() {\n\t\tsetServiceLocator(ServiceLocator.getInstance());\n\t}\n\t\n\t@Override\n\tpublic void prepare() throws Exception {\n\t\t/*\n\t\t * filling of message keys header information\n\t\t */\n\t\tString headerKey = null;\n\t\tString namesSpace = ServletActionContext.getActionMapping().getNamespace();\n\t\tString actionName = ServletActionContext.getActionMapping().getName();\n\t\tif (namesSpace != null && !namesSpace.equals(NAMESPACES_SEPARATOR)) {\n\t\t\theaderKey = namesSpace.replace(NAMESPACES_SEPARATOR, ""."");\n\t\t}\n\t\tif (actionName != null) {\n\t\t\theaderKey = (headerKey!=null?headerKey+""."":""."") + actionName;\n\t\t}\n\t\t\n\t\t\n\t\tsetPageTitleKey(MessageKeyConstants.PAGE_HEADER_TITLE_KEY+headerKey);\n\t\tsetPageKeywordsKey(MessageKeyConstants.PAGE_HEADER_KEYWORDS_KEY+headerKey);\n\t\tsetPageDescriptionKey(MessageKeyConstants.PAGE_HEADER_DESCRIPTION_KEY+headerKey);\n\t\t\n\t\tcurrentLanguage = LocaleUtils.getSessionLanguage(request);\n\t}\n\t\n\t/**\n\t * Use this method when if an Action can be use in a Ajax way.\n\t * If the action succeed, it chooses to return ""success"" in the classic way and ""none"" in a Ajax way.\n\t * method do the choice with an ""ajax=true"" parameter in the request \n\t * @return ""success"" in the classic way and ""none"" in a Ajax way.\n\t */\n\tpublic String getSuccessResult() {\n\t\tif (ajax) {\n\t\t\treturn NONE;\n\t\t} else {\n\t\t\treturn SUCCESS;\n\t\t}\n\t}\n\t\n\t/**\n\t * Use this method when if an Action can be use in a Ajax way.\n\t * If the action failed, it chooses to return ""input"" in the classic way and ""none"" in a Ajax way.\n\t * method do the choice with an ""ajax=true"" parameter in the request \n\t * @return ""success"" in the classic way and ""none"" in a Ajax way.\n\t */\n\tpublic String getInputResult() {\n\t\tif (ajax) {\n\t\t\treturn NONE;\n\t\t} else {\n\t\t\treturn INPUT;\n\t\t}\n\t}\n\t\n\t\n\tpublic String getRedirectResult() {\n\t\tif (ajax) {\n\t\t\treturn NONE;\n\t\t} else {\n\t\t\treturn ""next"";\n\t\t}\n\t}\n\t\n\t@Override\n\tpublic void setServletRequest(HttpServletRequest request) {\n\t\tthis.request = request;\n\t}\n\t\n\tpublic void managerException(Exception e, String desc, String var)\n\t{\n\t\ttry{\n\t\t\tExceptionHandler.handleException(e, desc, var);\n\t\t}\n\t\tcatch (Exception ex) {\n\t\t\tlog.error(e.getMessage());\n\t\t}\n\t}\n\t\n\tpublic void managerException(Exception e, Class c, String var)\n\t{\n\t\ttry{\n\t\t\tExceptionHandler.handleException(e, c, null, var);\n\t\t}\n\t\tcatch (Exception ex) {\n\t\t\tlog.error(e.getMessage());\n\t\t}\t\n\t}\n\t\n\tpublic void managerException(Exception e,Class c, String desc, String var)\n\t{\n\t\ttry{\n\t\t\tExceptionHandler.handleException(e, c, desc, var);}\n\t\tcatch (Exception ex) {\n\t\t\tlog.error(e.getMessage());\n\t\t}\t\n\t}\n\t\n\tpublic void managerException(Exception e)\n\t{\n\t\ttry{\n\t\t\tExceptionHandler.handleException(e, null, null);\n\t\t}\n\t\tcatch (Exception ex) {\n\t\t\tlog.error(e.getMessage());\n\t\t}\n\t}\n\t\n\tpublic void managerException(Exception e , String var)\n\t{\n\t\ttry{\n\t\t\tExceptionHandler.handleException(e, null, var);\n\t\t}\n\t\tcatch (Exception ex) {\n\t\t\tlog.error(e.getMessage());\n\t\t}\n\t}\n}\n\n----------------------------------- SOURCE END -------------------------------------",1391728621986
error,log,,,"Problems occurred when invoking code from plug-in: ""org.eclipse.jdt.ui"".",1391728621986
error,log,,,"Error in JDT Core during reconcile",1391728621987
error,log,,,"Problems occurred when invoking code from plug-in: ""org.eclipse.jdt.ui"".",1391728622035
error,log,,,"Error in JDT Core during AST creation",1391728622036
error,log,,,"Exception occurred during problem detection:\n----------------------------------- SOURCE BEGIN -------------------------------------\npackage com.loyauty.web.struts.action;\n\nimport javax.servlet.http.HttpServletRequest;\n\nimport lombok.AccessLevel;\nimport lombok.Getter;\nimport lombok.Setter;\n\nimport org.apache.log4j.Logger;\nimport org.apache.struts2.ServletActionContext;\nimport org.apache.struts2.interceptor.ServletRequestAware;\n\nimport com.loyauty.service.ServiceLocator;\nimport com.loyauty.util.exception.ExceptionHandler;\nimport com.loyauty.web.MessageKeyConstants;\nimport com.loyauty.web.util.LocaleUtils;\nimport com.opensymphony.xwork2.ActionSupport;\nimport com.opensymphony.xwork2.Preparable;\n\n/**\n * This is the basic GameJab action where common properties and methods should go.\n *  \n * @author Muthanna\n *\n */\n\npublic class LoyautyAction extends ActionSupport implements ServletRequestAware, Preparable {\n\n\tprivate static final String NAMESPACES_SEPARATOR = ""/"";\n\n\tprotected Logger log = Logger.getLogger(this.getClass());\n\t\n\tprotected HttpServletRequest request;\n\t\n\t@Getter\t@Setter\n\tprivate boolean ajax = false;\n\t@Getter\t@Setter\n\tprivate String currentLanguage;\n\t@Getter\t@Setter\n\tprivate String pageTitleKey;\n\t@Getter\t@Setter\n\tprivate String pageKeywordsKey;\n\t@Getter\t@Setter\n\tprivate String pageDescriptionKey;\n\t\n\t@Getter(AccessLevel.PROTECTED)\n\t@Setter(AccessLevel.PRIVATE)\n\tprivate ServiceLocator serviceLocator;\n\t\n\tpublic LoyautyAction() {\n\t\tsetServiceLocator(ServiceLocator.getInstance());\n\t}\n\t\n\t@Override\n\tpublic void prepare() throws Exception {\n\t\t/*\n\t\t * filling of message keys header information\n\t\t */\n\t\tString headerKey = null;\n\t\tString namesSpace = ServletActionContext.getActionMapping().getNamespace();\n\t\tString actionName = ServletActionContext.getActionMapping().getName();\n\t\tif (namesSpace != null && !namesSpace.equals(NAMESPACES_SEPARATOR)) {\n\t\t\theaderKey = namesSpace.replace(NAMESPACES_SEPARATOR, ""."");\n\t\t}\n\t\tif (actionName != null) {\n\t\t\theaderKey = (headerKey!=null?headerKey+""."":""."") + actionName;\n\t\t}\n\t\t\n\t\t\n\t\tsetPageTitleKey(MessageKeyConstants.PAGE_HEADER_TITLE_KEY+headerKey);\n\t\tsetPageKeywordsKey(MessageKeyConstants.PAGE_HEADER_KEYWORDS_KEY+headerKey);\n\t\tsetPageDescriptionKey(MessageKeyConstants.PAGE_HEADER_DESCRIPTION_KEY+headerKey);\n\t\t\n\t\tcurrentLanguage = LocaleUtils.getSessionLanguage(request);\n\t}\n\t\n\t/**\n\t * Use this method when if an Action can be use in a Ajax way.\n\t * If the action succeed, it chooses to return ""success"" in the classic way and ""none"" in a Ajax way.\n\t * method do the choice with an ""ajax=true"" parameter in the request \n\t * @return ""success"" in the classic way and ""none"" in a Ajax way.\n\t */\n\tpublic String getSuccessResult() {\n\t\tif (ajax) {\n\t\t\treturn NONE;\n\t\t} else {\n\t\t\treturn SUCCESS;\n\t\t}\n\t}\n\t\n\t/**\n\t * Use this method when if an Action can be use in a Ajax way.\n\t * If the action failed, it chooses to return ""input"" in the classic way and ""none"" in a Ajax way.\n\t * method do the choice with an ""ajax=true"" parameter in the request \n\t * @return ""success"" in the classic way and ""none"" in a Ajax way.\n\t */\n\tpublic String getInputResult() {\n\t\tif (ajax) {\n\t\t\treturn NONE;\n\t\t} else {\n\t\t\treturn INPUT;\n\t\t}\n\t}\n\t\n\t\n\tpublic String getRedirectResult() {\n\t\tif (ajax) {\n\t\t\treturn NONE;\n\t\t} else {\n\t\t\treturn ""next"";\n\t\t}\n\t}\n\t\n\t@Override\n\tpublic void setServletRequest(HttpServletRequest request) {\n\t\tthis.request = request;\n\t}\n\t\n\tpublic void managerException(Exception e, String desc, String var)\n\t{\n\t\ttry{\n\t\t\tExceptionHandler.handleException(e, desc, var);\n\t\t}\n\t\tcatch (Exception ex) {\n\t\t\tlog.error(e.getMessage());\n\t\t}\n\t}\n\t\n\tpublic void managerException(Exception e, Class c, String var)\n\t{\n\t\ttry{\n\t\t\tExceptionHandler.handleException(e, c, null, var);\n\t\t}\n\t\tcatch (Exception ex) {\n\t\t\tlog.error(e.getMessage());\n\t\t}\t\n\t}\n\t\n\tpublic void managerException(Exception e,Class c, String desc, String var)\n\t{\n\t\ttry{\n\t\t\tExceptionHandler.handleException(e, c, desc, var);}\n\t\tcatch (Exception ex) {\n\t\t\tlog.error(e.getMessage());\n\t\t}\t\n\t}\n\t\n\tpublic void managerException(Exception e)\n\t{\n\t\ttry{\n\t\t\tExceptionHandler.handleException(e, null, null);\n\t\t}\n\t\tcatch (Exception ex) {\n\t\t\tlog.error(e.getMessage());\n\t\t}\n\t}\n\t\n\tpublic void managerException(Exception e , String var)\n\t{\n\t\ttry{\n\t\t\tExceptionHandler.handleException(e, null, var);\n\t\t}\n\t\tcatch (Exception ex) {\n\t\t\tlog.error(e.getMessage());\n\t\t}\n\t}\n}\n\n----------------------------------- SOURCE END -------------------------------------",1391728623007
error,log,,,"Problems occurred when invoking code from plug-in: ""org.eclipse.jdt.ui"".",1391728623009
error,log,,,"Error in JDT Core during reconcile",1391728623009
activated,view,org.eclipse.wst.server.ui,1.1.207.v20110119,"org.eclipse.wst.server.ui.ServersView",1391728629327
executed,command,org.eclipse.wst.server.ui,1.1.207.v20110119,"org.eclipse.wst.server.debug",1391728632412
activated,view,org.eclipse.debug.ui,3.6.3.v20101201_r362,"org.eclipse.debug.ui.DebugView",1391728672264
executed,command,org.eclipse.debug.ui,3.6.3.v20101201_r362,"org.eclipse.debug.ui.commands.Resume",1391728677278
executed,command,org.eclipse.debug.ui,3.6.3.v20101201_r362,"org.eclipse.debug.ui.commands.Resume",1391728677472
activated,view,org.eclipse.wst.server.ui,1.1.207.v20110119,"org.eclipse.wst.server.ui.ServersView",1391728680028
deactivated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1391728681275
activated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1391728681513
activated,view,org.eclipse.debug.ui,3.6.3.v20101201_r362,"org.eclipse.debug.ui.DebugView",1391728681531
executed,command,org.eclipse.debug.ui,3.6.3.v20101201_r362,"org.eclipse.debug.ui.commands.StepOver",1391728686375
executed,command,org.eclipse.debug.ui,3.6.3.v20101201_r362,"org.eclipse.debug.ui.commands.StepOver",1391728686577
executed,command,org.eclipse.debug.ui,3.6.3.v20101201_r362,"org.eclipse.debug.ui.commands.StepOver",1391728686763
executed,command,org.eclipse.debug.ui,3.6.3.v20101201_r362,"org.eclipse.debug.ui.commands.StepOver",1391728686934
executed,command,org.eclipse.debug.ui,3.6.3.v20101201_r362,"org.eclipse.debug.ui.commands.StepOver",1391728687114
executed,command,org.eclipse.debug.ui,3.6.3.v20101201_r362,"org.eclipse.debug.ui.commands.StepOver",1391728687301
executed,command,org.eclipse.debug.ui,3.6.3.v20101201_r362,"org.eclipse.debug.ui.commands.StepOver",1391728687479
executed,command,org.eclipse.debug.ui,3.6.3.v20101201_r362,"org.eclipse.debug.ui.commands.StepOver",1391728687673
executed,command,org.eclipse.debug.ui,3.6.3.v20101201_r362,"org.eclipse.debug.ui.commands.StepOver",1391728687853
executed,command,org.eclipse.debug.ui,3.6.3.v20101201_r362,"org.eclipse.debug.ui.commands.StepOver",1391728688038
executed,command,org.eclipse.debug.ui,3.6.3.v20101201_r362,"org.eclipse.debug.ui.commands.StepOver",1391728688233
opened,editor,org.eclipse.jdt.ui,3.6.2.r362_v20110203,"org.eclipse.jdt.ui.ClassFileEditor",1391728688307
executed,command,org.eclipse.debug.ui,3.6.3.v20101201_r362,"org.eclipse.debug.ui.commands.Resume",1391728690192
deactivated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1391728693574
activated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1391728697307
executed,command,org.eclipse.debug.ui,3.6.3.v20101201_r362,"org.eclipse.debug.ui.commands.Resume",1391728700636
executed,command,org.eclipse.debug.ui,3.6.3.v20101201_r362,"org.eclipse.debug.ui.commands.Resume",1391728701570
executed,command,org.eclipse.debug.ui,3.6.3.v20101201_r362,"org.eclipse.debug.ui.commands.StepOver",1391728706009
executed,command,org.eclipse.debug.ui,3.6.3.v20101201_r362,"org.eclipse.debug.ui.commands.StepOver",1391728711694
executed,command,org.eclipse.debug.ui,3.6.3.v20101201_r362,"org.eclipse.debug.ui.commands.StepOver",1391728719672
executed,command,org.eclipse.debug.ui,3.6.3.v20101201_r362,"org.eclipse.debug.ui.commands.StepOver",1391728722307
executed,command,org.eclipse.debug.ui,3.6.3.v20101201_r362,"org.eclipse.debug.ui.commands.StepOver",1391728722805
executed,command,org.eclipse.debug.ui,3.6.3.v20101201_r362,"org.eclipse.debug.ui.commands.StepOver",1391728724345
executed,command,org.eclipse.debug.ui,3.6.3.v20101201_r362,"org.eclipse.debug.ui.commands.StepOver",1391728730364
opened,editor,org.eclipse.debug.ui,3.6.3.v20101201_r362,"org.eclipse.debug.ui.sourcelookup.CommonSourceNotFoundEditor",1391728730461
closed,editor,org.eclipse.jdt.ui,3.6.2.r362_v20110203,"org.eclipse.jdt.ui.ClassFileEditor",1391728730485
