what,kind,bundleId,bundleVersion,description,time
error,log,,,"Problems occurred when invoking code from plug-in: ""org.eclipse.jdt.ui"".",1404942375767
error,log,,,"Error in JDT Core during reconcile",1404942375767
error,log,,,"Exception occurred during problem detection:\n----------------------------------- SOURCE BEGIN -------------------------------------\npackage com.loyauty.web.struts.action.ajax;\n\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.text.DecimalFormat;\nimport java.text.NumberFormat;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Locale;\nimport java.util.Map;\n\nimport lombok.Getter;\nimport lombok.Setter;\n\nimport org.apache.commons.lang.time.DateFormatUtils;\nimport com.loyauty.enums.UserProductStatus;\n\nimport com.loyauty.exception.ServiceException;\nimport com.loyauty.exception.ServiceLocatorException;\n\nimport com.loyauty.service.brand.BrandService;\nimport com.loyauty.service.category.CategoryService;\nimport com.loyauty.service.common.CommonService;\nimport com.loyauty.service.core.dto.BasicUserDTO;\nimport com.loyauty.service.core.dto.BrandDTO;\nimport com.loyauty.service.core.dto.CategoryDTO;\nimport com.loyauty.service.core.dto.CommonDTO;\nimport com.loyauty.service.core.dto.ProductDTO;\nimport com.loyauty.service.core.dto.QueryDTO;\nimport com.loyauty.service.core.dto.SpecificationDTO;\nimport com.loyauty.service.core.dto.UserProductDTO;\nimport com.loyauty.service.core.dto.UserSessionDTO;\nimport com.loyauty.service.product.ProductService;\nimport com.loyauty.service.specification.SpecificationService;\nimport com.loyauty.service.user.UserService;\nimport com.loyauty.util.CommonUtils;\nimport com.loyauty.web.exception.LoyautyAjaxActionException;\nimport com.loyauty.web.struts.action.LoyautyListActionSupport;\n\n\n\n\npublic class AdminPageAjax<T> extends LoyautyListActionSupport {\n\t\n\tprivate static final long serialVersionUID = 1L;\n\t\n\tprivate static final String LOYALTY_DATE_FORMAT_DD_MMMM_YYYY_KEY = ""loyauty.date.format.dd-MM-YYYY"";\n\t\n\tprivate UserService userService;\n\tprivate CommonService commonService;\n\tprivate BrandService brandService;\n\tprivate CategoryService categoryService;\n\tprivate ProductService productService;\n\tprivate SpecificationService specificationService;\n\t\n\tprivate static String AA_DATA = ""aaData"";\n\tprivate static String USER_DISCOUNT = ""userDiscount"";\n\tprivate static final String CODE_BRAND = ""codeBrand"";\n\t\n\tprivate static int USER_TYPE = 2;\t\n\t\n\t@Getter @Setter\n\tprivate int typePage; \n\t@Getter @Setter\n\tprivate long brandId;\n\t@Getter @Setter\n\tprivate long categoryId;\n\t@Getter @Setter\n\tprivate boolean discontinued;\n\t@Getter @Setter\n\tprivate boolean disabled;\n\t@Getter @Setter\n\tprivate long userId;\t\n\n\t@Getter @Setter\n\tprivate String value;\n\t@Getter @Setter\n\tprivate String oldValue;\n\t@Getter @Setter\n\tprivate long productId;\t\n\t@Getter @Setter\n\tList<UserSessionDTO> dataLinks;\n\t\n\t@Getter\n\tprivate int userProductStatus;\n\n\t@Getter @Setter\n\tprivate Integer userStatus;\n\t\n\tpublic AdminPageAjax() {\t\t\n\t}\n\t\n\t\n\t@Override  \n\tpublic String execute() throws Exception {\t\t\t\t\t\t\t\n\t\tdataLinks = new ArrayList<UserSessionDTO>();\n\t\tBasicUserDTO basicUserDTO = new BasicUserDTO();\n\t\tuserService = this.getServiceLocator().getUserService();\n\t\tbasicUserDTO.setTypeId(USER_TYPE);\n\t\ttry{\n\t\t\tif(userStatus==null)userStatus=-1;\n\t\t\tswitch (userStatus) {\n\t\t\tcase 1:\n\t\t\t\tbasicUserDTO.setActive(true);\t\t\t\n\t\t\t\tdataLinks = userService.getAllUserAccounts(basicUserDTO);\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tbasicUserDTO.setActive(false);\t\t\t\n\t\t\t\tdataLinks = userService.getAllUserAccounts(basicUserDTO);\n\t\t\t\tbreak;\t\n\t\t\tdefault:\n\t\t\t\tdataLinks = userService.getAllUsers(basicUserDTO);\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t return SUCCESS;\n\t\t}catch (Exception e) {\n\t\t\t// TODO: handle exception\n\t\t\te.printStackTrace();\n\t\t\treturn ERROR;\n\t\t}\n\n\t}\n\t\t\n\t@SuppressWarnings(""unchecked"")\n\tpublic String accountsList() throws LoyautyAjaxActionException, ServiceException {\t\t\n\t\tdataLinks = new ArrayList<UserSessionDTO>();\n\t\ttry {\t\t\t\n\t\t\tuserService = this.getServiceLocator().getUserService();\n\t\t\tBasicUserDTO basicUserDTO = new BasicUserDTO();\n\t\t\tbasicUserDTO.setTypeId(USER_TYPE);\n\t\t\tdataLinks = userService.getAllUsers(basicUserDTO);\n\t\t\tfor(BasicUserDTO bu:dataLinks){\n\t\t\t\tif(bu.getClientCategoryName()==null)bu.setClientCategoryName("""");\n\t\t\t}\n\t\t}catch(ServiceLocatorException sle){\n\t\t\tlog.debug(""Service Locator Exception pb"", sle);\t\t\t\n\t\t}\n\t\t//serialize result\n\t\tMap<String, T> map = new HashMap<String, T>();\n\t\tmap.put(AA_DATA, (T) dataLinks);\n\t\tsetResult(map);\t\t\n\t\treturn SUCCESS;\n\t}\n\t\n\t@SuppressWarnings(""unchecked"")\n\tpublic String populateCategoryAndDiscount() throws LoyautyAjaxActionException, ServiceException {\t\t\n\t\tList<CommonDTO> dataLinks = null;\n\t\tString discount = null;\n\t\ttry {\t\t\t\n\t\t\tcommonService = this.getServiceLocator().getCommonService();\t\n\t\t\tuserService = this.getServiceLocator().getUserService();\n\t\t\tproductService =  this.getServiceLocator().getProductService();\t\t\t\n\t\t\tdataLinks = internationalizeName(commonService.getCategoriesByBrand(brandId));\n\t\t} catch(ServiceLocatorException sle){\n\t\t\tlog.debug(""Service Locator Exception pb"", sle);\t\t\t\n\t\t}\n\t\t//serialize result\n\t\tMap<String, T> map = new HashMap<String, T>();\n\t\tmap.put(AA_DATA, (T) dataLinks);\n\t\tmap.put(USER_DISCOUNT, (T) discount);\n\t\tsetResult(map);\t\t\n\t\treturn  SUCCESS;\t\t\n\t}\n\t\n\tprivate List<CommonDTO> internationalizeName(List<CategoryDTO> list){\n\t\t\n\t\tList<CommonDTO> commonListDTO = new ArrayList<CommonDTO>();\n\t\tCommonDTO commonDTO;\n\t\tfor(CategoryDTO cat : list){\n\t\t\tcommonDTO = CommonDTO.valueOf(cat.getId(), getText(cat.getCode()));\t\t\t\n\t\t\tcommonListDTO.add(commonDTO);\n\t\t}\t\t\n\t\treturn commonListDTO;\t\t\n\t}\t\n\t\n\t@SuppressWarnings(""unchecked"")\n\tpublic String getProductAndDiscountByCategory() throws LoyautyAjaxActionException, ServiceException {\n\t\tList<CommonDTO> dataLinks = null;\n\t\tString discount = null;\n\t\ttry {\n\t\t\tcommonService = this.getServiceLocator().getCommonService();\t\n\t\t\tuserService = this.getServiceLocator().getUserService();\n\t\t\tproductService = this.getServiceLocator().getProductService();\t\t\t\n\t\t\tdataLinks = internationalizeName(commonService.getCategoriesByBrand(brandId));\t\t\t\n\t\t} catch(ServiceLocatorException sle){\n\t\t\tlog.debug(""Service Locator Exception pb"", sle);\t\t\t\n\t\t}\n\t\t//serialize result\n\t\tMap<String, T> map = new HashMap<String, T>();\n\t\tmap.put(AA_DATA, (T) dataLinks);\n\t\tmap.put(USER_DISCOUNT, (T) discount);\n\t\tsetResult(map);\n\t\t\n\t\treturn  SUCCESS;\t\t\n\t}\t\n\t\n\t@SuppressWarnings(""unchecked"")\n\tpublic String brandList() throws LoyautyAjaxActionException, ServiceException {\t\n\t\t\t\t\n\t\tList<BrandDTO> dataLinks = new ArrayList<BrandDTO>();\n\t\ttry {\t\t\t\n\t\t\tbrandService = this.getServiceLocator().getBrandService();\n\t\t\tdataLinks = brandService.getAllBrand();\n\t\t\tfor(BrandDTO dto : dataLinks) {\n\t\t\t\tdto.setLocalizedCreationDate(DateFormatUtils.format(dto.getCreationDate(), getText(LOYALTY_DATE_FORMAT_DD_MMMM_YYYY_KEY)));\n\t\t\t}\n\t\t}catch(ServiceLocatorException sle){\n\t\t\tlog.debug(""Service Locator Exception pb"", sle);\t\t\t\n\t\t}\n\t\t//serialize result\n\t\tMap<String, T> map = new HashMap<String, T>();\n\t\tmap.put(AA_DATA, (T) dataLinks);\n\t\tsetResult(map);\n\t\t\n\t\treturn  SUCCESS;\n\t\t\n\t}\n\t\n\t@SuppressWarnings(""unchecked"")\n\tpublic String categoryList() throws LoyautyAjaxActionException, ServiceException {\t\n\t\t\t\t\n\t\tList<CategoryDTO> dataLinks = new ArrayList<CategoryDTO>();\n\t\ttry {\t\t\t\n\t\t\tcategoryService = this.getServiceLocator().getCategoryService();\n\t\t\tdataLinks = categoryService.getAllCategory();\n\t\t}catch(ServiceLocatorException sle){\n\t\t\tlog.debug(""Service Locator Exception pb"", sle);\t\t\t\n\t\t}\n\t\t//serialize result\n\t\tMap<String, T> map = new HashMap<String, T>();\n\t\tmap.put(AA_DATA, (T) dataLinks);\n\t\tsetResult(map);\n\t\t\n\t\treturn  SUCCESS;\t\t\n\t}\t\n\t\n\t@SuppressWarnings(""unchecked"")\n\tpublic String getMainSpecificationByCategory() throws LoyautyAjaxActionException, ServiceException {\t\n\t\t\t\t\n\t\tList<SpecificationDTO> dataLinks = new ArrayList<SpecificationDTO>();\n\t\ttry {\t\t\t\n\t\t\tproductService = this.getServiceLocator().getProductService();\n\t\t\tdataLinks = productService.getMainSpecificationByCategory(categoryId);\n\t\t}catch(ServiceLocatorException sle){\n\t\t\tlog.debug(""Service Locator Exception pb"", sle);\t\t\t\n\t\t}\n\t\t//serialize result\n\t\tMap<String, T> map = new HashMap<String, T>();\n\t\tmap.put(AA_DATA, (T) dataLinks);\n\t\tsetResult(map);\n\t\t\n\t\treturn  SUCCESS;\n\t\t\n\t}\n\t\n\t\n\t@SuppressWarnings(""unchecked"")\n\tpublic String populateCategory() throws LoyautyAjaxActionException, ServiceException {\t\n\t\t\n\t\tList<CommonDTO> dataLinks = null;\n\t\tString code = new String();\n\t\ttry {\t\t\t\n\t\t\t\n\t\t\tcommonService = getServiceLocator().getCommonService();\t\n\t\t\tbrandService = getServiceLocator().getBrandService();\n\t\t\t\n\t\t\tdataLinks = internationalizeName(commonService.getCategoriesByBrand(brandId));\n\t\t\tcode = brandService.getBrand(brandId).getCode();\n\t\t\t\t\t\t\n\t\t}catch(ServiceLocatorException sle){\n\t\t\tlog.debug(""Service Locator Exception pb"", sle);\t\t\t\n\t\t} catch (Exception e) {}\n\t\t//serialize result\n\t\tMap<String, T> map = new HashMap<String, T>();\n\t\tmap.put(AA_DATA, (T) dataLinks);\n\t\tmap.put(CODE_BRAND, (T)code);\n\t\tsetResult(map);\n\t\t\n\t\treturn  SUCCESS;\t\t\n\t}\t\n\t\n\t@SuppressWarnings(""unchecked"")\n\tpublic String setManuelPrices() throws LoyautyAjaxActionException, ServiceException {\t\n\t\t\n\t\ttry {\t\t\t\n\t\t\tdouble val = Double.valueOf(value);\n\t\t\tproductService = this.getServiceLocator().getProductService();\n\t\t\tUserProductDTO producDTO = new UserProductDTO();\n\t\t\tproducDTO.setUserId(userId);\n\t\t\tproducDTO.setId(productId);\n\t\t\tproducDTO.setUserPrice(value);\t\t\t\n\t\t\tproductService.updateSellingPriceProduct(producDTO);\n\t\t\tsetResult(val);\t\t\n\t\t\t\n\t\t}catch(NumberFormatException se){\n\t\t\tlog.debug(""Number Conversion Exception pb"", se);\t\t\t\t\n\t\t\tsetResult(oldValue.isEmpty()?""NaN"" : Double.valueOf(oldValue));\n\t\t}catch(ServiceLocatorException se){\t\t\t\n\t\t\tlog.debug(""Service Locator Exception pb"", se);\t\t\t\t\n\t\t\tsetResult(oldValue.isEmpty()?""NaN"" : Double.valueOf(oldValue));\n\t\t}catch(ServiceException se){\n\t\t\tlog.debug(""Service Exception pb"", se);\n\t\t\tsetResult(oldValue.isEmpty()?""NaN"" : Double.valueOf(oldValue));\n\t\t}catch(Exception se){\n\t\t\tlog.debug(""Exception pb"", se);\n\t\t\tsetResult(oldValue.isEmpty()?""NaN"" : Double.valueOf(oldValue));\n\t\t}\t\t\n\t\treturn  SUCCESS;\t\n\t}\n\t\n\t@SuppressWarnings(""unchecked"")\n\tpublic String setuserproductstatus() throws LoyautyAjaxActionException, ServiceException {\t\n\t\t\n\t\ttry {\n\t\t\t\n\t\t\tBoolean val = Boolean.valueOf(value);\t\t\t\n\t\t\tproductService = this.getServiceLocator().getProductService();\t\n\t\t\tUserProductDTO producDTO = new UserProductDTO();\n\t\t\tproducDTO.setUserId(userId);\n\t\t\tproducDTO.setId(productId);\n\t\t\tif(Boolean.valueOf(value))\n\t\t\t\tproducDTO.setUserProductStatus(UserProductStatus.ACTIVE);\n\t\t\telse\n\t\t\t\tproducDTO.setUserProductStatus(UserProductStatus.INACTIVE);\n\t\t\tproductService.updateUserProductStatus(producDTO);\n\t\t\tsetResult(val);\t\t\n\t\t\t\n\t\t} catch(NumberFormatException se){\n\t\t\tlog.debug(""Number Conversion Exception pb"", se);\t\t\t\t\n\t\t\tsetResult(oldValue.isEmpty()?""NaN"" : Boolean.valueOf(oldValue));\n\t\t} catch(ServiceLocatorException se){\t\t\t\n\t\t\tlog.debug(""Service Locator Exception pb"", se);\t\t\t\t\n\t\t\tsetResult(oldValue.isEmpty()?""NaN"" : Boolean.valueOf(oldValue));\n\t\t\n\t\t} catch(Exception se){\n\t\t\tlog.debug(""Exception pb"", se);\n\t\t\tsetResult(oldValue.isEmpty()?""NaN"" : Boolean.valueOf(oldValue));\n\t\t}\t\t\n\t\t\n\t\treturn  SUCCESS;\n\t\t\n\t}\n\t\n\t@SuppressWarnings(""unchecked"")\n\tpublic String productList() throws LoyautyAjaxActionException, ServiceException {\t\t\t\t\n\t\tList<ProductDTO> dataList = new ArrayList<ProductDTO>();\n\t\ttry {\t\t\t\n\t\t\tproductService = this.getServiceLocator().getProductService();\n\t\t\tdataList = productService.getAllProdcut();\n\t\t}catch(ServiceLocatorException sle){\n\t\t\tlog.debug(""Service Locator Exception pb"", sle);\t\t\t\n\t\t}\n\t\t//serialize result\n\t\tMap<String, T> map = new HashMap<String, T>();\n\t\tmap.put(AA_DATA, (T) dataList);\n\t\tsetResult(map);\n\t\treturn  SUCCESS;\t\t\n\t}\n\t\n\t@SuppressWarnings(""unchecked"")\n\tpublic String productListQuery() throws LoyautyAjaxActionException, ServiceException {\t\n\t\t\n\t\tList<ProductDTO> dataList = new ArrayList<ProductDTO>();\n\t\ttry {\n\t\t\tproductService = this.getServiceLocator().getProductService();\n\t\t\t\n\t\t\t// = new ProductDTO();\n\t\t\tBrandDTO brandDTO = BrandDTO.valueOf(brandId);\n\t\t\tCategoryDTO catDTO = CategoryDTO.valueOf(categoryId);\n\t\t\tQueryDTO queryDTO = new QueryDTO.Builder(brandDTO, catDTO, discontinued, disabled).build();\n\t\t\t// ProductDTO dto = new ProductDTO.Builder(new Long(0), brandDTO, catDTO).build();\n\t\t\tdataList = productService.getAllProductQuery(queryDTO);\n\t\t\t\t\t\t\n\t\t} catch(ServiceLocatorException sle){\n\t\t\tlog.debug(""Service Locator Exception pb"", sle);\t\t\t\n\t\t}\n\t\t//serialize result\n\t\tMap<String, T> map = new HashMap<String, T>();\n\t\tmap.put(AA_DATA, (T) dataList);\n\t\tsetResult(map);\n\t\t\n\t\treturn  SUCCESS;\t\t\n\t}\n\t\n\t@SuppressWarnings(""unchecked"")\n\tpublic String getMainSpecificationList() throws LoyautyAjaxActionException, ServiceException {\t\n\t\t\t\t\n\t\tList<SpecificationDTO> dataList = new ArrayList<SpecificationDTO>();\n\t\ttry {\n\t\t\tspecificationService = this.getServiceLocator().getSpecificationService();\n\t\t\tdataList = specificationService.getAllMainSpecification();\n\t\t}catch(ServiceLocatorException sle){\n\t\t\tlog.debug(""Service Locator Exception pb"", sle);\t\t\t\n\t\t}\n\t\t//serialize result\n\t\tMap<String, T> map = new HashMap<String, T>();\n\t\tmap.put(AA_DATA, (T) dataList);\n\t\tsetResult(map);\n\t\t\n\t\treturn  SUCCESS;\t\t\n\t}\n\t\n}\n\n----------------------------------- SOURCE END -------------------------------------",1404942375939
error,log,,,"Problems occurred when invoking code from plug-in: ""org.eclipse.jdt.ui"".",1404942375939
error,log,,,"Error in JDT Core during reconcile",1404942375939
error,log,,,"Exception occurred during problem detection:\n----------------------------------- SOURCE BEGIN -------------------------------------\npackage com.loyauty.service.core.dto;\n\nimport java.util.Date;\nimport java.util.List;\n\nimport lombok.Data;\nimport lombok.ToString;\n\n\n@Data @ToString(callSuper=true)\npublic class BrandDTO extends BasicDTO {\n\t\n\tprivate String name;\n\tprivate ImageDTO image;\n\tprivate String description;\n\tprivate String localizedCreationDate;\n\tprivate Date creationDate;\n\tprivate String hrefName;\n\tprivate String code;\n\tprivate Integer hide;\n\tprivate Double coefficient;\n\tprivate Double satisfact;\n\tprivate List<Long> categoryGroupListLong; \n\n\t\n\t\n\tprivate BrandDTO(long id){\t\t\n\t\tsetId(id);\n\t}\n\t\n\tprivate BrandDTO(long id, String name, ImageDTO image, String description, Date creationDate){\t\t\n\t\tsetId(id);\n\t\tsetName(name);\n\t\tsetImage(image);\n\t\tsetDescription(description);\n\t\tsetCreationDate(creationDate);\n\t}\n\t\n\tprivate BrandDTO(long id, String name, String description, Date creationDate){\t\t\n\t\tsetId(id);\n\t\tsetName(name);\n\t\tsetDescription(description);\n\t\tsetCreationDate(creationDate);\n\t}\n\t\n\tprivate BrandDTO(String name, ImageDTO image, String description){\t\n\t\tsetName(name);\n\t\tsetImage(image);\n\t\tsetDescription(description);\n\t}\n\t\n\tprivate BrandDTO(String name, ImageDTO image, String description, String code, List<Long>categoryGroupListLong){\t\n\t\tsetName(name);\n\t\tsetImage(image);\n\t\tsetDescription(description);\n\t\tsetCode(code);\n\t\tsetCategoryGroupListLong(categoryGroupListLong);\n\t}\n\t\n\t\t\n\tprivate BrandDTO(long id, String name, String code, String description, ImageDTO image, Date creationDate) {\n\t\tsetId(id);\n\t\tsetName(name);\n\t\tsetCode(code);\n\t\tsetDescription(description);\n\t\tsetImage(image);\n\t\tsetCreationDate(creationDate);\n\t}\n\n\tpublic static BrandDTO valueOf(long id, String name, ImageDTO image, String description, Date creationDate) {\t\t\n\t\treturn new BrandDTO(id, name, image, description, creationDate);\n\t}\n\t\n\tpublic static BrandDTO valueOf(long id, String name, String code, ImageDTO image, String description, Date creationDate) {\t\t\n\t\treturn new BrandDTO(id, name, code, description, image, creationDate);\n\t}\n\t\n\tpublic static BrandDTO valueOf(long id, String name, String description, Date creationDate) {\t\t\n\t\treturn new BrandDTO(id, name, description, creationDate);\n\t}\n\t\n\tpublic static BrandDTO valueOf(String name, ImageDTO image, String description) {\t\t\n\t\treturn new BrandDTO(name, image, description);\n\t}\n\t\n\tpublic static BrandDTO valueOf(String name, ImageDTO image, String description, String code, List<Long> categoryGroupListLong) {\t\t\n\t\treturn new BrandDTO(name, image, description, code,categoryGroupListLong);\n\t}\n\t\n\tpublic static BrandDTO valueOf(long id) {\t\t\n\t\treturn new BrandDTO(id);\n\t}\n\t\n\tpublic static BrandDTO valueOf(long id, String name) {\n\t\treturn new BrandDTO(id, name, null, null);\t\t\n\t}\n\t\n\t//public static BrandDTO valueOf(long id, String name, List<Long> categoryGroupList, String code, String description, ImageDTO image, Date creationDate) {\t\t\n\t\t//return new BrandDTO(id, name, categoryGroupList, code, description, image, creationDate);\n\t//}\n\t\n\t\n\t\n\n}\n\n----------------------------------- SOURCE END -------------------------------------",1404942378185
error,log,,,"Problems occurred when invoking code from plug-in: ""org.eclipse.jdt.ui"".",1404942378185
error,log,,,"Exception occurred during problem detection:\n----------------------------------- SOURCE BEGIN -------------------------------------\npackage com.loyauty.model;\n\nimport java.util.Date;\nimport java.util.List;\n\nimport lombok.Data;\nimport lombok.ToString;\n\n@Data @ToString(callSuper=true)\npublic class Brand extends AbstractEntity{\n\n\tprivate String name;\n\tprivate Image image;\n\tprivate String description;\n\tprivate Date creationDate;\n\tprivate String code;\n\tprivate Long idCategoryGroup;\n\tprivate Integer hide;\n\tprivate Double coefficient;\n\tprivate Double satisfact;\n\tprivate List<Long> categoryGroupId;\n\t\n\tpublic Brand(){}\n\t\n\t  \n}\n\n----------------------------------- SOURCE END -------------------------------------",1404942378185
error,log,,,"Problems occurred when invoking code from plug-in: ""org.eclipse.jdt.ui"".",1404942378185
error,log,,,"Error in JDT Core during reconcile",1404942378185
error,log,,,"Error in JDT Core during reconcile",1404942378201
error,log,,,"Exception occurred during problem detection:\n----------------------------------- SOURCE BEGIN -------------------------------------\npackage com.loyauty.service.brand;\n\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.ArrayList;\nimport java.util.Date;\nimport java.util.Iterator;\nimport java.util.List;\n\nimport lombok.Getter;\nimport lombok.Setter;\n\nimport org.apache.log4j.Logger;\n\nimport com.loyauty.dao.core.DaoCommand;\nimport com.loyauty.dao.core.DaoManager;\nimport com.loyauty.dao.core.DaoManagerFactory;\nimport com.loyauty.enums.Type;\nimport com.loyauty.exception.DaoException;\nimport com.loyauty.exception.ServiceException;\nimport com.loyauty.model.Brand;\nimport com.loyauty.model.BrandCategoryGroup;\nimport com.loyauty.model.Image;\nimport com.loyauty.service.ServiceImpl;\nimport com.loyauty.service.core.DTOFactory;\nimport com.loyauty.service.core.dto.BrandDTO;\nimport com.loyauty.service.core.dto.ImageDTO;\nimport com.loyauty.service.image.ImageService;\nimport com.loyauty.service.image.ImageServiceImpl;\nimport com.loyauty.util.CommonUtils;\n\n\npublic class BrandServiceImpl extends ServiceImpl implements BrandService {\n\n\tprivate static final Logger log = Logger.getLogger(BrandServiceImpl.class);\n\t\n\t@Setter \n\t@Getter\n\n\tprotected DaoManager daoManager;\n\t\n\tpublic BrandServiceImpl() {\n\t\tsetDaoManager(DaoManagerFactory.getDaoManager());\n\t}\n\n\t@SuppressWarnings(""unchecked"")\n\t@Override\n\tpublic List<BrandDTO> getAllBrand() throws ServiceException {\n\t\t\t\n\t\tList<Brand> list = null;\n\t\ttry {\n\t\t\tlist = (List<Brand>) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\n\t\t\t\t\treturn daoManager.getBrandDao().getAllEntities();\n\t\t\t\t}\n\t\t\t});\n\t\t} catch (DaoException e) {\n\t\t\tthrow (new ServiceException(e));\t\t\t\n\t\t} \n\t\t\n\t\treturn DTOFactory.getBrandListDTO(list);\n\t\t\n\t}\n\n\t@Override\n\tpublic Long createBrand(final BrandDTO brandDTO) throws ServiceException\n\t{\n\t\tBrand brandResult = new Brand();\n\t\t\n\t\ttry \n\t\t{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tbrandResult = (Brand) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(com.loyauty.dao.core.DaoManager daoManager)\n\t\t\t\tthrows DaoException {\n\t\t\t\t\t\n\t\t\t\t\tBrand brand = new Brand();\n\t\t\t\t\t\n\t\t\t\t\t//Insert Image Brand\n\t\t\t\t\tImage imageBrand = new Image();\n\t\t\t\t\timageBrand.setName(brandDTO.getImage().getName());\n\t\t\t\t\timageBrand.setRealNameImg(brandDTO.getImage().getRealName());\n\t\t\t\t\timageBrand.setType(Type.BRAND);\n\t\t\t\t\timageBrand.setSize(brandDTO.getImage().getSize());\n\t\t\t\t\timageBrand.setHeight(brandDTO.getImage().getHeight());\n\t\t\t\t\timageBrand.setWidth(brandDTO.getImage().getWidth());\n\t\t\t\t\timageBrand.setLarge(brandDTO.getImage().isLarge());\n\t\t\t\t\timageBrand.setResolution(brandDTO.getImage().getResolution());\n\t\t\t\t\timageBrand.setScore(brandDTO.getImage().getScore());\n\t\t\t\t\tdaoManager.getImageDao().insertEntity(imageBrand);\n\t\t\t\t\t\n\t\t\t\t\tbrand.setImage(imageBrand);\n\t\t\t\t\tbrand.setName(brandDTO.getName());\n\t\t\t\t\tbrand.setCode(brandDTO.getCode());\n\t\t\t\t\tbrand.setDescription(brandDTO.getDescription());\n\t\t\t\t\t\n\t\t\t\t\tdaoManager.getBrandDao().insertEntity(brand);\n\t\t\t\t\t\n\t\t\t\t\t//iterate the long<s list and insert\n\t\t\t\t\t//you have id brand in brand.getId() after the insert\n                   if(brandDTO.getCategoryGroupListLong()!= null)\n                   {  \n                \t   int i = 0;\n                \t   BrandCategoryGroup categoryGroup = new BrandCategoryGroup(); \n                \t   categoryGroup.setBrandid(brand.getId());\n                \t   while(i!=brandDTO.getCategoryGroupListLong().size() )\n                \t   {\n                \t\t   categoryGroup.setIdCategoryGroup(brandDTO.getCategoryGroupListLong().get(i));\n                \t\t   daoManager.getBrandDao().insertCatG(categoryGroup); \n                \t\t   i++;\n                \t   }\n                \t   \n                   }\n\t\t\t\t\t\n\t\t\t\t\treturn brand;\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn(brandResult.getId());\n\t\t} catch (DaoException e) {\n\t\t\tthrow (new ServiceException(e));\n\t\t}\n\t}\n\t\n\t@Override\n\tpublic void updateBrand(final BrandDTO brandDTO) throws ServiceException\n\t{\n\t\ttry \n\t\t{\n\t\t    daoManager.setCommitTransaction(true);\n\t\t    daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(com.loyauty.dao.core.DaoManager daoManager)\n\t\t\t\tthrows DaoException {\n\t\t\t\t\t\n\t\t\t\t\tBrand brand = new Brand();\n\t\t\t\t\t\t\n\t\t\t\t\t//Insert Image brand\n\t\t\t\t\tImage imageBrand = new Image();\n\t\t\t\t\timageBrand.setId(brandDTO.getImage().getId());\n\t\t\t\t\timageBrand.setName(brandDTO.getImage().getName());\n\t\t\t\t\timageBrand.setRealNameImg(brandDTO.getImage().getRealName());\n\t\t\t\t\timageBrand.setType(Type.BRAND);\n\t\t\t\t\timageBrand.setSize(brandDTO.getImage().getSize());\n\t\t\t\t\timageBrand.setHeight(brandDTO.getImage().getHeight());\n\t\t\t\t\timageBrand.setWidth(brandDTO.getImage().getWidth());\n\t\t\t\t\timageBrand.setLarge(brandDTO.getImage().isLarge());\n\t\t\t\t\timageBrand.setResolution(brandDTO.getImage().getResolution());\n\t\t\t\t\timageBrand.setScore(brandDTO.getImage().getScore());\n\t\t\t\t\t//If the id image is null that means that the image is new.\n\t\t\t\t\t//So, Insert the image and update the product.\n\t\t\t\t\tif(brandDTO.getImage()== null)\n\t\t\t\t\t{\n\t\t\t\t\t\tdaoManager.getImageDao().insertEntity(imageBrand);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tbrand.setId(brandDTO.getId());\n\t\t\t\t\tbrand.setName(brandDTO.getName());\n\t\t\t\t\tbrand.setCode(brandDTO.getCode());\n\t\t\t\t\tbrand.setDescription(brandDTO.getDescription());\n\t\t\t\t\tbrand.setImage(imageBrand);\n\t\t\t\t\tbrand.setCoefficient(brandDTO.getCoefficient());\n\t\t\t\t\tbrand.setSatisfact(brandDTO.getSatisfact());\n\t\t\t\t\tdaoManager.getBrandDao().updateEntity(brand);\n\t\t\t\t\tdaoManager.getBrandDao().deleteCategoryGroupByBrandId(brand.getId());\n\t\t\t\t\t if(brandDTO.getCategoryGroupListLong()!= null)\n\t                   {  \n\t                \t   int i = 0;\n\t                \t   BrandCategoryGroup categoryGroup = new BrandCategoryGroup(); \n\t                \t   categoryGroup.setBrandid(brand.getId());\n\t                \t   while(i!=brandDTO.getCategoryGroupListLong().size() )\n\t                \t   {\n\t                \t\t   categoryGroup.setIdCategoryGroup(brandDTO.getCategoryGroupListLong().get(i));\n\t                \t\t   daoManager.getBrandDao().insertCatG(categoryGroup); \n\t                \t\t   i++;\n\t                \t   }\n\t                \t   \n\t                   }\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn brand;\n\t\t\t\t}\n\t\t\t});\n\t\t} catch (DaoException e) {\n\t\t\tthrow (new ServiceException(e));\n\t\t}\n\t}\n\t\n\t@Override\n\tpublic ImageDTO addBrandImage(File file, String fileName, String applicationPath, long uploaderId,\n\t\t\t int width, int height, int miniCoverWidth, boolean large) throws ServiceException, IOException {\n\t\tImageService ish = new ImageServiceImpl();\n\t\tLong tempId = new Long(0);\n\t\tImage image = new Image();\n\t\timage.setId(tempId);\n\t\timage.setUploaderId(uploaderId);\n\t\t\n\t\t// Validate if the name is already present in the DB\n\t\tString normalizedName= CommonUtils.getNormalizedBrandImage(fileName);\n\t\t//TODO: we must create a validation in action //Validate if the image extension is JPEG or PNG\n\t\tint i = ish.isJPEGPNGImage(file);\n\t\tif (i==1) {\n\t\t\timage.addImageJps(file,normalizedName,fileName);\n\t\t}else if (i==2) {\n\t\t\timage.addImagePNG(file,normalizedName,fileName);\n\t\t}else{\n\t\t\tthrow new ServiceException(""Brand Logo Image Format not supported "" + file.getName() );\n\t\t}\n\t\timage.setName(normalizedName);\n\t\timage.setRealNameImg(fileName);\n\t\t//Variables Initialization \n\t\timage.setType(Type.BRAND);\n\t\timage.setLarge(large);\n\t\t\n\t\t// Transfer the image to the server brand/large directory\t\t\t\n\t\tif (!ish.transferBrandImage(file, normalizedName, applicationPath, width, height, miniCoverWidth, large)){\n\t\t\tthrow new ServiceException(""Could not transfer the image"" + \n\t\t\t\t\t""\\nimageName:"" + file.getName() \n\t\t\t\t\t+ ""\\nNormalized image:"" + normalizedName);\n\t\t}\n\t\t\t\t\n\t\treturn DTOFactory.getImageDTO(image); \n\t}\n\t\n\t@Override\n\tpublic BrandDTO getBrand(final long brandId) throws ServiceException{\n\t\tBrand brandResult = new Brand();\n\t\t\n\t\ttry {\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tbrandResult = (Brand) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(com.loyauty.dao.core.DaoManager daoManager)\n\t\t\t\t\t\tthrows DaoException {\n\t\t\t\t\treturn daoManager.getBrandDao().getEntity(brandId);\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t} catch (DaoException de) {\n\t\t\tthrow (new ServiceException(de));\n\t\t}\n\t\treturn(DTOFactory.getBrandDTO(brandResult));\n\t}\n\t\n\t@Override\n\tpublic boolean existBrand(String nameBrand)throws ServiceException {\n\t\tboolean exist = false;\n\t\tfinal Brand brand = new Brand();\n\t\tbrand.setName(nameBrand);\n\t\ttry {\n\t\t\texist = (Boolean) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\n\t\t\t\t\treturn daoManager.getBrandDao().existBrand(brand);\n\t\t\t\t}\n\t\t\t});\n\t\t} catch (DaoException e) {\n\t\t\tthrow (new ServiceException(e));\t\t\t\n\t\t}\n\t\treturn exist;\n\t}\n\t\n\t@Override\n\tpublic boolean existCode(final String code, final Long id)throws ServiceException {\n\t\tboolean exist = false;\n\t\ttry {\n\t\t\texist = (Boolean) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\n\t\t\t\t\tBrand brand = new Brand();\n\t\t\t\t\tbrand.setCode(code);\n\t\t\t\t\tbrand.setId(id);\n\t\t\t\t\treturn daoManager.getBrandDao().existCode(brand);\n\t\t\t\t}\n\t\t\t});\n\t\t} catch (DaoException e) {\n\t\t\tthrow (new ServiceException(e));\t\t\t\n\t\t}\n\t\treturn exist;\n\t}\n\t\n\t@SuppressWarnings(""unchecked"")\n\t@Override\n\tpublic List<BrandDTO> getAllBrandByCategoryGroup(final Long catid) throws ServiceException {\n\t\tList<Brand> list = null;\n\t\ttry {\n\t\t\tlist = (List<Brand>) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\n\t\t\t\t\t\n\t\t\t\tBrand brand = new Brand();\n\t\t\t\tbrand.setId(catid);\n\t\t\t\t\treturn daoManager.getBrandDao().getAllBrandByCategoryGroup(catid);\n\t\t\t\t}\n\t\t\t});\n\t\t} catch (DaoException e) {\n\t\t\tthrow (new ServiceException(e));\t\t\t\n\t\t} \n\t\t//return DTOFactory.getBrandDTO(brand);\n\t\treturn DTOFactory.getBrandListDTO(list);\n\t}\n\t\n}\n\n----------------------------------- SOURCE END -------------------------------------",1404942378216
error,log,,,"Problems occurred when invoking code from plug-in: ""org.eclipse.jdt.ui"".",1404942378232
error,log,,,"Error in JDT Core during reconcile",1404942378232
error,log,,,"Exception occurred during problem detection:\n----------------------------------- SOURCE BEGIN -------------------------------------\npackage com.loyauty.web.struts.action.ajax;\n\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.text.DecimalFormat;\nimport java.text.NumberFormat;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Locale;\nimport java.util.Map;\n\nimport lombok.Getter;\nimport lombok.Setter;\n\nimport org.apache.commons.lang.time.DateFormatUtils;\nimport com.loyauty.enums.UserProductStatus;\n\nimport com.loyauty.exception.ServiceException;\nimport com.loyauty.exception.ServiceLocatorException;\n\nimport com.loyauty.service.brand.BrandService;\nimport com.loyauty.service.category.CategoryService;\nimport com.loyauty.service.common.CommonService;\nimport com.loyauty.service.core.dto.BasicUserDTO;\nimport com.loyauty.service.core.dto.BrandDTO;\nimport com.loyauty.service.core.dto.CategoryDTO;\nimport com.loyauty.service.core.dto.CommonDTO;\nimport com.loyauty.service.core.dto.ProductDTO;\nimport com.loyauty.service.core.dto.QueryDTO;\nimport com.loyauty.service.core.dto.SpecificationDTO;\nimport com.loyauty.service.core.dto.UserProductDTO;\nimport com.loyauty.service.core.dto.UserSessionDTO;\nimport com.loyauty.service.product.ProductService;\nimport com.loyauty.service.specification.SpecificationService;\nimport com.loyauty.service.user.UserService;\nimport com.loyauty.util.CommonUtils;\nimport com.loyauty.web.exception.LoyautyAjaxActionException;\nimport com.loyauty.web.struts.action.LoyautyListActionSupport;\n\n\n\n\npublic class AdminPageAjax<T> extends LoyautyListActionSupport {\n\t\n\tprivate static final long serialVersionUID = 1L;\n\t\n\tprivate static final String LOYALTY_DATE_FORMAT_DD_MMMM_YYYY_KEY = ""loyauty.date.format.dd-MM-YYYY"";\n\t\n\tprivate UserService userService;\n\tprivate CommonService commonService;\n\tprivate BrandService brandService;\n\tprivate CategoryService categoryService;\n\tprivate ProductService productService;\n\tprivate SpecificationService specificationService;\n\t\n\tprivate static String AA_DATA = ""aaData"";\n\tprivate static String USER_DISCOUNT = ""userDiscount"";\n\tprivate static final String CODE_BRAND = ""codeBrand"";\n\t\n\tprivate static int USER_TYPE = 2;\t\n\t\n\t@Getter @Setter\n\tprivate int typePage; \n\t@Getter @Setter\n\tprivate long brandId;\n\t@Getter @Setter\n\tprivate long categoryId;\n\t@Getter @Setter\n\tprivate boolean discontinued;\n\t@Getter @Setter\n\tprivate boolean disabled;\n\t@Getter @Setter\n\tprivate long userId;\t\n\n\t@Getter @Setter\n\tprivate String value;\n\t@Getter @Setter\n\tprivate String oldValue;\n\t@Getter @Setter\n\tprivate long productId;\t\n\t@Getter @Setter\n\tList<UserSessionDTO> dataLinks;\n\t\n\t@Getter\n\tprivate int userProductStatus;\n\n\t@Getter @Setter\n\tprivate Integer userStatus;\n\t\n\tpublic AdminPageAjax() {\t\t\n\t}\n\t\n\t\n\t@Override  \n\tpublic String execute() throws Exception {\t\t\t\t\t\t\t\n\t\tdataLinks = new ArrayList<UserSessionDTO>();\n\t\tBasicUserDTO basicUserDTO = new BasicUserDTO();\n\t\tuserService = this.getServiceLocator().getUserService();\n\t\tbasicUserDTO.setTypeId(USER_TYPE);\n\t\ttry{\n\t\t\tif(userStatus==null)userStatus=-1;\n\t\t\tswitch (userStatus) {\n\t\t\tcase 1:\n\t\t\t\tbasicUserDTO.setActive(true);\t\t\t\n\t\t\t\tdataLinks = userService.getAllUserAccounts(basicUserDTO);\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tbasicUserDTO.setActive(false);\t\t\t\n\t\t\t\tdataLinks = userService.getAllUserAccounts(basicUserDTO);\n\t\t\t\tbreak;\t\n\t\t\tdefault:\n\t\t\t\tdataLinks = userService.getAllUsers(basicUserDTO);\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t return SUCCESS;\n\t\t}catch (Exception e) {\n\t\t\t// TODO: handle exception\n\t\t\te.printStackTrace();\n\t\t\treturn ERROR;\n\t\t}\n\n\t}\n\t\t\n\t@SuppressWarnings(""unchecked"")\n\tpublic String accountsList() throws LoyautyAjaxActionException, ServiceException {\t\t\n\t\tdataLinks = new ArrayList<UserSessionDTO>();\n\t\ttry {\t\t\t\n\t\t\tuserService = this.getServiceLocator().getUserService();\n\t\t\tBasicUserDTO basicUserDTO = new BasicUserDTO();\n\t\t\tbasicUserDTO.setTypeId(USER_TYPE);\n\t\t\tdataLinks = userService.getAllUsers(basicUserDTO);\n\t\t\tfor(BasicUserDTO bu:dataLinks){\n\t\t\t\tif(bu.getClientCategoryName()==null)bu.setClientCategoryName("""");\n\t\t\t}\n\t\t}catch(ServiceLocatorException sle){\n\t\t\tlog.debug(""Service Locator Exception pb"", sle);\t\t\t\n\t\t}\n\t\t//serialize result\n\t\tMap<String, T> map = new HashMap<String, T>();\n\t\tmap.put(AA_DATA, (T) dataLinks);\n\t\tsetResult(map);\t\t\n\t\treturn SUCCESS;\n\t}\n\t\n\t@SuppressWarnings(""unchecked"")\n\tpublic String populateCategoryAndDiscount() throws LoyautyAjaxActionException, ServiceException {\t\t\n\t\tList<CommonDTO> dataLinks = null;\n\t\tString discount = null;\n\t\ttry {\t\t\t\n\t\t\tcommonService = this.getServiceLocator().getCommonService();\t\n\t\t\tuserService = this.getServiceLocator().getUserService();\n\t\t\tproductService =  this.getServiceLocator().getProductService();\t\t\t\n\t\t\tdataLinks = internationalizeName(commonService.getCategoriesByBrand(brandId));\n\t\t} catch(ServiceLocatorException sle){\n\t\t\tlog.debug(""Service Locator Exception pb"", sle);\t\t\t\n\t\t}\n\t\t//serialize result\n\t\tMap<String, T> map = new HashMap<String, T>();\n\t\tmap.put(AA_DATA, (T) dataLinks);\n\t\tmap.put(USER_DISCOUNT, (T) discount);\n\t\tsetResult(map);\t\t\n\t\treturn  SUCCESS;\t\t\n\t}\n\t\n\tprivate List<CommonDTO> internationalizeName(List<CategoryDTO> list){\n\t\t\n\t\tList<CommonDTO> commonListDTO = new ArrayList<CommonDTO>();\n\t\tCommonDTO commonDTO;\n\t\tfor(CategoryDTO cat : list){\n\t\t\tcommonDTO = CommonDTO.valueOf(cat.getId(), getText(cat.getCode()));\t\t\t\n\t\t\tcommonListDTO.add(commonDTO);\n\t\t}\t\t\n\t\treturn commonListDTO;\t\t\n\t}\t\n\t\n\t@SuppressWarnings(""unchecked"")\n\tpublic String getProductAndDiscountByCategory() throws LoyautyAjaxActionException, ServiceException {\n\t\tList<CommonDTO> dataLinks = null;\n\t\tString discount = null;\n\t\ttry {\n\t\t\tcommonService = this.getServiceLocator().getCommonService();\t\n\t\t\tuserService = this.getServiceLocator().getUserService();\n\t\t\tproductService = this.getServiceLocator().getProductService();\t\t\t\n\t\t\tdataLinks = internationalizeName(commonService.getCategoriesByBrand(brandId));\t\t\t\n\t\t} catch(ServiceLocatorException sle){\n\t\t\tlog.debug(""Service Locator Exception pb"", sle);\t\t\t\n\t\t}\n\t\t//serialize result\n\t\tMap<String, T> map = new HashMap<String, T>();\n\t\tmap.put(AA_DATA, (T) dataLinks);\n\t\tmap.put(USER_DISCOUNT, (T) discount);\n\t\tsetResult(map);\n\t\t\n\t\treturn  SUCCESS;\t\t\n\t}\t\n\t\n\t@SuppressWarnings(""unchecked"")\n\tpublic String brandList() throws LoyautyAjaxActionException, ServiceException {\t\n\t\t\t\t\n\t\tList<BrandDTO> dataLinks = new ArrayList<BrandDTO>();\n\t\ttry {\t\t\t\n\t\t\tbrandService = this.getServiceLocator().getBrandService();\n\t\t\tdataLinks = brandService.getAllBrand();\n\t\t\tfor(BrandDTO dto : dataLinks) {\n\t\t\t\tdto.setLocalizedCreationDate(DateFormatUtils.format(dto.getCreationDate(), getText(LOYALTY_DATE_FORMAT_DD_MMMM_YYYY_KEY)));\n\t\t\t}\n\t\t}catch(ServiceLocatorException sle){\n\t\t\tlog.debug(""Service Locator Exception pb"", sle);\t\t\t\n\t\t}\n\t\t//serialize result\n\t\tMap<String, T> map = new HashMap<String, T>();\n\t\tmap.put(AA_DATA, (T) dataLinks);\n\t\tsetResult(map);\n\t\t\n\t\treturn  SUCCESS;\n\t\t\n\t}\n\t\n\t@SuppressWarnings(""unchecked"")\n\tpublic String categoryList() throws LoyautyAjaxActionException, ServiceException {\t\n\t\t\t\t\n\t\tList<CategoryDTO> dataLinks = new ArrayList<CategoryDTO>();\n\t\ttry {\t\t\t\n\t\t\tcategoryService = this.getServiceLocator().getCategoryService();\n\t\t\tdataLinks = categoryService.getAllCategory();\n\t\t}catch(ServiceLocatorException sle){\n\t\t\tlog.debug(""Service Locator Exception pb"", sle);\t\t\t\n\t\t}\n\t\t//serialize result\n\t\tMap<String, T> map = new HashMap<String, T>();\n\t\tmap.put(AA_DATA, (T) dataLinks);\n\t\tsetResult(map);\n\t\t\n\t\treturn  SUCCESS;\t\t\n\t}\t\n\t\n\t@SuppressWarnings(""unchecked"")\n\tpublic String getMainSpecificationByCategory() throws LoyautyAjaxActionException, ServiceException {\t\n\t\t\t\t\n\t\tList<SpecificationDTO> dataLinks = new ArrayList<SpecificationDTO>();\n\t\ttry {\t\t\t\n\t\t\tproductService = this.getServiceLocator().getProductService();\n\t\t\tdataLinks = productService.getMainSpecificationByCategory(categoryId);\n\t\t}catch(ServiceLocatorException sle){\n\t\t\tlog.debug(""Service Locator Exception pb"", sle);\t\t\t\n\t\t}\n\t\t//serialize result\n\t\tMap<String, T> map = new HashMap<String, T>();\n\t\tmap.put(AA_DATA, (T) dataLinks);\n\t\tsetResult(map);\n\t\t\n\t\treturn  SUCCESS;\n\t\t\n\t}\n\t\n\t\n\t@SuppressWarnings(""unchecked"")\n\tpublic String populateCategory() throws LoyautyAjaxActionException, ServiceException {\t\n\t\t\n\t\tList<CommonDTO> dataLinks = null;\n\t\tString code = new String();\n\t\ttry {\t\t\t\n\t\t\t\n\t\t\tcommonService = getServiceLocator().getCommonService();\t\n\t\t\tbrandService = getServiceLocator().getBrandService();\n\t\t\t\n\t\t\tdataLinks = internationalizeName(commonService.getCategoriesByBrand(brandId));\n\t\t\tcode = brandService.getBrand(brandId).getCode();\n\t\t\t\t\t\t\n\t\t}catch(ServiceLocatorException sle){\n\t\t\tlog.debug(""Service Locator Exception pb"", sle);\t\t\t\n\t\t} catch (Exception e) {}\n\t\t//serialize result\n\t\tMap<String, T> map = new HashMap<String, T>();\n\t\tmap.put(AA_DATA, (T) dataLinks);\n\t\tmap.put(CODE_BRAND, (T)code);\n\t\tsetResult(map);\n\t\t\n\t\treturn  SUCCESS;\t\t\n\t}\t\n\t\n\t@SuppressWarnings(""unchecked"")\n\tpublic String setManuelPrices() throws LoyautyAjaxActionException, ServiceException {\t\n\t\t\n\t\ttry {\t\t\t\n\t\t\tdouble val = Double.valueOf(value);\n\t\t\tproductService = this.getServiceLocator().getProductService();\n\t\t\tUserProductDTO producDTO = new UserProductDTO();\n\t\t\tproducDTO.setUserId(userId);\n\t\t\tproducDTO.setId(productId);\n\t\t\tproducDTO.setUserPrice(value);\t\t\t\n\t\t\tproductService.updateSellingPriceProduct(producDTO);\n\t\t\tsetResult(val);\t\t\n\t\t\t\n\t\t}catch(NumberFormatException se){\n\t\t\tlog.debug(""Number Conversion Exception pb"", se);\t\t\t\t\n\t\t\tsetResult(oldValue.isEmpty()?""NaN"" : Double.valueOf(oldValue));\n\t\t}catch(ServiceLocatorException se){\t\t\t\n\t\t\tlog.debug(""Service Locator Exception pb"", se);\t\t\t\t\n\t\t\tsetResult(oldValue.isEmpty()?""NaN"" : Double.valueOf(oldValue));\n\t\t}catch(ServiceException se){\n\t\t\tlog.debug(""Service Exception pb"", se);\n\t\t\tsetResult(oldValue.isEmpty()?""NaN"" : Double.valueOf(oldValue));\n\t\t}catch(Exception se){\n\t\t\tlog.debug(""Exception pb"", se);\n\t\t\tsetResult(oldValue.isEmpty()?""NaN"" : Double.valueOf(oldValue));\n\t\t}\t\t\n\t\treturn  SUCCESS;\t\n\t}\n\t\n\t@SuppressWarnings(""unchecked"")\n\tpublic String setuserproductstatus() throws LoyautyAjaxActionException, ServiceException {\t\n\t\t\n\t\ttry {\n\t\t\t\n\t\t\tBoolean val = Boolean.valueOf(value);\t\t\t\n\t\t\tproductService = this.getServiceLocator().getProductService();\t\n\t\t\tUserProductDTO producDTO = new UserProductDTO();\n\t\t\tproducDTO.setUserId(userId);\n\t\t\tproducDTO.setId(productId);\n\t\t\tif(Boolean.valueOf(value))\n\t\t\t\tproducDTO.setUserProductStatus(UserProductStatus.ACTIVE);\n\t\t\telse\n\t\t\t\tproducDTO.setUserProductStatus(UserProductStatus.INACTIVE);\n\t\t\tproductService.updateUserProductStatus(producDTO);\n\t\t\tsetResult(val);\t\t\n\t\t\t\n\t\t} catch(NumberFormatException se){\n\t\t\tlog.debug(""Number Conversion Exception pb"", se);\t\t\t\t\n\t\t\tsetResult(oldValue.isEmpty()?""NaN"" : Boolean.valueOf(oldValue));\n\t\t} catch(ServiceLocatorException se){\t\t\t\n\t\t\tlog.debug(""Service Locator Exception pb"", se);\t\t\t\t\n\t\t\tsetResult(oldValue.isEmpty()?""NaN"" : Boolean.valueOf(oldValue));\n\t\t\n\t\t} catch(Exception se){\n\t\t\tlog.debug(""Exception pb"", se);\n\t\t\tsetResult(oldValue.isEmpty()?""NaN"" : Boolean.valueOf(oldValue));\n\t\t}\t\t\n\t\t\n\t\treturn  SUCCESS;\n\t\t\n\t}\n\t\n\t@SuppressWarnings(""unchecked"")\n\tpublic String productList() throws LoyautyAjaxActionException, ServiceException {\t\t\t\t\n\t\tList<ProductDTO> dataList = new ArrayList<ProductDTO>();\n\t\ttry {\t\t\t\n\t\t\tproductService = this.getServiceLocator().getProductService();\n\t\t\tdataList = productService.getAllProdcut();\n\t\t}catch(ServiceLocatorException sle){\n\t\t\tlog.debug(""Service Locator Exception pb"", sle);\t\t\t\n\t\t}\n\t\t//serialize result\n\t\tMap<String, T> map = new HashMap<String, T>();\n\t\tmap.put(AA_DATA, (T) dataList);\n\t\tsetResult(map);\n\t\treturn  SUCCESS;\t\t\n\t}\n\t\n\t@SuppressWarnings(""unchecked"")\n\tpublic String productListQuery() throws LoyautyAjaxActionException, ServiceException {\t\n\t\t\n\t\tList<ProductDTO> dataList = new ArrayList<ProductDTO>();\n\t\ttry {\n\t\t\tproductService = this.getServiceLocator().getProductService();\n\t\t\t\n\t\t\t// = new ProductDTO();\n\t\t\tBrandDTO brandDTO = BrandDTO.valueOf(brandId);\n\t\t\tCategoryDTO catDTO = CategoryDTO.valueOf(categoryId);\n\t\t\tQueryDTO queryDTO = new QueryDTO.Builder(brandDTO, catDTO, discontinued, disabled).build();\n\t\t\t// ProductDTO dto = new ProductDTO.Builder(new Long(0), brandDTO, catDTO).build();\n\t\t\tdataList = productService.getAllProductQuery(queryDTO);\n\t\t\t\t\t\t\n\t\t} catch(ServiceLocatorException sle){\n\t\t\tlog.debug(""Service Locator Exception pb"", sle);\t\t\t\n\t\t}\n\t\t//serialize result\n\t\tMap<String, T> map = new HashMap<String, T>();\n\t\tmap.put(AA_DATA, (T) dataList);\n\t\tsetResult(map);\n\t\t\n\t\treturn  SUCCESS;\t\t\n\t}\n\t\n\t@SuppressWarnings(""unchecked"")\n\tpublic String getMainSpecificationList() throws LoyautyAjaxActionException, ServiceException {\t\n\t\t\t\t\n\t\tList<SpecificationDTO> dataList = new ArrayList<SpecificationDTO>();\n\t\ttry {\n\t\t\tspecificationService = this.getServiceLocator().getSpecificationService();\n\t\t\tdataList = specificationService.getAllMainSpecification();\n\t\t}catch(ServiceLocatorException sle){\n\t\t\tlog.debug(""Service Locator Exception pb"", sle);\t\t\t\n\t\t}\n\t\t//serialize result\n\t\tMap<String, T> map = new HashMap<String, T>();\n\t\tmap.put(AA_DATA, (T) dataList);\n\t\tsetResult(map);\n\t\t\n\t\treturn  SUCCESS;\t\t\n\t}\n\t\n}\n\n----------------------------------- SOURCE END -------------------------------------",1404942378248
error,log,,,"Problems occurred when invoking code from plug-in: ""org.eclipse.jdt.ui"".",1404942378248
error,log,,,"Error in JDT Core during reconcile",1404942378248
error,log,,,"Exception occurred during problem detection:\n----------------------------------- SOURCE BEGIN -------------------------------------\npackage com.loyauty.web.struts.action.ajax;\n\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.text.DecimalFormat;\nimport java.text.NumberFormat;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Locale;\nimport java.util.Map;\n\nimport lombok.Getter;\nimport lombok.Setter;\n\nimport org.apache.commons.lang.time.DateFormatUtils;\nimport com.loyauty.enums.UserProductStatus;\n\nimport com.loyauty.exception.ServiceException;\nimport com.loyauty.exception.ServiceLocatorException;\n\nimport com.loyauty.service.brand.BrandService;\nimport com.loyauty.service.category.CategoryService;\nimport com.loyauty.service.common.CommonService;\nimport com.loyauty.service.core.dto.BasicUserDTO;\nimport com.loyauty.service.core.dto.BrandDTO;\nimport com.loyauty.service.core.dto.CategoryDTO;\nimport com.loyauty.service.core.dto.CommonDTO;\nimport com.loyauty.service.core.dto.ProductDTO;\nimport com.loyauty.service.core.dto.QueryDTO;\nimport com.loyauty.service.core.dto.SpecificationDTO;\nimport com.loyauty.service.core.dto.UserProductDTO;\nimport com.loyauty.service.core.dto.UserSessionDTO;\nimport com.loyauty.service.product.ProductService;\nimport com.loyauty.service.specification.SpecificationService;\nimport com.loyauty.service.user.UserService;\nimport com.loyauty.util.CommonUtils;\nimport com.loyauty.web.exception.LoyautyAjaxActionException;\nimport com.loyauty.web.struts.action.LoyautyListActionSupport;\n\n\n\n\npublic class AdminPageAjax<T> extends LoyautyListActionSupport {\n\t\n\tprivate static final long serialVersionUID = 1L;\n\t\n\tprivate static final String LOYALTY_DATE_FORMAT_DD_MMMM_YYYY_KEY = ""loyauty.date.format.dd-MM-YYYY"";\n\t\n\tprivate UserService userService;\n\tprivate CommonService commonService;\n\tprivate BrandService brandService;\n\tprivate CategoryService categoryService;\n\tprivate ProductService productService;\n\tprivate SpecificationService specificationService;\n\t\n\tprivate static String AA_DATA = ""aaData"";\n\tprivate static String USER_DISCOUNT = ""userDiscount"";\n\tprivate static final String CODE_BRAND = ""codeBrand"";\n\t\n\tprivate static int USER_TYPE = 2;\t\n\t\n\t@Getter @Setter\n\tprivate int typePage; \n\t@Getter @Setter\n\tprivate long brandId;\n\t@Getter @Setter\n\tprivate long categoryId;\n\t@Getter @Setter\n\tprivate boolean discontinued;\n\t@Getter @Setter\n\tprivate boolean disabled;\n\t@Getter @Setter\n\tprivate long userId;\t\n\n\t@Getter @Setter\n\tprivate String value;\n\t@Getter @Setter\n\tprivate String oldValue;\n\t@Getter @Setter\n\tprivate long productId;\t\n\t@Getter @Setter\n\tList<UserSessionDTO> dataLinks;\n\t\n\t@Getter\n\tprivate int userProductStatus;\n\n\t@Getter @Setter\n\tprivate Integer userStatus;\n\t\n\tpublic AdminPageAjax() {\t\t\n\t}\n\t\n\t\n\t@Override  \n\tpublic String execute() throws Exception {\t\t\t\t\t\t\t\n\t\tdataLinks = new ArrayList<UserSessionDTO>();\n\t\tBasicUserDTO basicUserDTO = new BasicUserDTO();\n\t\tuserService = this.getServiceLocator().getUserService();\n\t\tbasicUserDTO.setTypeId(USER_TYPE);\n\t\ttry{\n\t\t\tif(userStatus==null)userStatus=-1;\n\t\t\tswitch (userStatus) {\n\t\t\tcase 1:\n\t\t\t\tbasicUserDTO.setActive(true);\t\t\t\n\t\t\t\tdataLinks = userService.getAllUserAccounts(basicUserDTO);\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tbasicUserDTO.setActive(false);\t\t\t\n\t\t\t\tdataLinks = userService.getAllUserAccounts(basicUserDTO);\n\t\t\t\tbreak;\t\n\t\t\tdefault:\n\t\t\t\tdataLinks = userService.getAllUsers(basicUserDTO);\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t return SUCCESS;\n\t\t}catch (Exception e) {\n\t\t\t// TODO: handle exception\n\t\t\te.printStackTrace();\n\t\t\treturn ERROR;\n\t\t}\n\n\t}\n\t\t\n\t@SuppressWarnings(""unchecked"")\n\tpublic String accountsList() throws LoyautyAjaxActionException, ServiceException {\t\t\n\t\tdataLinks = new ArrayList<UserSessionDTO>();\n\t\ttry {\t\t\t\n\t\t\tuserService = this.getServiceLocator().getUserService();\n\t\t\tBasicUserDTO basicUserDTO = new BasicUserDTO();\n\t\t\tbasicUserDTO.setTypeId(USER_TYPE);\n\t\t\tdataLinks = userService.getAllUsers(basicUserDTO);\n\t\t\tfor(BasicUserDTO bu:dataLinks){\n\t\t\t\tif(bu.getClientCategoryName()==null)bu.setClientCategoryName("""");\n\t\t\t}\n\t\t}catch(ServiceLocatorException sle){\n\t\t\tlog.debug(""Service Locator Exception pb"", sle);\t\t\t\n\t\t}\n\t\t//serialize result\n\t\tMap<String, T> map = new HashMap<String, T>();\n\t\tmap.put(AA_DATA, (T) dataLinks);\n\t\tsetResult(map);\t\t\n\t\treturn SUCCESS;\n\t}\n\t\n\t@SuppressWarnings(""unchecked"")\n\tpublic String populateCategoryAndDiscount() throws LoyautyAjaxActionException, ServiceException {\t\t\n\t\tList<CommonDTO> dataLinks = null;\n\t\tString discount = null;\n\t\ttry {\t\t\t\n\t\t\tcommonService = this.getServiceLocator().getCommonService();\t\n\t\t\tuserService = this.getServiceLocator().getUserService();\n\t\t\tproductService =  this.getServiceLocator().getProductService();\t\t\t\n\t\t\tdataLinks = internationalizeName(commonService.getCategoriesByBrand(brandId));\n\t\t} catch(ServiceLocatorException sle){\n\t\t\tlog.debug(""Service Locator Exception pb"", sle);\t\t\t\n\t\t}\n\t\t//serialize result\n\t\tMap<String, T> map = new HashMap<String, T>();\n\t\tmap.put(AA_DATA, (T) dataLinks);\n\t\tmap.put(USER_DISCOUNT, (T) discount);\n\t\tsetResult(map);\t\t\n\t\treturn  SUCCESS;\t\t\n\t}\n\t\n\tprivate List<CommonDTO> internationalizeName(List<CategoryDTO> list){\n\t\t\n\t\tList<CommonDTO> commonListDTO = new ArrayList<CommonDTO>();\n\t\tCommonDTO commonDTO;\n\t\tfor(CategoryDTO cat : list){\n\t\t\tcommonDTO = CommonDTO.valueOf(cat.getId(), getText(cat.getCode()));\t\t\t\n\t\t\tcommonListDTO.add(commonDTO);\n\t\t}\t\t\n\t\treturn commonListDTO;\t\t\n\t}\t\n\t\n\t@SuppressWarnings(""unchecked"")\n\tpublic String getProductAndDiscountByCategory() throws LoyautyAjaxActionException, ServiceException {\n\t\tList<CommonDTO> dataLinks = null;\n\t\tString discount = null;\n\t\ttry {\n\t\t\tcommonService = this.getServiceLocator().getCommonService();\t\n\t\t\tuserService = this.getServiceLocator().getUserService();\n\t\t\tproductService = this.getServiceLocator().getProductService();\t\t\t\n\t\t\tdataLinks = internationalizeName(commonService.getCategoriesByBrand(brandId));\t\t\t\n\t\t} catch(ServiceLocatorException sle){\n\t\t\tlog.debug(""Service Locator Exception pb"", sle);\t\t\t\n\t\t}\n\t\t//serialize result\n\t\tMap<String, T> map = new HashMap<String, T>();\n\t\tmap.put(AA_DATA, (T) dataLinks);\n\t\tmap.put(USER_DISCOUNT, (T) discount);\n\t\tsetResult(map);\n\t\t\n\t\treturn  SUCCESS;\t\t\n\t}\t\n\t\n\t@SuppressWarnings(""unchecked"")\n\tpublic String brandList() throws LoyautyAjaxActionException, ServiceException {\t\n\t\t\t\t\n\t\tList<BrandDTO> dataLinks = new ArrayList<BrandDTO>();\n\t\ttry {\t\t\t\n\t\t\tbrandService = this.getServiceLocator().getBrandService();\n\t\t\tdataLinks = brandService.getAllBrand();\n\t\t\tfor(BrandDTO dto : dataLinks) {\n\t\t\t\tdto.setLocalizedCreationDate(DateFormatUtils.format(dto.getCreationDate(), getText(LOYALTY_DATE_FORMAT_DD_MMMM_YYYY_KEY)));\n\t\t\t}\n\t\t}catch(ServiceLocatorException sle){\n\t\t\tlog.debug(""Service Locator Exception pb"", sle);\t\t\t\n\t\t}\n\t\t//serialize result\n\t\tMap<String, T> map = new HashMap<String, T>();\n\t\tmap.put(AA_DATA, (T) dataLinks);\n\t\tsetResult(map);\n\t\t\n\t\treturn  SUCCESS;\n\t\t\n\t}\n\t\n\t@SuppressWarnings(""unchecked"")\n\tpublic String categoryList() throws LoyautyAjaxActionException, ServiceException {\t\n\t\t\t\t\n\t\tList<CategoryDTO> dataLinks = new ArrayList<CategoryDTO>();\n\t\ttry {\t\t\t\n\t\t\tcategoryService = this.getServiceLocator().getCategoryService();\n\t\t\tdataLinks = categoryService.getAllCategory();\n\t\t}catch(ServiceLocatorException sle){\n\t\t\tlog.debug(""Service Locator Exception pb"", sle);\t\t\t\n\t\t}\n\t\t//serialize result\n\t\tMap<String, T> map = new HashMap<String, T>();\n\t\tmap.put(AA_DATA, (T) dataLinks);\n\t\tsetResult(map);\n\t\t\n\t\treturn  SUCCESS;\t\t\n\t}\t\n\t\n\t@SuppressWarnings(""unchecked"")\n\tpublic String getMainSpecificationByCategory() throws LoyautyAjaxActionException, ServiceException {\t\n\t\t\t\t\n\t\tList<SpecificationDTO> dataLinks = new ArrayList<SpecificationDTO>();\n\t\ttry {\t\t\t\n\t\t\tproductService = this.getServiceLocator().getProductService();\n\t\t\tdataLinks = productService.getMainSpecificationByCategory(categoryId);\n\t\t}catch(ServiceLocatorException sle){\n\t\t\tlog.debug(""Service Locator Exception pb"", sle);\t\t\t\n\t\t}\n\t\t//serialize result\n\t\tMap<String, T> map = new HashMap<String, T>();\n\t\tmap.put(AA_DATA, (T) dataLinks);\n\t\tsetResult(map);\n\t\t\n\t\treturn  SUCCESS;\n\t\t\n\t}\n\t\n\t\n\t@SuppressWarnings(""unchecked"")\n\tpublic String populateCategory() throws LoyautyAjaxActionException, ServiceException {\t\n\t\t\n\t\tList<CommonDTO> dataLinks = null;\n\t\tString code = new String();\n\t\ttry {\t\t\t\n\t\t\t\n\t\t\tcommonService = getServiceLocator().getCommonService();\t\n\t\t\tbrandService = getServiceLocator().getBrandService();\n\t\t\t\n\t\t\tdataLinks = internationalizeName(commonService.getCategoriesByBrand(brandId));\n\t\t\tcode = brandService.getBrand(brandId).getCode();\n\t\t\t\t\t\t\n\t\t}catch(ServiceLocatorException sle){\n\t\t\tlog.debug(""Service Locator Exception pb"", sle);\t\t\t\n\t\t} catch (Exception e) {}\n\t\t//serialize result\n\t\tMap<String, T> map = new HashMap<String, T>();\n\t\tmap.put(AA_DATA, (T) dataLinks);\n\t\tmap.put(CODE_BRAND, (T)code);\n\t\tsetResult(map);\n\t\t\n\t\treturn  SUCCESS;\t\t\n\t}\t\n\t\n\t@SuppressWarnings(""unchecked"")\n\tpublic String setManuelPrices() throws LoyautyAjaxActionException, ServiceException {\t\n\t\t\n\t\ttry {\t\t\t\n\t\t\tdouble val = Double.valueOf(value);\n\t\t\tproductService = this.getServiceLocator().getProductService();\n\t\t\tUserProductDTO producDTO = new UserProductDTO();\n\t\t\tproducDTO.setUserId(userId);\n\t\t\tproducDTO.setId(productId);\n\t\t\tproducDTO.setUserPrice(value);\t\t\t\n\t\t\tproductService.updateSellingPriceProduct(producDTO);\n\t\t\tsetResult(val);\t\t\n\t\t\t\n\t\t}catch(NumberFormatException se){\n\t\t\tlog.debug(""Number Conversion Exception pb"", se);\t\t\t\t\n\t\t\tsetResult(oldValue.isEmpty()?""NaN"" : Double.valueOf(oldValue));\n\t\t}catch(ServiceLocatorException se){\t\t\t\n\t\t\tlog.debug(""Service Locator Exception pb"", se);\t\t\t\t\n\t\t\tsetResult(oldValue.isEmpty()?""NaN"" : Double.valueOf(oldValue));\n\t\t}catch(ServiceException se){\n\t\t\tlog.debug(""Service Exception pb"", se);\n\t\t\tsetResult(oldValue.isEmpty()?""NaN"" : Double.valueOf(oldValue));\n\t\t}catch(Exception se){\n\t\t\tlog.debug(""Exception pb"", se);\n\t\t\tsetResult(oldValue.isEmpty()?""NaN"" : Double.valueOf(oldValue));\n\t\t}\t\t\n\t\treturn  SUCCESS;\t\n\t}\n\t\n\t@SuppressWarnings(""unchecked"")\n\tpublic String setuserproductstatus() throws LoyautyAjaxActionException, ServiceException {\t\n\t\t\n\t\ttry {\n\t\t\t\n\t\t\tBoolean val = Boolean.valueOf(value);\t\t\t\n\t\t\tproductService = this.getServiceLocator().getProductService();\t\n\t\t\tUserProductDTO producDTO = new UserProductDTO();\n\t\t\tproducDTO.setUserId(userId);\n\t\t\tproducDTO.setId(productId);\n\t\t\tif(Boolean.valueOf(value))\n\t\t\t\tproducDTO.setUserProductStatus(UserProductStatus.ACTIVE);\n\t\t\telse\n\t\t\t\tproducDTO.setUserProductStatus(UserProductStatus.INACTIVE);\n\t\t\tproductService.updateUserProductStatus(producDTO);\n\t\t\tsetResult(val);\t\t\n\t\t\t\n\t\t} catch(NumberFormatException se){\n\t\t\tlog.debug(""Number Conversion Exception pb"", se);\t\t\t\t\n\t\t\tsetResult(oldValue.isEmpty()?""NaN"" : Boolean.valueOf(oldValue));\n\t\t} catch(ServiceLocatorException se){\t\t\t\n\t\t\tlog.debug(""Service Locator Exception pb"", se);\t\t\t\t\n\t\t\tsetResult(oldValue.isEmpty()?""NaN"" : Boolean.valueOf(oldValue));\n\t\t\n\t\t} catch(Exception se){\n\t\t\tlog.debug(""Exception pb"", se);\n\t\t\tsetResult(oldValue.isEmpty()?""NaN"" : Boolean.valueOf(oldValue));\n\t\t}\t\t\n\t\t\n\t\treturn  SUCCESS;\n\t\t\n\t}\n\t\n\t@SuppressWarnings(""unchecked"")\n\tpublic String productList() throws LoyautyAjaxActionException, ServiceException {\t\t\t\t\n\t\tList<ProductDTO> dataList = new ArrayList<ProductDTO>();\n\t\ttry {\t\t\t\n\t\t\tproductService = this.getServiceLocator().getProductService();\n\t\t\tdataList = productService.getAllProdcut();\n\t\t}catch(ServiceLocatorException sle){\n\t\t\tlog.debug(""Service Locator Exception pb"", sle);\t\t\t\n\t\t}\n\t\t//serialize result\n\t\tMap<String, T> map = new HashMap<String, T>();\n\t\tmap.put(AA_DATA, (T) dataList);\n\t\tsetResult(map);\n\t\treturn  SUCCESS;\t\t\n\t}\n\t\n\t@SuppressWarnings(""unchecked"")\n\tpublic String productListQuery() throws LoyautyAjaxActionException, ServiceException {\t\n\t\t\n\t\tList<ProductDTO> dataList = new ArrayList<ProductDTO>();\n\t\ttry {\n\t\t\tproductService = this.getServiceLocator().getProductService();\n\t\t\t\n\t\t\t// = new ProductDTO();\n\t\t\tBrandDTO brandDTO = BrandDTO.valueOf(brandId);\n\t\t\tCategoryDTO catDTO = CategoryDTO.valueOf(categoryId);\n\t\t\tQueryDTO queryDTO = new QueryDTO.Builder(brandDTO, catDTO, discontinued, disabled).build();\n\t\t\t// ProductDTO dto = new ProductDTO.Builder(new Long(0), brandDTO, catDTO).build();\n\t\t\tdataList = productService.getAllProductQuery(queryDTO);\n\t\t\t\t\t\t\n\t\t} catch(ServiceLocatorException sle){\n\t\t\tlog.debug(""Service Locator Exception pb"", sle);\t\t\t\n\t\t}\n\t\t//serialize result\n\t\tMap<String, T> map = new HashMap<String, T>();\n\t\tmap.put(AA_DATA, (T) dataList);\n\t\tsetResult(map);\n\t\t\n\t\treturn  SUCCESS;\t\t\n\t}\n\t\n\t@SuppressWarnings(""unchecked"")\n\tpublic String getMainSpecificationList() throws LoyautyAjaxActionException, ServiceException {\t\n\t\t\t\t\n\t\tList<SpecificationDTO> dataList = new ArrayList<SpecificationDTO>();\n\t\ttry {\n\t\t\tspecificationService = this.getServiceLocator().getSpecificationService();\n\t\t\tdataList = specificationService.getAllMainSpecification();\n\t\t}catch(ServiceLocatorException sle){\n\t\t\tlog.debug(""Service Locator Exception pb"", sle);\t\t\t\n\t\t}\n\t\t//serialize result\n\t\tMap<String, T> map = new HashMap<String, T>();\n\t\tmap.put(AA_DATA, (T) dataList);\n\t\tsetResult(map);\n\t\t\n\t\treturn  SUCCESS;\t\t\n\t}\n\t\n}\n\n----------------------------------- SOURCE END -------------------------------------",1404942379386
error,log,,,"Problems occurred when invoking code from plug-in: ""org.eclipse.jdt.ui"".",1404942379386
error,log,,,"Error in JDT Core during reconcile",1404942379386
started,bundle,org.eclipse.wst.wsi,1.0.400.v201004220210,"org.eclipse.wst.wsi",1404942381992
started,bundle,org.eclipse.wst.command.env,1.0.409.v201004211805,"org.eclipse.wst.command.env",1404942381992
started,bundle,org.eclipse.wst.ws,1.1.203.v201004211805,"org.eclipse.wst.ws",1404942381992
started,bundle,org.eclipse.wst.ws.service.policy,1.0.204.v201011011834,"org.eclipse.wst.ws.service.policy",1404942382616
deactivated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1404942393692
