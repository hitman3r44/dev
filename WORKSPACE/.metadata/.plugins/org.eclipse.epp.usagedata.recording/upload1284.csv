what,kind,bundleId,bundleVersion,description,time
started,bundle,org.eclipse.jst.server.tomcat.ui,1.1.200.v20100418,"org.eclipse.jst.server.tomcat.ui",1412288382148
opened,view,org.eclipse.debug.ui,3.6.3.v20101201_r362,"org.eclipse.debug.ui.DebugView",1412288382437
activated,view,org.eclipse.debug.ui,3.6.3.v20101201_r362,"org.eclipse.debug.ui.DebugView",1412288382453
activated,view,org.eclipse.wst.server.ui,1.1.207.v20110119,"org.eclipse.wst.server.ui.ServersView",1412288382548
started,bundle,org.eclipse.jdt.debug.ui,3.5.2.v20100928a_r362,"org.eclipse.jdt.debug.ui",1412288382625
opened,view,org.eclipse.ui.console,3.5.0.v20100526,"org.eclipse.ui.console.ConsoleView",1412288383438
activated,view,org.eclipse.debug.ui,3.6.3.v20101201_r362,"org.eclipse.debug.ui.DebugView",1412288384005
activated,view,org.eclipse.wst.server.ui,1.1.207.v20110119,"org.eclipse.wst.server.ui.ServersView",1412288385044
activated,view,org.eclipse.ui.console,3.5.0.v20100526,"org.eclipse.ui.console.ConsoleView",1412288386699
activated,view,org.eclipse.wst.server.ui,1.1.207.v20110119,"org.eclipse.wst.server.ui.ServersView",1412288398460
activated,editor,org.eclipse.jdt.ui,3.6.2.r362_v20110203,"org.eclipse.jdt.ui.CompilationUnitEditor",1412288403634
activated,editor,org.eclipse.jdt.ui,3.6.2.r362_v20110203,"org.eclipse.jdt.ui.CompilationUnitEditor",1412288403660
closed,editor,org.eclipse.jdt.ui,3.6.2.r362_v20110203,"org.eclipse.jdt.ui.CompilationUnitEditor",1412288403661
activated,view,org.eclipse.wst.server.ui,1.1.207.v20110119,"org.eclipse.wst.server.ui.ServersView",1412288416122
deactivated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1412288417997
activated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1412288419154
deactivated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1412288423002
activated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1412288423983
deactivated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1412288424259
activated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1412288428643
deactivated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1412288434611
activated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1412288435992
executed,command,org.eclipse.ui.ide,3.6.2.M20101201-0800,"org.eclipse.ui.project.cleanAction",1412288436006
error,log,,,"Exception occurred during problem detection:\n----------------------------------- SOURCE BEGIN -------------------------------------\npackage com.loyauty.web.struts.action.orders;\n\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.io.InputStream;\nimport java.text.SimpleDateFormat;\nimport java.util.ArrayList;\nimport java.util.Collection;\nimport java.util.Date;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\nimport javax.servlet.http.HttpSession;\nimport net.sf.jasperreports.engine.JRException;\nimport net.sf.jasperreports.engine.JasperCompileManager;\nimport net.sf.jasperreports.engine.JasperExportManager;\nimport net.sf.jasperreports.engine.JasperFillManager;\nimport net.sf.jasperreports.engine.JasperPrint;\nimport net.sf.jasperreports.engine.JasperReport;\nimport net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;\nimport net.sf.jasperreports.engine.design.JasperDesign;\nimport net.sf.jasperreports.engine.util.JRLoader;\nimport net.sf.jasperreports.engine.xml.JRXmlLoader;\nimport com.loyauty.exception.ServiceLocatorException;\nimport com.loyauty.model.OrdersRows;\nimport com.loyauty.model.User;\nimport com.loyauty.service.core.DTOFactory;\nimport com.loyauty.service.core.dto.OrdersDTO;\nimport com.loyauty.service.orders.OrdersService;\nimport com.loyauty.service.user.UserService;\nimport com.loyauty.web.struts.action.LoyautyAction;\nimport lombok.Getter;\nimport lombok.Setter;\n\npublic class PrintOrdersToPDF  extends LoyautyAction{\n\tprivate static final long serialVersionUID = -6290756519577177205L;\n\tprivate OrdersService orderService;\n\tprivate UserService userService;\n\t@Getter @Setter\n\tprivate InputStream fileInputStream;\n\t@Getter @Setter\n\tprivate String fileName="""";\n\t@Getter @Setter\n\tprivate String lsOrderIdToPrint;\n\t@Getter @Setter\n\tprivate List<OrdersDTO>listOrdersDTO;\n\t@Getter @Setter\n\tprivate Long tansformAutoSignal;\n\t@Getter @Setter\n\tprivate Long tansformManSignal;\n\t@Getter @Setter\n\tprivate Long tansformTreatSignal;\n\t@Getter @Setter\n\tprivate Long tansformReportSignal;\n\t@Getter @Setter\n\tprivate String showPopupConfirmInsert;\n\t@Getter @Setter\n\tprivate Long allOrdersSelectedSignal;\n\t@Getter @Setter\n\tprivate Long tansformInvoicedSignal;\n\t@Getter @Setter\n\tprivate String message="""";\n\t@SuppressWarnings(""rawtypes"")\n\tCollection list;\n\t@Getter @Setter\n\tprivate String strPrint;\n\t//searching parameters\n\t/*@Getter @Setter\n\tprivate String userLogin;\n\t@Getter @Setter\n\tprivate String lsOrderId;\n\t@Getter @Setter\n\tprivate Integer selectedStatus;\n\tprivate String status;\n\t@Getter @Setter\n\tprivate Integer reportDateBetween;\n\t@Getter @Setter\n\tInteger PAGE_ITEMS_COUNT=1000000;\n\t@Getter @Setter\n\tList<OrdersDTO>listIndexSet;*/\n\tInteger PAGE_ITEMS_COUNT=1000000;\n\t\n\tpublic PrintOrdersToPDF() throws ServiceLocatorException {\n\t\tsuper();\t\n\t\tuserService = getServiceLocator().getUserService();\n\t\tlistOrdersDTO=new ArrayList<OrdersDTO>();\n\t\torderService = getServiceLocator().getOrderService();\n\t}\n\t\n\t@Override  \n\tpublic String execute() throws Exception {\t\n\t\tHttpSession session = request.getSession(true);\n\t\tsession.setAttribute(""generatePDF"",0);\n\t\tString filePath = session.getServletContext().getRealPath(""/"");\n\t\tString filePathData = filePath + ""WEB-INF/jsp/orders/data/"";\n\t\tString logoPath= filePath + ""images/orders/usersLogos/"";\n\t\tshowPopupConfirmInsert=""visibility:hidden;display:none;"";\n\t\tSimpleDateFormat frm=new SimpleDateFormat(""dd-MM-yyyy"");\n\t\tDate date=new Date();\n\t\tString strDate=frm.format(date);\n\t\tfileName=""orders.pdf"";\n\t\t//String userLogin=""anonymous"";\n\t\tif(tansformAutoSignal!=null && tansformAutoSignal!=0L){\n\t\t\tlistOrdersDTO= (List<OrdersDTO>)session.getAttribute(""listOrdersDTOAuto"");\n\t\t}else if(tansformManSignal!=null && tansformManSignal!=0L){\n\t\t\tlistOrdersDTO= (List<OrdersDTO>)session.getAttribute(""listOrdersDTOMan"");\n\t\t}else if(tansformTreatSignal!=null && tansformTreatSignal!=0L){\n\t\t\tlistOrdersDTO= (List<OrdersDTO>)session.getAttribute(""listOrdersDTOTreat"");\n\t\t}else if(tansformReportSignal!=null && tansformReportSignal!=0L){\n\t\t\t//listOrdersDTO= (List<OrdersDTO>)session.getAttribute(""listOrdersDTOTreat"");\n\t\t\tallOrdersSelectedSignal=(Long)session.getAttribute(""allOrdersSelectedSignal"");\n\t\t\t\n\t\t\t\n\t\t\t/*selectedStatus=(Integer)session.getAttribute(""selectedStatus"");\n\t\t\tstatus=new ReportOrders().getStatusSelected(selectedStatus);\n\t\t\treportDateBetween=(Integer)session.getAttribute(""reportDateBetween"");\n\t\t\tlistIndexSet=(List<OrdersDTO>)session.getAttribute(""listIndexSet"");\n\t\t\tif(listIndexSet==null)new ReportOrders().initalizeListIndexSet(session,orderService );\n\t\t\tif(reportDateBetween==null){\n\t\t\t\treportDateBetween=0;\n\t\t\t\tsession.setAttribute(""reportDateBetween"",reportDateBetween);\n\t\t\t}\n\t\t\tlsOrderId=lsOrderId.toUpperCase();*/\n\t\t\tif(allOrdersSelectedSignal!=null && allOrdersSelectedSignal!=0L){\n\t\t\t\t//keep search parameters to use in other classes(PrintOrdersToPDF, ...)\n\t\t\t\tDate creationDateStartArg=(Date)session.getAttribute(""creationDateStartArg"");\n\t\t\t\tDate creationDateEndArg=(Date)session.getAttribute(""creationDateEndArg"");\n\t\t\t\tInteger reportDateBetween=(Integer)session.getAttribute(""reportDateBetween"");\n\t\t\t\tString lsOrderId=(String)session.getAttribute(""lsOrderId"");\n\t\t\t\tlsOrderId=lsOrderId.toUpperCase();\n\t\t\t\tString userLogin=(String)session.getAttribute(""userLogin"");\n\t\t\t\tString status=(String)session.getAttribute(""status"");\n\t\t\t\tList<Integer>listIndexColumn=(List<Integer>)session.getAttribute(""listIndexColumn"");\n\t\t\t\tlistOrdersDTO=orderService.searchOrdersWithOptionsAndSorting(creationDateStartArg, creationDateEndArg,reportDateBetween,userLogin, lsOrderId, status, listIndexColumn,PAGE_ITEMS_COUNT,0);\n\t\t\t}else{\n\t\t\t\tlistOrdersDTO= (List<OrdersDTO>)session.getAttribute(""listOrdersDTOReport"");\n\t\t\t}\n\t\t}else if(tansformInvoicedSignal!=null && tansformInvoicedSignal!=0L){\n\t\t\t//listOrdersDTO= (List<OrdersDTO>)session.getAttribute(""listOrdersDTOTreat"");\n\t\t\tallOrdersSelectedSignal=(Long)session.getAttribute(""allOrdersSelectedSignal"");\n\t\t\tif(allOrdersSelectedSignal!=null && allOrdersSelectedSignal!=0L){\n\t\t\t\t//keep search parameters to use in other classes(PrintOrdersToPDF, ...)\n\t\t\t\tDate creationDateStartArg=(Date)session.getAttribute(""creationDateStartArg"");\n\t\t\t\tDate creationDateEndArg=(Date)session.getAttribute(""creationDateEndArg"");\n\t\t\t\tInteger reportDateBetween=(Integer)session.getAttribute(""reportDateBetween"");\n\t\t\t\tString lsOrderId=(String)session.getAttribute(""lsOrderId"");\n\t\t\t\tlsOrderId=lsOrderId.toUpperCase();\n\t\t\t\tString userLogin=(String)session.getAttribute(""userLogin"");\n\t\t\t\tString status=(String)session.getAttribute(""status"");\n\t\t\t\tList<Integer>listIndexColumn=(List<Integer>)session.getAttribute(""listIndexColumn"");\n\t\t\t\tlistOrdersDTO=orderService.searchInvoicedWithSorting(creationDateStartArg, creationDateEndArg,reportDateBetween,userLogin, lsOrderId, status, listIndexColumn,PAGE_ITEMS_COUNT,0);\n\t\t\t}else{\n\t\t\t\tlistOrdersDTO= (List<OrdersDTO>)session.getAttribute(""listOrdersDTOInvoiced"");\n\t\t\t}\n\t\t}\n\t\t\n\t\ttry{\n\n\t\t\t\n\t\t\t/*------------------------ Change print property of order ---------------------\n\t\t\t\t\tcatch string content values print and change print property order \n\t\t\t  -----------------------------------------------------------------------------*/\n\t\t\tif(allOrdersSelectedSignal==null || allOrdersSelectedSignal==0L){\n\t\t\t\tString[] tabPrint=strPrint.split("","");\n\t\t\t\tfor(int i=0;i<tabPrint.length;i++){\n\t\t\t\t\tString item=tabPrint[i];\n\t\t\t\t\tString[] tabItem=item.split("";"");\n\t\t\t\t\tint index=Integer.parseInt(tabItem[0]);\n\t\t\t\t\tOrdersDTO orderDTO= listOrdersDTO.get(index);\n\t\t\t\t\tif(tabItem[1].equals(""t"")){\n\t\t\t\t\t\torderDTO.setPrint(true);\n\t\t\t\t\t}else orderDTO.setPrint(false);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/*-------------------- Prepare list orders to print ---------------------------\n\t\t\t\tsearch just orders witch have property shippingCompany!=null and \n\t\t\t\t\t shippingCompany!="""" and add it at first of list \n\t \t\t ------------------------------------------------------------------------------*/\n\n\t\t\tif(listOrdersDTO!=null && listOrdersDTO.size()>0){\n\t\t\t\tList<OrdersDTO>listOrdersWithoutSHCompany=new ArrayList<OrdersDTO>();\n\t\t\t\tList<OrdersDTO>listOrdersWithSHCompany=new ArrayList<OrdersDTO>();\n\t\t\t\tfor(OrdersDTO order:listOrdersDTO){\n\t\t\t\t\t\n\t\t\t\t\t//add special handling shipping\n\t\t\t\t\tUser user=null;\n\t\t\t\t\tSystem.out.println(""user_login:""+order.getUserLogin()+"" user_id:""+order.getUserId());\n\t\t\t\t\tif(order.getUserLogin()!=null)user=userService.getUserByLogin(order.getUserLogin());\n\t\t\t\t\tif(user!=null){\n\t\t\t\t\t\tDouble totalPrice=null;\n\t\t\t\t\t\torder.setSpecialHandlingName(user.getSpecialHandlingName());\n\t\t\t\t\t\torder.setSpecialHandlingFee(user.getSpecialHandlingFee());\n\t\t\t\t\t\tif(order.getRowsList().get(0).getQuantity()!=null && order.getRowsList().get(0).getUnitPrice()!=null)\n\t\t\t\t\t\t\ttotalPrice=order.getRowsList().get(0).getQuantity()*order.getRowsList().get(0).getUnitPrice();\n\t\t\t\t\t\t\ttotalPrice = (double) Math.round(totalPrice * 100) / 100;\n\t\t\t\t\t\t\torder.setTotalPrice(totalPrice);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif(order.getShippingCompany()!=null && !order.getShippingCompany().equals("""")){\n\t\t\t\t\t\tlistOrdersWithSHCompany.add(order);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tlistOrdersWithoutSHCompany.add(order);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlistOrdersDTO=new ArrayList<OrdersDTO>();\n\t\t\t\tfor(OrdersDTO order:listOrdersWithSHCompany){\n\t\t\t\t\tlistOrdersDTO.add(order);\n\t\t\t\t}\n\t\t\t\tfor(OrdersDTO order:listOrdersWithoutSHCompany){\n\t\t\t\t\tlistOrdersDTO.add(order);\n\t\t\t\t}\n\t\t\t}\n\t\t\t/*-------------------- print orders selected -----------------------------------\n\t\t\t\t\t  save all orders witch have property print=true\n\t \t\t ------------------------------------------------------------------------------*/\n\t\t\t\tif(allOrdersSelectedSignal!=null && allOrdersSelectedSignal!=0L){ // print All Orders\n\t\t\t\t\tfileName=""list_orders""+strDate+"".pdf"";\n\t\t\t\t\tif(tansformReportSignal!=null && tansformReportSignal!=0L){\n\t\t\t\t\t\tlist=DTOFactory.getListOrderPrintDTOForReport(listOrdersDTO,logoPath,true);\n\t\t\t\t\t\tfor(OrdersDTO ord:listOrdersDTO){\n\t\t\t\t\t\t\tif(ord.getStatus()!=null && ord.getStatus().equals(""open""))ord.setStatus(""progress"");\n\t\t\t\t\t\t}\n\t\t\t\t\t}else{\n\t\t\t\t\t\tlist=DTOFactory.getListOrderPrintDTO(listOrdersDTO,logoPath,true);\n\t\t\t\t\t\tfor(OrdersDTO ord:listOrdersDTO){\n\t\t\t\t\t\t\tfor(OrdersRows row:ord.getRowsList()){\n\t\t\t\t\t\t\t\tif(row.getStatus()!=null && row.getStatus().equals(""open""))row.setStatus(""progress"");\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\tfor(OrdersDTO orderDTO:listOrdersDTO){\n\t\t\t\t\t\torderService.makeOrderInProgress(orderDTO);\n\t\t\t\t\t}//end for\t\n\t\t\t\t}else{ // print just orders Selected\n\t\t\t\t\tfileName=""orders_selected""+strDate+"".pdf"";\n\t\t\t\t\tlist=DTOFactory.getListOrderPrintDTO(listOrdersDTO,logoPath,false); \n\t\t\t\t\tfor(OrdersDTO ordDTO:listOrdersDTO){\n\t\t\t\t\t\tif(ordDTO.getPrint()!=null){\n\t\t\t\t\t\t\tif(ordDTO.getPrint()){\n\t\t\t\t\t\t\t\t//userLogin=ordDTO.getUserLogin();\n\t\t\t\t\t\t\t\tif(ordDTO.getStatus()!=null && ordDTO.getStatus().equals(""open""))ordDTO.setStatus(""progress"");\n\t\t\t\t\t\t\t\tfor(OrdersRows row:ordDTO.getRowsList()){\n\t\t\t\t\t\t\t\t\tif(row.getStatus()!=null && row.getStatus().equals(""open""))row.setStatus(""progress"");\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t//break;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tfor(OrdersDTO orderDTO:listOrdersDTO){\n\t\t\t\t\t\tif(orderDTO.getPrint()!=null){\n\t\t\t\t\t\t\tif(orderDTO.getPrint()==true)orderService.makeOrderInProgress(orderDTO);\n\t\t\t\t\t\t}//end if\n\t\t\t\t\t}//end for\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t/*if(tansformAutoSignal!=null && tansformAutoSignal!=0L){\n\t\t\t\t\tsession.setAttribute(""listOrdersDTOAuto"",listOrdersDTO);\n\t\t\t\t}else if(tansformManSignal!=null && tansformManSignal!=0L){\n\t\t\t\t\tsession.setAttribute(""listOrdersDTOMan"",listOrdersDTO);\n\t\t\t\t}else if(tansformTreatSignal!=null && tansformTreatSignal!=0L){\n\t\t\t\t\tsession.setAttribute(""listOrdersDTOTreat"",listOrdersDTO);\n\t\t\t\t}else if(tansformReportSignal!=null && tansformReportSignal!=0L){\n\t\t\t\t\tsession.setAttribute(""listOrdersDTOReport"",listOrdersDTO);\n\t\t\t\t}else if(tansformInvoicedSignal!=null && tansformInvoicedSignal!=0L){\n\t\t\t\t\tsession.setAttribute(""listOrdersDTOInvoiced"",listOrdersDTO);\n\t\t\t\t}\n\t\t\t\t*/\n\t\t\t/*-------------------- Create a file PDF from orders list ---------------------\n\t\t\t\t\t  The system will create a pdf file with the client login name\n\t \t\t ------------------------------------------------------------------------------*/\n\t\t\t@SuppressWarnings(""rawtypes"")\n\t\t\tMap parameters = new HashMap();\n\t\t\tFile destFilePDF = new File(filePathData+""orders.pdf"");\n\t\t\tif(destFilePDF.exists())destFilePDF.delete();\n\t\t\tInputStream inputStream;\n\t\t\ttry {\n\t\t\t\tinputStream = JRLoader.getLocationInputStream(filePathData+""orders.jrxml"");\n\t\t\t\tJRBeanCollectionDataSource beanColDataSource = new JRBeanCollectionDataSource(list,false);\n\t\t\t\tJasperDesign jasperDesign = JRXmlLoader.load(inputStream);\n\t\t\t\tJasperReport jasperReport = JasperCompileManager.compileReport(jasperDesign);\n\t\t\t\t@SuppressWarnings(""unchecked"")\n\t\t\t\tJasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, parameters, beanColDataSource);\n\t\t\t\tJasperExportManager.exportReportToPdfFile(jasperPrint, filePathData+""orders.pdf"");\t\t\t\t\n\t\t\t} catch (JRException e) {\n\t\t\t\t// TODO Auto-generated catch block\n\t\t\t\te.printStackTrace();\n\t\t\t}    \n\t\t\tfileInputStream = new FileInputStream(new File( filePathData+""orders.pdf""));\n\t\t\t//fileName=""orders.pdf"";\n\t\t\tsession.setAttribute(""generatePDF"",1);\n\t\t\tsession.setAttribute(""invoicedOrdersRefresh"",1L);\n\t\t\treturn SUCCESS;\n\t\t}catch (Exception e) {\n\t\t\t// TODO: handle exception\n\t\t\te.printStackTrace();\n\t\t\treturn ERROR;\n\t\t}\n\n\t}\n\t\n\t\n}\n\n----------------------------------- SOURCE END -------------------------------------",1412288436905
error,log,,,"Problems occurred when invoking code from plug-in: ""org.eclipse.jdt.ui"".",1412288436906
error,log,,,"Error in JDT Core during reconcile",1412288436907
error,log,,,"Exception occurred during problem detection:\n----------------------------------- SOURCE BEGIN -------------------------------------\npackage com.loyauty.web.struts.action.orders;\n\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.io.InputStream;\nimport java.text.SimpleDateFormat;\nimport java.util.ArrayList;\nimport java.util.Collection;\nimport java.util.Date;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\nimport javax.servlet.http.HttpSession;\nimport net.sf.jasperreports.engine.JRException;\nimport net.sf.jasperreports.engine.JasperCompileManager;\nimport net.sf.jasperreports.engine.JasperExportManager;\nimport net.sf.jasperreports.engine.JasperFillManager;\nimport net.sf.jasperreports.engine.JasperPrint;\nimport net.sf.jasperreports.engine.JasperReport;\nimport net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;\nimport net.sf.jasperreports.engine.design.JasperDesign;\nimport net.sf.jasperreports.engine.util.JRLoader;\nimport net.sf.jasperreports.engine.xml.JRXmlLoader;\nimport com.loyauty.exception.ServiceLocatorException;\nimport com.loyauty.model.OrdersRows;\nimport com.loyauty.model.User;\nimport com.loyauty.service.core.DTOFactory;\nimport com.loyauty.service.core.dto.OrdersDTO;\nimport com.loyauty.service.orders.OrdersService;\nimport com.loyauty.service.user.UserService;\nimport com.loyauty.web.struts.action.LoyautyAction;\nimport lombok.Getter;\nimport lombok.Setter;\n\npublic class PrintOrdersToPDF  extends LoyautyAction{\n\tprivate static final long serialVersionUID = -6290756519577177205L;\n\tprivate OrdersService orderService;\n\tprivate UserService userService;\n\t@Getter @Setter\n\tprivate InputStream fileInputStream;\n\t@Getter @Setter\n\tprivate String fileName="""";\n\t@Getter @Setter\n\tprivate String lsOrderIdToPrint;\n\t@Getter @Setter\n\tprivate List<OrdersDTO>listOrdersDTO;\n\t@Getter @Setter\n\tprivate Long tansformAutoSignal;\n\t@Getter @Setter\n\tprivate Long tansformManSignal;\n\t@Getter @Setter\n\tprivate Long tansformTreatSignal;\n\t@Getter @Setter\n\tprivate Long tansformReportSignal;\n\t@Getter @Setter\n\tprivate String showPopupConfirmInsert;\n\t@Getter @Setter\n\tprivate Long allOrdersSelectedSignal;\n\t@Getter @Setter\n\tprivate Long tansformInvoicedSignal;\n\t@Getter @Setter\n\tprivate String message="""";\n\t@SuppressWarnings(""rawtypes"")\n\tCollection list;\n\t@Getter @Setter\n\tprivate String strPrint;\n\t//searching parameters\n\t/*@Getter @Setter\n\tprivate String userLogin;\n\t@Getter @Setter\n\tprivate String lsOrderId;\n\t@Getter @Setter\n\tprivate Integer selectedStatus;\n\tprivate String status;\n\t@Getter @Setter\n\tprivate Integer reportDateBetween;\n\t@Getter @Setter\n\tInteger PAGE_ITEMS_COUNT=1000000;\n\t@Getter @Setter\n\tList<OrdersDTO>listIndexSet;*/\n\tInteger PAGE_ITEMS_COUNT=1000000;\n\t\n\tpublic PrintOrdersToPDF() throws ServiceLocatorException {\n\t\tsuper();\t\n\t\tuserService = getServiceLocator().getUserService();\n\t\tlistOrdersDTO=new ArrayList<OrdersDTO>();\n\t\torderService = getServiceLocator().getOrderService();\n\t}\n\t\n\t@Override  \n\tpublic String execute() throws Exception {\t\n\t\tHttpSession session = request.getSession(true);\n\t\tsession.setAttribute(""generatePDF"",0);\n\t\tString filePath = session.getServletContext().getRealPath(""/"");\n\t\tString filePathData = filePath + ""WEB-INF/jsp/orders/data/"";\n\t\tString logoPath= filePath + ""images/orders/usersLogos/"";\n\t\tshowPopupConfirmInsert=""visibility:hidden;display:none;"";\n\t\tSimpleDateFormat frm=new SimpleDateFormat(""dd-MM-yyyy"");\n\t\tDate date=new Date();\n\t\tString strDate=frm.format(date);\n\t\tfileName=""orders.pdf"";\n\t\t//String userLogin=""anonymous"";\n\t\tif(tansformAutoSignal!=null && tansformAutoSignal!=0L){\n\t\t\tlistOrdersDTO= (List<OrdersDTO>)session.getAttribute(""listOrdersDTOAuto"");\n\t\t}else if(tansformManSignal!=null && tansformManSignal!=0L){\n\t\t\tlistOrdersDTO= (List<OrdersDTO>)session.getAttribute(""listOrdersDTOMan"");\n\t\t}else if(tansformTreatSignal!=null && tansformTreatSignal!=0L){\n\t\t\tlistOrdersDTO= (List<OrdersDTO>)session.getAttribute(""listOrdersDTOTreat"");\n\t\t}else if(tansformReportSignal!=null && tansformReportSignal!=0L){\n\t\t\t//listOrdersDTO= (List<OrdersDTO>)session.getAttribute(""listOrdersDTOTreat"");\n\t\t\tallOrdersSelectedSignal=(Long)session.getAttribute(""allOrdersSelectedSignal"");\n\t\t\t\n\t\t\t\n\t\t\t/*selectedStatus=(Integer)session.getAttribute(""selectedStatus"");\n\t\t\tstatus=new ReportOrders().getStatusSelected(selectedStatus);\n\t\t\treportDateBetween=(Integer)session.getAttribute(""reportDateBetween"");\n\t\t\tlistIndexSet=(List<OrdersDTO>)session.getAttribute(""listIndexSet"");\n\t\t\tif(listIndexSet==null)new ReportOrders().initalizeListIndexSet(session,orderService );\n\t\t\tif(reportDateBetween==null){\n\t\t\t\treportDateBetween=0;\n\t\t\t\tsession.setAttribute(""reportDateBetween"",reportDateBetween);\n\t\t\t}\n\t\t\tlsOrderId=lsOrderId.toUpperCase();*/\n\t\t\tif(allOrdersSelectedSignal!=null && allOrdersSelectedSignal!=0L){\n\t\t\t\t//keep search parameters to use in other classes(PrintOrdersToPDF, ...)\n\t\t\t\tDate creationDateStartArg=(Date)session.getAttribute(""creationDateStartArg"");\n\t\t\t\tDate creationDateEndArg=(Date)session.getAttribute(""creationDateEndArg"");\n\t\t\t\tInteger reportDateBetween=(Integer)session.getAttribute(""reportDateBetween"");\n\t\t\t\tString lsOrderId=(String)session.getAttribute(""lsOrderId"");\n\t\t\t\tlsOrderId=lsOrderId.toUpperCase();\n\t\t\t\tString userLogin=(String)session.getAttribute(""userLogin"");\n\t\t\t\tString status=(String)session.getAttribute(""status"");\n\t\t\t\tList<Integer>listIndexColumn=(List<Integer>)session.getAttribute(""listIndexColumn"");\n\t\t\t\tlistOrdersDTO=orderService.searchOrdersWithOptionsAndSorting(creationDateStartArg, creationDateEndArg,reportDateBetween,userLogin, lsOrderId, status, listIndexColumn,PAGE_ITEMS_COUNT,0);\n\t\t\t}else{\n\t\t\t\tlistOrdersDTO= (List<OrdersDTO>)session.getAttribute(""listOrdersDTOReport"");\n\t\t\t}\n\t\t}else if(tansformInvoicedSignal!=null && tansformInvoicedSignal!=0L){\n\t\t\t//listOrdersDTO= (List<OrdersDTO>)session.getAttribute(""listOrdersDTOTreat"");\n\t\t\tallOrdersSelectedSignal=(Long)session.getAttribute(""allOrdersSelectedSignal"");\n\t\t\tif(allOrdersSelectedSignal!=null && allOrdersSelectedSignal!=0L){\n\t\t\t\t//keep search parameters to use in other classes(PrintOrdersToPDF, ...)\n\t\t\t\tDate creationDateStartArg=(Date)session.getAttribute(""creationDateStartArg"");\n\t\t\t\tDate creationDateEndArg=(Date)session.getAttribute(""creationDateEndArg"");\n\t\t\t\tInteger reportDateBetween=(Integer)session.getAttribute(""reportDateBetween"");\n\t\t\t\tString lsOrderId=(String)session.getAttribute(""lsOrderId"");\n\t\t\t\tlsOrderId=lsOrderId.toUpperCase();\n\t\t\t\tString userLogin=(String)session.getAttribute(""userLogin"");\n\t\t\t\tString status=(String)session.getAttribute(""status"");\n\t\t\t\tList<Integer>listIndexColumn=(List<Integer>)session.getAttribute(""listIndexColumn"");\n\t\t\t\tlistOrdersDTO=orderService.searchInvoicedWithSorting(creationDateStartArg, creationDateEndArg,reportDateBetween,userLogin, lsOrderId, status, listIndexColumn,PAGE_ITEMS_COUNT,0);\n\t\t\t}else{\n\t\t\t\tlistOrdersDTO= (List<OrdersDTO>)session.getAttribute(""listOrdersDTOInvoiced"");\n\t\t\t}\n\t\t}\n\t\t\n\t\ttry{\n\n\t\t\t\n\t\t\t/*------------------------ Change print property of order ---------------------\n\t\t\t\t\tcatch string content values print and change print property order \n\t\t\t  -----------------------------------------------------------------------------*/\n\t\t\tif(allOrdersSelectedSignal==null || allOrdersSelectedSignal==0L){\n\t\t\t\tString[] tabPrint=strPrint.split("","");\n\t\t\t\tfor(int i=0;i<tabPrint.length;i++){\n\t\t\t\t\tString item=tabPrint[i];\n\t\t\t\t\tString[] tabItem=item.split("";"");\n\t\t\t\t\tint index=Integer.parseInt(tabItem[0]);\n\t\t\t\t\tOrdersDTO orderDTO= listOrdersDTO.get(index);\n\t\t\t\t\tif(tabItem[1].equals(""t"")){\n\t\t\t\t\t\torderDTO.setPrint(true);\n\t\t\t\t\t}else orderDTO.setPrint(false);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/*-------------------- Prepare list orders to print ---------------------------\n\t\t\t\tsearch just orders witch have property shippingCompany!=null and \n\t\t\t\t\t shippingCompany!="""" and add it at first of list \n\t \t\t ------------------------------------------------------------------------------*/\n\n\t\t\tif(listOrdersDTO!=null && listOrdersDTO.size()>0){\n\t\t\t\tList<OrdersDTO>listOrdersWithoutSHCompany=new ArrayList<OrdersDTO>();\n\t\t\t\tList<OrdersDTO>listOrdersWithSHCompany=new ArrayList<OrdersDTO>();\n\t\t\t\tfor(OrdersDTO order:listOrdersDTO){\n\t\t\t\t\t\n\t\t\t\t\t//add special handling shipping\n\t\t\t\t\tUser user=null;\n\t\t\t\t\tSystem.out.println(""user_login:""+order.getUserLogin()+"" user_id:""+order.getUserId());\n\t\t\t\t\tif(order.getUserLogin()!=null)user=userService.getUserByLogin(order.getUserLogin());\n\t\t\t\t\tif(user!=null){\n\t\t\t\t\t\tDouble totalPrice=null;\n\t\t\t\t\t\torder.setSpecialHandlingName(user.getSpecialHandlingName());\n\t\t\t\t\t\torder.setSpecialHandlingFee(user.getSpecialHandlingFee());\n\t\t\t\t\t\tif(order.getRowsList().get(0).getQuantity()!=null && order.getRowsList().get(0).getUnitPrice()!=null)\n\t\t\t\t\t\t\ttotalPrice=order.getRowsList().get(0).getQuantity()*order.getRowsList().get(0).getUnitPrice();\n\t\t\t\t\t\t\ttotalPrice = (double) Math.round(totalPrice * 100) / 100;\n\t\t\t\t\t\t\torder.setTotalPrice(totalPrice);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif(order.getShippingCompany()!=null && !order.getShippingCompany().equals("""")){\n\t\t\t\t\t\tlistOrdersWithSHCompany.add(order);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tlistOrdersWithoutSHCompany.add(order);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlistOrdersDTO=new ArrayList<OrdersDTO>();\n\t\t\t\tfor(OrdersDTO order:listOrdersWithSHCompany){\n\t\t\t\t\tlistOrdersDTO.add(order);\n\t\t\t\t}\n\t\t\t\tfor(OrdersDTO order:listOrdersWithoutSHCompany){\n\t\t\t\t\tlistOrdersDTO.add(order);\n\t\t\t\t}\n\t\t\t}\n\t\t\t/*-------------------- print orders selected -----------------------------------\n\t\t\t\t\t  save all orders witch have property print=true\n\t \t\t ------------------------------------------------------------------------------*/\n\t\t\t\tif(allOrdersSelectedSignal!=null && allOrdersSelectedSignal!=0L){ // print All Orders\n\t\t\t\t\tfileName=""list_orders""+strDate+"".pdf"";\n\t\t\t\t\tif(tansformReportSignal!=null && tansformReportSignal!=0L){\n\t\t\t\t\t\tlist=DTOFactory.getListOrderPrintDTOForReport(listOrdersDTO,logoPath,true);\n\t\t\t\t\t\tfor(OrdersDTO ord:listOrdersDTO){\n\t\t\t\t\t\t\tif(ord.getStatus()!=null && ord.getStatus().equals(""open""))ord.setStatus(""progress"");\n\t\t\t\t\t\t}\n\t\t\t\t\t}else{\n\t\t\t\t\t\tlist=DTOFactory.getListOrderPrintDTO(listOrdersDTO,logoPath,true);\n\t\t\t\t\t\tfor(OrdersDTO ord:listOrdersDTO){\n\t\t\t\t\t\t\tfor(OrdersRows row:ord.getRowsList()){\n\t\t\t\t\t\t\t\tif(row.getStatus()!=null && row.getStatus().equals(""open""))row.setStatus(""progress"");\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\tfor(OrdersDTO orderDTO:listOrdersDTO){\n\t\t\t\t\t\torderService.makeOrderInProgress(orderDTO);\n\t\t\t\t\t}//end for\t\n\t\t\t\t}else{ // print just orders Selected\n\t\t\t\t\tfileName=""orders_selected""+strDate+"".pdf"";\n\t\t\t\t\tlist=DTOFactory.getListOrderPrintDTO(listOrdersDTO,logoPath,false); \n\t\t\t\t\tfor(OrdersDTO ordDTO:listOrdersDTO){\n\t\t\t\t\t\tif(ordDTO.getPrint()!=null){\n\t\t\t\t\t\t\tif(ordDTO.getPrint()){\n\t\t\t\t\t\t\t\t//userLogin=ordDTO.getUserLogin();\n\t\t\t\t\t\t\t\tif(ordDTO.getStatus()!=null && ordDTO.getStatus().equals(""open""))ordDTO.setStatus(""progress"");\n\t\t\t\t\t\t\t\tfor(OrdersRows row:ordDTO.getRowsList()){\n\t\t\t\t\t\t\t\t\tif(row.getStatus()!=null && row.getStatus().equals(""open""))row.setStatus(""progress"");\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t//break;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tfor(OrdersDTO orderDTO:listOrdersDTO){\n\t\t\t\t\t\tif(orderDTO.getPrint()!=null){\n\t\t\t\t\t\t\tif(orderDTO.getPrint()==true)orderService.makeOrderInProgress(orderDTO);\n\t\t\t\t\t\t}//end if\n\t\t\t\t\t}//end for\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t/*if(tansformAutoSignal!=null && tansformAutoSignal!=0L){\n\t\t\t\t\tsession.setAttribute(""listOrdersDTOAuto"",listOrdersDTO);\n\t\t\t\t}else if(tansformManSignal!=null && tansformManSignal!=0L){\n\t\t\t\t\tsession.setAttribute(""listOrdersDTOMan"",listOrdersDTO);\n\t\t\t\t}else if(tansformTreatSignal!=null && tansformTreatSignal!=0L){\n\t\t\t\t\tsession.setAttribute(""listOrdersDTOTreat"",listOrdersDTO);\n\t\t\t\t}else if(tansformReportSignal!=null && tansformReportSignal!=0L){\n\t\t\t\t\tsession.setAttribute(""listOrdersDTOReport"",listOrdersDTO);\n\t\t\t\t}else if(tansformInvoicedSignal!=null && tansformInvoicedSignal!=0L){\n\t\t\t\t\tsession.setAttribute(""listOrdersDTOInvoiced"",listOrdersDTO);\n\t\t\t\t}\n\t\t\t\t*/\n\t\t\t/*-------------------- Create a file PDF from orders list ---------------------\n\t\t\t\t\t  The system will create a pdf file with the client login name\n\t \t\t ------------------------------------------------------------------------------*/\n\t\t\t@SuppressWarnings(""rawtypes"")\n\t\t\tMap parameters = new HashMap();\n\t\t\tFile destFilePDF = new File(filePathData+""orders.pdf"");\n\t\t\tif(destFilePDF.exists())destFilePDF.delete();\n\t\t\tInputStream inputStream;\n\t\t\ttry {\n\t\t\t\tinputStream = JRLoader.getLocationInputStream(filePathData+""orders.jrxml"");\n\t\t\t\tJRBeanCollectionDataSource beanColDataSource = new JRBeanCollectionDataSource(list,false);\n\t\t\t\tJasperDesign jasperDesign = JRXmlLoader.load(inputStream);\n\t\t\t\tJasperReport jasperReport = JasperCompileManager.compileReport(jasperDesign);\n\t\t\t\t@SuppressWarnings(""unchecked"")\n\t\t\t\tJasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, parameters, beanColDataSource);\n\t\t\t\tJasperExportManager.exportReportToPdfFile(jasperPrint, filePathData+""orders.pdf"");\t\t\t\t\n\t\t\t} catch (JRException e) {\n\t\t\t\t// TODO Auto-generated catch block\n\t\t\t\te.printStackTrace();\n\t\t\t}    \n\t\t\tfileInputStream = new FileInputStream(new File( filePathData+""orders.pdf""));\n\t\t\t//fileName=""orders.pdf"";\n\t\t\tsession.setAttribute(""generatePDF"",1);\n\t\t\tsession.setAttribute(""invoicedOrdersRefresh"",1L);\n\t\t\treturn SUCCESS;\n\t\t}catch (Exception e) {\n\t\t\t// TODO: handle exception\n\t\t\te.printStackTrace();\n\t\t\treturn ERROR;\n\t\t}\n\n\t}\n\t\n\t\n}\n\n----------------------------------- SOURCE END -------------------------------------",1412288441628
error,log,,,"Problems occurred when invoking code from plug-in: ""org.eclipse.jdt.ui"".",1412288441629
error,log,,,"Error in JDT Core during reconcile",1412288441629
error,log,,,"Exception occurred during problem detection:\n----------------------------------- SOURCE BEGIN -------------------------------------\npackage com.loyauty.web.struts.action.orders;\n\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.io.InputStream;\nimport java.text.SimpleDateFormat;\nimport java.util.ArrayList;\nimport java.util.Collection;\nimport java.util.Date;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\nimport javax.servlet.http.HttpSession;\nimport net.sf.jasperreports.engine.JRException;\nimport net.sf.jasperreports.engine.JasperCompileManager;\nimport net.sf.jasperreports.engine.JasperExportManager;\nimport net.sf.jasperreports.engine.JasperFillManager;\nimport net.sf.jasperreports.engine.JasperPrint;\nimport net.sf.jasperreports.engine.JasperReport;\nimport net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;\nimport net.sf.jasperreports.engine.design.JasperDesign;\nimport net.sf.jasperreports.engine.util.JRLoader;\nimport net.sf.jasperreports.engine.xml.JRXmlLoader;\nimport com.loyauty.exception.ServiceLocatorException;\nimport com.loyauty.model.OrdersRows;\nimport com.loyauty.model.User;\nimport com.loyauty.service.core.DTOFactory;\nimport com.loyauty.service.core.dto.OrdersDTO;\nimport com.loyauty.service.orders.OrdersService;\nimport com.loyauty.service.user.UserService;\nimport com.loyauty.web.struts.action.LoyautyAction;\nimport lombok.Getter;\nimport lombok.Setter;\n\npublic class PrintOrdersToPDF  extends LoyautyAction{\n\tprivate static final long serialVersionUID = -6290756519577177205L;\n\tprivate OrdersService orderService;\n\tprivate UserService userService;\n\t@Getter @Setter\n\tprivate InputStream fileInputStream;\n\t@Getter @Setter\n\tprivate String fileName="""";\n\t@Getter @Setter\n\tprivate String lsOrderIdToPrint;\n\t@Getter @Setter\n\tprivate List<OrdersDTO>listOrdersDTO;\n\t@Getter @Setter\n\tprivate Long tansformAutoSignal;\n\t@Getter @Setter\n\tprivate Long tansformManSignal;\n\t@Getter @Setter\n\tprivate Long tansformTreatSignal;\n\t@Getter @Setter\n\tprivate Long tansformReportSignal;\n\t@Getter @Setter\n\tprivate String showPopupConfirmInsert;\n\t@Getter @Setter\n\tprivate Long allOrdersSelectedSignal;\n\t@Getter @Setter\n\tprivate Long tansformInvoicedSignal;\n\t@Getter @Setter\n\tprivate String message="""";\n\t@SuppressWarnings(""rawtypes"")\n\tCollection list;\n\t@Getter @Setter\n\tprivate String strPrint;\n\t//searching parameters\n\t/*@Getter @Setter\n\tprivate String userLogin;\n\t@Getter @Setter\n\tprivate String lsOrderId;\n\t@Getter @Setter\n\tprivate Integer selectedStatus;\n\tprivate String status;\n\t@Getter @Setter\n\tprivate Integer reportDateBetween;\n\t@Getter @Setter\n\tInteger PAGE_ITEMS_COUNT=1000000;\n\t@Getter @Setter\n\tList<OrdersDTO>listIndexSet;*/\n\tInteger PAGE_ITEMS_COUNT=1000000;\n\t\n\tpublic PrintOrdersToPDF() throws ServiceLocatorException {\n\t\tsuper();\t\n\t\tuserService = getServiceLocator().getUserService();\n\t\tlistOrdersDTO=new ArrayList<OrdersDTO>();\n\t\torderService = getServiceLocator().getOrderService();\n\t}\n\t\n\t@Override  \n\tpublic String execute() throws Exception {\t\n\t\tHttpSession session = request.getSession(true);\n\t\tsession.setAttribute(""generatePDF"",0);\n\t\tString filePath = session.getServletContext().getRealPath(""/"");\n\t\tString filePathData = filePath + ""WEB-INF/jsp/orders/data/"";\n\t\tString logoPath= filePath + ""images/orders/usersLogos/"";\n\t\tshowPopupConfirmInsert=""visibility:hidden;display:none;"";\n\t\tSimpleDateFormat frm=new SimpleDateFormat(""dd-MM-yyyy"");\n\t\tDate date=new Date();\n\t\tString strDate=frm.format(date);\n\t\tfileName=""orders.pdf"";\n\t\t//String userLogin=""anonymous"";\n\t\tif(tansformAutoSignal!=null && tansformAutoSignal!=0L){\n\t\t\tlistOrdersDTO= (List<OrdersDTO>)session.getAttribute(""listOrdersDTOAuto"");\n\t\t}else if(tansformManSignal!=null && tansformManSignal!=0L){\n\t\t\tlistOrdersDTO= (List<OrdersDTO>)session.getAttribute(""listOrdersDTOMan"");\n\t\t}else if(tansformTreatSignal!=null && tansformTreatSignal!=0L){\n\t\t\tlistOrdersDTO= (List<OrdersDTO>)session.getAttribute(""listOrdersDTOTreat"");\n\t\t}else if(tansformReportSignal!=null && tansformReportSignal!=0L){\n\t\t\t//listOrdersDTO= (List<OrdersDTO>)session.getAttribute(""listOrdersDTOTreat"");\n\t\t\tallOrdersSelectedSignal=(Long)session.getAttribute(""allOrdersSelectedSignal"");\n\t\t\t\n\t\t\t\n\t\t\t/*selectedStatus=(Integer)session.getAttribute(""selectedStatus"");\n\t\t\tstatus=new ReportOrders().getStatusSelected(selectedStatus);\n\t\t\treportDateBetween=(Integer)session.getAttribute(""reportDateBetween"");\n\t\t\tlistIndexSet=(List<OrdersDTO>)session.getAttribute(""listIndexSet"");\n\t\t\tif(listIndexSet==null)new ReportOrders().initalizeListIndexSet(session,orderService );\n\t\t\tif(reportDateBetween==null){\n\t\t\t\treportDateBetween=0;\n\t\t\t\tsession.setAttribute(""reportDateBetween"",reportDateBetween);\n\t\t\t}\n\t\t\tlsOrderId=lsOrderId.toUpperCase();*/\n\t\t\tif(allOrdersSelectedSignal!=null && allOrdersSelectedSignal!=0L){\n\t\t\t\t//keep search parameters to use in other classes(PrintOrdersToPDF, ...)\n\t\t\t\tDate creationDateStartArg=(Date)session.getAttribute(""creationDateStartArg"");\n\t\t\t\tDate creationDateEndArg=(Date)session.getAttribute(""creationDateEndArg"");\n\t\t\t\tInteger reportDateBetween=(Integer)session.getAttribute(""reportDateBetween"");\n\t\t\t\tString lsOrderId=(String)session.getAttribute(""lsOrderId"");\n\t\t\t\tlsOrderId=lsOrderId.toUpperCase();\n\t\t\t\tString userLogin=(String)session.getAttribute(""userLogin"");\n\t\t\t\tString status=(String)session.getAttribute(""status"");\n\t\t\t\tList<Integer>listIndexColumn=(List<Integer>)session.getAttribute(""listIndexColumn"");\n\t\t\t\tlistOrdersDTO=orderService.searchOrdersWithOptionsAndSorting(creationDateStartArg, creationDateEndArg,reportDateBetween,userLogin, lsOrderId, status, listIndexColumn,PAGE_ITEMS_COUNT,0);\n\t\t\t}else{\n\t\t\t\tlistOrdersDTO= (List<OrdersDTO>)session.getAttribute(""listOrdersDTOReport"");\n\t\t\t}\n\t\t}else if(tansformInvoicedSignal!=null && tansformInvoicedSignal!=0L){\n\t\t\t//listOrdersDTO= (List<OrdersDTO>)session.getAttribute(""listOrdersDTOTreat"");\n\t\t\tallOrdersSelectedSignal=(Long)session.getAttribute(""allOrdersSelectedSignal"");\n\t\t\tif(allOrdersSelectedSignal!=null && allOrdersSelectedSignal!=0L){\n\t\t\t\t//keep search parameters to use in other classes(PrintOrdersToPDF, ...)\n\t\t\t\tDate creationDateStartArg=(Date)session.getAttribute(""creationDateStartArg"");\n\t\t\t\tDate creationDateEndArg=(Date)session.getAttribute(""creationDateEndArg"");\n\t\t\t\tInteger reportDateBetween=(Integer)session.getAttribute(""reportDateBetween"");\n\t\t\t\tString lsOrderId=(String)session.getAttribute(""lsOrderId"");\n\t\t\t\tlsOrderId=lsOrderId.toUpperCase();\n\t\t\t\tString userLogin=(String)session.getAttribute(""userLogin"");\n\t\t\t\tString status=(String)session.getAttribute(""status"");\n\t\t\t\tList<Integer>listIndexColumn=(List<Integer>)session.getAttribute(""listIndexColumn"");\n\t\t\t\tlistOrdersDTO=orderService.searchInvoicedWithSorting(creationDateStartArg, creationDateEndArg,reportDateBetween,userLogin, lsOrderId, status, listIndexColumn,PAGE_ITEMS_COUNT,0);\n\t\t\t}else{\n\t\t\t\tlistOrdersDTO= (List<OrdersDTO>)session.getAttribute(""listOrdersDTOInvoiced"");\n\t\t\t}\n\t\t}\n\t\t\n\t\ttry{\n\n\t\t\t\n\t\t\t/*------------------------ Change print property of order ---------------------\n\t\t\t\t\tcatch string content values print and change print property order \n\t\t\t  -----------------------------------------------------------------------------*/\n\t\t\tif(allOrdersSelectedSignal==null || allOrdersSelectedSignal==0L){\n\t\t\t\tString[] tabPrint=strPrint.split("","");\n\t\t\t\tfor(int i=0;i<tabPrint.length;i++){\n\t\t\t\t\tString item=tabPrint[i];\n\t\t\t\t\tString[] tabItem=item.split("";"");\n\t\t\t\t\tint index=Integer.parseInt(tabItem[0]);\n\t\t\t\t\tOrdersDTO orderDTO= listOrdersDTO.get(index);\n\t\t\t\t\tif(tabItem[1].equals(""t"")){\n\t\t\t\t\t\torderDTO.setPrint(true);\n\t\t\t\t\t}else orderDTO.setPrint(false);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/*-------------------- Prepare list orders to print ---------------------------\n\t\t\t\tsearch just orders witch have property shippingCompany!=null and \n\t\t\t\t\t shippingCompany!="""" and add it at first of list \n\t \t\t ------------------------------------------------------------------------------*/\n\n\t\t\tif(listOrdersDTO!=null && listOrdersDTO.size()>0){\n\t\t\t\tList<OrdersDTO>listOrdersWithoutSHCompany=new ArrayList<OrdersDTO>();\n\t\t\t\tList<OrdersDTO>listOrdersWithSHCompany=new ArrayList<OrdersDTO>();\n\t\t\t\tfor(OrdersDTO order:listOrdersDTO){\n\t\t\t\t\t\n\t\t\t\t\t//add special handling shipping\n\t\t\t\t\tUser user=null;\n\t\t\t\t\tSystem.out.println(""user_login:""+order.getUserLogin()+"" user_id:""+order.getUserId());\n\t\t\t\t\tif(order.getUserLogin()!=null)user=userService.getUserByLogin(order.getUserLogin());\n\t\t\t\t\tif(user!=null){\n\t\t\t\t\t\tDouble totalPrice=null;\n\t\t\t\t\t\torder.setSpecialHandlingName(user.getSpecialHandlingName());\n\t\t\t\t\t\torder.setSpecialHandlingFee(user.getSpecialHandlingFee());\n\t\t\t\t\t\tif(order.getRowsList().get(0).getQuantity()!=null && order.getRowsList().get(0).getUnitPrice()!=null)\n\t\t\t\t\t\t\ttotalPrice=order.getRowsList().get(0).getQuantity()*order.getRowsList().get(0).getUnitPrice();\n\t\t\t\t\t\t\ttotalPrice = (double) Math.round(totalPrice * 100) / 100;\n\t\t\t\t\t\t\torder.setTotalPrice(totalPrice);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif(order.getShippingCompany()!=null && !order.getShippingCompany().equals("""")){\n\t\t\t\t\t\tlistOrdersWithSHCompany.add(order);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tlistOrdersWithoutSHCompany.add(order);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlistOrdersDTO=new ArrayList<OrdersDTO>();\n\t\t\t\tfor(OrdersDTO order:listOrdersWithSHCompany){\n\t\t\t\t\tlistOrdersDTO.add(order);\n\t\t\t\t}\n\t\t\t\tfor(OrdersDTO order:listOrdersWithoutSHCompany){\n\t\t\t\t\tlistOrdersDTO.add(order);\n\t\t\t\t}\n\t\t\t}\n\t\t\t/*-------------------- print orders selected -----------------------------------\n\t\t\t\t\t  save all orders witch have property print=true\n\t \t\t ------------------------------------------------------------------------------*/\n\t\t\t\tif(allOrdersSelectedSignal!=null && allOrdersSelectedSignal!=0L){ // print All Orders\n\t\t\t\t\tfileName=""list_orders""+strDate+"".pdf"";\n\t\t\t\t\tif(tansformReportSignal!=null && tansformReportSignal!=0L){\n\t\t\t\t\t\tlist=DTOFactory.getListOrderPrintDTOForReport(listOrdersDTO,logoPath,true);\n\t\t\t\t\t\tfor(OrdersDTO ord:listOrdersDTO){\n\t\t\t\t\t\t\tif(ord.getStatus()!=null && ord.getStatus().equals(""open""))ord.setStatus(""progress"");\n\t\t\t\t\t\t}\n\t\t\t\t\t}else{\n\t\t\t\t\t\tlist=DTOFactory.getListOrderPrintDTO(listOrdersDTO,logoPath,true);\n\t\t\t\t\t\tfor(OrdersDTO ord:listOrdersDTO){\n\t\t\t\t\t\t\tfor(OrdersRows row:ord.getRowsList()){\n\t\t\t\t\t\t\t\tif(row.getStatus()!=null && row.getStatus().equals(""open""))row.setStatus(""progress"");\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\tfor(OrdersDTO orderDTO:listOrdersDTO){\n\t\t\t\t\t\torderService.makeOrderInProgress(orderDTO);\n\t\t\t\t\t}//end for\t\n\t\t\t\t}else{ // print just orders Selected\n\t\t\t\t\tfileName=""orders_selected""+strDate+"".pdf"";\n\t\t\t\t\tlist=DTOFactory.getListOrderPrintDTO(listOrdersDTO,logoPath,false); \n\t\t\t\t\tfor(OrdersDTO ordDTO:listOrdersDTO){\n\t\t\t\t\t\tif(ordDTO.getPrint()!=null){\n\t\t\t\t\t\t\tif(ordDTO.getPrint()){\n\t\t\t\t\t\t\t\t//userLogin=ordDTO.getUserLogin();\n\t\t\t\t\t\t\t\tif(ordDTO.getStatus()!=null && ordDTO.getStatus().equals(""open""))ordDTO.setStatus(""progress"");\n\t\t\t\t\t\t\t\tfor(OrdersRows row:ordDTO.getRowsList()){\n\t\t\t\t\t\t\t\t\tif(row.getStatus()!=null && row.getStatus().equals(""open""))row.setStatus(""progress"");\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t//break;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tfor(OrdersDTO orderDTO:listOrdersDTO){\n\t\t\t\t\t\tif(orderDTO.getPrint()!=null){\n\t\t\t\t\t\t\tif(orderDTO.getPrint()==true)orderService.makeOrderInProgress(orderDTO);\n\t\t\t\t\t\t}//end if\n\t\t\t\t\t}//end for\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t/*if(tansformAutoSignal!=null && tansformAutoSignal!=0L){\n\t\t\t\t\tsession.setAttribute(""listOrdersDTOAuto"",listOrdersDTO);\n\t\t\t\t}else if(tansformManSignal!=null && tansformManSignal!=0L){\n\t\t\t\t\tsession.setAttribute(""listOrdersDTOMan"",listOrdersDTO);\n\t\t\t\t}else if(tansformTreatSignal!=null && tansformTreatSignal!=0L){\n\t\t\t\t\tsession.setAttribute(""listOrdersDTOTreat"",listOrdersDTO);\n\t\t\t\t}else if(tansformReportSignal!=null && tansformReportSignal!=0L){\n\t\t\t\t\tsession.setAttribute(""listOrdersDTOReport"",listOrdersDTO);\n\t\t\t\t}else if(tansformInvoicedSignal!=null && tansformInvoicedSignal!=0L){\n\t\t\t\t\tsession.setAttribute(""listOrdersDTOInvoiced"",listOrdersDTO);\n\t\t\t\t}\n\t\t\t\t*/\n\t\t\t/*-------------------- Create a file PDF from orders list ---------------------\n\t\t\t\t\t  The system will create a pdf file with the client login name\n\t \t\t ------------------------------------------------------------------------------*/\n\t\t\t@SuppressWarnings(""rawtypes"")\n\t\t\tMap parameters = new HashMap();\n\t\t\tFile destFilePDF = new File(filePathData+""orders.pdf"");\n\t\t\tif(destFilePDF.exists())destFilePDF.delete();\n\t\t\tInputStream inputStream;\n\t\t\ttry {\n\t\t\t\tinputStream = JRLoader.getLocationInputStream(filePathData+""orders.jrxml"");\n\t\t\t\tJRBeanCollectionDataSource beanColDataSource = new JRBeanCollectionDataSource(list,false);\n\t\t\t\tJasperDesign jasperDesign = JRXmlLoader.load(inputStream);\n\t\t\t\tJasperReport jasperReport = JasperCompileManager.compileReport(jasperDesign);\n\t\t\t\t@SuppressWarnings(""unchecked"")\n\t\t\t\tJasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, parameters, beanColDataSource);\n\t\t\t\tJasperExportManager.exportReportToPdfFile(jasperPrint, filePathData+""orders.pdf"");\t\t\t\t\n\t\t\t} catch (JRException e) {\n\t\t\t\t// TODO Auto-generated catch block\n\t\t\t\te.printStackTrace();\n\t\t\t}    \n\t\t\tfileInputStream = new FileInputStream(new File( filePathData+""orders.pdf""));\n\t\t\t//fileName=""orders.pdf"";\n\t\t\tsession.setAttribute(""generatePDF"",1);\n\t\t\tsession.setAttribute(""invoicedOrdersRefresh"",1L);\n\t\t\treturn SUCCESS;\n\t\t}catch (Exception e) {\n\t\t\t// TODO: handle exception\n\t\t\te.printStackTrace();\n\t\t\treturn ERROR;\n\t\t}\n\n\t}\n\t\n\t\n}\n\n----------------------------------- SOURCE END -------------------------------------",1412288442787
error,log,,,"Problems occurred when invoking code from plug-in: ""org.eclipse.jdt.ui"".",1412288442788
error,log,,,"Error in JDT Core during reconcile",1412288442788
executed,command,org.eclipse.wst.server.ui,1.1.207.v20110119,"org.eclipse.wst.server.debug",1412288452008
activated,view,org.eclipse.ui.console,3.5.0.v20100526,"org.eclipse.ui.console.ConsoleView",1412288453533
activated,view,org.eclipse.wst.server.ui,1.1.207.v20110119,"org.eclipse.wst.server.ui.ServersView",1412288454249
activated,view,org.eclipse.ui.console,3.5.0.v20100526,"org.eclipse.ui.console.ConsoleView",1412288455592
deactivated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1412288462116
activated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1412288517486
activated,view,org.eclipse.wst.server.ui,1.1.207.v20110119,"org.eclipse.wst.server.ui.ServersView",1412288517486
opened,editor,org.eclipse.jdt.ui,3.6.2.r362_v20110203,"org.eclipse.jdt.ui.CompilationUnitEditor",1412288561185
activated,editor,org.eclipse.jdt.ui,3.6.2.r362_v20110203,"org.eclipse.jdt.ui.CompilationUnitEditor",1412288561216
deactivated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1412288590684
activated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1412288670515
activated,editor,org.eclipse.jdt.ui,3.6.2.r362_v20110203,"org.eclipse.jdt.ui.CompilationUnitEditor",1412288671575
activated,view,org.eclipse.debug.ui,3.6.3.v20101201_r362,"org.eclipse.debug.ui.DebugView",1412288676645
executed,command,org.eclipse.debug.ui,3.6.3.v20101201_r362,"org.eclipse.debug.ui.commands.StepOver",1412288676770
executed,command,org.eclipse.debug.ui,3.6.3.v20101201_r362,"org.eclipse.debug.ui.commands.StepOver",1412288677347
executed,command,org.eclipse.debug.ui,3.6.3.v20101201_r362,"org.eclipse.debug.ui.commands.StepOver",1412288677847
executed,command,org.eclipse.debug.ui,3.6.3.v20101201_r362,"org.eclipse.debug.ui.commands.StepOver",1412288678361
executed,command,org.eclipse.debug.ui,3.6.3.v20101201_r362,"org.eclipse.debug.ui.commands.StepOver",1412288678798
