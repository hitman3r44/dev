what,kind,bundleId,bundleVersion,description,time
deactivated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1392750717440
activated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1392750717611
error,log,,,"Exception occurred during problem detection:\n----------------------------------- SOURCE BEGIN -------------------------------------\n/**\n * \n */\npackage com.loyauty.web.struts.action.user;\n\n//import lombok.Getter;\nimport javax.servlet.http.HttpSession;\nimport lombok.Getter;\nimport lombok.Setter;\n\nimport com.loyauty.exception.InvalidUserException;\nimport com.loyauty.exception.ServiceException;\nimport com.loyauty.exception.ServiceLocatorException;\nimport com.loyauty.model.User;\nimport com.loyauty.service.core.dto.UserDTO;\nimport com.loyauty.service.core.dto.UserFileRecoveryDTO;\nimport com.loyauty.service.core.dto.UserSessionDTO;\nimport com.loyauty.service.core.dto.UsersPrivilegesDTO;\nimport com.loyauty.service.orders.OrdersService;\nimport com.loyauty.service.user.UserService;\nimport com.loyauty.service.usersprivileges.UsersPrivilegesService;\nimport com.loyauty.web.WebConstants;\nimport com.loyauty.web.struts.action.LoyautyAction;\n\nimport com.opensymphony.xwork2.validator.annotations.RequiredStringValidator;\nimport com.opensymphony.xwork2.validator.annotations.Validations;\nimport com.opensymphony.xwork2.validator.annotations.ValidatorType;\n\n/**\n * @author Arnaud\n * This class is in charge of logging a User\n */\n@Validations(requiredStrings = {\n\t\t\t\t\t@RequiredStringValidator(fieldName = ""username"", type = ValidatorType.FIELD, message = ""Username is required""),\n\t\t\t\t\t@RequiredStringValidator(fieldName = ""password"", type = ValidatorType.FIELD, message = ""Password is required"")\n\t\t  \t\t }\n)\n\npublic class Login extends LoyautyAction {\n\t\n\tprivate static final long serialVersionUID = 7640068153357889448L;\n\n\tprivate UserService userService;\n\tprivate OrdersService orderService;\n\tprivate UsersPrivilegesService usersPrivilegesService;\n\tprivate UserSessionDTO userSession;\n\t/*\n\t * Form field\n\t */\n\t@Getter @Setter\n\tprivate String username;\n\t@Getter @Setter\n\tprivate String password;\n\t@Getter @Setter\n\tprivate Long redirect=0L;\n\tprivate User userAdmin;\n\t//private UserDTO superAdmin;\n\tpublic Login() throws ServiceLocatorException {\n\t\tuserService = getServiceLocator().getUserService();\n\t\tusersPrivilegesService = getServiceLocator().getUserPrivilegesService();\n\t\torderService= getServiceLocator().getOrderService();\n\t}\t\n\t\n\t\n\t\n\t@Override\n\tpublic void validate() {\n\t\t// the authentication is done in a validate method cause if a error is raised from an execute method it won't be handle by Struts JSON validation. \n\t/*\ttry {\n\t\t\tlog.debug(""validate user"");\n\t\t\tuserSession = userService.adminAuthenticate(username, password);\n\t\t\tlog.debug(""user : "" + userSession.getLogin());\n\t\t\t\n\t\t} catch (InvalidUserException iue) {\n\t\t\taddActionError(""bad login / password. Try again."");\n\t\t} catch (ServiceException e) {\n\t\t\tlog.error(""an error occured while user authentification"",e);\n\t\t}*/\n\t}\n\t\n\t@Override\n\tpublic String execute() throws Exception {\n\t\t//boolean next = false;\n\t\t//log.debug(""logged in"");\n\t\tsuperAdmin=null;\n\t\tuserSession = userService.authenticateAdmin(username, password);\n\t\tHttpSession session = request.getSession(true);\n\t\tredirect=-1L;\n\t\tif (userSession != null) {\n\t\t\tredirect=1L;\n\t\t\tsession.setAttribute(WebConstants.USER, userSession);\n\t\t\tuserAdmin=userService.getUserByLogin(userSession.getLogin());\n\t\t\tsession.setAttribute(""userAdmin"", userAdmin);\n\t\t\t//recovery super Admin(type=1)\n\t\t\tsuperAdmin=userService.getSuperAdmin(username, password);\n\t\t\tsession.setAttribute(""superAdmin"", superAdmin);\n\t\t\t// the maximum time to timeout the session is 5 hours\n\t\t\tsession.setMaxInactiveInterval(5 * 60 * 60);\n\t\t\t// show login user in page Admin\n\t\t\tsession.setAttribute(""fullName"", userAdmin.getRealName());\n\t\t\t// show full name user in logoutPop.jsp\n\t\t\tsession.setAttribute(""login"", userAdmin.getLogin());\n\t\t\t// get action All\n\t\t\tUsersPrivilegesDTO userP=new UsersPrivilegesDTO();\n\t\t\tuserP.setActionCode(1L);\n\t\t\tuserP.setActive(true);\n\t\t\tuserP.setUserId(userSession.getId());\n\t\t\tUsersPrivilegesDTO userPrivileges=usersPrivilegesService.getPrivilegesByUser(userP);\n\t\t\tsession.setAttribute(""userPrivileges"", userPrivileges);\n\t\t\t//get UserPrivileges of shipped_To_Invoiced Action\n\t\t\tuserP.setActionCode(2L);\n\t\t\tuserP.setActive(true);\n\t\t\tuserP.setUserId(userSession.getId());\n\t\t\tUsersPrivilegesDTO  usersPrivShippedToInvoiced=usersPrivilegesService.getPrivilegesByUser(userP);\n\t\t\tsession.setAttribute(""usersPrivShippedToInvoiced"", usersPrivShippedToInvoiced);\n\t\t\t//get UserPrivileges of change_shipped_status Action\n\t\t\tuserP.setActionCode(3L);\n\t\t\tuserP.setActive(true);\n\t\t\tuserP.setUserId(userSession.getId());\n\t\t\tUsersPrivilegesDTO  usersPrivChangeShippedStatus=usersPrivilegesService.getPrivilegesByUser(userP);\n\t\t\tsession.setAttribute(""usersPrivChangeShippedStatus"", usersPrivChangeShippedStatus);\n\t\t}\n\t\tsession.setAttribute(""redirect"", redirect);\n\t    return ""none""; //getRedirectResult();//""none"";\n\t\t\n\t}\n\t\n}\n\n----------------------------------- SOURCE END -------------------------------------",1392750718423
error,log,,,"Problems occurred when invoking code from plug-in: ""org.eclipse.jdt.ui"".",1392750718423
error,log,,,"Error in JDT Core during reconcile",1392750718423
error,log,,,"Exception occurred during problem detection:\n----------------------------------- SOURCE BEGIN -------------------------------------\n/**\n * \n */\npackage com.loyauty.web.struts.action.user;\n\n\n\n//import lombok.Getter;\nimport lombok.Getter;\nimport lombok.Setter;\n\nimport com.loyauty.exception.InvalidUserException;\nimport com.loyauty.exception.ServiceException;\nimport com.loyauty.exception.ServiceLocatorException;\nimport com.loyauty.service.core.dto.UserSessionDTO;\nimport com.loyauty.service.user.UserService;\nimport com.loyauty.web.WebConstants;\nimport com.loyauty.web.struts.action.LoyautyAction;\n\nimport com.opensymphony.xwork2.validator.annotations.RequiredStringValidator;\nimport com.opensymphony.xwork2.validator.annotations.Validations;\nimport com.opensymphony.xwork2.validator.annotations.ValidatorType;\n\n/**\n * @author Arnaud\n * This class is in charge of logging a User\n */\n@Validations(requiredStrings = {\n\t\t\t\t\t@RequiredStringValidator(fieldName = ""username"", type = ValidatorType.FIELD, message = ""Username is required""),\n\t\t\t\t\t@RequiredStringValidator(fieldName = ""password"", type = ValidatorType.FIELD, message = ""Password is required"")\n\t\t  \t\t }\n)\n\npublic class Login extends LoyautyAction {\n\t\n\tprivate static final long serialVersionUID = 7640068153357889448L;\n\n\tprivate UserService userService;\n\tprivate UserSessionDTO userSession;\n\t/*\n\t * Form field\n\t */\n\t@Getter @Setter\n\tprivate String username;\n\t@Getter @Setter\n\tprivate String password;\n\t\n\tpublic Login() throws ServiceLocatorException {\n\t\tuserService = getServiceLocator().getUserService();\n\t}\t\n\t\n\t@Override\n\tpublic void validate() {\n\t\t// the authentication is done in a validate method cause if a error is raised from an execute method it won't be handle by Struts JSON validation. \n\t\ttry {\n\t\t\t\n\t\t\tlog.debug(""validate user"");\n\t\t\tuserSession = userService.adminAuthenticate(username, password);\n\t\t\tlog.debug(""user : "" + userSession.getLogin());\n\t\t\t\n\t\t} catch (InvalidUserException iue) {\n\t\t\taddActionError(""bad login / password. Try again."");\n\t\t} catch (ServiceException e) {\n\t\t\tlog.error(""an error occured while user authentification"",e);\n\t\t}\n\t}\n\t\n\t@Override\n\tpublic String execute() throws Exception {\n\t\tboolean next = false;\n\t\t//put the user information in session\n\t\tlog.debug(""dans login"");\n\t\t\n\t\tif (userSession != null) {\n\t\t\trequest.getSession().setAttribute(WebConstants.USER, userSession);\n\t\t\t// the maximum time to timeout the session is 5 hours\n\t\t\trequest.getSession().setMaxInactiveInterval(5 * 60 * 60);\n\t\t}\n\n\t\t\n\t\treturn getSuccessResult();\n\t\t\n\t}\n\t\n}\n\n----------------------------------- SOURCE END -------------------------------------",1392750718423
error,log,,,"Problems occurred when invoking code from plug-in: ""org.eclipse.jdt.ui"".",1392750718423
error,log,,,"Error in JDT Core during reconcile",1392750718423
error,log,,,"Exception occurred during problem detection:\n----------------------------------- SOURCE BEGIN -------------------------------------\npackage com.loyauty.web.struts.action;\n\nimport javax.servlet.http.HttpServletRequest;\n\nimport lombok.AccessLevel;\nimport lombok.Getter;\nimport lombok.Setter;\n\nimport org.apache.log4j.Logger;\nimport org.apache.struts2.ServletActionContext;\nimport org.apache.struts2.interceptor.ServletRequestAware;\n\nimport com.loyauty.service.ServiceLocator;\nimport com.loyauty.service.core.dto.UserFileRecoveryDTO;\nimport com.loyauty.web.MessageKeyConstants;\nimport com.loyauty.web.util.LocaleUtils;\nimport com.opensymphony.xwork2.ActionSupport;\nimport com.opensymphony.xwork2.Preparable;\n\n/**\n * This is the basic Loyalty action where common properties and methods should go.\n *  \n * @author Muthanna\n *\n */\n\npublic class LoyautyAction extends ActionSupport implements ServletRequestAware, Preparable {\n\n\tprivate static final String NAMESPACES_SEPARATOR = ""/"";\n\n\tprotected Logger log = Logger.getLogger(this.getClass());\n\t\n\tprotected HttpServletRequest request;\t\n\t@Getter\t@Setter\n\tprotected UserFileRecoveryDTO ufrDTO;\n\t@Getter\t@Setter\n\tprivate boolean ajax = false;\n\t@Getter\t@Setter\n\tprivate String currentLanguage;\n\t@Getter\t@Setter\n\tprivate String pageTitleKey;\n\t@Getter\t@Setter\n\tprivate String pageKeywordsKey;\n\t@Getter\t@Setter\n\tprivate String pageDescriptionKey;\n\t\n\t@Getter(AccessLevel.PROTECTED)\n\t@Setter(AccessLevel.PRIVATE)\n\tprivate ServiceLocator serviceLocator;\n\t\n\tpublic LoyautyAction() {\n\t\tsetServiceLocator(ServiceLocator.getInstance());\n\t}\n\t\n\t@Override\n\tpublic void prepare() throws Exception {\n\t\t/*\n\t\t * filling of message keys header information\n\t\t */\n\t\tString headerKey = null;\n\t\tString namesSpace = ServletActionContext.getActionMapping().getNamespace();\n\t\tString actionName = ServletActionContext.getActionMapping().getName();\n\t\tif (namesSpace != null && !namesSpace.equals(NAMESPACES_SEPARATOR)) {\n\t\t\theaderKey = namesSpace.replace(NAMESPACES_SEPARATOR, ""."");\n\t\t}\n\t\tif (actionName != null) {\n\t\t\theaderKey = (headerKey!=null?headerKey+""."":""."") + actionName;\n\t\t}\n\t\t\n\t\t\n\t\tsetPageTitleKey(MessageKeyConstants.PAGE_HEADER_TITLE_KEY+headerKey);\n\t\tsetPageKeywordsKey(MessageKeyConstants.PAGE_HEADER_KEYWORDS_KEY+headerKey);\n\t\tsetPageDescriptionKey(MessageKeyConstants.PAGE_HEADER_DESCRIPTION_KEY+headerKey);\n\t\tcurrentLanguage = LocaleUtils.getSessionLanguage(request);\n\t\t\n\t\t\n\t}\n\t\n\t/**\n\t * Use this method when if an Action can be use in a Ajax way.\n\t * If the action succeed, it chooses to return ""success"" in the classic way and ""none"" in a Ajax way.\n\t * method do the choice with an ""ajax=true"" parameter in the request \n\t * @return ""success"" in the classic way and ""none"" in a Ajax way.\n\t */\n\tpublic String getSuccessResult() {\n\t\tif (ajax) {\n\t\t\treturn NONE;\n\t\t} else {\n\t\t\treturn SUCCESS;\n\t\t}\n\t}\n\t\n\t/**\n\t * Use this method when if an Action can be use in a Ajax way.\n\t * If the action failed, it chooses to return ""input"" in the classic way and ""none"" in a Ajax way.\n\t * method do the choice with an ""ajax=true"" parameter in the request \n\t * @return ""success"" in the classic way and ""none"" in a Ajax way.\n\t */\n\tpublic String getInputResult() {\n\t\tif (ajax) {\n\t\t\treturn NONE;\n\t\t} else {\n\t\t\treturn INPUT;\n\t\t}\n\t}\n\t\n\t\n\tpublic String getRedirectResult() {\n\t\tif (ajax) {\n\t\t\treturn NONE;\n\t\t} else {\n\t\t\treturn ""next"";\n\t\t}\n\t}\n\t\n\t@Override\n\tpublic void setServletRequest(HttpServletRequest request) {\n\t\tthis.request = request;\n\t}\n}\n\n----------------------------------- SOURCE END -------------------------------------",1392750718625
error,log,,,"Problems occurred when invoking code from plug-in: ""org.eclipse.jdt.ui"".",1392750718625
error,log,,,"Error in JDT Core during reconcile",1392750718625
error,log,,,"Exception occurred during problem detection:\n----------------------------------- SOURCE BEGIN -------------------------------------\n/**\n * \n */\npackage com.loyauty.web.struts.action.user;\n\n//import lombok.Getter;\nimport javax.servlet.http.HttpSession;\nimport lombok.Getter;\nimport lombok.Setter;\n\nimport com.loyauty.exception.InvalidUserException;\nimport com.loyauty.exception.ServiceException;\nimport com.loyauty.exception.ServiceLocatorException;\nimport com.loyauty.model.User;\nimport com.loyauty.service.core.dto.UserDTO;\nimport com.loyauty.service.core.dto.UserFileRecoveryDTO;\nimport com.loyauty.service.core.dto.UserSessionDTO;\nimport com.loyauty.service.core.dto.UsersPrivilegesDTO;\nimport com.loyauty.service.orders.OrdersService;\nimport com.loyauty.service.user.UserService;\nimport com.loyauty.service.usersprivileges.UsersPrivilegesService;\nimport com.loyauty.web.WebConstants;\nimport com.loyauty.web.struts.action.LoyautyAction;\n\nimport com.opensymphony.xwork2.validator.annotations.RequiredStringValidator;\nimport com.opensymphony.xwork2.validator.annotations.Validations;\nimport com.opensymphony.xwork2.validator.annotations.ValidatorType;\n\n/**\n * @author Arnaud\n * This class is in charge of logging a User\n */\n@Validations(requiredStrings = {\n\t\t\t\t\t@RequiredStringValidator(fieldName = ""username"", type = ValidatorType.FIELD, message = ""Username is required""),\n\t\t\t\t\t@RequiredStringValidator(fieldName = ""password"", type = ValidatorType.FIELD, message = ""Password is required"")\n\t\t  \t\t }\n)\n\npublic class Login extends LoyautyAction {\n\t\n\tprivate static final long serialVersionUID = 7640068153357889448L;\n\n\tprivate UserService userService;\n\tprivate OrdersService orderService;\n\tprivate UsersPrivilegesService usersPrivilegesService;\n\tprivate UserSessionDTO userSession;\n\t/*\n\t * Form field\n\t */\n\t@Getter @Setter\n\tprivate String username;\n\t@Getter @Setter\n\tprivate String password;\n\t@Getter @Setter\n\tprivate Long redirect=0L;\n\tprivate User userAdmin;\n\t//private UserDTO superAdmin;\n\tpublic Login() throws ServiceLocatorException {\n\t\tuserService = getServiceLocator().getUserService();\n\t\tusersPrivilegesService = getServiceLocator().getUserPrivilegesService();\n\t\torderService= getServiceLocator().getOrderService();\n\t}\t\n\t\n\t\n\t\n\t@Override\n\tpublic void validate() {\n\t\t// the authentication is done in a validate method cause if a error is raised from an execute method it won't be handle by Struts JSON validation. \n\t/*\ttry {\n\t\t\tlog.debug(""validate user"");\n\t\t\tuserSession = userService.adminAuthenticate(username, password);\n\t\t\tlog.debug(""user : "" + userSession.getLogin());\n\t\t\t\n\t\t} catch (InvalidUserException iue) {\n\t\t\taddActionError(""bad login / password. Try again."");\n\t\t} catch (ServiceException e) {\n\t\t\tlog.error(""an error occured while user authentification"",e);\n\t\t}*/\n\t}\n\t\n\t@Override\n\tpublic String execute() throws Exception {\n\t\t//boolean next = false;\n\t\t//log.debug(""logged in"");\n\t\tsuperAdmin=null;\n\t\tuserSession = userService.authenticateAdmin(username, password);\n\t\tHttpSession session = request.getSession(true);\n\t\tredirect=-1L;\n\t\tif (userSession != null) {\n\t\t\tredirect=1L;\n\t\t\tsession.setAttribute(WebConstants.USER, userSession);\n\t\t\tuserAdmin=userService.getUserByLogin(userSession.getLogin());\n\t\t\tsession.setAttribute(""userAdmin"", userAdmin);\n\t\t\t//recovery super Admin(type=1)\n\t\t\tsuperAdmin=userService.getSuperAdmin(username, password);\n\t\t\tsession.setAttribute(""superAdmin"", superAdmin);\n\t\t\t// the maximum time to timeout the session is 5 hours\n\t\t\tsession.setMaxInactiveInterval(5 * 60 * 60);\n\t\t\t// show login user in page Admin\n\t\t\tsession.setAttribute(""fullName"", userAdmin.getRealName());\n\t\t\t// show full name user in logoutPop.jsp\n\t\t\tsession.setAttribute(""login"", userAdmin.getLogin());\n\t\t\t// get action All\n\t\t\tUsersPrivilegesDTO userP=new UsersPrivilegesDTO();\n\t\t\tuserP.setActionCode(1L);\n\t\t\tuserP.setActive(true);\n\t\t\tuserP.setUserId(userSession.getId());\n\t\t\tUsersPrivilegesDTO userPrivileges=usersPrivilegesService.getPrivilegesByUser(userP);\n\t\t\tsession.setAttribute(""userPrivileges"", userPrivileges);\n\t\t\t//get UserPrivileges of shipped_To_Invoiced Action\n\t\t\tuserP.setActionCode(2L);\n\t\t\tuserP.setActive(true);\n\t\t\tuserP.setUserId(userSession.getId());\n\t\t\tUsersPrivilegesDTO  usersPrivShippedToInvoiced=usersPrivilegesService.getPrivilegesByUser(userP);\n\t\t\tsession.setAttribute(""usersPrivShippedToInvoiced"", usersPrivShippedToInvoiced);\n\t\t\t//get UserPrivileges of change_shipped_status Action\n\t\t\tuserP.setActionCode(3L);\n\t\t\tuserP.setActive(true);\n\t\t\tuserP.setUserId(userSession.getId());\n\t\t\tUsersPrivilegesDTO  usersPrivChangeShippedStatus=usersPrivilegesService.getPrivilegesByUser(userP);\n\t\t\tsession.setAttribute(""usersPrivChangeShippedStatus"", usersPrivChangeShippedStatus);\n\t\t}\n\t\tsession.setAttribute(""redirect"", redirect);\n\t    return ""none""; //getRedirectResult();//""none"";\n\t\t\n\t}\n\t\n}\n\n----------------------------------- SOURCE END -------------------------------------",1392750721511
error,log,,,"Problems occurred when invoking code from plug-in: ""org.eclipse.jdt.ui"".",1392750721511
error,log,,,"Error in JDT Core during reconcile",1392750721511
activated,editor,org.eclipse.jdt.ui,3.6.2.r362_v20110203,"org.eclipse.jdt.ui.CompilationUnitEditor",1392750727705
activated,view,org.eclipse.ui.console,3.5.0.v20100526,"org.eclipse.ui.console.ConsoleView",1392750749061
activated,view,org.eclipse.wst.server.ui,1.1.207.v20110119,"org.eclipse.wst.server.ui.ServersView",1392750750715
executed,command,org.eclipse.wst.server.ui,1.1.207.v20110119,"org.eclipse.wst.server.run",1392750753398
activated,view,org.eclipse.ui.console,3.5.0.v20100526,"org.eclipse.ui.console.ConsoleView",1392750764647
deactivated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1392750789050
activated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1392750793789
activated,view,org.eclipse.wst.server.ui,1.1.207.v20110119,"org.eclipse.wst.server.ui.ServersView",1392750793793
activated,view,org.eclipse.ui.console,3.5.0.v20100526,"org.eclipse.ui.console.ConsoleView",1392750797403
deactivated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1392750803730
activated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1392750810722
activated,editor,org.eclipse.jdt.ui,3.6.2.r362_v20110203,"org.eclipse.jdt.ui.CompilationUnitEditor",1392750810747
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.cut",1392750813651
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.paste",1392750824513
activated,view,org.eclipse.ui.console,3.5.0.v20100526,"org.eclipse.ui.console.ConsoleView",1392750826606
activated,view,org.eclipse.wst.server.ui,1.1.207.v20110119,"org.eclipse.wst.server.ui.ServersView",1392750826936
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.file.saveAll",1392750833678
activated,view,org.eclipse.ui.console,3.5.0.v20100526,"org.eclipse.ui.console.ConsoleView",1392750838836
activated,view,org.eclipse.wst.server.ui,1.1.207.v20110119,"org.eclipse.wst.server.ui.ServersView",1392750842631
executed,command,org.eclipse.wst.server.ui,1.1.207.v20110119,"org.eclipse.wst.server.run",1392750846833
activated,editor,org.eclipse.jdt.ui,3.6.2.r362_v20110203,"org.eclipse.jdt.ui.CompilationUnitEditor",1392750854722
activated,editor,org.eclipse.jdt.ui,3.6.2.r362_v20110203,"org.eclipse.jdt.ui.CompilationUnitEditor",1392750867687
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.delete",1392750885203
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.delete",1392750885453
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.delete",1392750889275
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.delete",1392750889478
activated,view,org.eclipse.ui.console,3.5.0.v20100526,"org.eclipse.ui.console.ConsoleView",1392750892426
deactivated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1392750896264
activated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1392750907685
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.file.save",1392750907903
activated,editor,org.eclipse.jdt.ui,3.6.2.r362_v20110203,"org.eclipse.jdt.ui.CompilationUnitEditor",1392750911507
activated,view,org.eclipse.ui.console,3.5.0.v20100526,"org.eclipse.ui.console.ConsoleView",1392750928388
activated,view,org.eclipse.wst.server.ui,1.1.207.v20110119,"org.eclipse.wst.server.ui.ServersView",1392750928701
activated,editor,org.eclipse.jdt.ui,3.6.2.r362_v20110203,"org.eclipse.jdt.ui.CompilationUnitEditor",1392750931400
activated,editor,org.eclipse.jdt.ui,3.6.2.r362_v20110203,"org.eclipse.jdt.ui.CompilationUnitEditor",1392750938482
activated,editor,org.eclipse.jdt.ui,3.6.2.r362_v20110203,"org.eclipse.jdt.ui.CompilationUnitEditor",1392750953240
activated,view,org.eclipse.ui.ide,3.6.2.M20101201-0800,"org.eclipse.ui.views.ResourceNavigator",1392750957920
opened,editor,org.eclipse.jdt.ui,3.6.2.r362_v20110203,"org.eclipse.jdt.ui.CompilationUnitEditor",1392750965377
activated,editor,org.eclipse.jdt.ui,3.6.2.r362_v20110203,"org.eclipse.jdt.ui.CompilationUnitEditor",1392750965408
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.copy",1392750978855
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.copy",1392750979074
activated,editor,org.eclipse.jdt.ui,3.6.2.r362_v20110203,"org.eclipse.jdt.ui.CompilationUnitEditor",1392750981445
activated,editor,org.eclipse.jdt.ui,3.6.2.r362_v20110203,"org.eclipse.jdt.ui.CompilationUnitEditor",1392750986874
closed,editor,org.eclipse.jdt.ui,3.6.2.r362_v20110203,"org.eclipse.jdt.ui.CompilationUnitEditor",1392750986874
activated,editor,org.eclipse.jdt.ui,3.6.2.r362_v20110203,"org.eclipse.jdt.ui.CompilationUnitEditor",1392750988278
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.paste",1392750995095
activated,view,org.eclipse.ui.console,3.5.0.v20100526,"org.eclipse.ui.console.ConsoleView",1392750997996
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.file.save",1392751002895
activated,view,org.eclipse.wst.server.ui,1.1.207.v20110119,"org.eclipse.wst.server.ui.ServersView",1392751004923
deactivated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1392751007528
activated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1392751008448
deactivated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1392751011693
activated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1392751012754
deactivated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1392751013082
activated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1392751019072
deactivated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1392751023424
activated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1392751024844
executed,command,org.eclipse.ui.ide,3.6.2.M20101201-0800,"org.eclipse.ui.project.cleanAction",1392751024844
deactivated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1392751025125
activated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1392751025328
error,log,,,"Exception occurred during problem detection:\n----------------------------------- SOURCE BEGIN -------------------------------------\n/**\n * \n */\npackage com.loyauty.web.struts.action.user;\n\n\n\n//import lombok.Getter;\nimport lombok.Getter;\nimport lombok.Setter;\n\nimport com.loyauty.exception.InvalidUserException;\nimport com.loyauty.exception.ServiceException;\nimport com.loyauty.exception.ServiceLocatorException;\nimport com.loyauty.service.core.dto.UserSessionDTO;\nimport com.loyauty.service.user.UserService;\nimport com.loyauty.web.WebConstants;\nimport com.loyauty.web.struts.action.LoyautyAction;\n\nimport com.opensymphony.xwork2.validator.annotations.RequiredStringValidator;\nimport com.opensymphony.xwork2.validator.annotations.Validations;\nimport com.opensymphony.xwork2.validator.annotations.ValidatorType;\n\n/**\n * @author Arnaud\n * This class is in charge of logging a User\n */\n@Validations(requiredStrings = {\n\t\t\t\t\t@RequiredStringValidator(fieldName = ""username"", type = ValidatorType.FIELD, message = ""Username is required""),\n\t\t\t\t\t@RequiredStringValidator(fieldName = ""password"", type = ValidatorType.FIELD, message = ""Password is required"")\n\t\t  \t\t }\n)\n\npublic class Login extends LoyautyAction {\n\t\n\tprivate static final long serialVersionUID = 7640068153357889448L;\n\n\tprivate UserService userService;\n\tprivate UserSessionDTO userSession;\n\t/*\n\t * Form field\n\t */\n\t@Getter @Setter\n\tprivate String username;\n\t@Getter @Setter\n\tprivate String password;\n\t\n\tpublic Login() throws ServiceLocatorException {\n\t\tuserService = getServiceLocator().getUserService();\n\t}\t\n\t\n\t@Override\n\tpublic void validate() {\n\t\t// the authentication is done in a validate method cause if a error is raised from an execute method it won't be handle by Struts JSON validation. \n\t\ttry {\n\t\t\t\n\t\t\tlog.debug(""validate user"");\n\t\t\tuserSession = userService.adminAuthenticate(username, password);\n\t\t\tlog.debug(""user : "" + userSession.getLogin());\n\t\t\t\n\t\t} catch (InvalidUserException iue) {\n\t\t\taddActionError(""bad login / password. Try again."");\n\t\t} catch (ServiceException e) {\n\t\t\tlog.error(""an error occured while user authentification"",e);\n\t\t}\n\t}\n\t\n\t@Override\n\tpublic String execute() throws Exception {\n\t\tboolean next = false;\n\t\t//put the user information in session\n\t\tlog.debug(""dans login"");\n\t\t\n\t\tif (userSession != null) {\n\t\t\trequest.getSession().setAttribute(WebConstants.USER, userSession);\n\t\t\t// the maximum time to timeout the session is 5 hours\n\t\t\trequest.getSession().setMaxInactiveInterval(5 * 60 * 60);\n\t\t}\n\n\t\t\n\t\treturn getSuccessResult();\n\t\t\n\t}\n\t\n}\n\n----------------------------------- SOURCE END -------------------------------------",1392751026061
