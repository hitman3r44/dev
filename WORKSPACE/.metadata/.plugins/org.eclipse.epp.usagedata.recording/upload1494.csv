what,kind,bundleId,bundleVersion,description,time
error,log,,,"Error in JDT Core during reconcile",1420673690098
error,log,,,"Problems occurred when invoking code from plug-in: ""org.eclipse.core.resources"".",1420673690134
error,log,,,"Errors occurred during the build.",1420673690237
deactivated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1420673690247
activated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1420673693888
activated,view,org.eclipse.ui.console,3.5.0.v20100526,"org.eclipse.ui.console.ConsoleView",1420673697905
activated,view,org.eclipse.wst.server.ui,1.1.207.v20110119,"org.eclipse.wst.server.ui.ServersView",1420673700003
deactivated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1420673704479
activated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1420673705774
deactivated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1420673706107
activated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1420673710714
deactivated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1420673717043
activated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1420673718731
executed,command,org.eclipse.ui.ide,3.6.2.M20101201-0800,"org.eclipse.ui.project.cleanAction",1420673718735
error,log,,,"Exception occurred during problem detection:\n----------------------------------- SOURCE BEGIN -------------------------------------\npackage com.loyauty.web.struts.action.product;\n\nimport java.io.File;\nimport java.util.ArrayList;\nimport java.util.Calendar;\nimport java.util.HashSet;\nimport java.util.Iterator;\nimport java.util.List;\nimport java.util.Set;\nimport lombok.Getter;\nimport lombok.Setter;\n\nimport com.loyauty.enums.Language;\nimport com.loyauty.enums.PriceType;\nimport com.loyauty.enums.ProductStatus;\nimport com.loyauty.enums.UserProductStatus;\nimport com.loyauty.enums.UserType;\nimport com.loyauty.exception.ServiceException;\nimport com.loyauty.exception.ServiceLocatorException;\n//import com.loyauty.model.Operations;\nimport com.loyauty.model.User;\nimport com.loyauty.service.brand.BrandService;\nimport com.loyauty.service.common.CommonService;\nimport com.loyauty.service.core.dto.AlterProductXMLDTO;\nimport com.loyauty.service.core.dto.AlterUserProductXMLDTO;\nimport com.loyauty.service.core.dto.BasicUserDTO;\nimport com.loyauty.service.core.dto.BoxDTO;\nimport com.loyauty.service.core.dto.CategoryDTO;\nimport com.loyauty.service.core.dto.ClientCategoryDTO;\nimport com.loyauty.service.core.dto.CommonDTO;\nimport com.loyauty.service.core.dto.ImageDTO;\nimport com.loyauty.service.core.dto.OperationsDTO;\nimport com.loyauty.service.core.dto.ProductDTO;\nimport com.loyauty.service.core.dto.ProductLinkDTO;\nimport com.loyauty.service.core.dto.ProductModelDTO;\nimport com.loyauty.service.core.dto.SpecificationDTO;\nimport com.loyauty.service.core.dto.UserDTO;\nimport com.loyauty.service.core.dto.UserProductPriceDTO;\nimport com.loyauty.service.core.dto.UserSessionDTO;\n//import com.loyauty.service.core.dto.UsersPrivilegesDTO;\nimport com.loyauty.service.image.ImageService;\nimport com.loyauty.service.operations.OperationsService;\nimport com.loyauty.service.product.ProductService;\nimport com.loyauty.service.user.UserService;\nimport com.loyauty.util.CommonUtils;\nimport com.loyauty.web.WebConstants;\nimport com.loyauty.web.struts.action.LoyautyAction;\nimport org.jsoup.Jsoup;\n\npublic class EditProduct extends LoyautyAction {\n\t\n\tprivate static final long serialVersionUID = 4688139859406086753L;\n\t\n\tprivate ProductService productService;\n\tprivate ImageService imageService;\n\tprivate CommonService commonService;\n\tprivate BrandService brandService;\n\tprivate UserService userService;\n\tprivate OperationsService operationsService;\n\t\n\tprivate UserSessionDTO userSession;\n\t@Getter @Setter\n\tprivate long productId;\n\t@Getter @Setter\n\tprivate long imageId;\n\t@Getter @Setter\n\tprivate long brand;\n\t@Getter @Setter\n\tprivate String brandName;\n\t@Getter @Setter\n\tprivate long category;\n\t@Getter @Setter\n\tprivate String categoryName;\n\t@Getter @Setter\n\tprivate long mainSpecification; \n\t@Getter @Setter\n\tprivate String mainSpecificationName;\n\t@Getter @Setter\n\tprivate String manufProductID;\n\t@Getter @Setter\n\tprivate String manufProductID1;\n\t@Getter @Setter\n\tprivate String manufProductID2;\n\t@Getter @Setter\n\tprivate String manufProductID3;\n\t@Getter @Setter\n\tprivate String manufProductID4;\n\t\n\t@Getter @Setter\n\tprivate Integer manufProductQuantity = 0;\n\t@Getter @Setter\n\tprivate Integer manufProductQuantity1 = 0;\n\t@Getter @Setter\n\tprivate Integer manufProductQuantity2 = 0;\n\t@Getter @Setter\n\tprivate Integer manufProductQuantity3 = 0;\n\t@Getter @Setter\n\tprivate Integer manufProductQuantity4 = 0;\n\t\n\t@Getter @Setter\n\tprivate String supplier;\n\t@Getter @Setter\n\tprivate String supplier1;\n\t@Getter @Setter\n\tprivate String supplier2;\n\t@Getter @Setter\n\tprivate String supplier3;\n\t@Getter @Setter\n\tprivate String supplier4;\n\t\n\t@Getter @Setter\n\tprivate String price;\n\t@Getter @Setter\n\tprivate String price1;\n\t@Getter @Setter\n\tprivate String price2;\n\t@Getter @Setter\n\tprivate String price3;\n\t@Getter @Setter\n\tprivate String price4;\t\n\n\t@Getter @Setter\n\tprivate String msrp0;\n\t@Getter @Setter\n\tprivate String msrp1;\n\t@Getter @Setter\n\tprivate String msrp2;\n\t@Getter @Setter\n\tprivate String msrp3;\n\t@Getter @Setter\n\tprivate String msrp4;\n\t\n\t@Getter @Setter\n\tprivate String upc;\n\t@Getter @Setter\n\tprivate String loyaltyProductId;\n\t@Getter @Setter\n\tprivate String nameEn;\n\t@Getter @Setter\n\tprivate String nameFr;\n\t@Getter @Setter\n\tprivate String msrp;\n\t@Getter @Setter\n\tprivate String cost;\n\t@Getter @Setter\n\tprivate String large;\n\t@Getter @Setter\n\tprivate String width;\n\t@Getter @Setter\n\tprivate String high;\n\t@Getter @Setter\n\tprivate String weight;\n\t@Getter @Setter\n\tprivate Double boxLength;\n\t@Getter @Setter\n\tprivate Double boxWidth;\n\t@Getter @Setter\n\tprivate Double boxHeight;\n\t/*\n\t@Getter @Setter\n\tprivate Double boxWeight;\n\t*/\n\t@Getter @Setter\n\tprivate Double boxTotalWeight;\n\t@Getter @Setter\n\tprivate String largeCm;\n\t@Getter @Setter\n\tprivate String widthCm;\n\t@Getter @Setter\n\tprivate String highCm;\n\t@Getter @Setter\n\tprivate String weightKg;\n\t@Getter @Setter\n\tprivate String boxLengthCm;\n\t@Getter @Setter\n\tprivate String boxWidthCm;\n\t@Getter @Setter\n\tprivate String boxHeightCm;\n\t@Getter @Setter\n\tprivate String boxWeightKg;\n\t@Getter @Setter\n\tprivate Integer statusProductBox;\n\t@Getter @Setter\n\tprivate Boolean canadaPostSizesVerified;\n\t@Getter @Setter\n\tprivate BoxDTO boxDTO;\n\t\n\t@Getter @Setter\n\tprivate String descriptionEn;\n\t@Getter @Setter\n\tprivate String descriptionFr;\n\t@Getter @Setter\n\tprivate String specificationEn;\n\t@Getter @Setter\n\tprivate String specificationFr;\n\t@Getter @Setter\n\tprivate String otherEng;\n\t@Getter @Setter\n\tprivate String otherFr;\n\t\n\t//uploading files\n\t@Getter @Setter\t\n\tprivate File productImage; \n\t@Getter @Setter\n\tprivate String productImageContentType;\n\t@Getter @Setter\n\tprivate String productImageFileName;\n\t@Getter @Setter\n\tprivate ImageDTO imgDTO;\n\t@Getter @Setter\n\tprivate List<CommonDTO> categoryList;\n\t@Getter @Setter\n\tprivate List<SpecificationDTO> mainSpecificationList;\n\t@Getter @Setter\n\tprivate boolean update = false;\n\t@Getter @Setter\n\tprivate ProductDTO productDTO;\n\t@Getter @Setter\n\tprivate UserProductPriceDTO userProductPriceDTO;\t\n\t\n\t@Getter @Setter\n\tprivate List<CommonDTO> brandList;\n\t@Getter @Setter\n\tprivate List<CommonDTO> statusList;\n\n\t@Getter @Setter\n\tprivate String linkUrl;\n\t@Getter @Setter\n\tprivate String note;\n\t@Getter @Setter\n\tprivate String statusName;\t\n\t@Getter @Setter\n\tprivate Integer statusId;\n\t@Getter @Setter\n\tprivate List<UserDTO> activeClientsList;\n\t@Getter @Setter\n\tprivate int activeClientsSize;\n\t@Getter @Setter\n\tprivate int activeClientsTFSize;\t\n\t@Getter @Setter\n\tprivate String loyaltyProductIdSub;\n\t\n\t@Getter @Setter\n\tprivate String periodTime;\n\t@Getter @Setter\n\tprivate String warrantyQuantity;\n\t@Getter @Setter\n\tprivate Boolean defectFree;\n\t\n\t@Getter @Setter\n\tprivate List<UserSessionDTO> userNameList;\n\t@Getter @Setter\n\tprivate String[] userPrice;\n\t@Getter @Setter\n\tprivate String[] percentageProfit;\n\t@Getter @Setter\n\tprivate String[] percentageDiscount;\n\t@Getter @Setter\n\tprivate String[] isExcluded;\n\t@Getter @Setter\n\tprivate String[] excluded;\n\t\n\t@Getter @Setter\n\tprivate Double[] currencyRate;\n\t@Getter @Setter\n\tprivate String[] currencySymbol;\n\t@Getter @Setter\n\tprivate String[] currencyPrice;\t//CURRENCY_LS_PRICE\n\t\n\t@Getter @Setter\n\tprivate List<ClientCategoryDTO> listClientCategory;\n\t\n\t@Getter @Setter\n\tprivate OperationsDTO operationDTO;\n\t\n\tpublic EditProduct () throws ServiceLocatorException {\n\t\tsuper();\t\n\t\tproductService = getServiceLocator().getProductService();\n\t\tcommonService = getServiceLocator().getCommonService();\n\t\timageService = getServiceLocator().getImageService();\n\t\tbrandService = getServiceLocator().getBrandService();\n\t\tuserService = getServiceLocator().getUserService();\n\t\toperationsService = getServiceLocator().getOperationsService();\n\t}\n\t\n\t@Override\n\tpublic void prepare() {\n\t\ttry {\n\t\t\tbrandList = commonService.getBrands();\n\t\t\tstatusList = commonService.getAllProductStatuses();\n\t\t\tcategoryList  = internationalizeName(commonService.getCategoriesByBrand(brand));\n\t\t\tmainSpecificationList = productService.getMainSpecificationByCategory(category);\t\t\t\n\t\t\tproductId = (Long) request.getSession(true).getAttribute(""productId"");\n\t\t\tproductDTO = productService.getProductInformation(productId, null);\n\t\t\tboxDTO = productService.getBoxByProductId(productId);\n\t\t\tif(boxDTO==null)boxDTO=new BoxDTO();\n\t\t\timgDTO = productDTO.getImage();\n\t\t\tactiveClientsList = productService.getAllActiveClients(productId);\n\t\t\tactiveClientsTFSize = activeClientsSize = activeClientsList.size();\n\t\t\tactiveClientsTFSize = activeClientsList.isEmpty() ? 1 : activeClientsTFSize;\n\t\t\tBasicUserDTO basicUserDTO = new BasicUserDTO();\n\t\t\tbasicUserDTO.setTypeId(UserType.USER.getValue());\n\t\t\tbasicUserDTO.setActive(true);\n\t\t\tuserNameList = userService.getAllUserAccounts(basicUserDTO);\n\t\t\tlistClientCategory = userService.getAllClientCategory();\n\t\t\tfor (ClientCategoryDTO ccDTO : listClientCategory) {\n\t\t\t\tuserNameList.add(getUserSessionDTO(ccDTO));\n\t\t\t}\t\t\t\n\t\t} catch(Exception e) {\n\t\t\te.printStackTrace();\n\t\t\tlog.debug(""Error when getting product in method prepare()"");\n\t\t}\n\t}\n\t\n\t@Override\n\tpublic void validate() {\n\t\t\t\n\t\t\tif(brand < 0)\n\t\t\t\taddActionError(getText(""loyauty.error.common.brand_required""));\n\t\t\tif(category < 0)\n\t\t\t\taddActionError(getText(""loyauty.error.common.category_required""));\n/*\t\t\tif(mainSpecification < 0)\n\t\t\t\taddActionError(getText(""loyauty.error.common.type_spec_required""));*/\n\t\t\tif(manufProductID.trim().length() == 0)\n\t\t\t\taddActionError(getText(""loyauty.error.common.manufacture_required""));\n\t\t\t\n\t\t\tif(loyaltyProductId.trim().length() == 0) {\n\t\t\t\taddActionError(getText(""loyauty.error.common.productId_required""));\n\t\t\t} else {\t\n\t\t\t\ttry {\n\t\t\t\t\tProductDTO aProductDTO = productService.getProductIdFromLSProductId(loyaltyProductId);\n\t\t\t\t\tif (aProductDTO != null) {\n\t\t\t\t\t\tif (productId != aProductDTO.getId() && !productDTO.getLoyaltyProductId().matches(""^\\\\s*$"")) {\n\t\t\t\t\t\t\taddActionError(getText(""loyauty.error.common.productId_alreadyExists""));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(!loyaltyProductId.trim().startsWith(brandService.getBrand(brand).getCode()))\n\t\t\t\t\t{\n\t\t\t\t\t\taddActionError(getText(""loyauty.error.common.productId_code""));\n\t\t\t\t\t}\n\t\t\t\t} catch (ServiceException sx) {\n\t\t\t\t\taddActionError(getText(""loyauty.error.common.service""));\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif(nameEn.trim().length() == 0)\n\t\t\t\taddActionError(getText(""loyauty.error.common.name_en_required""));\n\t\t\tif(nameFr.trim().length() == 0)\n\t\t\t\taddActionError(getText(""loyauty.error.common.name_fr_required""));\n\t\t\t\n\t\t\tif(msrp.trim().length() == 0 || msrp.equals(""NaN""))\n\t\t\t\taddActionError(getText(""loyauty.error.common.msrp_required""));\n\t\t\tif(cost.trim().length() == 0 || cost.equals(""NaN""))\n\t\t\t\taddActionError(getText(""loyauty.error.common.cost_required""));\n\t\t\t\n\t\t\tif (statusId == ProductStatus.DISCONTINUED.getValue()) {\n\t\t\t\ttry {\n\t\t\t\t\tif (loyaltyProductIdSub.length() > 0 && !loyaltyProductIdSub.matches(""^\\\\s*$"") ) {\n\t\t\t\t\t\tProductDTO newProductDTO = productService.getProductIdFromLSProductId(loyaltyProductIdSub);\n\t\t\t\t\t\tString newSubbie = (newProductDTO == null) ? """" : newProductDTO.getLoyaltyProductId();\n\t\t\t\t\t\tif (newSubbie == null || newSubbie.matches(""^\\\\s*$"")) {\n\t\t\t\t\t\t\taddActionError(getText(""loyauty.error.common.productIdSub_required""));\n\t\t\t\t\t\t} else  {\n\t\t\t\t\t\t\tif (newSubbie.equalsIgnoreCase(loyaltyProductId)) {\n\t\t\t\t\t\t\t\taddActionError(getText(""loyauty.error.common.productIdSub_equal""));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} catch (ServiceException sx) {\n\t\t\t\t\taddActionError(getText(""loyauty.error.common.service""));\n\t\t\t\t}\n\t\t\t} else if (statusId == ProductStatus.DISABLED.getValue()) {\n\t\t\t\tif (activeClientsList.size() != 0) {\n\t\t\t\t\taddActionError(getText(""loyauty.error.common.disableWithActive""));\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t/*if(descriptionEn.trim().length() == 0)\n\t\t\t\taddActionError(getText(""loyauty.error.common.description_en_required""));\n\t\t\tif(descriptionFr.trim().length() == 0)\n\t\t\t\taddActionError(getText(""loyauty.error.common.description_fr_required""));\n\t\t\tif(specificationEn.trim().length() == 0)\n\t\t\t\taddActionError(getText(""loyauty.error.common.specification_en_required""));\n\t\t\tif(specificationFr.trim().length() == 0)\n\t\t\t\taddActionError(getText(""loyauty.error.common.specification_fr_required""));\n\t\t\tif(width == 0)\n\t\t\t\taddActionError(getText(""loyauty.error.common.width_required""));\n\t\t\tif(large == 0)\n\t\t\t\taddActionError(getText(""loyauty.error.common.large_required""));\n\t\t\tif(high == 0)\n\t\t\t\taddActionError(getText(""loyauty.error.common.high_required""));\n\t\t\t*/\n\t\t\t\n\t\t\ttry {\t\t\t\n\t\t\t\tFloat.parseFloat(msrp);\n\t\t\t} catch(NumberFormatException mfe){\n\t\t\t\taddActionError(getText(""loyauty.error.common.msrp_number""));\n\t\t\t}\t\t\t\n\t\t\ttry {\t\t\t\n\t\t\t\tFloat.parseFloat(cost);\n\t\t\t} catch(NumberFormatException mfe){\n\t\t\t\taddActionError(getText(""loyauty.error.common.cost_number""));\n\t\t\t}\n\t\t\t/*\n\t\t\ttry {\n\t\t\t\tInteger.parseInt(weight);\n\t\t\t} catch(NumberFormatException mfe){\n\t\t\t\taddActionError(getText(""loyauty.error.common.weight_number""));\n\t\t\t}*/\n\t}\n\t\n\t@Override\n\tpublic String execute() throws Exception {\n\t\ttry {\n\t\t\t\n\t\t\tProductDTO productDTOB4 = productService.getProductInformation(productId, null);\n\t\t\tBoxDTO boxDTOB4 = productService.getBoxByProductId(productId);\n\t\t\tif(boxDTOB4 == null) boxDTOB4 = new BoxDTO();\n\t\t\toperationDTO = new OperationsDTO();\n\t\t\tString managerLogin = """";\n\t\t\tUser userManager = new User();\n\t\t\tuserSession = (UserSessionDTO) request.getSession().getAttribute(WebConstants.USER);\n\t\t\tif (userSession != null){\n\t\t\t\tmanagerLogin = userSession.getLogin();\n\t\t\t\tuserManager = userService.getUserByLogin(managerLogin);\n\t\t\t}\n\t\t\tLong managerId = userManager.getId();\n\t\t\tString dataBefore = """";\n\t\t\tString dataAfter = """";\n\t\t\t\n\t\t\t/*\n\t\t\tboolean wereWgtDimChanged = productDTO.getWereWgtDimChanged();\t\t\t\n\t\t\twereWgtDimChanged = (!wereWgtDimChanged) \n\t\t\t\t\t\t\t\t? (!weight.equalsIgnoreCase(productDTO.getWeight())\n\t\t\t\t\t\t\t\t\t|| \t!large.equalsIgnoreCase(productDTO.getLarge())\n\t\t\t\t\t\t\t\t\t|| \t!width.equalsIgnoreCase(productDTO.getWidth())\n\t\t\t\t\t\t\t\t\t|| \t!high.equalsIgnoreCase(productDTO.getHigh())\n\t\t\t\t\t\t\t\t\t|| \t!cost.equalsIgnoreCase(productDTO.getCost())) \n\t\t\t\t\t\t\t\t: wereWgtDimChanged;\n\t\t\tproductDTO.setWereWgtDimChanged(wereWgtDimChanged);\n\t\t\t*/\n\t\t\t\n\t\t\t/*if(boxDTOB4.getWeight()==null)boxDTOB4.setWeight(0.00);\n\t\t\tif(boxDTOB4.getLength()==null)boxDTOB4.setLength(0.00);\n\t\t\tif(boxDTOB4.getWidth()==null)boxDTOB4.setWidth(0.00);\n\t\t\tif(boxDTOB4.getHeight()==null)boxDTOB4.setHeight(0.00);\n\n\t\t\tif(boxDTO.getWeight()==null)boxDTO.setWeight(0.00);\n\t\t\tif(boxDTO.getLength()==null)boxDTO.setLength(0.00);\n\t\t\tif(boxDTO.getWidth()==null)boxDTO.setWidth(0.00);\n\t\t\tif(boxDTO.getHeight()==null)boxDTO.setHeight(0.00);*/\n\n\t\t\t\n\t\t\tboolean wereWgtDimChanged = productDTO.getWereWgtDimChanged();\t\t\t\n\t\t\twereWgtDimChanged = (!wereWgtDimChanged ) \n\t\t\t\t\t\t\t\t? ( (boxDTOB4.getWeight()!=boxDTO.getWeight())\n\t\t\t\t\t\t\t\t\t||(boxDTOB4.getLength()!=boxDTO.getLength())\n\t\t\t\t\t\t\t\t\t||(boxDTOB4.getWidth()!=boxDTO.getWidth())\n\t\t\t\t\t\t\t\t\t||(boxDTOB4.getHeight()!=boxDTO.getHeight())) \n\t\t\t\t\t\t\t\t: wereWgtDimChanged;\n\t\t\tproductDTO.setWereWgtDimChanged(wereWgtDimChanged);\n\t\t\t\n\t\t\tSystem.out.println(boxDTOB4.getWeight()+"" --- ""+boxDTO.getWeight());\n\t\t\tSystem.out.println(boxDTOB4.getLength()+"" --- ""+boxDTO.getLength());\n\t\t\tSystem.out.println(boxDTOB4.getWidth()+"" --- ""+boxDTO.getWidth());\n\t\t\tSystem.out.println(boxDTOB4.getHeight()+"" --- ""+boxDTO.getHeight());\n\t\t\t\n\t\t\tif(upc!=null && !upc.equals(""""))upc=upc.replaceAll("" "", """");\n\t\t\tproductDTO.setUpc(upc);\n\t\t\t\n\t\t\tboxDTO.setProductId(productId);\n\t\t\tboxDTO.setLength(boxLength);\n\t\t\tboxDTO.setWidth(boxWidth);\n\t\t\tboxDTO.setHeight(boxHeight);\n\t\t\tboxDTO.setTotalWeight(boxTotalWeight);\n\t\t\tif(statusProductBox==null)statusProductBox=0;\n\t\t\tboxDTO.setStatusId(statusProductBox);\n\t\t\t/*if(statusProductBox==1) {\n\t\t\t\tboxDTO.setStatusId(1);\n\t\t\t} else {\n\t\t\t\tboxDTO.setStatusId(0);\n\t\t\t}*/\n\t\t\t//Make ""large"" and ""boxLength"" the biggest size between L,W and H\n\t\t\tswitchBetweenLargeWidthHeight();\n\t\t\t\n\t\t\tif (!productDTOB4.getLarge().equals(large)) {\n\t\t\t\tdataBefore += "" Large:["" + productDTOB4.getLarge() + ""]\\n"";\n\t\t\t\tdataAfter += "" Large:["" + large + ""]\\n"";\n\t\t\t}\n\t\t\t\n\t\t\tif (!productDTOB4.getWidth().equals(width)) {\n\t\t\t\tdataBefore += "" Width:["" + productDTOB4.getWidth() + ""]\\n"";\n\t\t\t\tdataAfter += "" Width:["" + width + ""]\\n"";\n\t\t\t}\n\t\t\t\n\t\t\tif (!productDTOB4.getHigh().equals(high)) {\n\t\t\t\tdataBefore += "" High:["" + productDTOB4.getHigh() + ""]\\n"";\n\t\t\t\tdataAfter += "" High:["" + high + ""]\\n"";\n\t\t\t}\n\t\t\t\n\t\t\tif (!productDTOB4.getWeight().equals(weight)){\n\t\t\t\tdataBefore += "" Weight:[""+productDTOB4.getWeight()+""]\\n"";\n\t\t\t\tdataAfter += "" Weight:[""+weight+""]\\n"";\n\t\t\t}\n\t\t\t\n\t\t\t// Box sizes\n\t\t\tif (boxDTOB4.getLength()!= null && !boxDTOB4.getLength().equals(boxDTO.getLength())) {\n\t\t\t\tdataBefore += "" Box Large:["" + boxDTOB4.getLength() + ""]\\n"";\n\t\t\t\tdataAfter += "" Box Large:["" + boxDTO.getLength() + ""]\\n"";\n\t\t\t}\n\t\t\t\n\t\t\tif (boxDTOB4.getWidth()!=null && !boxDTOB4.getWidth().equals(boxDTO.getWidth())) {\n\t\t\t\tdataBefore += "" Box Width:["" + boxDTOB4.getWidth() + ""]\\n"";\n\t\t\t\tdataAfter += "" Box Width:["" + boxDTO.getWidth() + ""]\\n"";\n\t\t\t}\n\t\t\t\n\t\t\tif (boxDTOB4.getHeight()!=null && !boxDTOB4.getHeight().equals(boxDTO.getHeight())) {\n\t\t\t\tdataBefore += "" Box Height:["" + boxDTOB4.getHeight() + ""]\\n"";\n\t\t\t\tdataAfter += "" Box Height:["" + boxDTO.getHeight() + ""]\\n"";\n\t\t\t}\n\t\t\t\n\t\t\tif (boxDTOB4.getTotalWeight()!=null && !boxDTOB4.getTotalWeight().equals(boxDTO.getTotalWeight())) {\n\t\t\t\tdataBefore += "" Box Weight:[""+boxDTOB4.getTotalWeight()+""]\\n"";\n\t\t\t\tdataAfter += "" Box Weight:[""+boxDTO.getTotalWeight()+""]\\n"";\n\t\t\t}\n\t\t\t\n\t\t\tif (boxDTOB4.getStatusId()!=null && !boxDTOB4.getStatusId().equals(boxDTO.getStatusId())) {\n\t\t\t\tdataBefore += "" CP Verified:[""+boxDTOB4.getStatusId()+""]\\n"";\n\t\t\t\tdataAfter += "" CP Verified:[""+boxDTO.getStatusId()+""]\\n"";\n\t\t\t}\n\t\t\t\n\t\t\tif (productDTOB4.getUpc()!=null && !productDTOB4.getUpc().equals(upc)) {\n\t\t\t\tdataBefore += "" UPC:["" + productDTOB4.getUpc() + ""]\\n"";\n\t\t\t\tdataAfter += "" UPC:["" + upc + ""]\\n"";\n\t\t\t}\n\t\t\n\t\t\t\n\t\t\tif (productDTOB4.getUpc()!=null && !productDTOB4.getUpc().equals(upc)) {\n\t\t\t\tdataBefore += "" UPC:["" + productDTOB4.getUpc() + ""]\\n"";\n\t\t\t\tdataAfter += "" UPC:["" + upc + ""]\\n"";\n\t\t\t}\n\t\t\t\n\t\t\tif (!productDTOB4.getCost().equals(cost)) {\n\t\t\t\tdataBefore += "" Our Cost:["" + productDTOB4.getCost() + ""]\\n"";\n\t\t\t\tdataAfter += "" Our Cost:["" + cost + ""]\\n"";\n\t\t\t}\t\n\t\t\tif (manufProductID != null)\n\t\t\t\tif(manufProductQuantity != null)\n\t\t\t\t\tupdateListManufactureProduct(0, manufProductID, manufProductQuantity, supplier, price, msrp0);\n\t\t\t\telse\n\t\t\t\t\tupdateListManufactureProduct(0, manufProductID, 0, supplier, price, msrp0);\n\t\t\tif (manufProductID1 != null)\n\t\t\t\tif(manufProductQuantity1 != null)\n\t\t\t\t\tupdateListManufactureProduct(1, manufProductID1, manufProductQuantity1, supplier1, price1, msrp1);\n\t\t\t\telse\n\t\t\t\t\tupdateListManufactureProduct(1, manufProductID1, 0, supplier1, price1, msrp1);\n\t\t\tif (manufProductID2 != null)\n\t\t\t\tif(manufProductQuantity2 != null)\n\t\t\t\t\tupdateListManufactureProduct(2, manufProductID2, manufProductQuantity2, supplier2, price2, msrp2);\n\t\t\t\telse\n\t\t\t\t\tupdateListManufactureProduct(2, manufProductID2, 0, supplier2, price2, msrp2);\n\t\t\tif (manufProductID3 != null)\n\t\t\t\tif (manufProductQuantity3 != null)\n\t\t\t\t\tupdateListManufactureProduct(3, manufProductID3, manufProductQuantity3, supplier3, price3, msrp3);\n\t\t\t\telse\n\t\t\t\t\tupdateListManufactureProduct(3, manufProductID3, 0, supplier3, price3, msrp3);\n\t\t\tif (manufProductID4 != null)\n\t\t\t\tif(manufProductQuantity4 != null)\n\t\t\t\t\tupdateListManufactureProduct(4, manufProductID4, manufProductQuantity4, supplier4, price4, msrp4);\n\t\t\t\telse\n\t\t\t\t\tupdateListManufactureProduct(4, manufProductID4, 0, supplier4, price4, msrp4);\n\t\t    List<ProductModelDTO>listModelB4= productDTOB4.getManufactureProductList();\n\t\t    List<ProductModelDTO>listModelAfter= productDTO.getManufactureProductList();\n\t\t    for(int i=0;i<listModelB4.size() && i<listModelAfter.size();i++){\n\t\t    \tfor(int j=0;j<listModelAfter.size();j++){\n\t\t    \t\t\tString manufPB4="" Manuf.P:""+listModelB4.get(i).getName()+""["";\n\t\t    \t\t\tString manufPAfter="" Manuf.P:""+listModelB4.get(i).getName()+""["";\n\t\t    \t\t\tboolean isChanged=false;\n\t\t    \t\tif(listModelB4.get(i).getId()==listModelAfter.get(j).getId()){\n\t\t    \t\t\tif(listModelB4.get(i).getName()!=null && !listModelB4.get(i).getName().equals(listModelAfter.get(j).getName())){\n\t\t    \t\t\t\tmanufPB4+=""Name:""+listModelB4.get(i).getName()+"";"";\n\t\t    \t\t\t\tmanufPAfter+=""Name:""+listModelAfter.get(j).getName()+"";"";\n\t\t\t\t\t\t\tisChanged=true;\n\t\t\t\t    \t}\n\t\t\t\t    \tif(listModelB4.get(i).getQuantity()!=null && listModelB4.get(i).getQuantity()!=listModelAfter.get(j).getQuantity()){\n\t\t\t\t    \t\tmanufPB4+=""Quantity:""+listModelB4.get(i).getQuantity()+"";"";\n\t\t\t\t    \t\tmanufPAfter+=""Quantity:""+listModelAfter.get(j).getQuantity()+"";"";\n\t\t\t\t\t\t\tisChanged=true;\n\t\t\t\t    \t}\n\t\t\t\t    \tif(listModelB4.get(i).getSupplier()!=null && !listModelB4.get(i).getSupplier().equals(listModelAfter.get(j).getSupplier())){\n\t\t\t\t    \t\tmanufPB4+=""Supplier:""+listModelB4.get(i).getSupplier()+"";"";\n\t\t\t\t    \t\tmanufPAfter+=""Supplier:""+listModelAfter.get(j).getSupplier()+"";"";\n\t\t\t\t\t\t\tisChanged=true;\n\t\t\t\t    \t}\n\t\t\t\t    \tif(listModelB4.get(i).getPrice()!=null && !listModelB4.get(i).getPrice().equals(listModelAfter.get(j).getPrice())){\n\t\t\t\t    \t\tmanufPB4+=""Cost:""+listModelB4.get(i).getPrice()+"";"";\n\t\t\t\t    \t\tmanufPAfter+=""Cost:""+listModelAfter.get(j).getPrice()+"";"";\n\t\t\t\t\t\t\tisChanged=true;\n\t\t\t\t    \t}\n\t\t\t\t    \tif(listModelB4.get(i).getMsrp()!=null && !listModelB4.get(i).getMsrp().equals(listModelAfter.get(j).getMsrp())){\n\t\t\t\t    \t\tmanufPB4+=""Msrp:""+listModelB4.get(i).getMsrp()+"";"";\n\t\t\t\t    \t\tmanufPAfter+=""Msrp:""+listModelAfter.get(j).getMsrp()+"";"";\n\t\t\t\t\t\t\tisChanged=true;\n\t\t\t\t    \t}\n\t\t    \t\t\tif(isChanged){\n\t\t\t    \t\t\tmanufPB4+=""]\\n"";\n\t\t\t    \t\t\tmanufPAfter+=""]\\n"";\n\t\t\t    \t\t\tif(listModelB4.get(i).getName()!=null && !listModelB4.get(i).getName().equals("""")&&\n\t\t\t    \t\t\t   listModelAfter.get(j).getName()!=null && !listModelAfter.get(j).getName().equals("""")){\n\t\t\t    \t\t\t\tdataBefore+=manufPB4;\n\t\t\t    \t\t\t\tdataAfter+=manufPAfter;\n\t\t\t    \t\t\t}\n\t\t    \t\t\t}\n\t\t    \t\t\tbreak;\n\t\t    \t\t}\n\t\t    \t\t\n\t\t    \t}\t\t    \t\n\t\t    }\n\t\t    \n\t\t    for(int i=0;i<listModelB4.size();i++){\n\t\t\t    \tboolean exist=false;\n\t\t\t    \tfor(int j=0;j<listModelAfter.size();j++){\n\t\t\t    \t\tif(listModelAfter.get(j).getId()==listModelB4.get(i).getId()&& !listModelAfter.get(j).getName().equals("""")){\n\t\t\t    \t\t\texist=true;\n\t\t\t    \t\t\tbreak;\n\t\t\t    \t\t}\n\t\t\t    \t}\n\t\t\t    \t\n\t\t\t    \tif(!exist){\n\t\t\t    \t\tboolean isChanged=false;\n\t\t    \t\t\tString manufPB4="" Manuf.P:["";\n\t\t    \t\t\tString manufPAfter="" Manuf.P:["";\n\t\t\t    \t\tif(listModelB4.get(i).getName()!=null){\n\t\t\t    \t\t\tisChanged=true;\n\t\t\t    \t\t\tmanufPB4+=""Name:""+listModelB4.get(i).getName()+"";"";\n\t\t\t\t    \t}\n\t\t\t\t    \tif(listModelB4.get(i).getQuantity()!=null){\n\t\t\t\t    \t\tisChanged=true;\n\t\t\t\t    \t\tmanufPB4+=""Quantity:""+listModelB4.get(i).getQuantity()+"";"";\n\t\t\t\t    \t\t\n\t\t\t\t    \t}\n\t\t\t\t    \tif(listModelB4.get(i).getSupplier()!=null){\n\t\t\t\t    \t\tisChanged=true;\n\t\t\t\t    \t\tmanufPB4+=""Supplier:""+listModelB4.get(i).getSupplier()+"";"";\n\t\t\t\t    \t\t\n\t\t\t\t    \t}\n\t\t\t\t    \tif(listModelB4.get(i).getPrice()!=null){\n\t\t\t\t    \t\tisChanged=true;\n\t\t\t\t    \t\tmanufPB4+=""Cost:""+listModelB4.get(i).getPrice()+"";"";\n\t\t\t\t    \t\t\n\t\t\t\t    \t}\n\t\t\t\t    \tif(listModelB4.get(i).getMsrp()!=null){\n\t\t\t\t    \t\tisChanged=true;\n\t\t\t\t    \t\tmanufPB4+=""Msrp:""+listModelB4.get(i).getMsrp();\n\t\t\t\t    \t}\n\t\t\t\t    \t\n\t\t    \t\t\tif(isChanged){\n\t\t\t    \t\t\tmanufPB4+=""]\\n"";\n\t\t\t    \t\t\tif(listModelB4.get(i).getName()!=null && !listModelB4.get(i).getName().equals(""""))dataBefore+=manufPB4;\n\t\t\t    \t\t\tmanufPAfter="" Manuf.P:""+""[Name:""+listModelB4.get(i).getName()+"" was removed!]\\n"";\n\t\t\t    \t\t\tif(listModelB4.get(i).getName()!=null && !listModelB4.get(i).getName().equals(""""))dataAfter+=manufPAfter;\n\t\t    \t\t\t}\t\t\t    \t\t\n\t\t\t    \t}\t\t\t    \t\n\t\t\t    }\n\t\t\t\t\n\t\t\t    for(int i=0;i<listModelAfter.size();i++){\n\t\t\t    \tboolean exist=false;\n\t\t\t    \tfor(int j=0;j<listModelB4.size();j++){\n\t\t\t    \t\tif(listModelB4.get(j).getId()==listModelAfter.get(i).getId()){\n\t\t\t    \t\t\texist=true;\n\t\t\t    \t\t\tbreak;\n\t\t\t    \t\t}\n\t\t\t    \t}\n\t\t\t    \t\n\t\t\t    \tif(!exist){\n\t\t\t    \t\tboolean isChanged=false;\n\t\t    \t\t\tString manufPAfter="" Manuf.P:["";\n\t\t    \t\t\tString manufPB4="" Manuf.P:["";\n\t\t    \t\t\tif(listModelAfter.get(i).getName()!=null){\n\t\t    \t\t\t\tisChanged=true;\n\t\t    \t\t\t\tmanufPAfter+=""Name:""+listModelAfter.get(i).getName()+"";"";\n\t\t\t\t    \t}\n\t\t\t\t    \tif(listModelAfter.get(i).getQuantity()!=null){\n\t\t\t\t    \t\tisChanged=true;\n\t\t\t\t    \t\tmanufPAfter+=""Quantity:""+listModelAfter.get(i).getQuantity()+"";"";\n\t\t\t\t    \t}\n\t\t\t\t    \tif(listModelAfter.get(i).getSupplier()!=null){\n\t\t\t\t    \t\tisChanged=true;\n\t\t\t\t    \t\tmanufPAfter+=""Supplier:""+listModelAfter.get(i).getSupplier()+"";"";\n\t\t\t\t    \t}\n\t\t\t\t    \tif(listModelAfter.get(i).getPrice()!=null){\n\t\t\t\t    \t\tisChanged=true;\n\t\t\t\t    \t\tmanufPAfter+=""Cost:""+listModelAfter.get(i).getPrice()+"";"";\n\t\t\t\t    \t}\n\t\t\t\t    \tif(listModelAfter.get(i).getMsrp()!=null){\n\t\t\t\t    \t\tisChanged=true;\n\t\t\t\t    \t\tmanufPAfter+=""Msrp:""+listModelAfter.get(i).getMsrp();\n\t\t\t\t    \t}\n\t\t\t\t    \t\n\t\t    \t\t\tif(isChanged){\n\t\t\t    \t\t\tmanufPAfter+=""]\\n"";\n\t\t\t    \t\t\tif(listModelAfter.get(i).getName()!=null && !listModelAfter.get(i).getName().equals(""""))dataAfter+=manufPAfter;\n\t\t\t    \t\t\t\n\t\t\t    \t\t\tmanufPB4+=""Name:""+listModelAfter.get(i).getName()+"" was added]\\n"";\n\t\t\t    \t\t\tif(listModelAfter.get(i).getName()!=null && !listModelAfter.get(i).getName().equals(""""))dataBefore+=manufPB4;\n\t\t\t    \t\t\t\n\t\t    \t\t\t}\n\t\t\t    \t}\n\t\t\t    }\n\t\t    \n\t\t\tproductDTO.getBrand().setId(brand);\n\t\t\tproductDTO.getCategory().setId(category);\n\t\t\tproductDTO.setMainFilterTypeId(mainSpecification);\n\t\t\tproductDTO.setLoyaltyProductId(loyaltyProductId);\n\t\t\tproductDTO.getNameEng().setName(nameEn);\n\t\t\tproductDTO.getNameFr().setName(nameFr);\n\t\t\tproductDTO.setMsrp(msrp);\n\t\t\tproductDTO.setCost(cost);\t\t\t\n\t\t\tproductDTO.setWidth(width);\n\t\t\tproductDTO.setLarge(large);\n\t\t\tproductDTO.setHigh(high);\n\t\t\tproductDTO.setWeight(weight);\n\t\t\t\n\t\t\tproductDTO.getDescriptionEng().setName(descriptionEn);\n\t\t\tproductDTO.getDescriptionFr().setName(descriptionFr);\n\t\t\tproductDTO.getSpecificationEng().setName(specificationEn);\n\t\t\tproductDTO.getSpecificationFr().setName(specificationFr);\t\t\t\n\t\t\tif (productDTO.getOtherEng() != null)\n\t\t\t\tproductDTO.getOtherEng().setName(otherEng);\t\t\t\n\t\t\tproductDTO.getOtherFr().setName(otherFr);\n\t\t\t\n\t\t\tproductDTO.setStatus((ProductStatus) CommonUtils.enumFromValue(ProductStatus.values(), statusId));\n\t\t\t\n\t\t\tif (statusId == ProductStatus.DISCONTINUED.getValue()) {\n\t\t\t\tproductDTO.setDiscontinuedStartDate(Calendar.getInstance().getTime());\n\t\t\t\tproductDTO.setLoyaltyProductIdSub(loyaltyProductIdSub);\n\t\t\t} else if (statusId == ProductStatus.DISABLED.getValue()) {\n\t\t\t\tif (productDTO.getDiscontinuedStartDate() != null) {\n\t\t\t\t\tproductDTO.setDiscontinuedStartDate(productDTO.getDiscontinuedStartDate());\n\t\t\t\t}\n\t\t\t\tif (productDTO.getLoyaltyProductIdSub() != null) {\n\t\t\t\t\tproductDTO.setLoyaltyProductIdSub(productDTO.getLoyaltyProductIdSub());\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tproductDTO.setNote(note);\n\t\t\t\n\t\t\t//Warranty\n\t\t\tString warrantyEng = """";\n\t\t\tString warrantyFr = """";\n\t\t\t\n\t\t\tif(defectFree) {\n\t\t\t\twarrantyEng = WebConstants.WARRANTY_DEFECT_FREE_ENG;\n\t\t\t\twarrantyFr = WebConstants.WARRANTY_DEFECT_FREE_FR;\n\t\t\t} else {\n\t\t\t\tif(periodTime.equalsIgnoreCase(WebConstants.WARRANTY_MONTH_ENG)) {\n\t\t\t\t\tif(Integer.valueOf(warrantyQuantity) > 1) {\n\t\t\t\t\t\twarrantyEng =  warrantyQuantity + "" "" + WebConstants.WARRANTY_MONTHS_ENG;\n\t\t\t\t\t} else {\n\t\t\t\t\t\twarrantyEng =  warrantyQuantity + "" "" + WebConstants.WARRANTY_MONTH_ENG;\n\t\t\t\t\t}\n\t\t\t\t\twarrantyFr = warrantyQuantity + "" "" + WebConstants.WARRANTY_MONTH_FR;\n\t\t\t\t} else {\n\t\t\t\t\tif(Integer.valueOf(warrantyQuantity) > 1) {\n\t\t\t\t\t\twarrantyEng =  warrantyQuantity + "" "" + WebConstants.WARRANTY_YEARS_ENG;\n\t\t\t\t\t\twarrantyFr = warrantyQuantity + "" "" + WebConstants.WARRANTY_YEARS_FR;\n\t\t\t\t\t} else {\n\t\t\t\t\t\twarrantyEng =  warrantyQuantity + "" "" + WebConstants.WARRANTY_YEAR_ENG;\n\t\t\t\t\t\twarrantyFr = warrantyQuantity + "" "" + WebConstants.WARRANTY_YEAR_FR;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif(productDTO.getWarrantyEng() == null) {\n\t\t\t\tCommonDTO commonWarrantyEng = CommonDTO.valueOf(0, warrantyEng);\n\t\t\t\tCommonDTO commonWarrantyFr = CommonDTO.valueOf(0, warrantyFr);\n\t\t\t\t\n\t\t\t\tproductDTO.setWarrantyEng(commonWarrantyEng);\n\t\t\t\tproductDTO.setWarrantyFr(commonWarrantyFr);\n\t\t\t} else {\n\t\t\t\tproductDTO.getWarrantyEng().setName(warrantyEng);\n\t\t\t\tproductDTO.getWarrantyFr().setName(warrantyFr);\n\t\t\t}\n\t\t\t\n\t\t\tString currentRealName = """";\n\t\t\t\n\t\t\t//That means that insert a new image and I have to link to the product\n\t\t\tif(imageId != 0) {\n\t\t\t\tif(productDTO.getImage() != null)\n\t\t\t\t\tproductDTO.getImage().setId(imageId);\n\t\t\t\telse\n\t\t\t\t\tproductDTO.setImage(imageService.getImage(imageId));\n\t\t\t\t\n\t\t\t\timgDTO = imageService.getImage(imageId);\n\t\t\t\tcurrentRealName = imgDTO.getRealName();\n\t\t\t}\n\t\t\t\n\t\t\tif(productDTO.getLinkList().size() == 0) {\n\t\t\t\t//If the link doesn't exist, I have to insert the link\n\t\t\t\tList<ProductLinkDTO> linkList = new ArrayList<ProductLinkDTO>();\n\t\t\t\tProductLinkDTO productLinkDTO = ProductLinkDTO.valueOf(linkUrl, productDTO.getId());\n\t\t\t\tlinkList.add(productLinkDTO);\n\t\t\t\tproductDTO.setLinkList(linkList);\n\t\t\t} else {\n\t\t\t\t//There is a link, so I have to update it.\n\t\t\t\tproductDTO.getLinkList().get(0).setLink(linkUrl);\n\t\t\t}\n\t\t\t\n\t\t\tboolean consideredForXML = productDTO.getConsideredForXML();\t\t\t\n\t\t\tif (!consideredForXML) { \n\t\t\t\tproductDTO.setConsideredForXML(true);\n\t\t\t}\n\t\t\t\n\t\t\tif(productDTOB4.getBrand().getId()!=productDTO.getBrand().getId()){\n\t    \t\tdataBefore+="" Brand:[""+productDTOB4.getBrand().getName()+""]\\n"";\n\t\t\t\tdataAfter+="" Brand::[""+productDTO.getBrand().getName()+""]\\n"";\n\t    \t}\n\t\t\t\n\t\t\t\n\t\t\tif(productDTOB4.getCategory().getId()!=productDTO.getCategory().getId()){\n\t    \t\tdataBefore+="" Category:[""+productDTOB4.getCategory().getName()+""]\\n"";\n\t\t\t\tdataAfter+="" Category:[""+productDTO.getCategory().getName()+""]\\n"";\n\t    \t}\n\t\t\t\n\t\t\tif(productDTOB4.getLoyaltyProductId()!=null && !productDTOB4.getLoyaltyProductId().equals(productDTO.getLoyaltyProductId())){\n\t    \t\tdataBefore+="" Loyalty P.Id:[""+productDTOB4.getLoyaltyProductId()+""]\\n"";\n\t\t\t\tdataAfter+="" Loyalty P.Id:[""+productDTO.getLoyaltyProductId()+""]\\n"";\n\t    \t}\n\t\t\t\n\t\t\tif(!productDTOB4.getNameEng().equals(productDTO.getNameEng())){\n\t    \t\tdataBefore+="" Name Eng:[""+productDTOB4.getNameEng()+""]\\n"";\n\t\t\t\tdataAfter+="" Name Eng:[""+productDTO.getNameEng()+""]\\n"";\n\t    \t}\n\n\t\t\tif(!productDTOB4.getNameFr().equals(productDTO.getNameFr())){\n\t    \t\tdataBefore+="" Name Fr:[""+productDTOB4.getNameFr()+""]\\n"";\n\t\t\t\tdataAfter+="" Name Fr:[""+productDTO.getNameFr()+""]\\n"";\n\t    \t}\n\n\t\t\tif(!productDTOB4.getMsrp().equals(productDTO.getMsrp())){\n\t    \t\tdataBefore+="" Msrp:[""+productDTOB4.getMsrp()+""]\\n"";\n\t\t\t\tdataAfter+="" Msrp:[""+productDTO.getMsrp()+""]\\n"";\n\t    \t} \n\n\t\t\tif(productDTOB4.getStatus().getValue()!=productDTO.getStatus().getValue()){\n\t\t\t\tString statusName=ProductStatus.getStatusByValue(productDTOB4.getStatus().getValue());\n\t    \t\tdataBefore+="" Status:[""+statusName+""]\\n"";\n\t    \t\tstatusName=ProductStatus.getStatusByValue(productDTO.getStatus().getValue());\n\t\t\t\tdataAfter+="" Status:[""+statusName+""]\\n"";\n\t    \t}\n\t\t\t\n\t\t\tif(!productDTOB4.getLoyaltyProductIdSub().equals(productDTO.getLoyaltyProductIdSub())){\n\t    \t\tdataBefore+="" Loyalty P.Id Sub:[""+productDTOB4.getLoyaltyProductIdSub()+""]\\n"";\n\t\t\t\tdataAfter+="" Loyalty P.Id Sub:[""+productDTO.getLoyaltyProductIdSub()+""]\\n"";\n\t    \t} \n\n\t\t\t// update product\n\t\t\tproductService.updateProduct(productDTO);\n\t\t\t\n\t\t\t// update product_box\n\t\t\t//UsersPrivilegesDTO usersPrivCPVerified = (UsersPrivilegesDTO)request.getSession(true).getAttribute(""usersPrivCanadaPostVerified"");\n\t\t\tproductService.updateProductBox(boxDTO);\n\n\t\t\trequest.getSession(true).setAttribute(""productID"", productId);\n\t\t\t\n\t\t\tfinal int SIZE = userNameList.size();\n\t\t\tString[] priceFull = new String[SIZE];\n\t\t\tString[] profitFull = new String[SIZE];\n\t\t\tString[] discountFull = new String[SIZE];\n\t\t\tBoolean[] excludedFull = new Boolean[SIZE];\n\t\t\texcluded = new String[SIZE];\n\t\t\tcurrencyRate = new Double[SIZE];\n\t\t\tcurrencySymbol = new String[SIZE];\n\t\t\tcurrencyPrice = new String[SIZE];\n\t\t\t\n\t\t\tArrayList<Long> arrayList = new ArrayList<Long>();\n\t\t\tUserDTO userDTOforCurrency;\n\t\t\tint count = 0;\n\t\t\tfor (UserSessionDTO uDTO : userNameList) {\n\t\t\t\tarrayList.add(uDTO.getId());\n\t\t\t\tuserDTOforCurrency = userService.getUserInformation(uDTO.getId());\n\t\t\t\tcurrencyRate[count] = 1D;\n\t\t\t\tcurrencySymbol[count] = ""CAD"";\n\t\t\t\tcurrencyPrice[count] = """";\n\t\t\t\tif(userDTOforCurrency!=null && userDTOforCurrency.getCurrencyRate()!=null) \n\t\t\t\t\tcurrencyRate[count] = userDTOforCurrency.getCurrencyRate();\n\t\t\t\tif(userDTOforCurrency!=null && userDTOforCurrency.getCurrencySymbol()!=null) \n\t\t\t\t\tcurrencySymbol[count] = userDTOforCurrency.getCurrencySymbol();\n\t\t\t\tcount++;\n\t\t\t}\n\n\t\t\tList<Long> whichUsersChangedByPrice = new ArrayList<Long>();\n\t\t\tList<Long> whichUsersChangedByExcluded = new ArrayList<Long>();\n\t\t\tcount = 0;\n\t\t\tint others = 0;\n\t\t\tfor (long userIdFromDTO : arrayList) {\n\t\t\t\tif (isThereTheExcludedInUserSessionDTO(isExcluded, userIdFromDTO)) {\n\t\t\t\t\texcludedFull[count] = true;\n\t\t\t\t\texcluded[count] = ""t"";\n\t\t\t\t\twhichUsersChangedByExcluded.add(userIdFromDTO);\n\t\t\t\t\tpriceFull[count] = """";\n\t\t\t\t\tprofitFull[count] = """";\n\t\t\t\t\tdiscountFull[count] = """";\n\t\t\t\t} else {\n\t\t\t\t\texcludedFull[count] = false;\n\t\t\t\t\texcluded[count] = ""f"";\n\t\t\t\t\twhichUsersChangedByPrice.add(userIdFromDTO);\n\t\t\t\t\tpriceFull[count] = userPrice[others];\n\t\t\t\t\tprofitFull[count] = percentageProfit[others];\n\t\t\t\t\tdiscountFull[count] = percentageDiscount[others];\n\t\t\t\t\t++others;\n\t\t\t\t}\n\t\t\t\t++count;\n\t\t\t}\n\t\t\t\n\t\t\tList<UserProductPriceDTO> uppDTOListCopy = productService.getUserProductPriceList(productId);\t\t\t\n\t\t\tUserProductPriceDTO uppDTO = new UserProductPriceDTO();\n\t\t\tint index = 0;\n\t\t\tfor (long userIdFromDTO : arrayList) {\n\t\t\t\tuppDTO = new UserProductPriceDTO();\n\t\t\t\tuppDTO.setExcluded(excludedFull[index]);\t\t\t\t\n\t\t\t\tuppDTO.setPrice(priceFull[index]);\n\t\t\t\tuppDTO.setProfit(profitFull[index]);\n\t\t\t\tuppDTO.setDiscount(discountFull[index]);\t\t\t\n\t\t\t\tuppDTO.setProductId(productId);\n\t\t\t\tuppDTO.setUserId(userIdFromDTO);\n\t\t\t\tuppDTO.setPriceType(PriceType.ADD_PRODUCT_PRICE_SET);\n\t\t\t\tuppDTO.setUserStatus(UserProductStatus.ACTIVE);\n\t\t\t\tproductService.updateUserProductPrice(uppDTO);\n\t\t\t\t++index;\n\t\t\t}\n\t\t\t\n\t\t\tuserPrice = priceFull;\n\t\t\tpercentageProfit = profitFull;\n\t\t\tpercentageDiscount = discountFull;\t\t\t\n\t\t\t\n\t\t\tfor(int i=0;i<userPrice.length; i++) {\n\t\t\t\tif(userPrice[i]!=null && userPrice[i].replaceAll("" "", """").matches(""^-?\\\\d*\\\\.\\\\d+$|^-?\\\\d+$"")) {\n\t\t\t\t\tDouble curPrice = currencyRate[i] * Double.parseDouble(userPrice[i]);\n\t\t\t\t\tcurPrice = (double) Math.round(curPrice*100)/100;\n\t\t\t\t\tcurrencyPrice[i] = curPrice+"""";\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tList<UserProductPriceDTO> uppDTOListPriceB4 = new ArrayList<UserProductPriceDTO>();\n\t\t\tUserProductPriceDTO  userProductPriceDTOB4 = new UserProductPriceDTO();\n\t\t\tfor (UserProductPriceDTO userProductPriceDTOCopy : uppDTOListCopy) {\n\t\t\t\tuserProductPriceDTOB4 = new UserProductPriceDTO();\n\t\t\t\tuserProductPriceDTOB4.setId(userProductPriceDTOCopy.getId());\n\t\t\t\tuserProductPriceDTOB4.setUserId(userProductPriceDTOCopy.getUserId());\n\t\t\t\tuserProductPriceDTOB4.setProductId(userProductPriceDTOCopy.getProductId());\n\t\t\t\tuserProductPriceDTOB4.setPriceType(userProductPriceDTOCopy.getPriceType());\n\t\t\t\tuserProductPriceDTOB4.setUserStatus(userProductPriceDTOCopy.getUserStatus());\t\t\t\t\n\t\t\t\tif (userProductPriceDTOCopy.getPrice() != null) {\n\t\t\t\t\tif (userProductPriceDTOCopy.getPrice().matches(""^\\\\s*$"")) {\n\t\t\t\t\t\tuserProductPriceDTOB4.setPrice(""0.00"");\n\t\t\t\t\t} else {\n\t\t\t\t\t\tuserProductPriceDTOB4.setPrice(userProductPriceDTOCopy.getPrice());\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tuserProductPriceDTOB4.setPrice(""0.00"");\n\t\t\t\t}\n\t\t\t\tuserProductPriceDTOB4.setProfit(userProductPriceDTOCopy.getProfit());\n\t\t\t\tuserProductPriceDTOB4.setDiscount(userProductPriceDTOCopy.getDiscount());\n\t\t\t\tuserProductPriceDTOB4.setExcluded(userProductPriceDTOCopy.getExcluded());\n\t\t\t\tuppDTOListPriceB4.add(userProductPriceDTOB4);\n\t\t\t}\n\t\t\t\n\t\t\tuppDTOListCopy = null;\n\t\t\tList<UserProductPriceDTO> uppDTOListPriceAfter = new ArrayList<UserProductPriceDTO>();\n\t\t\tUserProductPriceDTO uppDTOAfter = new UserProductPriceDTO();\n\t\t\tindex = 0;\n\t\t\tfor (long userIdFromDTO : arrayList) {\n\t\t\t\tuppDTOAfter = new UserProductPriceDTO();\n\t\t\t\tuppDTOAfter.setExcluded(excludedFull[index]);\n\t\t\t\tif (priceFull[index].matches(""^\\\\s*$"")) {\n\t\t\t\t\tpriceFull[index] = ""0.00"";\n\t\t\t\t}\n\t\t\t\tuppDTOAfter.setPrice(priceFull[index]);\n\t\t\t\tuppDTOAfter.setProfit(profitFull[index]);\n\t\t\t\tuppDTOAfter.setDiscount(discountFull[index]);\n\t\t\t\tuppDTOAfter.setProductId(productId);\n\t\t\t\tuppDTOAfter.setUserId(userIdFromDTO);\n\t\t\t\tuppDTOAfter.setPriceType(PriceType.ADD_PRODUCT_PRICE_SET);\n\t\t\t\tuppDTOAfter.setUserStatus(UserProductStatus.ACTIVE);\n\t\t\t\tuppDTOListPriceAfter.add(uppDTOAfter);\n\t\t\t\t++index;\n\t\t\t}\n\t\t\tfor (int i=0; i<uppDTOListPriceB4.size(); i++) {\n\t\t\t\tfor (int j=0; j<uppDTOListPriceAfter.size(); j++) {\n\t\t\t\t\tif (uppDTOListPriceB4.get(i).getUserId() == uppDTOListPriceAfter.get(j).getUserId()) {\t\t\t\t\t\t\n\t\t\t\t\t\tif (uppDTOListPriceB4.get(i).getExcluded() != uppDTOListPriceAfter.get(j).getExcluded()) {\n\t\t\t\t\t\t\tUserDTO userDTO = userService.getUserOrTemplateById(uppDTOListPriceB4.get(i).getUserId());\n\t\t\t\t    \t\tdataBefore += "" Excluded:[""+userDTO.getLogin() + "":"" + uppDTOListPriceB4.get(i).getExcluded() + ""]\\n"";\n\t\t\t\t\t\t\tdataAfter += "" Excluded:[""+userDTO.getLogin() + "":"" + uppDTOListPriceAfter.get(j).getExcluded() + ""]\\n"";\n\t\t\t\t    \t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (uppDTOListPriceB4.get(i).getPrice() != null \n\t\t\t\t\t\t\t\t\t&& !uppDTOListPriceB4.get(i).getPrice().equals(uppDTOListPriceAfter.get(j).getPrice()) \n\t\t\t\t\t\t\t\t\t&& !uppDTOListPriceAfter.get(j).getExcluded()) {\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t//-------------------- recalculate shipping total-------------------------------------\n\t\t\t\t\t\t\t\tproductService.calculateShippingRate(uppDTOListPriceB4.get(i).getUserId(), uppDTOListPriceB4.get(i).getProductId());\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t//------------------------------------------------------------------------------------\n\t\t\t\t\t\t\t\tUserDTO userDTO = userService.getUserOrTemplateById(uppDTOListPriceB4.get(i).getUserId());\n\t\t\t\t\t\t\t\tdataBefore += "" User Price:[""+userDTO.getLogin() + "":"" + uppDTOListPriceB4.get(i).getPrice() + ""]\\n"";\n\t\t\t\t\t\t\t\tdataAfter += "" User Price:[""+userDTO.getLogin() + "":"" + uppDTOListPriceAfter.get(j).getPrice() + ""]\\n"";\n\t\t\t\t    \t} \n\t\t\t\t\t    break;\n\t\t\t\t\t}\t\t\t\t\t\n\t\t\t\t}\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\toperationDTO.setOperationType(""Update Product"");\n\t\t\toperationDTO.setDataBefore(dataBefore);\n\t\t\toperationDTO.setDataAfter(dataAfter);\n\t\t\toperationDTO.setObjectId(productId);\n\t\t\toperationDTO.setUserId(managerId);\n\t\t\toperationsService.insertOperation(operationDTO);\n\t\t\thandleAlterProductXML(productDTOB4, brand, category, mainSpecification, currentRealName, statusId,  nameEn, nameFr,\n\t\t\t\t\t\t\t\t\tdescriptionEn, descriptionFr, specificationEn, specificationFr, otherEng, \n\t\t\t\t\t\t\t\t\totherFr, warrantyEng, warrantyFr, msrp, large, width, high, weight, \n\t\t\t\t\t\t\t\t\tmanufProductID, whichUsersChangedByPrice, whichUsersChangedByExcluded, \n\t\t\t\t\t\t\t\t\tuppDTOListPriceB4, uppDTOListPriceAfter, wereWgtDimChanged);\n\t\t\t\n\t\t\treturn SUCCESS;\n\t\t} catch(ServiceException e) {\n\t\t\tlog.debug(""Service Error when loading file"");\n\t\t\taddActionError(getText(""loyauty.error.common.service""));\n\t\t} catch (Exception e) {\n\t\t\taddActionError(getText(""loyauty.error.common.service""));\n\t\t}\n\t\treturn INPUT;\n\t}\n\t\n\t/**\n\t * @author Rafael Padron\n\t */\n\tpublic void handleAlterProductXML(ProductDTO productDTO, long brand, long category, \n\t\t\tlong mainSpecification, String imageRealName, Integer statusId, String nameEn, String nameFr,\n\t\t\tString descriptionEn, String descriptionFr,\n\t\t\tString specificationEn, String specificationFr,\n\t\t\tString otherEng, String otherFr, String warrantyEng, String warrantyFr,\n\t\t\tString msrp, String large, String width, String high, String weight,\n\t\t\tString manufProductID, List<Long> whichUsersChangedByPrice,\n\t\t\tList<Long> whichUsersChangedByExcluded, List<UserProductPriceDTO> uppDTOListPriceB4,\n\t\t\tList<UserProductPriceDTO> uppDTOListPriceAfter, boolean wereWgtDimChanged) {\n\t\t\n\t\tfinal boolean TO_BE_EXECUTED = true;\n\t\t\n\t\t// Related to AlterProductXML.class\n\t\tboolean brand_xml = false;\n\t\tboolean category_xml = false;\n\t\tboolean mainSpecification_xml = false;\n\t\tboolean image_xml = false;\n\t\tboolean status_xml = false;\n\t\tboolean nameEn_xml = false;\n\t\tboolean nameFr_xml = false;\n\t\tboolean descriptionEn_xml = false;\n\t\tboolean descriptionFr_xml = false;\n\t\tboolean specificationEn_xml = false;\n\t\tboolean specificationFr_xml = false;\n\t\tboolean otherEng_xml = false;\n\t\tboolean otherFr_xml = false;\n\t\tboolean warrantyEng_xml = false;\n\t\tboolean warrantyFr_xml = false;\n\t\tboolean msrp_xml = false;\n\t\tboolean shipping_xml = false;\n\t\tboolean dimensions_xml = false;\n\t\tboolean weight_xml = false;\n\t\tboolean modelNumber_xml = false;\n\t\t\n\t\tboolean product_to_be_executed_xml = false;\n\t\t\n\t\t// Related to AlterUserProductXML.class\n\t\tboolean priceDiscount_xml = false;\n\t\tboolean excluded_xml = false;\n\t\t\n\t\ttry {\t\t\t\n\t\t\tlong productId = productDTO.getId();\n\t\t\t\n\t\t\tAlterProductXMLDTO apxDTOBefore = productService.getAlterProductXML(productId);\n\t\t\t\n\t\t\tboolean apxAlreadyExecuted = false;\n\t\t\t\n\t\t\tboolean isAPXBrandAlready = false;\n\t\t\tboolean isAPXCategoryAlready = false;\n\t\t\tboolean isAPXMainSpecAlready = false;\n\t\t\tboolean isAPXImageAlready = false;\n\t\t\tboolean isAPXStatusAlready = false;\n\t\t\tboolean isAPXNameEnAlready = false;\n\t\t\tboolean isAPXNameFrAlready = false;\n\t\t\tboolean isAPXDescEnAlready = false;\n\t\t\tboolean isAPXDescFrAlready = false;\n\t\t\tboolean isAPXSpecEnAlready = false;\n\t\t\tboolean isAPXSpecFrAlready = false;\n\t\t\tboolean isAPXOtherEnAlready = false;\n\t\t\tboolean isAPXOtherFrAlready = false;\n\t\t\tboolean isAPXWarrantyEnAlready = false;\n\t\t\tboolean isAPXWarrantyFrAlready = false;\n\t\t\tboolean isAPXMSRPAlready = false;\n\t\t\tboolean isAPXShippingAlready = false;\n\t\t\tboolean isAPXDimsAlready = false;\n\t\t\tboolean isAPXWgtAlready = false;\n\t\t\tboolean isAPXModelNoAlready = false;\t\t\t\n\t\t\t\n\t\t\tboolean apxExists = (apxDTOBefore != null);\n\t\t\tif (apxExists) {\n\t\t\t\tapxAlreadyExecuted = apxDTOBefore.getProductToBeExecuted();\n\t\t\t\t\n\t\t\t\tisAPXBrandAlready = apxDTOBefore.getBrandId();\n\t\t\t\tisAPXCategoryAlready = apxDTOBefore.getCategoryId();\n\t\t\t\tisAPXMainSpecAlready = apxDTOBefore.getTypeId();\n\t\t\t\tisAPXImageAlready = apxDTOBefore.getImageId();\n\t\t\t\tisAPXStatusAlready = apxDTOBefore.getStatusId();\n\t\t\t\tisAPXNameEnAlready = apxDTOBefore.getNameEn();\n\t\t\t\tisAPXNameFrAlready = apxDTOBefore.getNameFr();\n\t\t\t\tisAPXDescEnAlready = apxDTOBefore.getDescriptionEn();\n\t\t\t\tisAPXDescFrAlready = apxDTOBefore.getDescriptionFr();\n\t\t\t\tisAPXSpecEnAlready = apxDTOBefore.getSpecificationEn();\n\t\t\t\tisAPXSpecFrAlready = apxDTOBefore.getSpecificationFr();\n\t\t\t\tisAPXOtherEnAlready = apxDTOBefore.getOtherEn();\n\t\t\t\tisAPXOtherFrAlready = apxDTOBefore.getOtherFr();\n\t\t\t\tisAPXWarrantyEnAlready = apxDTOBefore.getWarrantyEn();\n\t\t\t\tisAPXWarrantyFrAlready = apxDTOBefore.getWarrantyFr();\n\t\t\t\tisAPXMSRPAlready = apxDTOBefore.getMsrp();\n\t\t\t\tisAPXShippingAlready = apxDTOBefore.getShipping();\n\t\t\t\tisAPXDimsAlready = apxDTOBefore.getDimensions();\n\t\t\t\tisAPXWgtAlready = apxDTOBefore.getWeight();\n\t\t\t\tisAPXModelNoAlready = apxDTOBefore.getModelNumber();\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tString descriptionEnCell = """", descriptionEnDB = """", descriptionFrCell = """", descriptionFrDB = """";\n\t\t\tString specificationEnCell = """", specificationEnDB = """", specificationFrCell = """", specificationFrDB = """";\n\t\t\tString otherEnCell = """", otherEnDB = """", otherFrCell = """", otherFrDB = """";\n\t\t\t\n\t\t\tif (productDTO.getBrand() != null) {\n\t\t\t\tbrand_xml = (brand != productDTO.getBrand().getId());\n\t\t\t\tif (apxExists) if (apxAlreadyExecuted) if (isAPXBrandAlready) brand_xml = true;\n\t\t\t}\n\t\t\t\n\t\t\tif (productDTO.getCategory() != null) {\n\t\t\t\tcategory_xml = (category != productDTO.getCategory().getId());\n\t\t\t\tif (apxExists) if (apxAlreadyExecuted) if (isAPXCategoryAlready) category_xml = true;\n\t\t\t}\t\t\t\n\t\t\t\n\t\t\tif (productDTO.getMainFilterTypeId() != null) {\n\t\t\t\tif (productDTO.getMainFilterTypeId() != 0L && productDTO.getMainFilterTypeId() != 51) {\n\t\t\t\t\tmainSpecification_xml = (mainSpecification != productDTO.getMainFilterTypeId().longValue());\n\t\t\t\t}\n\t\t\t\tif (apxExists) if (apxAlreadyExecuted) if (isAPXMainSpecAlready) mainSpecification_xml = true;\n\t\t\t}\n\t\t\t\n\t\t\tif (imageRealName != null && productDTO.getOldImageRealName() != null) {\n\t\t\t\t\timage_xml = (!imageRealName.equalsIgnoreCase(productDTO.getOldImageRealName()));\n\t\t\t\t\tif (apxExists) if (apxAlreadyExecuted) if (isAPXImageAlready) image_xml = true;\n\t\t\t}\n\t\t\t\n\t\t\tstatus_xml = (statusId != productDTO.getStatus().getValue());\n\t\t\tif (apxExists) if (apxAlreadyExecuted) if (isAPXStatusAlready) status_xml = true;\n\t\t\t\n\t\t\tif (nameEn != null && productDTO.getNameEng() != null) {\n\t\t\t\tnameEn_xml = (!nameEn.trim().equalsIgnoreCase(productDTO.getNameEng().getName().trim()));\n\t\t\t\tif (apxExists) if (apxAlreadyExecuted) if (isAPXNameEnAlready) nameEn_xml = true;\n\t\t\t}\n\t\t\t\n\t\t\tif (nameFr != null && productDTO.getNameFr() != null) {\t\t\t\t\n\t\t\t\tnameFr_xml = (!nameFr.trim().equalsIgnoreCase(productDTO.getNameFr().getName().trim()));\n\t\t\t\tif (apxExists) if (apxAlreadyExecuted) if (isAPXNameFrAlready) nameFr_xml = true;\n\t\t\t}\n\t\t\t\n\t\t\tif (descriptionEn != null && productDTO.getDescriptionEng() != null) {\n\t\t\t\tdescriptionEnCell = wsRipper(html2text(descriptionEn.trim()));\n\t\t\t\tdescriptionEnDB = wsRipper(html2text(productDTO.getDescriptionEng().getName().trim()));\t\t\t\t\n\t\t\t\tdescriptionEn_xml = (!descriptionEnCell.trim().equalsIgnoreCase(descriptionEnDB.trim()));\n\t\t\t\tif (apxExists) if (apxAlreadyExecuted) if (isAPXDescEnAlready) descriptionEn_xml = true;\n\t\t\t}\n\t\t\t\n\t\t\tif (descriptionFr != null && productDTO.getDescriptionFr() != null) {\n\t\t\t\tdescriptionFrCell = wsRipper(html2text(descriptionFr.trim()));\n\t\t\t\tdescriptionFrDB = wsRipper(html2text(productDTO.getDescriptionFr().getName().trim()));\t\t\t\t\n\t\t\t\tdescriptionFr_xml = (!descriptionFrCell.trim().equalsIgnoreCase(descriptionFrDB.trim()));\n\t\t\t\tif (apxExists) if (apxAlreadyExecuted) if (isAPXDescFrAlready) descriptionFr_xml = true;\n\t\t\t}\n\t\t\t\n\t\t\tif (specificationEn != null && productDTO.getSpecificationEng() != null) {\n\t\t\t\tspecificationEnCell = wsRipper(html2text(specificationEn.trim()));\t\t\n\t\t\t\tspecificationEnDB = wsRipper(html2text(productDTO.getSpecificationEng().getName().trim()));\t\t\t\t\n\t\t\t\tspecificationEn_xml = (!specificationEnCell.trim().equalsIgnoreCase(specificationEnDB.trim()));\t\t\t\t\n\t\t\t\tif (apxExists) if (apxAlreadyExecuted) if (isAPXSpecEnAlready) specificationEn_xml = true;\n\t\t\t}\n\t\t\t\n\t\t\tif (specificationFr != null && productDTO.getSpecificationFr() != null) {\n\t\t\t\tspecificationFrCell = wsRipper(html2text(specificationFr.trim()));\t\t\t\t\n\t\t\t\tspecificationFrDB = wsRipper(html2text(productDTO.getSpecificationFr().getName().trim()));\t\t\t\t\n\t\t\t\tspecificationFr_xml = (!specificationFrCell.trim().equalsIgnoreCase(specificationFrDB.trim()));\n\t\t\t\tif (apxExists) if (apxAlreadyExecuted) if (isAPXSpecFrAlready) specificationFr_xml = true;\n\t\t\t}\n\t\t\t\n\t\t\tif (otherEng != null && productDTO.getOtherEng() != null) {\n\t\t\t\totherEnCell = wsRipper(html2text(otherEng.trim()));\n\t\t\t\totherEnDB = wsRipper(html2text(productDTO.getOtherEng().getName().trim()));\t\t\t\t\n\t\t\t\totherEng_xml = (!otherEnCell.trim().equalsIgnoreCase(otherEnDB.trim()));\n\t\t\t\tif (apxExists) if (apxAlreadyExecuted) if (isAPXOtherEnAlready) otherEng_xml = true;\n\t\t\t}\n\t\t\t\n\t\t\tif (otherFr != null && productDTO.getOtherFr() != null) {\n\t\t\t\totherFrCell = wsRipper(html2text(otherFr.trim()));\n\t\t\t\totherFrDB = wsRipper(html2text(productDTO.getOtherFr().getName().trim()));\t\t\t\t\t\t\t\n\t\t\t\totherFr_xml = (!otherFrCell.trim().equalsIgnoreCase(otherFrDB.trim()));\n\t\t\t\tif (apxExists) if (apxAlreadyExecuted) if (isAPXOtherFrAlready) otherFr_xml = true;\n\t\t\t}\n\t\t\t\n\t\t\tif (warrantyEng != null && productDTO.getWarrantyEng() != null) {\n\t\t\t\twarrantyEng_xml = (!warrantyEng.trim().equalsIgnoreCase(productDTO.getWarrantyEng().getName().trim()));\n\t\t\t\tif (apxExists) if (apxAlreadyExecuted) if (isAPXWarrantyEnAlready) warrantyEng_xml = true;\n\t\t\t}\n\t\t\t\n\t\t\tif (warrantyFr != null && productDTO.getWarrantyFr() != null) {\n\t\t\t\twarrantyFr_xml = (!warrantyFr.trim().equalsIgnoreCase(productDTO.getWarrantyFr().getName().trim()));\n\t\t\t\tif (apxExists) if (apxAlreadyExecuted) if (isAPXWarrantyFrAlready) warrantyFr_xml = true;\n\t\t\t}\n\t\t\t\n\t\t\tmsrp_xml = (!msrp.equalsIgnoreCase(productDTO.getMsrp()));\n\t\t\tif (apxExists) if (apxAlreadyExecuted) if (isAPXMSRPAlready) msrp_xml = true;\n\t\t\t\n\t\t\tdimensions_xml = (!large.equalsIgnoreCase(productDTO.getLarge()) \n\t\t\t\t\t\t\t  || !width.equalsIgnoreCase(productDTO.getWidth())\n\t\t\t\t\t\t\t  || !high.equalsIgnoreCase(productDTO.getHigh()));\n\t\t\tif (apxExists) if (apxAlreadyExecuted) if (isAPXDimsAlready) dimensions_xml = true;\t\t\t\n\t\t\t\n\t\t\tweight_xml = (!weight.equalsIgnoreCase(productDTO.getWeight()));\n\t\t\tif (apxExists) if (apxAlreadyExecuted) if (isAPXWgtAlready) weight_xml = true;\t\n\t\t\t\n\t\t\tshipping_xml = wereWgtDimChanged;\n\t\t\tif (apxExists) if (apxAlreadyExecuted) if (isAPXShippingAlready) shipping_xml = true;\n\t\t\t\t\t\t\n\t\t\tif (productDTO.getManufactureProductList() != null) {\n\t\t\t\tif (productDTO.getManufactureProductList().size() == 1) {\n\t\t\t\t\tfor (ProductModelDTO productModelDTO : productDTO.getManufactureProductList()) {\n\t\t\t\t\t\tif (productModelDTO != null && productModelDTO.getName() != null) {\n\t\t\t\t\t\t\tmodelNumber_xml = !productModelDTO.getName().trim().equalsIgnoreCase(manufProductID.trim());\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (apxExists) if (apxAlreadyExecuted) if (isAPXModelNoAlready) modelNumber_xml = true;\n\t\t\t\n\t\t\t\n\t\t\tproduct_to_be_executed_xml = brand_xml || category_xml || mainSpecification_xml \n\t\t\t\t\t\t\t\t\t\t|| image_xml || status_xml || nameEn_xml \n\t\t\t\t\t\t\t\t\t\t|| nameFr_xml || descriptionEn_xml || descriptionFr_xml\n\t\t\t\t\t\t\t\t\t\t|| specificationEn_xml || specificationFr_xml || otherEng_xml\n\t\t\t\t\t\t\t\t\t\t|| otherFr_xml || warrantyEng_xml || warrantyFr_xml\n\t\t\t\t\t\t\t\t\t\t|| dimensions_xml || weight_xml || modelNumber_xml\n\t\t\t\t\t\t\t\t\t\t|| msrp_xml || shipping_xml;\n\t\t\t\n\t\t\tAlterProductXMLDTO alterProductXMLDTO = new AlterProductXMLDTO();\n\t\t\talterProductXMLDTO.setProductId(productId);\n\t\t\talterProductXMLDTO.setBrandId(brand_xml);\n\t\t\talterProductXMLDTO.setCategoryId(category_xml);\n\t\t\talterProductXMLDTO.setTypeId(mainSpecification_xml);\n\t\t\talterProductXMLDTO.setImageId(image_xml);\n\t\t\talterProductXMLDTO.setStatusId(status_xml);\n\t\t\talterProductXMLDTO.setNameEn(nameEn_xml);\n\t\t\talterProductXMLDTO.setNameFr(nameFr_xml);\n\t\t\talterProductXMLDTO.setDescriptionEn(descriptionEn_xml);\n\t\t\talterProductXMLDTO.setDescriptionFr(descriptionFr_xml);\n\t\t\talterProductXMLDTO.setSpecificationEn(specificationEn_xml);\n\t\t\talterProductXMLDTO.setSpecificationFr(specificationFr_xml);\n\t\t\talterProductXMLDTO.setOtherEn(otherEng_xml);\n\t\t\talterProductXMLDTO.setOtherFr(otherFr_xml);\n\t\t\talterProductXMLDTO.setWarrantyEn(warrantyEng_xml);\n\t\t\talterProductXMLDTO.setWarrantyFr(warrantyFr_xml);\n\t\t\talterProductXMLDTO.setDimensions(dimensions_xml);\n\t\t\talterProductXMLDTO.setWeight(weight_xml);\n\t\t\talterProductXMLDTO.setModelNumber(modelNumber_xml);\n\t\t\talterProductXMLDTO.setMsrp(msrp_xml);\n\t\t\talterProductXMLDTO.setShipping(shipping_xml);\n\t\t\talterProductXMLDTO.setProductToBeExecuted(product_to_be_executed_xml);\n\t\t\tif (productService.existsOnAlterProductXML(productId)) {\n\t\t\t\tproductService.updateAlterProductXML(alterProductXMLDTO);\n\t\t\t} else {\n\t\t\t\tproductService.createAlterProductXML(alterProductXMLDTO);\n\t\t\t}\n\t\t\t\n\t\t\tif (didPriceListChange(uppDTOListPriceB4, uppDTOListPriceAfter)) {\n\t\t\t\tAlterUserProductXMLDTO alterUserProductXMLDTO = new AlterUserProductXMLDTO();\n\t\t\t\tif (whichUsersChangedByPrice != null && whichUsersChangedByPrice.size() > 0) {\n\t\t\t\t\tAlterUserProductXMLDTO aupxDTOBefore = null;\n\t\t\t\t\tboolean aupxExists = false;\n\t\t\t\t\tboolean aupxAlreadyExecuted = false;\n\t\t\t\t\tboolean isAUPXPricingAlready = false;\n\t\t\t\t\tboolean user_product_to_be_executed = false;\n\t\t\t\t\t\n\t\t\t\t\tfor (long userId_price : whichUsersChangedByPrice) {\n\t\t\t\t\t\t\n\t\t\t\t\t\taupxDTOBefore = productService.getAlterUserProductXML(userId_price, productId);\n\t\t\t\t\t\t\n\t\t\t\t\t\taupxExists = (aupxDTOBefore != null);\n\t\t\t\t\t\tif (aupxExists) {\n\t\t\t\t\t\t\taupxAlreadyExecuted = aupxDTOBefore.getUserProductToBeExecuted();\n\t\t\t\t\t\t\tisAUPXPricingAlready = aupxDTOBefore.getPriceDiscount();\n\t\t\t\t\t\t\tpriceDiscount_xml = aupxDTOBefore.getPriceDiscount();\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (!priceDiscount_xml) {\n\t\t\t\t\t\t\tpriceDiscount_xml = analyzePriceDiscount(userId_price, uppDTOListPriceB4, uppDTOListPriceAfter);\n\t\t\t\t\t\t\tif (aupxExists) if (aupxAlreadyExecuted) if (isAUPXPricingAlready) priceDiscount_xml = true;\n\t\t\t\t\t\t}\t\t\t\t\t\t\n\t\t\t\t\t\t// Does this user exist in the UPP-list [for price]?\n\t\t\t\t\t\t// If so, it means that this value shouldn't be excluded or simply just must be rendered \n\t\t\t\t\t\t// in the XML-File to generate.\n\t\t\t\t\t\texcluded_xml = !analyzeExcluded(userId_price, uppDTOListPriceAfter);\n\t\t\t\t\t\tuser_product_to_be_executed = priceDiscount_xml ? priceDiscount_xml : user_product_to_be_executed;\n\t\t\t\t\t\talterUserProductXMLDTO = new AlterUserProductXMLDTO();\n\t\t\t\t\t\talterUserProductXMLDTO.setUserId(userId_price);\n\t\t\t\t\t\talterUserProductXMLDTO.setProductId(productId);\n\t\t\t\t\t\talterUserProductXMLDTO.setPriceDiscount(priceDiscount_xml);\n\t\t\t\t\t\talterUserProductXMLDTO.setShipping(false);\n\t\t\t\t\t\talterUserProductXMLDTO.setExcluded(excluded_xml);\n\t\t\t\t\t\talterUserProductXMLDTO.setExcludedMeaning(false);\n\t\t\t\t\t\talterUserProductXMLDTO.setUserProductToBeExecuted(user_product_to_be_executed);\t// TO_BE_EXECUTED\n\t\t\t\t\t\tif (productService.existsOnAlterUserProductXML(productId, userId_price)) {\n\t\t\t\t\t\t\tproductService.updateAlterUserProductXML(alterUserProductXMLDTO);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tproductService.createAlterUserProductXML(alterUserProductXMLDTO);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (whichUsersChangedByExcluded != null && whichUsersChangedByExcluded.size() > 0) {\n\t\t\t\t\tfor (long userId_excluded : whichUsersChangedByExcluded) {\n\t\t\t\t\t\talterUserProductXMLDTO = new AlterUserProductXMLDTO();\n\t\t\t\t\t\talterUserProductXMLDTO.setUserId(userId_excluded);\n\t\t\t\t\t\talterUserProductXMLDTO.setProductId(productId);\n\t\t\t\t\t\talterUserProductXMLDTO.setPriceDiscount(false);\n\t\t\t\t\t\talterUserProductXMLDTO.setShipping(false);\n\t\t\t\t\t\talterUserProductXMLDTO.setExcluded(true);\n\t\t\t\t\t\talterUserProductXMLDTO.setExcludedMeaning(true);\n\t\t\t\t\t\talterUserProductXMLDTO.setUserProductToBeExecuted(false);\n\t\t\t\t\t\tif (productService.existsOnAlterUserProductXML(productId, userId_excluded)) {\n\t\t\t\t\t\t\tproductService.updateAlterUserProductXML(alterUserProductXMLDTO);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tproductService.createAlterUserProductXML(alterUserProductXMLDTO);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlong userId = 0L;\n\t\t\t\tAlterUserProductXMLDTO alterUserProductXMLDTO = new AlterUserProductXMLDTO();\n\t\t\t\tfor (UserProductPriceDTO userProductPriceDTO : uppDTOListPriceAfter) {\n\t\t\t\t\talterUserProductXMLDTO = new AlterUserProductXMLDTO();\n\t\t\t\t\tuserId = userProductPriceDTO.getUserId();\n\t\t\t\t\talterUserProductXMLDTO.setUserId(userId);\n\t\t\t\t\talterUserProductXMLDTO.setProductId(productId);\n\t\t\t\t\talterUserProductXMLDTO.setPriceDiscount(false);\n\t\t\t\t\talterUserProductXMLDTO.setShipping(false);\n\t\t\t\t\talterUserProductXMLDTO.setExcluded(false);\n\t\t\t\t\talterUserProductXMLDTO.setExcludedMeaning(userProductPriceDTO.getExcluded());\n\t\t\t\t\talterUserProductXMLDTO.setUserProductToBeExecuted(false);\n\t\t\t\t\tif (productService.existsOnAlterUserProductXML(productId, userId)) {\n\t\t\t\t\t\tproductService.updateAlterUserProductXML(alterUserProductXMLDTO);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tproductService.createAlterUserProductXML(alterUserProductXMLDTO);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (!product_to_be_executed_xml) {\n\t\t\t\t\tproductService.closeProductConsideredForXML(productId);\n\t\t\t\t}\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t} catch(ServiceException e){\n\t\t\tlog.debug(""Service Error when loading file"");\n\t\t\taddActionError(getText(""loyauty.error.common.service""));\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t\taddActionError(getText(""loyauty.error.common.service""));\n\t\t}\n\t}\n\t\n\tprivate boolean analyzePriceDiscount(long userId, List<UserProductPriceDTO> uppDTOListPriceB4, \n\t\t\t\t\t\t\t\tList<UserProductPriceDTO> uppDTOListPriceAfter) {\n\t\tboolean outcome = false;\n\t\tif ((uppDTOListPriceB4 == null && uppDTOListPriceAfter != null) \n\t\t\t|| (uppDTOListPriceB4 != null && uppDTOListPriceAfter == null)) {\n\t\t\toutcome = true;\n\t\t} else if (uppDTOListPriceB4 == null && uppDTOListPriceAfter == null) {\n\t\t\toutcome = false;\n\t\t} else if (uppDTOListPriceB4 != null && uppDTOListPriceAfter != null) {\n\t\t\tif (uppDTOListPriceB4.size() == uppDTOListPriceAfter.size()) {\n\t\t\t\tint SIZE_before = uppDTOListPriceB4.size();\n\t\t\t\tint SIZE = SIZE_before;\n\t\t\t\tif (SIZE > 0) {\n\t\t\t\t\tString before = """";\n\t\t\t\t\tUserProductPriceDTO upp$DTO_0 = new UserProductPriceDTO();\n\t\t\t\t\tfor (Iterator<UserProductPriceDTO> itUPPBefore = uppDTOListPriceB4.iterator(); itUPPBefore.hasNext();) {\n\t\t\t\t\t\tupp$DTO_0 = itUPPBefore.next();\n\t\t\t\t\t\tif (userId == upp$DTO_0.getUserId()) {\n\t\t\t\t\t\t\tbefore = upp$DTO_0.getPrice();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tString after = """";\n\t\t\t\t\tUserProductPriceDTO upp$DTO_f = new UserProductPriceDTO();\n\t\t\t\t\tfor (Iterator<UserProductPriceDTO> itUPPAfter = uppDTOListPriceAfter.iterator(); itUPPAfter.hasNext();) {\n\t\t\t\t\t\tupp$DTO_f = itUPPAfter.next();\n\t\t\t\t\t\tif (userId == upp$DTO_f.getUserId()) {\n\t\t\t\t\t\t\tafter = upp$DTO_f.getPrice();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\toutcome = !before.trim().equalsIgnoreCase(after.trim());\n\t\t\t\t}\t// else OR SIZE=0 ==> outcome <-- false;\n\t\t\t} else {\n\t\t\t\toutcome = true;\n\t\t\t}\n\t\t}\n\t\treturn outcome;\t\t\n\t}\n\t\n\tprivate boolean analyzeExcluded(long userId, List<UserProductPriceDTO> uppDTOListPriceAfter) {\n\t\tboolean outcome = false;\n\t\tif (uppDTOListPriceAfter != null && uppDTOListPriceAfter.size() > 0) {\n\t\t\tfor (UserProductPriceDTO userProductPriceDTO : uppDTOListPriceAfter) {\n\t\t\t\toutcome |= (userId == userProductPriceDTO.getUserId().longValue());\n\t\t\t}\n\t\t}\n\t\treturn outcome;\n\t}\n\t\n\tprivate boolean isThereTheExcludedInUserSessionDTO(String[] isExcluded, long userIdFromDTO) {\n\t\tboolean outcome = false;\n\t\tif (isExcluded != null) {\n\t\t\tif (isExcluded.length == 0) return false;\n\t\t\tfor (String excluded : isExcluded) {\n\t\t\t\toutcome |= userIdFromDTO == Long.parseLong(excluded);\n\t\t\t}\n\t\t}\n\t\treturn outcome;\n\t}\n\t\n\tprivate void updateListManufactureProduct(int position, String value, int quantity, String suppliers, String price, String msrp) {\n\t    //lack to remove\n\t\tif(productDTO.getManufactureProductList().size() >= position +1) {\n\t\t\t((ProductModelDTO)productDTO.getManufactureProductList().get(position)).setName(value);\n\t\t\t((ProductModelDTO)productDTO.getManufactureProductList().get(position)).setQuantity(quantity);\n\t\t\t((ProductModelDTO)productDTO.getManufactureProductList().get(position)).setSupplier(suppliers);\n\t\t\t((ProductModelDTO)productDTO.getManufactureProductList().get(position)).setPrice(price);\n\t\t\t((ProductModelDTO)productDTO.getManufactureProductList().get(position)).setMsrp(msrp);\n\t\t} else {\n\t\t\tproductDTO.getManufactureProductList().add(ProductModelDTO.valueOf(0, value, quantity, suppliers, price, msrp));\n\t\t}\n\t}\n\t\n\tprivate List<CommonDTO> internationalizeName(List<CategoryDTO> list){\n\t\tList<CommonDTO> commonListDTO = new ArrayList<CommonDTO>();\n\t\tCommonDTO commonDTO;\n\t\tfor(CategoryDTO cat : list){\n\t\t\tcommonDTO = CommonDTO.valueOf(cat.getId(), getText(cat.getCode()));\t\t\t\n\t\t\tcommonListDTO.add(commonDTO);\n\t\t}\t\t\n\t\treturn commonListDTO;\n\t}\n    \n    private String html2text(String html) {\n        return Jsoup.parse(html).text();\n    }\n    \n    private boolean didPriceListChange(\tList<UserProductPriceDTO> uppDTOListBefore, \n    \t\t\t\t\t\t\t\t\tList<UserProductPriceDTO> uppDTOListAfter) {\n    \tboolean outcome = false;\n    \tint b4 = 0, after = 0;\n    \t\n    \tlong userId$B4 = 0L;\n    \tlong userId$After = 0L;\n    \tSet<Long> allUserIdsSet = new HashSet<Long>();\n    \t\n    \tfor (UserProductPriceDTO uppDTOB4 : uppDTOListBefore) {    \t\t\n    \t\tuserId$B4 =  uppDTOB4.getUserId();\n    \t\tallUserIdsSet.add(userId$B4);\n    \t\tif (!uppDTOB4.getExcluded()) ++b4;\n    \t}\n    \t\n    \tfor (UserProductPriceDTO uppDTOAfter : uppDTOListAfter) {\n    \t\tuserId$After = uppDTOAfter.getUserId();\n    \t\tallUserIdsSet.add(userId$After);\n    \t\tif (!uppDTOAfter.getExcluded()) ++after;\n    \t}\n    \t\n    \tif (b4 == after) {\n    \t\tfor (long userId : allUserIdsSet) {\n    \t\t\toutcome |= analyzePriceDiscount(userId, uppDTOListBefore, uppDTOListAfter);\n    \t\t}\n    \t} else {\n    \t\toutcome = true;\n    \t}\n    \t\n    \treturn outcome;\n    }\n    \n\tprivate String wsRipper(String input) {\n\t\tString outcome = """";\n\t\tif (input.length() > 0) {\n\t\t\tchar[] aCharArray = input.toCharArray();\n\t\t\tfor (char c : aCharArray) {\n\t\t\t\tif (c != ' ') {\n\t\t\t\t\toutcome += c;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn outcome;\n\t}\n    \n\tpublic static UserSessionDTO getUserSessionDTO(ClientCategoryDTO clDTO){\n\t\tLong userId=clDTO.getClientCategoryId();\n\t\tString login=clDTO.getClientCategoryName();\n\t\tInteger TypeId=2;\n\t\tInteger userLangId = 2;\n\t\tInteger RESULTS_PER_PAGE=10;\n\t\tString email="""";\n\t\tString code="""";\n\t\tBoolean isActive=true;\n\t\tLong template =1L;\n\t\tUserSessionDTO sessionDTO =new UserSessionDTO(userId, login, TypeId, userLangId, Language.ENGLISH.getValue(),\n\t\t\t\t\t\t\t\t\t\t\t\t\t  RESULTS_PER_PAGE, email, code, isActive,template);\n\t\t\n\t\treturn sessionDTO;\n\t}\n\t\n\t//Make ""large"" and ""boxLength"" the biggest size between L,W and H\n\tpublic void switchBetweenLargeWidthHeight () {\n\t\tDouble L,W,H, permute;\n\t\t// large/width/high\n\t\tL = W = H = 0D;\n\t\tif(large!=null && !large.replaceAll("" "", """").isEmpty()) L = Double.parseDouble(large);\n\t\tif(width!=null && !width.replaceAll("" "", """").isEmpty()) W = Double.parseDouble(width);\n\t\tif(high!=null && !high.replaceAll("" "", """").isEmpty())   H = Double.parseDouble(high);\n\t\tif(L < H) {\n\t\t\tpermute = L;\n\t\t\tL = H;\n\t\t\tH = permute;\n\t\t\tlarge = L+"""";\n\t\t\thigh = H+"""";\n\t\t}\n\t\tif(L < W) {\n\t\t\tpermute = L;\n\t\t\tL = W;\n\t\t\tW = permute;\n\t\t\tlarge = L+"""";\n\t\t\twidth = W+"""";\n\t\t}\n\t\tif(W < H) {\n\t\t\tpermute = W;\n\t\t\tW = H;\n\t\t\tH = permute;\n\t\t\twidth = W+"""";\n\t\t\thigh = H+"""";\n\t\t}\n\t\t\n\t\t// boxLength/boxWidth/boxHeight\n\t\tL = boxDTO.getLength();\n\t\tW = boxDTO.getWidth();\n\t\tH = boxDTO.getHeight();\n\t\tDouble WDTH = boxDTO.getTotalWeight();\n\t\tif(L==null) { L=0D; boxDTO.setLength(0D); }\n\t\tif(W==null) { W=0D; boxDTO.setWidth(0D); }\n\t\tif(H==null) { H=0D; boxDTO.setHeight(0D); }\n\t\tif(WDTH==null) { WDTH=0D; boxDTO.setTotalWeight(0D); }\n\t\tif(L < H) {\n\t\t\tpermute = L;\n\t\t\tL = H;\n\t\t\tH = permute;\n\t\t\tboxDTO.setLength(L);\n\t\t\tboxDTO.setHeight(H);\n\t\t}\n\t\tif(L < W) {\n\t\t\tpermute = L;\n\t\t\tL = W;\n\t\t\tW = permute;\n\t\t\tboxDTO.setLength(L);\n\t\t\tboxDTO.setWidth(W);\n\t\t}\n\t\tif(W < H) {\n\t\t\tpermute = W;\n\t\t\tW = H;\n\t\t\tH = permute;\n\t\t\tboxDTO.setWidth(W);\n\t\t\tboxDTO.setHeight(H);\n\t\t}\n\t\t\n\t\t// largeCm/widthCm/highCm\n\t\t// Only to display them on addProductSuccess\n\t\tL = W = H = 0D;\n\t\tif(largeCm!=null && !largeCm.replaceAll("" "", """").isEmpty()) L = Double.parseDouble(largeCm);\n\t\tif(widthCm!=null && !widthCm.replaceAll("" "", """").isEmpty()) W = Double.parseDouble(widthCm);\n\t\tif(highCm!=null && !highCm.replaceAll("" "", """").isEmpty())   H = Double.parseDouble(highCm);\n\t\tif(L < H) {\n\t\t\tpermute = L;\n\t\t\tL = H;\n\t\t\tH = permute;\n\t\t\tlargeCm = L+"""";\n\t\t\thighCm = H+"""";\n\t\t}\n\t\tif(L < W) {\n\t\t\tpermute = L;\n\t\t\tL = W;\n\t\t\tW = permute;\n\t\t\tlargeCm = L+"""";\n\t\t\twidthCm = W+"""";\n\t\t}\n\t\tif(W < H) {\n\t\t\tpermute = W;\n\t\t\tW = H;\n\t\t\tH = permute;\n\t\t\twidthCm = W+"""";\n\t\t\thighCm = H+"""";\n\t\t}\n\t\t\n\t\t// boxLengthCm/boxWidthCm/boxHeightCm\n\t\t// Only to display them on addProductSuccess\n\t\tL = W = H = 0D;\n\t\tif(boxLengthCm!=null && !boxLengthCm.replaceAll("" "", """").isEmpty()) L = Double.parseDouble(boxLengthCm);\n\t\tif(boxWidthCm!=null && !boxWidthCm.replaceAll("" "", """").isEmpty())   W = Double.parseDouble(boxWidthCm);\n\t\tif(boxHeightCm!=null && !boxHeightCm.replaceAll("" "", """").isEmpty()) H = Double.parseDouble(boxHeightCm);\n\t\tif(L < H) {\n\t\t\tpermute = L;\n\t\t\tL = H;\n\t\t\tH = permute;\n\t\t\tboxLengthCm = L+"""";\n\t\t\tboxHeightCm = H+"""";\n\t\t}\n\t\tif(L < W) {\n\t\t\tpermute = L;\n\t\t\tL = W;\n\t\t\tW = permute;\n\t\t\tboxLengthCm = L+"""";\n\t\t\tboxWidthCm = W+"""";\n\t\t}\n\t\tif(W < H) {\n\t\t\tpermute = W;\n\t\t\tW = H;\n\t\t\tH = permute;\n\t\t\tboxWidthCm = W+"""";\n\t\t\tboxHeightCm = H+"""";\n\t\t}\n\t}//Make ""large"" the biggest size between L,W and H\n\t\n}\n----------------------------------- SOURCE END -------------------------------------",1420673719348
error,log,,,"Problems occurred when invoking code from plug-in: ""org.eclipse.jdt.ui"".",1420673719349
error,log,,,"Error in JDT Core during reconcile",1420673719350
error,log,,,"Exception occurred during problem detection:\n----------------------------------- SOURCE BEGIN -------------------------------------\npackage com.loyauty.web.struts.action.product;\n\nimport java.io.File;\nimport java.util.ArrayList;\nimport java.util.Calendar;\nimport java.util.HashSet;\nimport java.util.Iterator;\nimport java.util.List;\nimport java.util.Set;\nimport lombok.Getter;\nimport lombok.Setter;\n\nimport com.loyauty.enums.Language;\nimport com.loyauty.enums.PriceType;\nimport com.loyauty.enums.ProductStatus;\nimport com.loyauty.enums.UserProductStatus;\nimport com.loyauty.enums.UserType;\nimport com.loyauty.exception.ServiceException;\nimport com.loyauty.exception.ServiceLocatorException;\n//import com.loyauty.model.Operations;\nimport com.loyauty.model.User;\nimport com.loyauty.service.brand.BrandService;\nimport com.loyauty.service.common.CommonService;\nimport com.loyauty.service.core.dto.AlterProductXMLDTO;\nimport com.loyauty.service.core.dto.AlterUserProductXMLDTO;\nimport com.loyauty.service.core.dto.BasicUserDTO;\nimport com.loyauty.service.core.dto.BoxDTO;\nimport com.loyauty.service.core.dto.CategoryDTO;\nimport com.loyauty.service.core.dto.ClientCategoryDTO;\nimport com.loyauty.service.core.dto.CommonDTO;\nimport com.loyauty.service.core.dto.ImageDTO;\nimport com.loyauty.service.core.dto.OperationsDTO;\nimport com.loyauty.service.core.dto.ProductDTO;\nimport com.loyauty.service.core.dto.ProductLinkDTO;\nimport com.loyauty.service.core.dto.ProductModelDTO;\nimport com.loyauty.service.core.dto.SpecificationDTO;\nimport com.loyauty.service.core.dto.UserDTO;\nimport com.loyauty.service.core.dto.UserProductPriceDTO;\nimport com.loyauty.service.core.dto.UserSessionDTO;\n//import com.loyauty.service.core.dto.UsersPrivilegesDTO;\nimport com.loyauty.service.image.ImageService;\nimport com.loyauty.service.operations.OperationsService;\nimport com.loyauty.service.product.ProductService;\nimport com.loyauty.service.user.UserService;\nimport com.loyauty.util.CommonUtils;\nimport com.loyauty.web.WebConstants;\nimport com.loyauty.web.struts.action.LoyautyAction;\nimport org.jsoup.Jsoup;\n\npublic class EditProduct extends LoyautyAction {\n\t\n\tprivate static final long serialVersionUID = 4688139859406086753L;\n\t\n\tprivate ProductService productService;\n\tprivate ImageService imageService;\n\tprivate CommonService commonService;\n\tprivate BrandService brandService;\n\tprivate UserService userService;\n\tprivate OperationsService operationsService;\n\t\n\tprivate UserSessionDTO userSession;\n\t@Getter @Setter\n\tprivate long productId;\n\t@Getter @Setter\n\tprivate long imageId;\n\t@Getter @Setter\n\tprivate long brand;\n\t@Getter @Setter\n\tprivate String brandName;\n\t@Getter @Setter\n\tprivate long category;\n\t@Getter @Setter\n\tprivate String categoryName;\n\t@Getter @Setter\n\tprivate long mainSpecification; \n\t@Getter @Setter\n\tprivate String mainSpecificationName;\n\t@Getter @Setter\n\tprivate String manufProductID;\n\t@Getter @Setter\n\tprivate String manufProductID1;\n\t@Getter @Setter\n\tprivate String manufProductID2;\n\t@Getter @Setter\n\tprivate String manufProductID3;\n\t@Getter @Setter\n\tprivate String manufProductID4;\n\t\n\t@Getter @Setter\n\tprivate Integer manufProductQuantity = 0;\n\t@Getter @Setter\n\tprivate Integer manufProductQuantity1 = 0;\n\t@Getter @Setter\n\tprivate Integer manufProductQuantity2 = 0;\n\t@Getter @Setter\n\tprivate Integer manufProductQuantity3 = 0;\n\t@Getter @Setter\n\tprivate Integer manufProductQuantity4 = 0;\n\t\n\t@Getter @Setter\n\tprivate String supplier;\n\t@Getter @Setter\n\tprivate String supplier1;\n\t@Getter @Setter\n\tprivate String supplier2;\n\t@Getter @Setter\n\tprivate String supplier3;\n\t@Getter @Setter\n\tprivate String supplier4;\n\t\n\t@Getter @Setter\n\tprivate String price;\n\t@Getter @Setter\n\tprivate String price1;\n\t@Getter @Setter\n\tprivate String price2;\n\t@Getter @Setter\n\tprivate String price3;\n\t@Getter @Setter\n\tprivate String price4;\t\n\n\t@Getter @Setter\n\tprivate String msrp0;\n\t@Getter @Setter\n\tprivate String msrp1;\n\t@Getter @Setter\n\tprivate String msrp2;\n\t@Getter @Setter\n\tprivate String msrp3;\n\t@Getter @Setter\n\tprivate String msrp4;\n\t\n\t@Getter @Setter\n\tprivate String upc;\n\t@Getter @Setter\n\tprivate String loyaltyProductId;\n\t@Getter @Setter\n\tprivate String nameEn;\n\t@Getter @Setter\n\tprivate String nameFr;\n\t@Getter @Setter\n\tprivate String msrp;\n\t@Getter @Setter\n\tprivate String cost;\n\t@Getter @Setter\n\tprivate String large;\n\t@Getter @Setter\n\tprivate String width;\n\t@Getter @Setter\n\tprivate String high;\n\t@Getter @Setter\n\tprivate String weight;\n\t@Getter @Setter\n\tprivate Double boxLength;\n\t@Getter @Setter\n\tprivate Double boxWidth;\n\t@Getter @Setter\n\tprivate Double boxHeight;\n\t/*\n\t@Getter @Setter\n\tprivate Double boxWeight;\n\t*/\n\t@Getter @Setter\n\tprivate Double boxTotalWeight;\n\t@Getter @Setter\n\tprivate String largeCm;\n\t@Getter @Setter\n\tprivate String widthCm;\n\t@Getter @Setter\n\tprivate String highCm;\n\t@Getter @Setter\n\tprivate String weightKg;\n\t@Getter @Setter\n\tprivate String boxLengthCm;\n\t@Getter @Setter\n\tprivate String boxWidthCm;\n\t@Getter @Setter\n\tprivate String boxHeightCm;\n\t@Getter @Setter\n\tprivate String boxWeightKg;\n\t@Getter @Setter\n\tprivate Integer statusProductBox;\n\t@Getter @Setter\n\tprivate Boolean canadaPostSizesVerified;\n\t@Getter @Setter\n\tprivate BoxDTO boxDTO;\n\t\n\t@Getter @Setter\n\tprivate String descriptionEn;\n\t@Getter @Setter\n\tprivate String descriptionFr;\n\t@Getter @Setter\n\tprivate String specificationEn;\n\t@Getter @Setter\n\tprivate String specificationFr;\n\t@Getter @Setter\n\tprivate String otherEng;\n\t@Getter @Setter\n\tprivate String otherFr;\n\t\n\t//uploading files\n\t@Getter @Setter\t\n\tprivate File productImage; \n\t@Getter @Setter\n\tprivate String productImageContentType;\n\t@Getter @Setter\n\tprivate String productImageFileName;\n\t@Getter @Setter\n\tprivate ImageDTO imgDTO;\n\t@Getter @Setter\n\tprivate List<CommonDTO> categoryList;\n\t@Getter @Setter\n\tprivate List<SpecificationDTO> mainSpecificationList;\n\t@Getter @Setter\n\tprivate boolean update = false;\n\t@Getter @Setter\n\tprivate ProductDTO productDTO;\n\t@Getter @Setter\n\tprivate UserProductPriceDTO userProductPriceDTO;\t\n\t\n\t@Getter @Setter\n\tprivate List<CommonDTO> brandList;\n\t@Getter @Setter\n\tprivate List<CommonDTO> statusList;\n\n\t@Getter @Setter\n\tprivate String linkUrl;\n\t@Getter @Setter\n\tprivate String note;\n\t@Getter @Setter\n\tprivate String statusName;\t\n\t@Getter @Setter\n\tprivate Integer statusId;\n\t@Getter @Setter\n\tprivate List<UserDTO> activeClientsList;\n\t@Getter @Setter\n\tprivate int activeClientsSize;\n\t@Getter @Setter\n\tprivate int activeClientsTFSize;\t\n\t@Getter @Setter\n\tprivate String loyaltyProductIdSub;\n\t\n\t@Getter @Setter\n\tprivate String periodTime;\n\t@Getter @Setter\n\tprivate String warrantyQuantity;\n\t@Getter @Setter\n\tprivate Boolean defectFree;\n\t\n\t@Getter @Setter\n\tprivate List<UserSessionDTO> userNameList;\n\t@Getter @Setter\n\tprivate String[] userPrice;\n\t@Getter @Setter\n\tprivate String[] percentageProfit;\n\t@Getter @Setter\n\tprivate String[] percentageDiscount;\n\t@Getter @Setter\n\tprivate String[] isExcluded;\n\t@Getter @Setter\n\tprivate String[] excluded;\n\t\n\t@Getter @Setter\n\tprivate Double[] currencyRate;\n\t@Getter @Setter\n\tprivate String[] currencySymbol;\n\t@Getter @Setter\n\tprivate String[] currencyPrice;\t//CURRENCY_LS_PRICE\n\t\n\t@Getter @Setter\n\tprivate List<ClientCategoryDTO> listClientCategory;\n\t\n\t@Getter @Setter\n\tprivate OperationsDTO operationDTO;\n\t\n\tpublic EditProduct () throws ServiceLocatorException {\n\t\tsuper();\t\n\t\tproductService = getServiceLocator().getProductService();\n\t\tcommonService = getServiceLocator().getCommonService();\n\t\timageService = getServiceLocator().getImageService();\n\t\tbrandService = getServiceLocator().getBrandService();\n\t\tuserService = getServiceLocator().getUserService();\n\t\toperationsService = getServiceLocator().getOperationsService();\n\t}\n\t\n\t@Override\n\tpublic void prepare() {\n\t\ttry {\n\t\t\tbrandList = commonService.getBrands();\n\t\t\tstatusList = commonService.getAllProductStatuses();\n\t\t\tcategoryList  = internationalizeName(commonService.getCategoriesByBrand(brand));\n\t\t\tmainSpecificationList = productService.getMainSpecificationByCategory(category);\t\t\t\n\t\t\tproductId = (Long) request.getSession(true).getAttribute(""productId"");\n\t\t\tproductDTO = productService.getProductInformation(productId, null);\n\t\t\tboxDTO = productService.getBoxByProductId(productId);\n\t\t\tif(boxDTO==null)boxDTO=new BoxDTO();\n\t\t\timgDTO = productDTO.getImage();\n\t\t\tactiveClientsList = productService.getAllActiveClients(productId);\n\t\t\tactiveClientsTFSize = activeClientsSize = activeClientsList.size();\n\t\t\tactiveClientsTFSize = activeClientsList.isEmpty() ? 1 : activeClientsTFSize;\n\t\t\tBasicUserDTO basicUserDTO = new BasicUserDTO();\n\t\t\tbasicUserDTO.setTypeId(UserType.USER.getValue());\n\t\t\tbasicUserDTO.setActive(true);\n\t\t\tuserNameList = userService.getAllUserAccounts(basicUserDTO);\n\t\t\tlistClientCategory = userService.getAllClientCategory();\n\t\t\tfor (ClientCategoryDTO ccDTO : listClientCategory) {\n\t\t\t\tuserNameList.add(getUserSessionDTO(ccDTO));\n\t\t\t}\t\t\t\n\t\t} catch(Exception e) {\n\t\t\te.printStackTrace();\n\t\t\tlog.debug(""Error when getting product in method prepare()"");\n\t\t}\n\t}\n\t\n\t@Override\n\tpublic void validate() {\n\t\t\t\n\t\t\tif(brand < 0)\n\t\t\t\taddActionError(getText(""loyauty.error.common.brand_required""));\n\t\t\tif(category < 0)\n\t\t\t\taddActionError(getText(""loyauty.error.common.category_required""));\n/*\t\t\tif(mainSpecification < 0)\n\t\t\t\taddActionError(getText(""loyauty.error.common.type_spec_required""));*/\n\t\t\tif(manufProductID.trim().length() == 0)\n\t\t\t\taddActionError(getText(""loyauty.error.common.manufacture_required""));\n\t\t\t\n\t\t\tif(loyaltyProductId.trim().length() == 0) {\n\t\t\t\taddActionError(getText(""loyauty.error.common.productId_required""));\n\t\t\t} else {\t\n\t\t\t\ttry {\n\t\t\t\t\tProductDTO aProductDTO = productService.getProductIdFromLSProductId(loyaltyProductId);\n\t\t\t\t\tif (aProductDTO != null) {\n\t\t\t\t\t\tif (productId != aProductDTO.getId() && !productDTO.getLoyaltyProductId().matches(""^\\\\s*$"")) {\n\t\t\t\t\t\t\taddActionError(getText(""loyauty.error.common.productId_alreadyExists""));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(!loyaltyProductId.trim().startsWith(brandService.getBrand(brand).getCode()))\n\t\t\t\t\t{\n\t\t\t\t\t\taddActionError(getText(""loyauty.error.common.productId_code""));\n\t\t\t\t\t}\n\t\t\t\t} catch (ServiceException sx) {\n\t\t\t\t\taddActionError(getText(""loyauty.error.common.service""));\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif(nameEn.trim().length() == 0)\n\t\t\t\taddActionError(getText(""loyauty.error.common.name_en_required""));\n\t\t\tif(nameFr.trim().length() == 0)\n\t\t\t\taddActionError(getText(""loyauty.error.common.name_fr_required""));\n\t\t\t\n\t\t\tif(msrp.trim().length() == 0 || msrp.equals(""NaN""))\n\t\t\t\taddActionError(getText(""loyauty.error.common.msrp_required""));\n\t\t\tif(cost.trim().length() == 0 || cost.equals(""NaN""))\n\t\t\t\taddActionError(getText(""loyauty.error.common.cost_required""));\n\t\t\t\n\t\t\tif (statusId == ProductStatus.DISCONTINUED.getValue()) {\n\t\t\t\ttry {\n\t\t\t\t\tif (loyaltyProductIdSub.length() > 0 && !loyaltyProductIdSub.matches(""^\\\\s*$"") ) {\n\t\t\t\t\t\tProductDTO newProductDTO = productService.getProductIdFromLSProductId(loyaltyProductIdSub);\n\t\t\t\t\t\tString newSubbie = (newProductDTO == null) ? """" : newProductDTO.getLoyaltyProductId();\n\t\t\t\t\t\tif (newSubbie == null || newSubbie.matches(""^\\\\s*$"")) {\n\t\t\t\t\t\t\taddActionError(getText(""loyauty.error.common.productIdSub_required""));\n\t\t\t\t\t\t} else  {\n\t\t\t\t\t\t\tif (newSubbie.equalsIgnoreCase(loyaltyProductId)) {\n\t\t\t\t\t\t\t\taddActionError(getText(""loyauty.error.common.productIdSub_equal""));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} catch (ServiceException sx) {\n\t\t\t\t\taddActionError(getText(""loyauty.error.common.service""));\n\t\t\t\t}\n\t\t\t} else if (statusId == ProductStatus.DISABLED.getValue()) {\n\t\t\t\tif (activeClientsList.size() != 0) {\n\t\t\t\t\taddActionError(getText(""loyauty.error.common.disableWithActive""));\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t/*if(descriptionEn.trim().length() == 0)\n\t\t\t\taddActionError(getText(""loyauty.error.common.description_en_required""));\n\t\t\tif(descriptionFr.trim().length() == 0)\n\t\t\t\taddActionError(getText(""loyauty.error.common.description_fr_required""));\n\t\t\tif(specificationEn.trim().length() == 0)\n\t\t\t\taddActionError(getText(""loyauty.error.common.specification_en_required""));\n\t\t\tif(specificationFr.trim().length() == 0)\n\t\t\t\taddActionError(getText(""loyauty.error.common.specification_fr_required""));\n\t\t\tif(width == 0)\n\t\t\t\taddActionError(getText(""loyauty.error.common.width_required""));\n\t\t\tif(large == 0)\n\t\t\t\taddActionError(getText(""loyauty.error.common.large_required""));\n\t\t\tif(high == 0)\n\t\t\t\taddActionError(getText(""loyauty.error.common.high_required""));\n\t\t\t*/\n\t\t\t\n\t\t\ttry {\t\t\t\n\t\t\t\tFloat.parseFloat(msrp);\n\t\t\t} catch(NumberFormatException mfe){\n\t\t\t\taddActionError(getText(""loyauty.error.common.msrp_number""));\n\t\t\t}\t\t\t\n\t\t\ttry {\t\t\t\n\t\t\t\tFloat.parseFloat(cost);\n\t\t\t} catch(NumberFormatException mfe){\n\t\t\t\taddActionError(getText(""loyauty.error.common.cost_number""));\n\t\t\t}\n\t\t\t/*\n\t\t\ttry {\n\t\t\t\tInteger.parseInt(weight);\n\t\t\t} catch(NumberFormatException mfe){\n\t\t\t\taddActionError(getText(""loyauty.error.common.weight_number""));\n\t\t\t}*/\n\t}\n\t\n\t@Override\n\tpublic String execute() throws Exception {\n\t\ttry {\n\t\t\t\n\t\t\tProductDTO productDTOB4 = productService.getProductInformation(productId, null);\n\t\t\tBoxDTO boxDTOB4 = productService.getBoxByProductId(productId);\n\t\t\tif(boxDTOB4 == null) boxDTOB4 = new BoxDTO();\n\t\t\toperationDTO = new OperationsDTO();\n\t\t\tString managerLogin = """";\n\t\t\tUser userManager = new User();\n\t\t\tuserSession = (UserSessionDTO) request.getSession().getAttribute(WebConstants.USER);\n\t\t\tif (userSession != null){\n\t\t\t\tmanagerLogin = userSession.getLogin();\n\t\t\t\tuserManager = userService.getUserByLogin(managerLogin);\n\t\t\t}\n\t\t\tLong managerId = userManager.getId();\n\t\t\tString dataBefore = """";\n\t\t\tString dataAfter = """";\n\t\t\t\n\t\t\t/*\n\t\t\tboolean wereWgtDimChanged = productDTO.getWereWgtDimChanged();\t\t\t\n\t\t\twereWgtDimChanged = (!wereWgtDimChanged) \n\t\t\t\t\t\t\t\t? (!weight.equalsIgnoreCase(productDTO.getWeight())\n\t\t\t\t\t\t\t\t\t|| \t!large.equalsIgnoreCase(productDTO.getLarge())\n\t\t\t\t\t\t\t\t\t|| \t!width.equalsIgnoreCase(productDTO.getWidth())\n\t\t\t\t\t\t\t\t\t|| \t!high.equalsIgnoreCase(productDTO.getHigh())\n\t\t\t\t\t\t\t\t\t|| \t!cost.equalsIgnoreCase(productDTO.getCost())) \n\t\t\t\t\t\t\t\t: wereWgtDimChanged;\n\t\t\tproductDTO.setWereWgtDimChanged(wereWgtDimChanged);\n\t\t\t*/\n\t\t\t\n\t\t\t/*if(boxDTOB4.getWeight()==null)boxDTOB4.setWeight(0.00);\n\t\t\tif(boxDTOB4.getLength()==null)boxDTOB4.setLength(0.00);\n\t\t\tif(boxDTOB4.getWidth()==null)boxDTOB4.setWidth(0.00);\n\t\t\tif(boxDTOB4.getHeight()==null)boxDTOB4.setHeight(0.00);\n\n\t\t\tif(boxDTO.getWeight()==null)boxDTO.setWeight(0.00);\n\t\t\tif(boxDTO.getLength()==null)boxDTO.setLength(0.00);\n\t\t\tif(boxDTO.getWidth()==null)boxDTO.setWidth(0.00);\n\t\t\tif(boxDTO.getHeight()==null)boxDTO.setHeight(0.00);*/\n\n\t\t\t\n\t\t\tboolean wereWgtDimChanged = productDTO.getWereWgtDimChanged();\t\t\t\n\t\t\twereWgtDimChanged = (!wereWgtDimChanged ) \n\t\t\t\t\t\t\t\t? ( (boxDTOB4.getWeight()!=boxDTO.getWeight())\n\t\t\t\t\t\t\t\t\t||(boxDTOB4.getLength()!=boxDTO.getLength())\n\t\t\t\t\t\t\t\t\t||(boxDTOB4.getWidth()!=boxDTO.getWidth())\n\t\t\t\t\t\t\t\t\t||(boxDTOB4.getHeight()!=boxDTO.getHeight())) \n\t\t\t\t\t\t\t\t: wereWgtDimChanged;\n\t\t\tproductDTO.setWereWgtDimChanged(wereWgtDimChanged);\n\t\t\t\n\t\t\tSystem.out.println(boxDTOB4.getWeight()+"" --- ""+boxDTO.getWeight());\n\t\t\tSystem.out.println(boxDTOB4.getLength()+"" --- ""+boxDTO.getLength());\n\t\t\tSystem.out.println(boxDTOB4.getWidth()+"" --- ""+boxDTO.getWidth());\n\t\t\tSystem.out.println(boxDTOB4.getHeight()+"" --- ""+boxDTO.getHeight());\n\t\t\t\n\t\t\tif(upc!=null && !upc.equals(""""))upc=upc.replaceAll("" "", """");\n\t\t\tproductDTO.setUpc(upc);\n\t\t\t\n\t\t\tboxDTO.setProductId(productId);\n\t\t\tboxDTO.setLength(boxLength);\n\t\t\tboxDTO.setWidth(boxWidth);\n\t\t\tboxDTO.setHeight(boxHeight);\n\t\t\tboxDTO.setTotalWeight(boxTotalWeight);\n\t\t\tif(statusProductBox==null)statusProductBox=0;\n\t\t\tboxDTO.setStatusId(statusProductBox);\n\t\t\t/*if(statusProductBox==1) {\n\t\t\t\tboxDTO.setStatusId(1);\n\t\t\t} else {\n\t\t\t\tboxDTO.setStatusId(0);\n\t\t\t}*/\n\t\t\t//Make ""large"" and ""boxLength"" the biggest size between L,W and H\n\t\t\tswitchBetweenLargeWidthHeight();\n\t\t\t\n\t\t\tif (!productDTOB4.getLarge().equals(large)) {\n\t\t\t\tdataBefore += "" Large:["" + productDTOB4.getLarge() + ""]\\n"";\n\t\t\t\tdataAfter += "" Large:["" + large + ""]\\n"";\n\t\t\t}\n\t\t\t\n\t\t\tif (!productDTOB4.getWidth().equals(width)) {\n\t\t\t\tdataBefore += "" Width:["" + productDTOB4.getWidth() + ""]\\n"";\n\t\t\t\tdataAfter += "" Width:["" + width + ""]\\n"";\n\t\t\t}\n\t\t\t\n\t\t\tif (!productDTOB4.getHigh().equals(high)) {\n\t\t\t\tdataBefore += "" High:["" + productDTOB4.getHigh() + ""]\\n"";\n\t\t\t\tdataAfter += "" High:["" + high + ""]\\n"";\n\t\t\t}\n\t\t\t\n\t\t\tif (!productDTOB4.getWeight().equals(weight)){\n\t\t\t\tdataBefore += "" Weight:[""+productDTOB4.getWeight()+""]\\n"";\n\t\t\t\tdataAfter += "" Weight:[""+weight+""]\\n"";\n\t\t\t}\n\t\t\t\n\t\t\t// Box sizes\n\t\t\tif (boxDTOB4.getLength()!= null && !boxDTOB4.getLength().equals(boxDTO.getLength())) {\n\t\t\t\tdataBefore += "" Box Large:["" + boxDTOB4.getLength() + ""]\\n"";\n\t\t\t\tdataAfter += "" Box Large:["" + boxDTO.getLength() + ""]\\n"";\n\t\t\t}\n\t\t\t\n\t\t\tif (boxDTOB4.getWidth()!=null && !boxDTOB4.getWidth().equals(boxDTO.getWidth())) {\n\t\t\t\tdataBefore += "" Box Width:["" + boxDTOB4.getWidth() + ""]\\n"";\n\t\t\t\tdataAfter += "" Box Width:["" + boxDTO.getWidth() + ""]\\n"";\n\t\t\t}\n\t\t\t\n\t\t\tif (boxDTOB4.getHeight()!=null && !boxDTOB4.getHeight().equals(boxDTO.getHeight())) {\n\t\t\t\tdataBefore += "" Box Height:["" + boxDTOB4.getHeight() + ""]\\n"";\n\t\t\t\tdataAfter += "" Box Height:["" + boxDTO.getHeight() + ""]\\n"";\n\t\t\t}\n\t\t\t\n\t\t\tif (boxDTOB4.getTotalWeight()!=null && !boxDTOB4.getTotalWeight().equals(boxDTO.getTotalWeight())) {\n\t\t\t\tdataBefore += "" Box Weight:[""+boxDTOB4.getTotalWeight()+""]\\n"";\n\t\t\t\tdataAfter += "" Box Weight:[""+boxDTO.getTotalWeight()+""]\\n"";\n\t\t\t}\n\t\t\t\n\t\t\tif (boxDTOB4.getStatusId()!=null && !boxDTOB4.getStatusId().equals(boxDTO.getStatusId())) {\n\t\t\t\tdataBefore += "" CP Verified:[""+boxDTOB4.getStatusId()+""]\\n"";\n\t\t\t\tdataAfter += "" CP Verified:[""+boxDTO.getStatusId()+""]\\n"";\n\t\t\t}\n\t\t\t\n\t\t\tif (productDTOB4.getUpc()!=null && !productDTOB4.getUpc().equals(upc)) {\n\t\t\t\tdataBefore += "" UPC:["" + productDTOB4.getUpc() + ""]\\n"";\n\t\t\t\tdataAfter += "" UPC:["" + upc + ""]\\n"";\n\t\t\t}\n\t\t\n\t\t\t\n\t\t\tif (productDTOB4.getUpc()!=null && !productDTOB4.getUpc().equals(upc)) {\n\t\t\t\tdataBefore += "" UPC:["" + productDTOB4.getUpc() + ""]\\n"";\n\t\t\t\tdataAfter += "" UPC:["" + upc + ""]\\n"";\n\t\t\t}\n\t\t\t\n\t\t\tif (!productDTOB4.getCost().equals(cost)) {\n\t\t\t\tdataBefore += "" Our Cost:["" + productDTOB4.getCost() + ""]\\n"";\n\t\t\t\tdataAfter += "" Our Cost:["" + cost + ""]\\n"";\n\t\t\t}\t\n\t\t\tif (manufProductID != null)\n\t\t\t\tif(manufProductQuantity != null)\n\t\t\t\t\tupdateListManufactureProduct(0, manufProductID, manufProductQuantity, supplier, price, msrp0);\n\t\t\t\telse\n\t\t\t\t\tupdateListManufactureProduct(0, manufProductID, 0, supplier, price, msrp0);\n\t\t\tif (manufProductID1 != null)\n\t\t\t\tif(manufProductQuantity1 != null)\n\t\t\t\t\tupdateListManufactureProduct(1, manufProductID1, manufProductQuantity1, supplier1, price1, msrp1);\n\t\t\t\telse\n\t\t\t\t\tupdateListManufactureProduct(1, manufProductID1, 0, supplier1, price1, msrp1);\n\t\t\tif (manufProductID2 != null)\n\t\t\t\tif(manufProductQuantity2 != null)\n\t\t\t\t\tupdateListManufactureProduct(2, manufProductID2, manufProductQuantity2, supplier2, price2, msrp2);\n\t\t\t\telse\n\t\t\t\t\tupdateListManufactureProduct(2, manufProductID2, 0, supplier2, price2, msrp2);\n\t\t\tif (manufProductID3 != null)\n\t\t\t\tif (manufProductQuantity3 != null)\n\t\t\t\t\tupdateListManufactureProduct(3, manufProductID3, manufProductQuantity3, supplier3, price3, msrp3);\n\t\t\t\telse\n\t\t\t\t\tupdateListManufactureProduct(3, manufProductID3, 0, supplier3, price3, msrp3);\n\t\t\tif (manufProductID4 != null)\n\t\t\t\tif(manufProductQuantity4 != null)\n\t\t\t\t\tupdateListManufactureProduct(4, manufProductID4, manufProductQuantity4, supplier4, price4, msrp4);\n\t\t\t\telse\n\t\t\t\t\tupdateListManufactureProduct(4, manufProductID4, 0, supplier4, price4, msrp4);\n\t\t    List<ProductModelDTO>listModelB4= productDTOB4.getManufactureProductList();\n\t\t    List<ProductModelDTO>listModelAfter= productDTO.getManufactureProductList();\n\t\t    for(int i=0;i<listModelB4.size() && i<listModelAfter.size();i++){\n\t\t    \tfor(int j=0;j<listModelAfter.size();j++){\n\t\t    \t\t\tString manufPB4="" Manuf.P:""+listModelB4.get(i).getName()+""["";\n\t\t    \t\t\tString manufPAfter="" Manuf.P:""+listModelB4.get(i).getName()+""["";\n\t\t    \t\t\tboolean isChanged=false;\n\t\t    \t\tif(listModelB4.get(i).getId()==listModelAfter.get(j).getId()){\n\t\t    \t\t\tif(listModelB4.get(i).getName()!=null && !listModelB4.get(i).getName().equals(listModelAfter.get(j).getName())){\n\t\t    \t\t\t\tmanufPB4+=""Name:""+listModelB4.get(i).getName()+"";"";\n\t\t    \t\t\t\tmanufPAfter+=""Name:""+listModelAfter.get(j).getName()+"";"";\n\t\t\t\t\t\t\tisChanged=true;\n\t\t\t\t    \t}\n\t\t\t\t    \tif(listModelB4.get(i).getQuantity()!=null && listModelB4.get(i).getQuantity()!=listModelAfter.get(j).getQuantity()){\n\t\t\t\t    \t\tmanufPB4+=""Quantity:""+listModelB4.get(i).getQuantity()+"";"";\n\t\t\t\t    \t\tmanufPAfter+=""Quantity:""+listModelAfter.get(j).getQuantity()+"";"";\n\t\t\t\t\t\t\tisChanged=true;\n\t\t\t\t    \t}\n\t\t\t\t    \tif(listModelB4.get(i).getSupplier()!=null && !listModelB4.get(i).getSupplier().equals(listModelAfter.get(j).getSupplier())){\n\t\t\t\t    \t\tmanufPB4+=""Supplier:""+listModelB4.get(i).getSupplier()+"";"";\n\t\t\t\t    \t\tmanufPAfter+=""Supplier:""+listModelAfter.get(j).getSupplier()+"";"";\n\t\t\t\t\t\t\tisChanged=true;\n\t\t\t\t    \t}\n\t\t\t\t    \tif(listModelB4.get(i).getPrice()!=null && !listModelB4.get(i).getPrice().equals(listModelAfter.get(j).getPrice())){\n\t\t\t\t    \t\tmanufPB4+=""Cost:""+listModelB4.get(i).getPrice()+"";"";\n\t\t\t\t    \t\tmanufPAfter+=""Cost:""+listModelAfter.get(j).getPrice()+"";"";\n\t\t\t\t\t\t\tisChanged=true;\n\t\t\t\t    \t}\n\t\t\t\t    \tif(listModelB4.get(i).getMsrp()!=null && !listModelB4.get(i).getMsrp().equals(listModelAfter.get(j).getMsrp())){\n\t\t\t\t    \t\tmanufPB4+=""Msrp:""+listModelB4.get(i).getMsrp()+"";"";\n\t\t\t\t    \t\tmanufPAfter+=""Msrp:""+listModelAfter.get(j).getMsrp()+"";"";\n\t\t\t\t\t\t\tisChanged=true;\n\t\t\t\t    \t}\n\t\t    \t\t\tif(isChanged){\n\t\t\t    \t\t\tmanufPB4+=""]\\n"";\n\t\t\t    \t\t\tmanufPAfter+=""]\\n"";\n\t\t\t    \t\t\tif(listModelB4.get(i).getName()!=null && !listModelB4.get(i).getName().equals("""")&&\n\t\t\t    \t\t\t   listModelAfter.get(j).getName()!=null && !listModelAfter.get(j).getName().equals("""")){\n\t\t\t    \t\t\t\tdataBefore+=manufPB4;\n\t\t\t    \t\t\t\tdataAfter+=manufPAfter;\n\t\t\t    \t\t\t}\n\t\t    \t\t\t}\n\t\t    \t\t\tbreak;\n\t\t    \t\t}\n\t\t    \t\t\n\t\t    \t}\t\t    \t\n\t\t    }\n\t\t    \n\t\t    for(int i=0;i<listModelB4.size();i++){\n\t\t\t    \tboolean exist=false;\n\t\t\t    \tfor(int j=0;j<listModelAfter.size();j++){\n\t\t\t    \t\tif(listModelAfter.get(j).getId()==listModelB4.get(i).getId()&& !listModelAfter.get(j).getName().equals("""")){\n\t\t\t    \t\t\texist=true;\n\t\t\t    \t\t\tbreak;\n\t\t\t    \t\t}\n\t\t\t    \t}\n\t\t\t    \t\n\t\t\t    \tif(!exist){\n\t\t\t    \t\tboolean isChanged=false;\n\t\t    \t\t\tString manufPB4="" Manuf.P:["";\n\t\t    \t\t\tString manufPAfter="" Manuf.P:["";\n\t\t\t    \t\tif(listModelB4.get(i).getName()!=null){\n\t\t\t    \t\t\tisChanged=true;\n\t\t\t    \t\t\tmanufPB4+=""Name:""+listModelB4.get(i).getName()+"";"";\n\t\t\t\t    \t}\n\t\t\t\t    \tif(listModelB4.get(i).getQuantity()!=null){\n\t\t\t\t    \t\tisChanged=true;\n\t\t\t\t    \t\tmanufPB4+=""Quantity:""+listModelB4.get(i).getQuantity()+"";"";\n\t\t\t\t    \t\t\n\t\t\t\t    \t}\n\t\t\t\t    \tif(listModelB4.get(i).getSupplier()!=null){\n\t\t\t\t    \t\tisChanged=true;\n\t\t\t\t    \t\tmanufPB4+=""Supplier:""+listModelB4.get(i).getSupplier()+"";"";\n\t\t\t\t    \t\t\n\t\t\t\t    \t}\n\t\t\t\t    \tif(listModelB4.get(i).getPrice()!=null){\n\t\t\t\t    \t\tisChanged=true;\n\t\t\t\t    \t\tmanufPB4+=""Cost:""+listModelB4.get(i).getPrice()+"";"";\n\t\t\t\t    \t\t\n\t\t\t\t    \t}\n\t\t\t\t    \tif(listModelB4.get(i).getMsrp()!=null){\n\t\t\t\t    \t\tisChanged=true;\n\t\t\t\t    \t\tmanufPB4+=""Msrp:""+listModelB4.get(i).getMsrp();\n\t\t\t\t    \t}\n\t\t\t\t    \t\n\t\t    \t\t\tif(isChanged){\n\t\t\t    \t\t\tmanufPB4+=""]\\n"";\n\t\t\t    \t\t\tif(listModelB4.get(i).getName()!=null && !listModelB4.get(i).getName().equals(""""))dataBefore+=manufPB4;\n\t\t\t    \t\t\tmanufPAfter="" Manuf.P:""+""[Name:""+listModelB4.get(i).getName()+"" was removed!]\\n"";\n\t\t\t    \t\t\tif(listModelB4.get(i).getName()!=null && !listModelB4.get(i).getName().equals(""""))dataAfter+=manufPAfter;\n\t\t    \t\t\t}\t\t\t    \t\t\n\t\t\t    \t}\t\t\t    \t\n\t\t\t    }\n\t\t\t\t\n\t\t\t    for(int i=0;i<listModelAfter.size();i++){\n\t\t\t    \tboolean exist=false;\n\t\t\t    \tfor(int j=0;j<listModelB4.size();j++){\n\t\t\t    \t\tif(listModelB4.get(j).getId()==listModelAfter.get(i).getId()){\n\t\t\t    \t\t\texist=true;\n\t\t\t    \t\t\tbreak;\n\t\t\t    \t\t}\n\t\t\t    \t}\n\t\t\t    \t\n\t\t\t    \tif(!exist){\n\t\t\t    \t\tboolean isChanged=false;\n\t\t    \t\t\tString manufPAfter="" Manuf.P:["";\n\t\t    \t\t\tString manufPB4="" Manuf.P:["";\n\t\t    \t\t\tif(listModelAfter.get(i).getName()!=null){\n\t\t    \t\t\t\tisChanged=true;\n\t\t    \t\t\t\tmanufPAfter+=""Name:""+listModelAfter.get(i).getName()+"";"";\n\t\t\t\t    \t}\n\t\t\t\t    \tif(listModelAfter.get(i).getQuantity()!=null){\n\t\t\t\t    \t\tisChanged=true;\n\t\t\t\t    \t\tmanufPAfter+=""Quantity:""+listModelAfter.get(i).getQuantity()+"";"";\n\t\t\t\t    \t}\n\t\t\t\t    \tif(listModelAfter.get(i).getSupplier()!=null){\n\t\t\t\t    \t\tisChanged=true;\n\t\t\t\t    \t\tmanufPAfter+=""Supplier:""+listModelAfter.get(i).getSupplier()+"";"";\n\t\t\t\t    \t}\n\t\t\t\t    \tif(listModelAfter.get(i).getPrice()!=null){\n\t\t\t\t    \t\tisChanged=true;\n\t\t\t\t    \t\tmanufPAfter+=""Cost:""+listModelAfter.get(i).getPrice()+"";"";\n\t\t\t\t    \t}\n\t\t\t\t    \tif(listModelAfter.get(i).getMsrp()!=null){\n\t\t\t\t    \t\tisChanged=true;\n\t\t\t\t    \t\tmanufPAfter+=""Msrp:""+listModelAfter.get(i).getMsrp();\n\t\t\t\t    \t}\n\t\t\t\t    \t\n\t\t    \t\t\tif(isChanged){\n\t\t\t    \t\t\tmanufPAfter+=""]\\n"";\n\t\t\t    \t\t\tif(listModelAfter.get(i).getName()!=null && !listModelAfter.get(i).getName().equals(""""))dataAfter+=manufPAfter;\n\t\t\t    \t\t\t\n\t\t\t    \t\t\tmanufPB4+=""Name:""+listModelAfter.get(i).getName()+"" was added]\\n"";\n\t\t\t    \t\t\tif(listModelAfter.get(i).getName()!=null && !listModelAfter.get(i).getName().equals(""""))dataBefore+=manufPB4;\n\t\t\t    \t\t\t\n\t\t    \t\t\t}\n\t\t\t    \t}\n\t\t\t    }\n\t\t    \n\t\t\tproductDTO.getBrand().setId(brand);\n\t\t\tproductDTO.getCategory().setId(category);\n\t\t\tproductDTO.setMainFilterTypeId(mainSpecification);\n\t\t\tproductDTO.setLoyaltyProductId(loyaltyProductId);\n\t\t\tproductDTO.getNameEng().setName(nameEn);\n\t\t\tproductDTO.getNameFr().setName(nameFr);\n\t\t\tproductDTO.setMsrp(msrp);\n\t\t\tproductDTO.setCost(cost);\t\t\t\n\t\t\tproductDTO.setWidth(width);\n\t\t\tproductDTO.setLarge(large);\n\t\t\tproductDTO.setHigh(high);\n\t\t\tproductDTO.setWeight(weight);\n\t\t\t\n\t\t\tproductDTO.getDescriptionEng().setName(descriptionEn);\n\t\t\tproductDTO.getDescriptionFr().setName(descriptionFr);\n\t\t\tproductDTO.getSpecificationEng().setName(specificationEn);\n\t\t\tproductDTO.getSpecificationFr().setName(specificationFr);\t\t\t\n\t\t\tif (productDTO.getOtherEng() != null)\n\t\t\t\tproductDTO.getOtherEng().setName(otherEng);\t\t\t\n\t\t\tproductDTO.getOtherFr().setName(otherFr);\n\t\t\t\n\t\t\tproductDTO.setStatus((ProductStatus) CommonUtils.enumFromValue(ProductStatus.values(), statusId));\n\t\t\t\n\t\t\tif (statusId == ProductStatus.DISCONTINUED.getValue()) {\n\t\t\t\tproductDTO.setDiscontinuedStartDate(Calendar.getInstance().getTime());\n\t\t\t\tproductDTO.setLoyaltyProductIdSub(loyaltyProductIdSub);\n\t\t\t} else if (statusId == ProductStatus.DISABLED.getValue()) {\n\t\t\t\tif (productDTO.getDiscontinuedStartDate() != null) {\n\t\t\t\t\tproductDTO.setDiscontinuedStartDate(productDTO.getDiscontinuedStartDate());\n\t\t\t\t}\n\t\t\t\tif (productDTO.getLoyaltyProductIdSub() != null) {\n\t\t\t\t\tproductDTO.setLoyaltyProductIdSub(productDTO.getLoyaltyProductIdSub());\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tproductDTO.setNote(note);\n\t\t\t\n\t\t\t//Warranty\n\t\t\tString warrantyEng = """";\n\t\t\tString warrantyFr = """";\n\t\t\t\n\t\t\tif(defectFree) {\n\t\t\t\twarrantyEng = WebConstants.WARRANTY_DEFECT_FREE_ENG;\n\t\t\t\twarrantyFr = WebConstants.WARRANTY_DEFECT_FREE_FR;\n\t\t\t} else {\n\t\t\t\tif(periodTime.equalsIgnoreCase(WebConstants.WARRANTY_MONTH_ENG)) {\n\t\t\t\t\tif(Integer.valueOf(warrantyQuantity) > 1) {\n\t\t\t\t\t\twarrantyEng =  warrantyQuantity + "" "" + WebConstants.WARRANTY_MONTHS_ENG;\n\t\t\t\t\t} else {\n\t\t\t\t\t\twarrantyEng =  warrantyQuantity + "" "" + WebConstants.WARRANTY_MONTH_ENG;\n\t\t\t\t\t}\n\t\t\t\t\twarrantyFr = warrantyQuantity + "" "" + WebConstants.WARRANTY_MONTH_FR;\n\t\t\t\t} else {\n\t\t\t\t\tif(Integer.valueOf(warrantyQuantity) > 1) {\n\t\t\t\t\t\twarrantyEng =  warrantyQuantity + "" "" + WebConstants.WARRANTY_YEARS_ENG;\n\t\t\t\t\t\twarrantyFr = warrantyQuantity + "" "" + WebConstants.WARRANTY_YEARS_FR;\n\t\t\t\t\t} else {\n\t\t\t\t\t\twarrantyEng =  warrantyQuantity + "" "" + WebConstants.WARRANTY_YEAR_ENG;\n\t\t\t\t\t\twarrantyFr = warrantyQuantity + "" "" + WebConstants.WARRANTY_YEAR_FR;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif(productDTO.getWarrantyEng() == null) {\n\t\t\t\tCommonDTO commonWarrantyEng = CommonDTO.valueOf(0, warrantyEng);\n\t\t\t\tCommonDTO commonWarrantyFr = CommonDTO.valueOf(0, warrantyFr);\n\t\t\t\t\n\t\t\t\tproductDTO.setWarrantyEng(commonWarrantyEng);\n\t\t\t\tproductDTO.setWarrantyFr(commonWarrantyFr);\n\t\t\t} else {\n\t\t\t\tproductDTO.getWarrantyEng().setName(warrantyEng);\n\t\t\t\tproductDTO.getWarrantyFr().setName(warrantyFr);\n\t\t\t}\n\t\t\t\n\t\t\tString currentRealName = """";\n\t\t\t\n\t\t\t//That means that insert a new image and I have to link to the product\n\t\t\tif(imageId != 0) {\n\t\t\t\tif(productDTO.getImage() != null)\n\t\t\t\t\tproductDTO.getImage().setId(imageId);\n\t\t\t\telse\n\t\t\t\t\tproductDTO.setImage(imageService.getImage(imageId));\n\t\t\t\t\n\t\t\t\timgDTO = imageService.getImage(imageId);\n\t\t\t\tcurrentRealName = imgDTO.getRealName();\n\t\t\t}\n\t\t\t\n\t\t\tif(productDTO.getLinkList().size() == 0) {\n\t\t\t\t//If the link doesn't exist, I have to insert the link\n\t\t\t\tList<ProductLinkDTO> linkList = new ArrayList<ProductLinkDTO>();\n\t\t\t\tProductLinkDTO productLinkDTO = ProductLinkDTO.valueOf(linkUrl, productDTO.getId());\n\t\t\t\tlinkList.add(productLinkDTO);\n\t\t\t\tproductDTO.setLinkList(linkList);\n\t\t\t} else {\n\t\t\t\t//There is a link, so I have to update it.\n\t\t\t\tproductDTO.getLinkList().get(0).setLink(linkUrl);\n\t\t\t}\n\t\t\t\n\t\t\tboolean consideredForXML = productDTO.getConsideredForXML();\t\t\t\n\t\t\tif (!consideredForXML) { \n\t\t\t\tproductDTO.setConsideredForXML(true);\n\t\t\t}\n\t\t\t\n\t\t\tif(productDTOB4.getBrand().getId()!=productDTO.getBrand().getId()){\n\t    \t\tdataBefore+="" Brand:[""+productDTOB4.getBrand().getName()+""]\\n"";\n\t\t\t\tdataAfter+="" Brand::[""+productDTO.getBrand().getName()+""]\\n"";\n\t    \t}\n\t\t\t\n\t\t\t\n\t\t\tif(productDTOB4.getCategory().getId()!=productDTO.getCategory().getId()){\n\t    \t\tdataBefore+="" Category:[""+productDTOB4.getCategory().getName()+""]\\n"";\n\t\t\t\tdataAfter+="" Category:[""+productDTO.getCategory().getName()+""]\\n"";\n\t    \t}\n\t\t\t\n\t\t\tif(productDTOB4.getLoyaltyProductId()!=null && !productDTOB4.getLoyaltyProductId().equals(productDTO.getLoyaltyProductId())){\n\t    \t\tdataBefore+="" Loyalty P.Id:[""+productDTOB4.getLoyaltyProductId()+""]\\n"";\n\t\t\t\tdataAfter+="" Loyalty P.Id:[""+productDTO.getLoyaltyProductId()+""]\\n"";\n\t    \t}\n\t\t\t\n\t\t\tif(!productDTOB4.getNameEng().equals(productDTO.getNameEng())){\n\t    \t\tdataBefore+="" Name Eng:[""+productDTOB4.getNameEng()+""]\\n"";\n\t\t\t\tdataAfter+="" Name Eng:[""+productDTO.getNameEng()+""]\\n"";\n\t    \t}\n\n\t\t\tif(!productDTOB4.getNameFr().equals(productDTO.getNameFr())){\n\t    \t\tdataBefore+="" Name Fr:[""+productDTOB4.getNameFr()+""]\\n"";\n\t\t\t\tdataAfter+="" Name Fr:[""+productDTO.getNameFr()+""]\\n"";\n\t    \t}\n\n\t\t\tif(!productDTOB4.getMsrp().equals(productDTO.getMsrp())){\n\t    \t\tdataBefore+="" Msrp:[""+productDTOB4.getMsrp()+""]\\n"";\n\t\t\t\tdataAfter+="" Msrp:[""+productDTO.getMsrp()+""]\\n"";\n\t    \t} \n\n\t\t\tif(productDTOB4.getStatus().getValue()!=productDTO.getStatus().getValue()){\n\t\t\t\tString statusName=ProductStatus.getStatusByValue(productDTOB4.getStatus().getValue());\n\t    \t\tdataBefore+="" Status:[""+statusName+""]\\n"";\n\t    \t\tstatusName=ProductStatus.getStatusByValue(productDTO.getStatus().getValue());\n\t\t\t\tdataAfter+="" Status:[""+statusName+""]\\n"";\n\t    \t}\n\t\t\t\n\t\t\tif(!productDTOB4.getLoyaltyProductIdSub().equals(productDTO.getLoyaltyProductIdSub())){\n\t    \t\tdataBefore+="" Loyalty P.Id Sub:[""+productDTOB4.getLoyaltyProductIdSub()+""]\\n"";\n\t\t\t\tdataAfter+="" Loyalty P.Id Sub:[""+productDTO.getLoyaltyProductIdSub()+""]\\n"";\n\t    \t} \n\n\t\t\t// update product\n\t\t\tproductService.updateProduct(productDTO);\n\t\t\t\n\t\t\t// update product_box\n\t\t\t//UsersPrivilegesDTO usersPrivCPVerified = (UsersPrivilegesDTO)request.getSession(true).getAttribute(""usersPrivCanadaPostVerified"");\n\t\t\tproductService.updateProductBox(boxDTO);\n\n\t\t\trequest.getSession(true).setAttribute(""productID"", productId);\n\t\t\t\n\t\t\tfinal int SIZE = userNameList.size();\n\t\t\tString[] priceFull = new String[SIZE];\n\t\t\tString[] profitFull = new String[SIZE];\n\t\t\tString[] discountFull = new String[SIZE];\n\t\t\tBoolean[] excludedFull = new Boolean[SIZE];\n\t\t\texcluded = new String[SIZE];\n\t\t\tcurrencyRate = new Double[SIZE];\n\t\t\tcurrencySymbol = new String[SIZE];\n\t\t\tcurrencyPrice = new String[SIZE];\n\t\t\t\n\t\t\tArrayList<Long> arrayList = new ArrayList<Long>();\n\t\t\tUserDTO userDTOforCurrency;\n\t\t\tint count = 0;\n\t\t\tfor (UserSessionDTO uDTO : userNameList) {\n\t\t\t\tarrayList.add(uDTO.getId());\n\t\t\t\tuserDTOforCurrency = userService.getUserInformation(uDTO.getId());\n\t\t\t\tcurrencyRate[count] = 1D;\n\t\t\t\tcurrencySymbol[count] = ""CAD"";\n\t\t\t\tcurrencyPrice[count] = """";\n\t\t\t\tif(userDTOforCurrency!=null && userDTOforCurrency.getCurrencyRate()!=null) \n\t\t\t\t\tcurrencyRate[count] = userDTOforCurrency.getCurrencyRate();\n\t\t\t\tif(userDTOforCurrency!=null && userDTOforCurrency.getCurrencySymbol()!=null) \n\t\t\t\t\tcurrencySymbol[count] = userDTOforCurrency.getCurrencySymbol();\n\t\t\t\tcount++;\n\t\t\t}\n\n\t\t\tList<Long> whichUsersChangedByPrice = new ArrayList<Long>();\n\t\t\tList<Long> whichUsersChangedByExcluded = new ArrayList<Long>();\n\t\t\tcount = 0;\n\t\t\tint others = 0;\n\t\t\tfor (long userIdFromDTO : arrayList) {\n\t\t\t\tif (isThereTheExcludedInUserSessionDTO(isExcluded, userIdFromDTO)) {\n\t\t\t\t\texcludedFull[count] = true;\n\t\t\t\t\texcluded[count] = ""t"";\n\t\t\t\t\twhichUsersChangedByExcluded.add(userIdFromDTO);\n\t\t\t\t\tpriceFull[count] = """";\n\t\t\t\t\tprofitFull[count] = """";\n\t\t\t\t\tdiscountFull[count] = """";\n\t\t\t\t} else {\n\t\t\t\t\texcludedFull[count] = false;\n\t\t\t\t\texcluded[count] = ""f"";\n\t\t\t\t\twhichUsersChangedByPrice.add(userIdFromDTO);\n\t\t\t\t\tpriceFull[count] = userPrice[others];\n\t\t\t\t\tprofitFull[count] = percentageProfit[others];\n\t\t\t\t\tdiscountFull[count] = percentageDiscount[others];\n\t\t\t\t\t++others;\n\t\t\t\t}\n\t\t\t\t++count;\n\t\t\t}\n\t\t\t\n\t\t\tList<UserProductPriceDTO> uppDTOListCopy = productService.getUserProductPriceList(productId);\t\t\t\n\t\t\tUserProductPriceDTO uppDTO = new UserProductPriceDTO();\n\t\t\tint index = 0;\n\t\t\tfor (long userIdFromDTO : arrayList) {\n\t\t\t\tuppDTO = new UserProductPriceDTO();\n\t\t\t\tuppDTO.setExcluded(excludedFull[index]);\t\t\t\t\n\t\t\t\tuppDTO.setPrice(priceFull[index]);\n\t\t\t\tuppDTO.setProfit(profitFull[index]);\n\t\t\t\tuppDTO.setDiscount(discountFull[index]);\t\t\t\n\t\t\t\tuppDTO.setProductId(productId);\n\t\t\t\tuppDTO.setUserId(userIdFromDTO);\n\t\t\t\tuppDTO.setPriceType(PriceType.ADD_PRODUCT_PRICE_SET);\n\t\t\t\tuppDTO.setUserStatus(UserProductStatus.ACTIVE);\n\t\t\t\tproductService.updateUserProductPrice(uppDTO);\n\t\t\t\t++index;\n\t\t\t}\n\t\t\t\n\t\t\tuserPrice = priceFull;\n\t\t\tpercentageProfit = profitFull;\n\t\t\tpercentageDiscount = discountFull;\t\t\t\n\t\t\t\n\t\t\tfor(int i=0;i<userPrice.length; i++) {\n\t\t\t\tif(userPrice[i]!=null && userPrice[i].replaceAll("" "", """").matches(""^-?\\\\d*\\\\.\\\\d+$|^-?\\\\d+$"")) {\n\t\t\t\t\tDouble curPrice = currencyRate[i] * Double.parseDouble(userPrice[i]);\n\t\t\t\t\tcurPrice = (double) Math.round(curPrice*100)/100;\n\t\t\t\t\tcurrencyPrice[i] = curPrice+"""";\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tList<UserProductPriceDTO> uppDTOListPriceB4 = new ArrayList<UserProductPriceDTO>();\n\t\t\tUserProductPriceDTO  userProductPriceDTOB4 = new UserProductPriceDTO();\n\t\t\tfor (UserProductPriceDTO userProductPriceDTOCopy : uppDTOListCopy) {\n\t\t\t\tuserProductPriceDTOB4 = new UserProductPriceDTO();\n\t\t\t\tuserProductPriceDTOB4.setId(userProductPriceDTOCopy.getId());\n\t\t\t\tuserProductPriceDTOB4.setUserId(userProductPriceDTOCopy.getUserId());\n\t\t\t\tuserProductPriceDTOB4.setProductId(userProductPriceDTOCopy.getProductId());\n\t\t\t\tuserProductPriceDTOB4.setPriceType(userProductPriceDTOCopy.getPriceType());\n\t\t\t\tuserProductPriceDTOB4.setUserStatus(userProductPriceDTOCopy.getUserStatus());\t\t\t\t\n\t\t\t\tif (userProductPriceDTOCopy.getPrice() != null) {\n\t\t\t\t\tif (userProductPriceDTOCopy.getPrice().matches(""^\\\\s*$"")) {\n\t\t\t\t\t\tuserProductPriceDTOB4.setPrice(""0.00"");\n\t\t\t\t\t} else {\n\t\t\t\t\t\tuserProductPriceDTOB4.setPrice(userProductPriceDTOCopy.getPrice());\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tuserProductPriceDTOB4.setPrice(""0.00"");\n\t\t\t\t}\n\t\t\t\tuserProductPriceDTOB4.setProfit(userProductPriceDTOCopy.getProfit());\n\t\t\t\tuserProductPriceDTOB4.setDiscount(userProductPriceDTOCopy.getDiscount());\n\t\t\t\tuserProductPriceDTOB4.setExcluded(userProductPriceDTOCopy.getExcluded());\n\t\t\t\tuppDTOListPriceB4.add(userProductPriceDTOB4);\n\t\t\t}\n\t\t\t\n\t\t\tuppDTOListCopy = null;\n\t\t\tList<UserProductPriceDTO> uppDTOListPriceAfter = new ArrayList<UserProductPriceDTO>();\n\t\t\tUserProductPriceDTO uppDTOAfter = new UserProductPriceDTO();\n\t\t\tindex = 0;\n\t\t\tfor (long userIdFromDTO : arrayList) {\n\t\t\t\tuppDTOAfter = new UserProductPriceDTO();\n\t\t\t\tuppDTOAfter.setExcluded(excludedFull[index]);\n\t\t\t\tif (priceFull[index].matches(""^\\\\s*$"")) {\n\t\t\t\t\tpriceFull[index] = ""0.00"";\n\t\t\t\t}\n\t\t\t\tuppDTOAfter.setPrice(priceFull[index]);\n\t\t\t\tuppDTOAfter.setProfit(profitFull[index]);\n\t\t\t\tuppDTOAfter.setDiscount(discountFull[index]);\n\t\t\t\tuppDTOAfter.setProductId(productId);\n\t\t\t\tuppDTOAfter.setUserId(userIdFromDTO);\n\t\t\t\tuppDTOAfter.setPriceType(PriceType.ADD_PRODUCT_PRICE_SET);\n\t\t\t\tuppDTOAfter.setUserStatus(UserProductStatus.ACTIVE);\n\t\t\t\tuppDTOListPriceAfter.add(uppDTOAfter);\n\t\t\t\t++index;\n\t\t\t}\n\t\t\tfor (int i=0; i<uppDTOListPriceB4.size(); i++) {\n\t\t\t\tfor (int j=0; j<uppDTOListPriceAfter.size(); j++) {\n\t\t\t\t\tif (uppDTOListPriceB4.get(i).getUserId() == uppDTOListPriceAfter.get(j).getUserId()) {\t\t\t\t\t\t\n\t\t\t\t\t\tif (uppDTOListPriceB4.get(i).getExcluded() != uppDTOListPriceAfter.get(j).getExcluded()) {\n\t\t\t\t\t\t\tUserDTO userDTO = userService.getUserOrTemplateById(uppDTOListPriceB4.get(i).getUserId());\n\t\t\t\t    \t\tdataBefore += "" Excluded:[""+userDTO.getLogin() + "":"" + uppDTOListPriceB4.get(i).getExcluded() + ""]\\n"";\n\t\t\t\t\t\t\tdataAfter += "" Excluded:[""+userDTO.getLogin() + "":"" + uppDTOListPriceAfter.get(j).getExcluded() + ""]\\n"";\n\t\t\t\t    \t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (uppDTOListPriceB4.get(i).getPrice() != null \n\t\t\t\t\t\t\t\t\t&& !uppDTOListPriceB4.get(i).getPrice().equals(uppDTOListPriceAfter.get(j).getPrice()) \n\t\t\t\t\t\t\t\t\t&& !uppDTOListPriceAfter.get(j).getExcluded()) {\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t//-------------------- recalculate shipping total-------------------------------------\n\t\t\t\t\t\t\t\tproductService.calculateShippingRate(uppDTOListPriceB4.get(i).getUserId(), uppDTOListPriceB4.get(i).getProductId());\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t//------------------------------------------------------------------------------------\n\t\t\t\t\t\t\t\tUserDTO userDTO = userService.getUserOrTemplateById(uppDTOListPriceB4.get(i).getUserId());\n\t\t\t\t\t\t\t\tdataBefore += "" User Price:[""+userDTO.getLogin() + "":"" + uppDTOListPriceB4.get(i).getPrice() + ""]\\n"";\n\t\t\t\t\t\t\t\tdataAfter += "" User Price:[""+userDTO.getLogin() + "":"" + uppDTOListPriceAfter.get(j).getPrice() + ""]\\n"";\n\t\t\t\t    \t} \n\t\t\t\t\t    break;\n\t\t\t\t\t}\t\t\t\t\t\n\t\t\t\t}\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\toperationDTO.setOperationType(""Update Product"");\n\t\t\toperationDTO.setDataBefore(dataBefore);\n\t\t\toperationDTO.setDataAfter(dataAfter);\n\t\t\toperationDTO.setObjectId(productId);\n\t\t\toperationDTO.setUserId(managerId);\n\t\t\toperationsService.insertOperation(operationDTO);\n\t\t\thandleAlterProductXML(productDTOB4, brand, category, mainSpecification, currentRealName, statusId,  nameEn, nameFr,\n\t\t\t\t\t\t\t\t\tdescriptionEn, descriptionFr, specificationEn, specificationFr, otherEng, \n\t\t\t\t\t\t\t\t\totherFr, warrantyEng, warrantyFr, msrp, large, width, high, weight, \n\t\t\t\t\t\t\t\t\tmanufProductID, whichUsersChangedByPrice, whichUsersChangedByExcluded, \n\t\t\t\t\t\t\t\t\tuppDTOListPriceB4, uppDTOListPriceAfter, wereWgtDimChanged);\n\t\t\t\n\t\t\treturn SUCCESS;\n\t\t} catch(ServiceException e) {\n\t\t\tlog.debug(""Service Error when loading file"");\n\t\t\taddActionError(getText(""loyauty.error.common.service""));\n\t\t} catch (Exception e) {\n\t\t\taddActionError(getText(""loyauty.error.common.service""));\n\t\t}\n\t\treturn INPUT;\n\t}\n\t\n\t/**\n\t * @author Rafael Padron\n\t */\n\tpublic void handleAlterProductXML(ProductDTO productDTO, long brand, long category, \n\t\t\tlong mainSpecification, String imageRealName, Integer statusId, String nameEn, String nameFr,\n\t\t\tString descriptionEn, String descriptionFr,\n\t\t\tString specificationEn, String specificationFr,\n\t\t\tString otherEng, String otherFr, String warrantyEng, String warrantyFr,\n\t\t\tString msrp, String large, String width, String high, String weight,\n\t\t\tString manufProductID, List<Long> whichUsersChangedByPrice,\n\t\t\tList<Long> whichUsersChangedByExcluded, List<UserProductPriceDTO> uppDTOListPriceB4,\n\t\t\tList<UserProductPriceDTO> uppDTOListPriceAfter, boolean wereWgtDimChanged) {\n\t\t\n\t\tfinal boolean TO_BE_EXECUTED = true;\n\t\t\n\t\t// Related to AlterProductXML.class\n\t\tboolean brand_xml = false;\n\t\tboolean category_xml = false;\n\t\tboolean mainSpecification_xml = false;\n\t\tboolean image_xml = false;\n\t\tboolean status_xml = false;\n\t\tboolean nameEn_xml = false;\n\t\tboolean nameFr_xml = false;\n\t\tboolean descriptionEn_xml = false;\n\t\tboolean descriptionFr_xml = false;\n\t\tboolean specificationEn_xml = false;\n\t\tboolean specificationFr_xml = false;\n\t\tboolean otherEng_xml = false;\n\t\tboolean otherFr_xml = false;\n\t\tboolean warrantyEng_xml = false;\n\t\tboolean warrantyFr_xml = false;\n\t\tboolean msrp_xml = false;\n\t\tboolean shipping_xml = false;\n\t\tboolean dimensions_xml = false;\n\t\tboolean weight_xml = false;\n\t\tboolean modelNumber_xml = false;\n\t\t\n\t\tboolean product_to_be_executed_xml = false;\n\t\t\n\t\t// Related to AlterUserProductXML.class\n\t\tboolean priceDiscount_xml = false;\n\t\tboolean excluded_xml = false;\n\t\t\n\t\ttry {\t\t\t\n\t\t\tlong productId = productDTO.getId();\n\t\t\t\n\t\t\tAlterProductXMLDTO apxDTOBefore = productService.getAlterProductXML(productId);\n\t\t\t\n\t\t\tboolean apxAlreadyExecuted = false;\n\t\t\t\n\t\t\tboolean isAPXBrandAlready = false;\n\t\t\tboolean isAPXCategoryAlready = false;\n\t\t\tboolean isAPXMainSpecAlready = false;\n\t\t\tboolean isAPXImageAlready = false;\n\t\t\tboolean isAPXStatusAlready = false;\n\t\t\tboolean isAPXNameEnAlready = false;\n\t\t\tboolean isAPXNameFrAlready = false;\n\t\t\tboolean isAPXDescEnAlready = false;\n\t\t\tboolean isAPXDescFrAlready = false;\n\t\t\tboolean isAPXSpecEnAlready = false;\n\t\t\tboolean isAPXSpecFrAlready = false;\n\t\t\tboolean isAPXOtherEnAlready = false;\n\t\t\tboolean isAPXOtherFrAlready = false;\n\t\t\tboolean isAPXWarrantyEnAlready = false;\n\t\t\tboolean isAPXWarrantyFrAlready = false;\n\t\t\tboolean isAPXMSRPAlready = false;\n\t\t\tboolean isAPXShippingAlready = false;\n\t\t\tboolean isAPXDimsAlready = false;\n\t\t\tboolean isAPXWgtAlready = false;\n\t\t\tboolean isAPXModelNoAlready = false;\t\t\t\n\t\t\t\n\t\t\tboolean apxExists = (apxDTOBefore != null);\n\t\t\tif (apxExists) {\n\t\t\t\tapxAlreadyExecuted = apxDTOBefore.getProductToBeExecuted();\n\t\t\t\t\n\t\t\t\tisAPXBrandAlready = apxDTOBefore.getBrandId();\n\t\t\t\tisAPXCategoryAlready = apxDTOBefore.getCategoryId();\n\t\t\t\tisAPXMainSpecAlready = apxDTOBefore.getTypeId();\n\t\t\t\tisAPXImageAlready = apxDTOBefore.getImageId();\n\t\t\t\tisAPXStatusAlready = apxDTOBefore.getStatusId();\n\t\t\t\tisAPXNameEnAlready = apxDTOBefore.getNameEn();\n\t\t\t\tisAPXNameFrAlready = apxDTOBefore.getNameFr();\n\t\t\t\tisAPXDescEnAlready = apxDTOBefore.getDescriptionEn();\n\t\t\t\tisAPXDescFrAlready = apxDTOBefore.getDescriptionFr();\n\t\t\t\tisAPXSpecEnAlready = apxDTOBefore.getSpecificationEn();\n\t\t\t\tisAPXSpecFrAlready = apxDTOBefore.getSpecificationFr();\n\t\t\t\tisAPXOtherEnAlready = apxDTOBefore.getOtherEn();\n\t\t\t\tisAPXOtherFrAlready = apxDTOBefore.getOtherFr();\n\t\t\t\tisAPXWarrantyEnAlready = apxDTOBefore.getWarrantyEn();\n\t\t\t\tisAPXWarrantyFrAlready = apxDTOBefore.getWarrantyFr();\n\t\t\t\tisAPXMSRPAlready = apxDTOBefore.getMsrp();\n\t\t\t\tisAPXShippingAlready = apxDTOBefore.getShipping();\n\t\t\t\tisAPXDimsAlready = apxDTOBefore.getDimensions();\n\t\t\t\tisAPXWgtAlready = apxDTOBefore.getWeight();\n\t\t\t\tisAPXModelNoAlready = apxDTOBefore.getModelNumber();\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tString descriptionEnCell = """", descriptionEnDB = """", descriptionFrCell = """", descriptionFrDB = """";\n\t\t\tString specificationEnCell = """", specificationEnDB = """", specificationFrCell = """", specificationFrDB = """";\n\t\t\tString otherEnCell = """", otherEnDB = """", otherFrCell = """", otherFrDB = """";\n\t\t\t\n\t\t\tif (productDTO.getBrand() != null) {\n\t\t\t\tbrand_xml = (brand != productDTO.getBrand().getId());\n\t\t\t\tif (apxExists) if (apxAlreadyExecuted) if (isAPXBrandAlready) brand_xml = true;\n\t\t\t}\n\t\t\t\n\t\t\tif (productDTO.getCategory() != null) {\n\t\t\t\tcategory_xml = (category != productDTO.getCategory().getId());\n\t\t\t\tif (apxExists) if (apxAlreadyExecuted) if (isAPXCategoryAlready) category_xml = true;\n\t\t\t}\t\t\t\n\t\t\t\n\t\t\tif (productDTO.getMainFilterTypeId() != null) {\n\t\t\t\tif (productDTO.getMainFilterTypeId() != 0L && productDTO.getMainFilterTypeId() != 51) {\n\t\t\t\t\tmainSpecification_xml = (mainSpecification != productDTO.getMainFilterTypeId().longValue());\n\t\t\t\t}\n\t\t\t\tif (apxExists) if (apxAlreadyExecuted) if (isAPXMainSpecAlready) mainSpecification_xml = true;\n\t\t\t}\n\t\t\t\n\t\t\tif (imageRealName != null && productDTO.getOldImageRealName() != null) {\n\t\t\t\t\timage_xml = (!imageRealName.equalsIgnoreCase(productDTO.getOldImageRealName()));\n\t\t\t\t\tif (apxExists) if (apxAlreadyExecuted) if (isAPXImageAlready) image_xml = true;\n\t\t\t}\n\t\t\t\n\t\t\tstatus_xml = (statusId != productDTO.getStatus().getValue());\n\t\t\tif (apxExists) if (apxAlreadyExecuted) if (isAPXStatusAlready) status_xml = true;\n\t\t\t\n\t\t\tif (nameEn != null && productDTO.getNameEng() != null) {\n\t\t\t\tnameEn_xml = (!nameEn.trim().equalsIgnoreCase(productDTO.getNameEng().getName().trim()));\n\t\t\t\tif (apxExists) if (apxAlreadyExecuted) if (isAPXNameEnAlready) nameEn_xml = true;\n\t\t\t}\n\t\t\t\n\t\t\tif (nameFr != null && productDTO.getNameFr() != null) {\t\t\t\t\n\t\t\t\tnameFr_xml = (!nameFr.trim().equalsIgnoreCase(productDTO.getNameFr().getName().trim()));\n\t\t\t\tif (apxExists) if (apxAlreadyExecuted) if (isAPXNameFrAlready) nameFr_xml = true;\n\t\t\t}\n\t\t\t\n\t\t\tif (descriptionEn != null && productDTO.getDescriptionEng() != null) {\n\t\t\t\tdescriptionEnCell = wsRipper(html2text(descriptionEn.trim()));\n\t\t\t\tdescriptionEnDB = wsRipper(html2text(productDTO.getDescriptionEng().getName().trim()));\t\t\t\t\n\t\t\t\tdescriptionEn_xml = (!descriptionEnCell.trim().equalsIgnoreCase(descriptionEnDB.trim()));\n\t\t\t\tif (apxExists) if (apxAlreadyExecuted) if (isAPXDescEnAlready) descriptionEn_xml = true;\n\t\t\t}\n\t\t\t\n\t\t\tif (descriptionFr != null && productDTO.getDescriptionFr() != null) {\n\t\t\t\tdescriptionFrCell = wsRipper(html2text(descriptionFr.trim()));\n\t\t\t\tdescriptionFrDB = wsRipper(html2text(productDTO.getDescriptionFr().getName().trim()));\t\t\t\t\n\t\t\t\tdescriptionFr_xml = (!descriptionFrCell.trim().equalsIgnoreCase(descriptionFrDB.trim()));\n\t\t\t\tif (apxExists) if (apxAlreadyExecuted) if (isAPXDescFrAlready) descriptionFr_xml = true;\n\t\t\t}\n\t\t\t\n\t\t\tif (specificationEn != null && productDTO.getSpecificationEng() != null) {\n\t\t\t\tspecificationEnCell = wsRipper(html2text(specificationEn.trim()));\t\t\n\t\t\t\tspecificationEnDB = wsRipper(html2text(productDTO.getSpecificationEng().getName().trim()));\t\t\t\t\n\t\t\t\tspecificationEn_xml = (!specificationEnCell.trim().equalsIgnoreCase(specificationEnDB.trim()));\t\t\t\t\n\t\t\t\tif (apxExists) if (apxAlreadyExecuted) if (isAPXSpecEnAlready) specificationEn_xml = true;\n\t\t\t}\n\t\t\t\n\t\t\tif (specificationFr != null && productDTO.getSpecificationFr() != null) {\n\t\t\t\tspecificationFrCell = wsRipper(html2text(specificationFr.trim()));\t\t\t\t\n\t\t\t\tspecificationFrDB = wsRipper(html2text(productDTO.getSpecificationFr().getName().trim()));\t\t\t\t\n\t\t\t\tspecificationFr_xml = (!specificationFrCell.trim().equalsIgnoreCase(specificationFrDB.trim()));\n\t\t\t\tif (apxExists) if (apxAlreadyExecuted) if (isAPXSpecFrAlready) specificationFr_xml = true;\n\t\t\t}\n\t\t\t\n\t\t\tif (otherEng != null && productDTO.getOtherEng() != null) {\n\t\t\t\totherEnCell = wsRipper(html2text(otherEng.trim()));\n\t\t\t\totherEnDB = wsRipper(html2text(productDTO.getOtherEng().getName().trim()));\t\t\t\t\n\t\t\t\totherEng_xml = (!otherEnCell.trim().equalsIgnoreCase(otherEnDB.trim()));\n\t\t\t\tif (apxExists) if (apxAlreadyExecuted) if (isAPXOtherEnAlready) otherEng_xml = true;\n\t\t\t}\n\t\t\t\n\t\t\tif (otherFr != null && productDTO.getOtherFr() != null) {\n\t\t\t\totherFrCell = wsRipper(html2text(otherFr.trim()));\n\t\t\t\totherFrDB = wsRipper(html2text(productDTO.getOtherFr().getName().trim()));\t\t\t\t\t\t\t\n\t\t\t\totherFr_xml = (!otherFrCell.trim().equalsIgnoreCase(otherFrDB.trim()));\n\t\t\t\tif (apxExists) if (apxAlreadyExecuted) if (isAPXOtherFrAlready) otherFr_xml = true;\n\t\t\t}\n\t\t\t\n\t\t\tif (warrantyEng != null && productDTO.getWarrantyEng() != null) {\n\t\t\t\twarrantyEng_xml = (!warrantyEng.trim().equalsIgnoreCase(productDTO.getWarrantyEng().getName().trim()));\n\t\t\t\tif (apxExists) if (apxAlreadyExecuted) if (isAPXWarrantyEnAlready) warrantyEng_xml = true;\n\t\t\t}\n\t\t\t\n\t\t\tif (warrantyFr != null && productDTO.getWarrantyFr() != null) {\n\t\t\t\twarrantyFr_xml = (!warrantyFr.trim().equalsIgnoreCase(productDTO.getWarrantyFr().getName().trim()));\n\t\t\t\tif (apxExists) if (apxAlreadyExecuted) if (isAPXWarrantyFrAlready) warrantyFr_xml = true;\n\t\t\t}\n\t\t\t\n\t\t\tmsrp_xml = (!msrp.equalsIgnoreCase(productDTO.getMsrp()));\n\t\t\tif (apxExists) if (apxAlreadyExecuted) if (isAPXMSRPAlready) msrp_xml = true;\n\t\t\t\n\t\t\tdimensions_xml = (!large.equalsIgnoreCase(productDTO.getLarge()) \n\t\t\t\t\t\t\t  || !width.equalsIgnoreCase(productDTO.getWidth())\n\t\t\t\t\t\t\t  || !high.equalsIgnoreCase(productDTO.getHigh()));\n\t\t\tif (apxExists) if (apxAlreadyExecuted) if (isAPXDimsAlready) dimensions_xml = true;\t\t\t\n\t\t\t\n\t\t\tweight_xml = (!weight.equalsIgnoreCase(productDTO.getWeight()));\n\t\t\tif (apxExists) if (apxAlreadyExecuted) if (isAPXWgtAlready) weight_xml = true;\t\n\t\t\t\n\t\t\tshipping_xml = wereWgtDimChanged;\n\t\t\tif (apxExists) if (apxAlreadyExecuted) if (isAPXShippingAlready) shipping_xml = true;\n\t\t\t\t\t\t\n\t\t\tif (productDTO.getManufactureProductList() != null) {\n\t\t\t\tif (productDTO.getManufactureProductList().size() == 1) {\n\t\t\t\t\tfor (ProductModelDTO productModelDTO : productDTO.getManufactureProductList()) {\n\t\t\t\t\t\tif (productModelDTO != null && productModelDTO.getName() != null) {\n\t\t\t\t\t\t\tmodelNumber_xml = !productModelDTO.getName().trim().equalsIgnoreCase(manufProductID.trim());\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (apxExists) if (apxAlreadyExecuted) if (isAPXModelNoAlready) modelNumber_xml = true;\n\t\t\t\n\t\t\t\n\t\t\tproduct_to_be_executed_xml = brand_xml || category_xml || mainSpecification_xml \n\t\t\t\t\t\t\t\t\t\t|| image_xml || status_xml || nameEn_xml \n\t\t\t\t\t\t\t\t\t\t|| nameFr_xml || descriptionEn_xml || descriptionFr_xml\n\t\t\t\t\t\t\t\t\t\t|| specificationEn_xml || specificationFr_xml || otherEng_xml\n\t\t\t\t\t\t\t\t\t\t|| otherFr_xml || warrantyEng_xml || warrantyFr_xml\n\t\t\t\t\t\t\t\t\t\t|| dimensions_xml || weight_xml || modelNumber_xml\n\t\t\t\t\t\t\t\t\t\t|| msrp_xml || shipping_xml;\n\t\t\t\n\t\t\tAlterProductXMLDTO alterProductXMLDTO = new AlterProductXMLDTO();\n\t\t\talterProductXMLDTO.setProductId(productId);\n\t\t\talterProductXMLDTO.setBrandId(brand_xml);\n\t\t\talterProductXMLDTO.setCategoryId(category_xml);\n\t\t\talterProductXMLDTO.setTypeId(mainSpecification_xml);\n\t\t\talterProductXMLDTO.setImageId(image_xml);\n\t\t\talterProductXMLDTO.setStatusId(status_xml);\n\t\t\talterProductXMLDTO.setNameEn(nameEn_xml);\n\t\t\talterProductXMLDTO.setNameFr(nameFr_xml);\n\t\t\talterProductXMLDTO.setDescriptionEn(descriptionEn_xml);\n\t\t\talterProductXMLDTO.setDescriptionFr(descriptionFr_xml);\n\t\t\talterProductXMLDTO.setSpecificationEn(specificationEn_xml);\n\t\t\talterProductXMLDTO.setSpecificationFr(specificationFr_xml);\n\t\t\talterProductXMLDTO.setOtherEn(otherEng_xml);\n\t\t\talterProductXMLDTO.setOtherFr(otherFr_xml);\n\t\t\talterProductXMLDTO.setWarrantyEn(warrantyEng_xml);\n\t\t\talterProductXMLDTO.setWarrantyFr(warrantyFr_xml);\n\t\t\talterProductXMLDTO.setDimensions(dimensions_xml);\n\t\t\talterProductXMLDTO.setWeight(weight_xml);\n\t\t\talterProductXMLDTO.setModelNumber(modelNumber_xml);\n\t\t\talterProductXMLDTO.setMsrp(msrp_xml);\n\t\t\talterProductXMLDTO.setShipping(shipping_xml);\n\t\t\talterProductXMLDTO.setProductToBeExecuted(product_to_be_executed_xml);\n\t\t\tif (productService.existsOnAlterProductXML(productId)) {\n\t\t\t\tproductService.updateAlterProductXML(alterProductXMLDTO);\n\t\t\t} else {\n\t\t\t\tproductService.createAlterProductXML(alterProductXMLDTO);\n\t\t\t}\n\t\t\t\n\t\t\tif (didPriceListChange(uppDTOListPriceB4, uppDTOListPriceAfter)) {\n\t\t\t\tAlterUserProductXMLDTO alterUserProductXMLDTO = new AlterUserProductXMLDTO();\n\t\t\t\tif (whichUsersChangedByPrice != null && whichUsersChangedByPrice.size() > 0) {\n\t\t\t\t\tAlterUserProductXMLDTO aupxDTOBefore = null;\n\t\t\t\t\tboolean aupxExists = false;\n\t\t\t\t\tboolean aupxAlreadyExecuted = false;\n\t\t\t\t\tboolean isAUPXPricingAlready = false;\n\t\t\t\t\tboolean user_product_to_be_executed = false;\n\t\t\t\t\t\n\t\t\t\t\tfor (long userId_price : whichUsersChangedByPrice) {\n\t\t\t\t\t\t\n\t\t\t\t\t\taupxDTOBefore = productService.getAlterUserProductXML(userId_price, productId);\n\t\t\t\t\t\t\n\t\t\t\t\t\taupxExists = (aupxDTOBefore != null);\n\t\t\t\t\t\tif (aupxExists) {\n\t\t\t\t\t\t\taupxAlreadyExecuted = aupxDTOBefore.getUserProductToBeExecuted();\n\t\t\t\t\t\t\tisAUPXPricingAlready = aupxDTOBefore.getPriceDiscount();\n\t\t\t\t\t\t\tpriceDiscount_xml = aupxDTOBefore.getPriceDiscount();\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (!priceDiscount_xml) {\n\t\t\t\t\t\t\tpriceDiscount_xml = analyzePriceDiscount(userId_price, uppDTOListPriceB4, uppDTOListPriceAfter);\n\t\t\t\t\t\t\tif (aupxExists) if (aupxAlreadyExecuted) if (isAUPXPricingAlready) priceDiscount_xml = true;\n\t\t\t\t\t\t}\t\t\t\t\t\t\n\t\t\t\t\t\t// Does this user exist in the UPP-list [for price]?\n\t\t\t\t\t\t// If so, it means that this value shouldn't be excluded or simply just must be rendered \n\t\t\t\t\t\t// in the XML-File to generate.\n\t\t\t\t\t\texcluded_xml = !analyzeExcluded(userId_price, uppDTOListPriceAfter);\n\t\t\t\t\t\tuser_product_to_be_executed = priceDiscount_xml ? priceDiscount_xml : user_product_to_be_executed;\n\t\t\t\t\t\talterUserProductXMLDTO = new AlterUserProductXMLDTO();\n\t\t\t\t\t\talterUserProductXMLDTO.setUserId(userId_price);\n\t\t\t\t\t\talterUserProductXMLDTO.setProductId(productId);\n\t\t\t\t\t\talterUserProductXMLDTO.setPriceDiscount(priceDiscount_xml);\n\t\t\t\t\t\talterUserProductXMLDTO.setShipping(false);\n\t\t\t\t\t\talterUserProductXMLDTO.setExcluded(excluded_xml);\n\t\t\t\t\t\talterUserProductXMLDTO.setExcludedMeaning(false);\n\t\t\t\t\t\talterUserProductXMLDTO.setUserProductToBeExecuted(user_product_to_be_executed);\t// TO_BE_EXECUTED\n\t\t\t\t\t\tif (productService.existsOnAlterUserProductXML(productId, userId_price)) {\n\t\t\t\t\t\t\tproductService.updateAlterUserProductXML(alterUserProductXMLDTO);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tproductService.createAlterUserProductXML(alterUserProductXMLDTO);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (whichUsersChangedByExcluded != null && whichUsersChangedByExcluded.size() > 0) {\n\t\t\t\t\tfor (long userId_excluded : whichUsersChangedByExcluded) {\n\t\t\t\t\t\talterUserProductXMLDTO = new AlterUserProductXMLDTO();\n\t\t\t\t\t\talterUserProductXMLDTO.setUserId(userId_excluded);\n\t\t\t\t\t\talterUserProductXMLDTO.setProductId(productId);\n\t\t\t\t\t\talterUserProductXMLDTO.setPriceDiscount(false);\n\t\t\t\t\t\talterUserProductXMLDTO.setShipping(false);\n\t\t\t\t\t\talterUserProductXMLDTO.setExcluded(true);\n\t\t\t\t\t\talterUserProductXMLDTO.setExcludedMeaning(true);\n\t\t\t\t\t\talterUserProductXMLDTO.setUserProductToBeExecuted(false);\n\t\t\t\t\t\tif (productService.existsOnAlterUserProductXML(productId, userId_excluded)) {\n\t\t\t\t\t\t\tproductService.updateAlterUserProductXML(alterUserProductXMLDTO);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tproductService.createAlterUserProductXML(alterUserProductXMLDTO);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlong userId = 0L;\n\t\t\t\tAlterUserProductXMLDTO alterUserProductXMLDTO = new AlterUserProductXMLDTO();\n\t\t\t\tfor (UserProductPriceDTO userProductPriceDTO : uppDTOListPriceAfter) {\n\t\t\t\t\talterUserProductXMLDTO = new AlterUserProductXMLDTO();\n\t\t\t\t\tuserId = userProductPriceDTO.getUserId();\n\t\t\t\t\talterUserProductXMLDTO.setUserId(userId);\n\t\t\t\t\talterUserProductXMLDTO.setProductId(productId);\n\t\t\t\t\talterUserProductXMLDTO.setPriceDiscount(false);\n\t\t\t\t\talterUserProductXMLDTO.setShipping(false);\n\t\t\t\t\talterUserProductXMLDTO.setExcluded(false);\n\t\t\t\t\talterUserProductXMLDTO.setExcludedMeaning(userProductPriceDTO.getExcluded());\n\t\t\t\t\talterUserProductXMLDTO.setUserProductToBeExecuted(false);\n\t\t\t\t\tif (productService.existsOnAlterUserProductXML(productId, userId)) {\n\t\t\t\t\t\tproductService.updateAlterUserProductXML(alterUserProductXMLDTO);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tproductService.createAlterUserProductXML(alterUserProductXMLDTO);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (!product_to_be_executed_xml) {\n\t\t\t\t\tproductService.closeProductConsideredForXML(productId);\n\t\t\t\t}\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t} catch(ServiceException e){\n\t\t\tlog.debug(""Service Error when loading file"");\n\t\t\taddActionError(getText(""loyauty.error.common.service""));\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t\taddActionError(getText(""loyauty.error.common.service""));\n\t\t}\n\t}\n\t\n\tprivate boolean analyzePriceDiscount(long userId, List<UserProductPriceDTO> uppDTOListPriceB4, \n\t\t\t\t\t\t\t\tList<UserProductPriceDTO> uppDTOListPriceAfter) {\n\t\tboolean outcome = false;\n\t\tif ((uppDTOListPriceB4 == null && uppDTOListPriceAfter != null) \n\t\t\t|| (uppDTOListPriceB4 != null && uppDTOListPriceAfter == null)) {\n\t\t\toutcome = true;\n\t\t} else if (uppDTOListPriceB4 == null && uppDTOListPriceAfter == null) {\n\t\t\toutcome = false;\n\t\t} else if (uppDTOListPriceB4 != null && uppDTOListPriceAfter != null) {\n\t\t\tif (uppDTOListPriceB4.size() == uppDTOListPriceAfter.size()) {\n\t\t\t\tint SIZE_before = uppDTOListPriceB4.size();\n\t\t\t\tint SIZE = SIZE_before;\n\t\t\t\tif (SIZE > 0) {\n\t\t\t\t\tString before = """";\n\t\t\t\t\tUserProductPriceDTO upp$DTO_0 = new UserProductPriceDTO();\n\t\t\t\t\tfor (Iterator<UserProductPriceDTO> itUPPBefore = uppDTOListPriceB4.iterator(); itUPPBefore.hasNext();) {\n\t\t\t\t\t\tupp$DTO_0 = itUPPBefore.next();\n\t\t\t\t\t\tif (userId == upp$DTO_0.getUserId()) {\n\t\t\t\t\t\t\tbefore = upp$DTO_0.getPrice();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tString after = """";\n\t\t\t\t\tUserProductPriceDTO upp$DTO_f = new UserProductPriceDTO();\n\t\t\t\t\tfor (Iterator<UserProductPriceDTO> itUPPAfter = uppDTOListPriceAfter.iterator(); itUPPAfter.hasNext();) {\n\t\t\t\t\t\tupp$DTO_f = itUPPAfter.next();\n\t\t\t\t\t\tif (userId == upp$DTO_f.getUserId()) {\n\t\t\t\t\t\t\tafter = upp$DTO_f.getPrice();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\toutcome = !before.trim().equalsIgnoreCase(after.trim());\n\t\t\t\t}\t// else OR SIZE=0 ==> outcome <-- false;\n\t\t\t} else {\n\t\t\t\toutcome = true;\n\t\t\t}\n\t\t}\n\t\treturn outcome;\t\t\n\t}\n\t\n\tprivate boolean analyzeExcluded(long userId, List<UserProductPriceDTO> uppDTOListPriceAfter) {\n\t\tboolean outcome = false;\n\t\tif (uppDTOListPriceAfter != null && uppDTOListPriceAfter.size() > 0) {\n\t\t\tfor (UserProductPriceDTO userProductPriceDTO : uppDTOListPriceAfter) {\n\t\t\t\toutcome |= (userId == userProductPriceDTO.getUserId().longValue());\n\t\t\t}\n\t\t}\n\t\treturn outcome;\n\t}\n\t\n\tprivate boolean isThereTheExcludedInUserSessionDTO(String[] isExcluded, long userIdFromDTO) {\n\t\tboolean outcome = false;\n\t\tif (isExcluded != null) {\n\t\t\tif (isExcluded.length == 0) return false;\n\t\t\tfor (String excluded : isExcluded) {\n\t\t\t\toutcome |= userIdFromDTO == Long.parseLong(excluded);\n\t\t\t}\n\t\t}\n\t\treturn outcome;\n\t}\n\t\n\tprivate void updateListManufactureProduct(int position, String value, int quantity, String suppliers, String price, String msrp) {\n\t    //lack to remove\n\t\tif(productDTO.getManufactureProductList().size() >= position +1) {\n\t\t\t((ProductModelDTO)productDTO.getManufactureProductList().get(position)).setName(value);\n\t\t\t((ProductModelDTO)productDTO.getManufactureProductList().get(position)).setQuantity(quantity);\n\t\t\t((ProductModelDTO)productDTO.getManufactureProductList().get(position)).setSupplier(suppliers);\n\t\t\t((ProductModelDTO)productDTO.getManufactureProductList().get(position)).setPrice(price);\n\t\t\t((ProductModelDTO)productDTO.getManufactureProductList().get(position)).setMsrp(msrp);\n\t\t} else {\n\t\t\tproductDTO.getManufactureProductList().add(ProductModelDTO.valueOf(0, value, quantity, suppliers, price, msrp));\n\t\t}\n\t}\n\t\n\tprivate List<CommonDTO> internationalizeName(List<CategoryDTO> list){\n\t\tList<CommonDTO> commonListDTO = new ArrayList<CommonDTO>();\n\t\tCommonDTO commonDTO;\n\t\tfor(CategoryDTO cat : list){\n\t\t\tcommonDTO = CommonDTO.valueOf(cat.getId(), getText(cat.getCode()));\t\t\t\n\t\t\tcommonListDTO.add(commonDTO);\n\t\t}\t\t\n\t\treturn commonListDTO;\n\t}\n    \n    private String html2text(String html) {\n        return Jsoup.parse(html).text();\n    }\n    \n    private boolean didPriceListChange(\tList<UserProductPriceDTO> uppDTOListBefore, \n    \t\t\t\t\t\t\t\t\tList<UserProductPriceDTO> uppDTOListAfter) {\n    \tboolean outcome = false;\n    \tint b4 = 0, after = 0;\n    \t\n    \tlong userId$B4 = 0L;\n    \tlong userId$After = 0L;\n    \tSet<Long> allUserIdsSet = new HashSet<Long>();\n    \t\n    \tfor (UserProductPriceDTO uppDTOB4 : uppDTOListBefore) {    \t\t\n    \t\tuserId$B4 =  uppDTOB4.getUserId();\n    \t\tallUserIdsSet.add(userId$B4);\n    \t\tif (!uppDTOB4.getExcluded()) ++b4;\n    \t}\n    \t\n    \tfor (UserProductPriceDTO uppDTOAfter : uppDTOListAfter) {\n    \t\tuserId$After = uppDTOAfter.getUserId();\n    \t\tallUserIdsSet.add(userId$After);\n    \t\tif (!uppDTOAfter.getExcluded()) ++after;\n    \t}\n    \t\n    \tif (b4 == after) {\n    \t\tfor (long userId : allUserIdsSet) {\n    \t\t\toutcome |= analyzePriceDiscount(userId, uppDTOListBefore, uppDTOListAfter);\n    \t\t}\n    \t} else {\n    \t\toutcome = true;\n    \t}\n    \t\n    \treturn outcome;\n    }\n    \n\tprivate String wsRipper(String input) {\n\t\tString outcome = """";\n\t\tif (input.length() > 0) {\n\t\t\tchar[] aCharArray = input.toCharArray();\n\t\t\tfor (char c : aCharArray) {\n\t\t\t\tif (c != ' ') {\n\t\t\t\t\toutcome += c;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn outcome;\n\t}\n    \n\tpublic static UserSessionDTO getUserSessionDTO(ClientCategoryDTO clDTO){\n\t\tLong userId=clDTO.getClientCategoryId();\n\t\tString login=clDTO.getClientCategoryName();\n\t\tInteger TypeId=2;\n\t\tInteger userLangId = 2;\n\t\tInteger RESULTS_PER_PAGE=10;\n\t\tString email="""";\n\t\tString code="""";\n\t\tBoolean isActive=true;\n\t\tLong template =1L;\n\t\tUserSessionDTO sessionDTO =new UserSessionDTO(userId, login, TypeId, userLangId, Language.ENGLISH.getValue(),\n\t\t\t\t\t\t\t\t\t\t\t\t\t  RESULTS_PER_PAGE, email, code, isActive,template);\n\t\t\n\t\treturn sessionDTO;\n\t}\n\t\n\t//Make ""large"" and ""boxLength"" the biggest size between L,W and H\n\tpublic void switchBetweenLargeWidthHeight () {\n\t\tDouble L,W,H, permute;\n\t\t// large/width/high\n\t\tL = W = H = 0D;\n\t\tif(large!=null && !large.replaceAll("" "", """").isEmpty()) L = Double.parseDouble(large);\n\t\tif(width!=null && !width.replaceAll("" "", """").isEmpty()) W = Double.parseDouble(width);\n\t\tif(high!=null && !high.replaceAll("" "", """").isEmpty())   H = Double.parseDouble(high);\n\t\tif(L < H) {\n\t\t\tpermute = L;\n\t\t\tL = H;\n\t\t\tH = permute;\n\t\t\tlarge = L+"""";\n\t\t\thigh = H+"""";\n\t\t}\n\t\tif(L < W) {\n\t\t\tpermute = L;\n\t\t\tL = W;\n\t\t\tW = permute;\n\t\t\tlarge = L+"""";\n\t\t\twidth = W+"""";\n\t\t}\n\t\tif(W < H) {\n\t\t\tpermute = W;\n\t\t\tW = H;\n\t\t\tH = permute;\n\t\t\twidth = W+"""";\n\t\t\thigh = H+"""";\n\t\t}\n\t\t\n\t\t// boxLength/boxWidth/boxHeight\n\t\tL = boxDTO.getLength();\n\t\tW = boxDTO.getWidth();\n\t\tH = boxDTO.getHeight();\n\t\tDouble WDTH = boxDTO.getTotalWeight();\n\t\tif(L==null) { L=0D; boxDTO.setLength(0D); }\n\t\tif(W==null) { W=0D; boxDTO.setWidth(0D); }\n\t\tif(H==null) { H=0D; boxDTO.setHeight(0D); }\n\t\tif(WDTH==null) { WDTH=0D; boxDTO.setTotalWeight(0D); }\n\t\tif(L < H) {\n\t\t\tpermute = L;\n\t\t\tL = H;\n\t\t\tH = permute;\n\t\t\tboxDTO.setLength(L);\n\t\t\tboxDTO.setHeight(H);\n\t\t}\n\t\tif(L < W) {\n\t\t\tpermute = L;\n\t\t\tL = W;\n\t\t\tW = permute;\n\t\t\tboxDTO.setLength(L);\n\t\t\tboxDTO.setWidth(W);\n\t\t}\n\t\tif(W < H) {\n\t\t\tpermute = W;\n\t\t\tW = H;\n\t\t\tH = permute;\n\t\t\tboxDTO.setWidth(W);\n\t\t\tboxDTO.setHeight(H);\n\t\t}\n\t\t\n\t\t// largeCm/widthCm/highCm\n\t\t// Only to display them on addProductSuccess\n\t\tL = W = H = 0D;\n\t\tif(largeCm!=null && !largeCm.replaceAll("" "", """").isEmpty()) L = Double.parseDouble(largeCm);\n\t\tif(widthCm!=null && !widthCm.replaceAll("" "", """").isEmpty()) W = Double.parseDouble(widthCm);\n\t\tif(highCm!=null && !highCm.replaceAll("" "", """").isEmpty())   H = Double.parseDouble(highCm);\n\t\tif(L < H) {\n\t\t\tpermute = L;\n\t\t\tL = H;\n\t\t\tH = permute;\n\t\t\tlargeCm = L+"""";\n\t\t\thighCm = H+"""";\n\t\t}\n\t\tif(L < W) {\n\t\t\tpermute = L;\n\t\t\tL = W;\n\t\t\tW = permute;\n\t\t\tlargeCm = L+"""";\n\t\t\twidthCm = W+"""";\n\t\t}\n\t\tif(W < H) {\n\t\t\tpermute = W;\n\t\t\tW = H;\n\t\t\tH = permute;\n\t\t\twidthCm = W+"""";\n\t\t\thighCm = H+"""";\n\t\t}\n\t\t\n\t\t// boxLengthCm/boxWidthCm/boxHeightCm\n\t\t// Only to display them on addProductSuccess\n\t\tL = W = H = 0D;\n\t\tif(boxLengthCm!=null && !boxLengthCm.replaceAll("" "", """").isEmpty()) L = Double.parseDouble(boxLengthCm);\n\t\tif(boxWidthCm!=null && !boxWidthCm.replaceAll("" "", """").isEmpty())   W = Double.parseDouble(boxWidthCm);\n\t\tif(boxHeightCm!=null && !boxHeightCm.replaceAll("" "", """").isEmpty()) H = Double.parseDouble(boxHeightCm);\n\t\tif(L < H) {\n\t\t\tpermute = L;\n\t\t\tL = H;\n\t\t\tH = permute;\n\t\t\tboxLengthCm = L+"""";\n\t\t\tboxHeightCm = H+"""";\n\t\t}\n\t\tif(L < W) {\n\t\t\tpermute = L;\n\t\t\tL = W;\n\t\t\tW = permute;\n\t\t\tboxLengthCm = L+"""";\n\t\t\tboxWidthCm = W+"""";\n\t\t}\n\t\tif(W < H) {\n\t\t\tpermute = W;\n\t\t\tW = H;\n\t\t\tH = permute;\n\t\t\tboxWidthCm = W+"""";\n\t\t\tboxHeightCm = H+"""";\n\t\t}\n\t}//Make ""large"" the biggest size between L,W and H\n\t\n}\n----------------------------------- SOURCE END -------------------------------------",1420673721766
error,log,,,"Problems occurred when invoking code from plug-in: ""org.eclipse.jdt.ui"".",1420673721766
error,log,,,"Error in JDT Core during reconcile",1420673721767
error,log,,,"Problems occurred when invoking code from plug-in: ""org.eclipse.core.resources"".",1420673722071
error,log,,,"Errors occurred during the build.",1420673722305
deactivated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1420673722315
activated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1420673724038
activated,editor,org.eclipse.jdt.ui,3.6.2.r362_v20110203,"org.eclipse.jdt.ui.CompilationUnitEditor",1420673729687
