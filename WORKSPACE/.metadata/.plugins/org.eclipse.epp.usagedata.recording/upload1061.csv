what,kind,bundleId,bundleVersion,description,time
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.paste",1404937415309
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.copy",1404937418663
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.copy",1404937418928
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.copy",1404937419146
activated,editor,org.eclipse.jdt.ui,3.6.2.r362_v20110203,"org.eclipse.jdt.ui.CompilationUnitEditor",1404937421206
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.paste",1404937424201
activated,editor,org.eclipse.jst.jsp.ui,1.1.503.v201101262228,"org.eclipse.jst.jsp.core.jspsource.source",1404937427227
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.paste",1404937431080
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.copy",1404937435105
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.paste",1404937438927
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.paste",1404937440862
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.cut",1404937447617
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.paste",1404937451844
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.paste",1404937453919
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.delete",1404937456930
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.delete",1404937460112
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.file.save",1404937462515
activated,editor,org.eclipse.jdt.ui,3.6.2.r362_v20110203,"org.eclipse.jdt.ui.CompilationUnitEditor",1404937464246
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.copy",1404937466259
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.copy",1404937466508
activated,editor,org.eclipse.jdt.ui,3.6.2.r362_v20110203,"org.eclipse.jdt.ui.CompilationUnitEditor",1404937469254
activated,editor,org.eclipse.jdt.ui,3.6.2.r362_v20110203,"org.eclipse.jdt.ui.CompilationUnitEditor",1404937470783
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.paste",1404937484417
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.cut",1404937487646
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.paste",1404937489877
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.delete",1404937492716
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.delete",1404937493044
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.delete",1404937502560
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.delete",1404937502809
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.delete",1404937512700
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.delete",1404937516709
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.file.save",1404937520718
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.text.contentAssist.proposals",1404937525242
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.delete",1404937531327
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.file.saveAll",1404937534276
error,log,,,"Problems occurred when invoking code from plug-in: ""org.eclipse.core.resources"".",1404937534822
error,log,,,"Errors occurred during the build.",1404937534900
deactivated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1404937534931
error,log,,,"Exception occurred during problem detection:\n----------------------------------- SOURCE BEGIN -------------------------------------\npackage com.loyauty.web.struts.action.template;\n\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.List;\n\nimport javax.servlet.http.HttpSession;\n\nimport lombok.Getter;\nimport lombok.Setter;\n\nimport com.loyauty.exception.ServiceException;\nimport com.loyauty.exception.ServiceLocatorException;\nimport com.loyauty.model.User;\nimport com.loyauty.service.core.dto.BasicUserDTO;\nimport com.loyauty.service.core.dto.ClientCategoryDTO;\nimport com.loyauty.service.core.dto.UserDTO;\nimport com.loyauty.service.core.dto.UserSessionDTO;\nimport com.loyauty.service.product.ProductService;\nimport com.loyauty.service.user.UserService;\nimport com.loyauty.web.WebConstants;\nimport com.loyauty.web.struts.action.LoyautyAction;\n\npublic class EditTemplate  extends LoyautyAction{\n\tprivate static final long serialVersionUID = -6760458314007286079L;\n\t//GLOBAL VERIABLE\n\tprivate UserService userService;\n\tprivate HashMap<Long,ClientCategoryDTO> hashMapTemplate;\n\t//PROPERTIES\n\t@Getter @Setter\n\tprivate UserSessionDTO userSession;\n\t@Getter @Setter\n\tprivate ClientCategoryDTO templateToEdit;\n\t@Getter @Setter\n\tprivate Integer templateIndex;\n\t@Getter @Setter\n\tprivate Long templateId;\n\t@Getter @Setter\n\tprivate Double profitCoefficient;\n\t@Getter @Setter\n\tprivate Double unitSoldCoefficient;\n\t@Getter @Setter\n\tprivate Long findTemplateSignal;\n\t@Getter @Setter\n\tprivate Long saveTemplateSignal;\n\t@Getter @Setter\n\tprivate List<ClientCategoryDTO> listClientCategory; \n\t@Getter @Setter\n\tprivate List<User> usersList;\n\n\t/*=======================================================================\n\t \t\t\t\t\t\t\tCONSTRUCTOR\n\t  =======================================================================*/\n\tpublic  EditTemplate() throws ServiceLocatorException {\n\t\tsuper();\t\n\t\tuserService = getServiceLocator().getUserService();\n\t}\n\n\t/*=======================================================================\n\t \t\t\t\t\t\t   METHODE: EXECUTE\n\t  =======================================================================*/\n\t@SuppressWarnings(""unchecked"")\n\t@Override  \n\tpublic String execute() throws Exception {\n\t\tHttpSession session = request.getSession(true);\n\t\ttry {\n\t\t\t//Get template List\n\t\t\tif(templateToEdit==null)templateToEdit=new ClientCategoryDTO(); \n\t\t\thashMapTemplate=(HashMap<Long,ClientCategoryDTO>)session.getAttribute(""hashMapTemplate"");\n\t\t\tlistClientCategory=(List<ClientCategoryDTO>)session.getAttribute(""listClientCategory"");\n\t\t\tif(listClientCategory==null){\n\t\t\t\tlistClientCategory=userService.getAllClientCategory();\n\t\t\t\thashMapTemplate=getHashMapClientCategory(listClientCategory);\n\t\t\t\tsession.setAttribute(""listClientCategory"",listClientCategory);\n\t\t\t\tsession.setAttribute(""hashMapTemplate"",hashMapTemplate);\n\t\t\t\treturn SUCCESS;\n\t\t\t}\n\t\t\t//Display template Selected\n\t\t\tClientCategoryDTO template=hashMapTemplate.get(templateId);\n\t\t\tif(template!=null){\n\t\t\t\tlistClientCategory=getListClientCategorySorted(hashMapTemplate,templateId);\n\t\t\t\tsession.setAttribute(""listClientCategory"",listClientCategory);\n\t\t\t}\n\t\t\t//Find Template Selected\n\t\t\tif(findTemplateSignal!=null && findTemplateSignal!=0L){\n\t\t\t\ttemplateToEdit=hashMapTemplate.get(templateId);\n\t\t\t\tlistClientCategory=getListClientCategorySorted(hashMapTemplate,templateId);\n\t\t\t\tsession.setAttribute(""listClientCategory"",listClientCategory);\n\t\t\t\treturn SUCCESS;\n\t\t\t}\n\t\t\t//Save Template Selected\n\t\t\tif(saveTemplateSignal!=null && saveTemplateSignal!=0){\n\t\t\t\ttemplate=listClientCategory.get(0);\n\t\t\t\ttemplateToEdit.setClientCategoryId(template.getClientCategoryId());\n\t\t\t\tuserService.updateTemplateCoeffitions(templateToEdit);\n\t\t\t\tlistClientCategory=userService.getAllClientCategory();\n\t\t\t\thashMapTemplate=getHashMapClientCategory(listClientCategory);\n\t\t\t\tlistClientCategory=getListClientCategorySorted(hashMapTemplate,templateId);\n\t\t\t\tsession.setAttribute(""listClientCategory"",listClientCategory);\n\t\t\t\tsession.setAttribute(""hashMapTemplate"",hashMapTemplate);\n\t\t\t\treturn SUCCESS;\n\t\t\t}\n\t\t\treturn SUCCESS;\n\t\t} catch (Exception sx) {\n\t\t\tsx.printStackTrace();\n\t\t}\n\n\t\treturn SUCCESS;\n\t}\n\n\t/*=======================================================================\n\t \t\t\t\t   METHODE: getListClientCategorySorted\n\t  =======================================================================*/\n\tpublic List<ClientCategoryDTO> getListClientCategorySorted(HashMap<Long,ClientCategoryDTO> hashMapTemplate,Long templateId){\n\t\tList<ClientCategoryDTO>result=new ArrayList<ClientCategoryDTO>();\n\t\tClientCategoryDTO clcDTO=hashMapTemplate.get(templateId);\n\t\tresult.add(clcDTO);\n\t\tfor(ClientCategoryDTO item:hashMapTemplate.values()){\n\t\t\tif(item.getClientCategoryId()!=templateId)result.add(item);\n\t\t}\t\n\t\treturn result;\n\t}\n\n\t/*=======================================================================\n\t \t\t\t\t   METHODE: getHashMapClientCategory\n\t  =======================================================================*/\n\tpublic HashMap<Long,ClientCategoryDTO> getHashMapClientCategory(List<ClientCategoryDTO>list){\n\t\tHashMap<Long,ClientCategoryDTO>result=new HashMap<Long,ClientCategoryDTO>();\t\t\n\t\tfor(ClientCategoryDTO temp:list){\n\t\t\tresult.put(temp.getClientCategoryId(), temp);\n\t\t}\n\t\treturn result;\n\t}\n\n}\n\n----------------------------------- SOURCE END -------------------------------------",1404937535836
error,log,,,"Problems occurred when invoking code from plug-in: ""org.eclipse.jdt.ui"".",1404937535836
error,log,,,"Exception occurred during problem detection:\n----------------------------------- SOURCE BEGIN -------------------------------------\npackage com.loyauty.model;\n\nimport java.util.Date;\nimport java.util.List;\n\nimport lombok.Data;\nimport lombok.ToString;\n\n@Data @ToString(callSuper=true)\npublic class Brand extends AbstractEntity{\n\n\tprivate String name;\n\tprivate Image image;\n\tprivate String description;\n\tprivate Date creationDate;\n\tprivate String code;\n\tprivate Long idCategoryGroup;\n\tprivate Integer hide;\n\tprivate Double coefficient;\n\tprivate Double satisfact;\n\tprivate List<Long> categoryGroupId;\n\t\n\tpublic Brand(){}\n\t\n\t  \n}\n\n----------------------------------- SOURCE END -------------------------------------",1404937535836
error,log,,,"Error in JDT Core during reconcile",1404937535836
error,log,,,"Problems occurred when invoking code from plug-in: ""org.eclipse.jdt.ui"".",1404937535836
error,log,,,"Error in JDT Core during reconcile",1404937535851
error,log,,,"Exception occurred during problem detection:\n----------------------------------- SOURCE BEGIN -------------------------------------\npackage com.loyauty.service.core.dto;\n\nimport java.util.Date;\nimport java.util.List;\n\nimport lombok.Data;\nimport lombok.ToString;\n\n\n@Data @ToString(callSuper=true)\npublic class BrandDTO extends BasicDTO {\n\t\n\tprivate String name;\n\tprivate ImageDTO image;\n\tprivate String description;\n\tprivate String localizedCreationDate;\n\tprivate Date creationDate;\n\tprivate String hrefName;\n\tprivate String code;\n\tprivate Integer hide;\n\tprivate Double coefficient;\n\tprivate Double satisfact;\n\tprivate List<Long> categoryGroupListLong; \n\n\t\n\t\n\tprivate BrandDTO(long id){\t\t\n\t\tsetId(id);\n\t}\n\t\n\tprivate BrandDTO(long id, String name, ImageDTO image, String description, Date creationDate){\t\t\n\t\tsetId(id);\n\t\tsetName(name);\n\t\tsetImage(image);\n\t\tsetDescription(description);\n\t\tsetCreationDate(creationDate);\n\t}\n\t\n\tprivate BrandDTO(long id, String name, String description, Date creationDate){\t\t\n\t\tsetId(id);\n\t\tsetName(name);\n\t\tsetDescription(description);\n\t\tsetCreationDate(creationDate);\n\t}\n\t\n\tprivate BrandDTO(String name, ImageDTO image, String description){\t\n\t\tsetName(name);\n\t\tsetImage(image);\n\t\tsetDescription(description);\n\t}\n\t\n\tprivate BrandDTO(String name, ImageDTO image, String description, String code, List<Long>categoryGroupListLong){\t\n\t\tsetName(name);\n\t\tsetImage(image);\n\t\tsetDescription(description);\n\t\tsetCode(code);\n\t\tsetCategoryGroupListLong(categoryGroupListLong);\n\t}\n\t\n\t\t\n\tprivate BrandDTO(long id, String name, String code, String description, ImageDTO image, Date creationDate) {\n\t\tsetId(id);\n\t\tsetName(name);\n\t\tsetCode(code);\n\t\tsetDescription(description);\n\t\tsetImage(image);\n\t\tsetCreationDate(creationDate);\n\t}\n\n\tpublic static BrandDTO valueOf(long id, String name, ImageDTO image, String description, Date creationDate) {\t\t\n\t\treturn new BrandDTO(id, name, image, description, creationDate);\n\t}\n\t\n\tpublic static BrandDTO valueOf(long id, String name, String code, ImageDTO image, String description, Date creationDate) {\t\t\n\t\treturn new BrandDTO(id, name, code, description, image, creationDate);\n\t}\n\t\n\tpublic static BrandDTO valueOf(long id, String name, String description, Date creationDate) {\t\t\n\t\treturn new BrandDTO(id, name, description, creationDate);\n\t}\n\t\n\tpublic static BrandDTO valueOf(String name, ImageDTO image, String description) {\t\t\n\t\treturn new BrandDTO(name, image, description);\n\t}\n\t\n\tpublic static BrandDTO valueOf(String name, ImageDTO image, String description, String code, List<Long> categoryGroupListLong) {\t\t\n\t\treturn new BrandDTO(name, image, description, code,categoryGroupListLong);\n\t}\n\t\n\tpublic static BrandDTO valueOf(long id) {\t\t\n\t\treturn new BrandDTO(id);\n\t}\n\t\n\tpublic static BrandDTO valueOf(long id, String name) {\n\t\treturn new BrandDTO(id, name, null, null);\t\t\n\t}\n\t\n\t//public static BrandDTO valueOf(long id, String name, List<Long> categoryGroupList, String code, String description, ImageDTO image, Date creationDate) {\t\t\n\t\t//return new BrandDTO(id, name, categoryGroupList, code, description, image, creationDate);\n\t//}\n\t\n\t\n\t\n\n}\n\n----------------------------------- SOURCE END -------------------------------------",1404937535929
error,log,,,"Problems occurred when invoking code from plug-in: ""org.eclipse.jdt.ui"".",1404937535929
error,log,,,"Error in JDT Core during reconcile",1404937535929
activated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1404937536460
activated,view,org.eclipse.wst.server.ui,1.1.207.v20110119,"org.eclipse.wst.server.ui.ServersView",1404937538332
executed,command,org.eclipse.wst.server.ui,1.1.207.v20110119,"org.eclipse.wst.server.stop",1404937538456
activated,view,org.eclipse.ui.console,3.5.0.v20100526,"org.eclipse.ui.console.ConsoleView",1404937540547
activated,view,org.eclipse.wst.server.ui,1.1.207.v20110119,"org.eclipse.wst.server.ui.ServersView",1404937543419
activated,editor,org.eclipse.jdt.ui,3.6.2.r362_v20110203,"org.eclipse.jdt.ui.CompilationUnitEditor",1404937544730
activated,editor,org.eclipse.jdt.ui,3.6.2.r362_v20110203,"org.eclipse.jdt.ui.CompilationUnitEditor",1404937546742
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.delete",1404937550876
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.edit.delete",1404937554464
executed,command,org.eclipse.ui,3.6.2.M20110203-1100,"org.eclipse.ui.file.save",1404937557756
error,log,,,"Exception occurred during problem detection:\n----------------------------------- SOURCE BEGIN -------------------------------------\npackage com.loyauty.service.brand;\n\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.ArrayList;\nimport java.util.Date;\nimport java.util.Iterator;\nimport java.util.List;\n\nimport lombok.Getter;\nimport lombok.Setter;\n\nimport org.apache.log4j.Logger;\n\nimport com.loyauty.dao.core.DaoCommand;\nimport com.loyauty.dao.core.DaoManager;\nimport com.loyauty.dao.core.DaoManagerFactory;\nimport com.loyauty.enums.Type;\nimport com.loyauty.exception.DaoException;\nimport com.loyauty.exception.ServiceException;\nimport com.loyauty.model.Brand;\nimport com.loyauty.model.BrandCategoryGroup;\nimport com.loyauty.model.Image;\nimport com.loyauty.service.ServiceImpl;\nimport com.loyauty.service.core.DTOFactory;\nimport com.loyauty.service.core.dto.BrandDTO;\nimport com.loyauty.service.core.dto.ImageDTO;\nimport com.loyauty.service.image.ImageService;\nimport com.loyauty.service.image.ImageServiceImpl;\nimport com.loyauty.util.CommonUtils;\n\n\npublic class BrandServiceImpl extends ServiceImpl implements BrandService {\n\n\tprivate static final Logger log = Logger.getLogger(BrandServiceImpl.class);\n\t\n\t@Setter \n\t@Getter\n\n\tprotected DaoManager daoManager;\n\t\n\tpublic BrandServiceImpl() {\n\t\tsetDaoManager(DaoManagerFactory.getDaoManager());\n\t}\n\n\t@SuppressWarnings(""unchecked"")\n\t@Override\n\tpublic List<BrandDTO> getAllBrand() throws ServiceException {\n\t\t\t\n\t\tList<Brand> list = null;\n\t\ttry {\n\t\t\tlist = (List<Brand>) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\n\t\t\t\t\treturn daoManager.getBrandDao().getAllEntities();\n\t\t\t\t}\n\t\t\t});\n\t\t} catch (DaoException e) {\n\t\t\tthrow (new ServiceException(e));\t\t\t\n\t\t} \n\t\t\n\t\treturn DTOFactory.getBrandListDTO(list);\n\t\t\n\t}\n\n\t@Override\n\tpublic Long createBrand(final BrandDTO brandDTO) throws ServiceException\n\t{\n\t\tBrand brandResult = new Brand();\n\t\t\n\t\ttry \n\t\t{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tbrandResult = (Brand) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(com.loyauty.dao.core.DaoManager daoManager)\n\t\t\t\tthrows DaoException {\n\t\t\t\t\t\n\t\t\t\t\tBrand brand = new Brand();\n\t\t\t\t\t\n\t\t\t\t\t//Insert Image Brand\n\t\t\t\t\tImage imageBrand = new Image();\n\t\t\t\t\timageBrand.setName(brandDTO.getImage().getName());\n\t\t\t\t\timageBrand.setRealNameImg(brandDTO.getImage().getRealName());\n\t\t\t\t\timageBrand.setType(Type.BRAND);\n\t\t\t\t\timageBrand.setSize(brandDTO.getImage().getSize());\n\t\t\t\t\timageBrand.setHeight(brandDTO.getImage().getHeight());\n\t\t\t\t\timageBrand.setWidth(brandDTO.getImage().getWidth());\n\t\t\t\t\timageBrand.setLarge(brandDTO.getImage().isLarge());\n\t\t\t\t\timageBrand.setResolution(brandDTO.getImage().getResolution());\n\t\t\t\t\timageBrand.setScore(brandDTO.getImage().getScore());\n\t\t\t\t\tdaoManager.getImageDao().insertEntity(imageBrand);\n\t\t\t\t\t\n\t\t\t\t\tbrand.setImage(imageBrand);\n\t\t\t\t\tbrand.setName(brandDTO.getName());\n\t\t\t\t\tbrand.setCode(brandDTO.getCode());\n\t\t\t\t\tbrand.setDescription(brandDTO.getDescription());\n\t\t\t\t\t\n\t\t\t\t\tdaoManager.getBrandDao().insertEntity(brand);\n\t\t\t\t\t\n\t\t\t\t\t//iterate the long<s list and insert\n\t\t\t\t\t//you have id brand in brand.getId() after the insert\n                   if(brandDTO.getCategoryGroupListLong()!= null)\n                   {  \n                \t   int i = 0;\n                \t   BrandCategoryGroup categoryGroup = new BrandCategoryGroup(); \n                \t   categoryGroup.setBrandid(brand.getId());\n                \t   while(i!=brandDTO.getCategoryGroupListLong().size() )\n                \t   {\n                \t\t   categoryGroup.setIdCategoryGroup(brandDTO.getCategoryGroupListLong().get(i));\n                \t\t   daoManager.getBrandDao().insertCatG(categoryGroup); \n                \t\t   i++;\n                \t   }\n                \t   \n                   }\n\t\t\t\t\t\n\t\t\t\t\treturn brand;\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn(brandResult.getId());\n\t\t} catch (DaoException e) {\n\t\t\tthrow (new ServiceException(e));\n\t\t}\n\t}\n\t\n\t@Override\n\tpublic void updateBrand(final BrandDTO brandDTO) throws ServiceException\n\t{\n\t\ttry \n\t\t{\n\t\t    daoManager.setCommitTransaction(true);\n\t\t    daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(com.loyauty.dao.core.DaoManager daoManager)\n\t\t\t\tthrows DaoException {\n\t\t\t\t\t\n\t\t\t\t\tBrand brand = new Brand();\n\t\t\t\t\t\t\n\t\t\t\t\t//Insert Image brand\n\t\t\t\t\tImage imageBrand = new Image();\n\t\t\t\t\timageBrand.setId(brandDTO.getImage().getId());\n\t\t\t\t\timageBrand.setName(brandDTO.getImage().getName());\n\t\t\t\t\timageBrand.setRealNameImg(brandDTO.getImage().getRealName());\n\t\t\t\t\timageBrand.setType(Type.BRAND);\n\t\t\t\t\timageBrand.setSize(brandDTO.getImage().getSize());\n\t\t\t\t\timageBrand.setHeight(brandDTO.getImage().getHeight());\n\t\t\t\t\timageBrand.setWidth(brandDTO.getImage().getWidth());\n\t\t\t\t\timageBrand.setLarge(brandDTO.getImage().isLarge());\n\t\t\t\t\timageBrand.setResolution(brandDTO.getImage().getResolution());\n\t\t\t\t\timageBrand.setScore(brandDTO.getImage().getScore());\n\t\t\t\t\t//If the id image is null that means that the image is new.\n\t\t\t\t\t//So, Insert the image and update the product.\n\t\t\t\t\tif(brandDTO.getImage()== null)\n\t\t\t\t\t{\n\t\t\t\t\t\tdaoManager.getImageDao().insertEntity(imageBrand);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tbrand.setId(brandDTO.getId());\n\t\t\t\t\tbrand.setName(brandDTO.getName());\n\t\t\t\t\tbrand.setCode(brandDTO.getCode());\n\t\t\t\t\tbrand.setDescription(brandDTO.getDescription());\n\t\t\t\t\tbrand.setImage(imageBrand);\n\t\t\t\t\tbrand.setCoefficient(brandDTO.getCoefficient());\n\t\t\t\t\tbrand.setSatisfact(brandDTO.getSatisfact());\n\t\t\t\t\tdaoManager.getBrandDao().updateEntity(brand);\n\t\t\t\t\tdaoManager.getBrandDao().deleteCategoryGroupByBrandId(brand.getId());\n\t\t\t\t\t if(brandDTO.getCategoryGroupListLong()!= null)\n\t                   {  \n\t                \t   int i = 0;\n\t                \t   BrandCategoryGroup categoryGroup = new BrandCategoryGroup(); \n\t                \t   categoryGroup.setBrandid(brand.getId());\n\t                \t   while(i!=brandDTO.getCategoryGroupListLong().size() )\n\t                \t   {\n\t                \t\t   categoryGroup.setIdCategoryGroup(brandDTO.getCategoryGroupListLong().get(i));\n\t                \t\t   daoManager.getBrandDao().insertCatG(categoryGroup); \n\t                \t\t   i++;\n\t                \t   }\n\t                \t   \n\t                   }\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn brand;\n\t\t\t\t}\n\t\t\t});\n\t\t} catch (DaoException e) {\n\t\t\tthrow (new ServiceException(e));\n\t\t}\n\t}\n\t\n\t@Override\n\tpublic ImageDTO addBrandImage(File file, String fileName, String applicationPath, long uploaderId,\n\t\t\t int width, int height, int miniCoverWidth, boolean large) throws ServiceException, IOException {\n\t\tImageService ish = new ImageServiceImpl();\n\t\tLong tempId = new Long(0);\n\t\tImage image = new Image();\n\t\timage.setId(tempId);\n\t\timage.setUploaderId(uploaderId);\n\t\t\n\t\t// Validate if the name is already present in the DB\n\t\tString normalizedName= CommonUtils.getNormalizedBrandImage(fileName);\n\t\t//TODO: we must create a validation in action //Validate if the image extension is JPEG or PNG\n\t\tint i = ish.isJPEGPNGImage(file);\n\t\tif (i==1) {\n\t\t\timage.addImageJps(file,normalizedName,fileName);\n\t\t}else if (i==2) {\n\t\t\timage.addImagePNG(file,normalizedName,fileName);\n\t\t}else{\n\t\t\tthrow new ServiceException(""Brand Logo Image Format not supported "" + file.getName() );\n\t\t}\n\t\timage.setName(normalizedName);\n\t\timage.setRealNameImg(fileName);\n\t\t//Variables Initialization \n\t\timage.setType(Type.BRAND);\n\t\timage.setLarge(large);\n\t\t\n\t\t// Transfer the image to the server brand/large directory\t\t\t\n\t\tif (!ish.transferBrandImage(file, normalizedName, applicationPath, width, height, miniCoverWidth, large)){\n\t\t\tthrow new ServiceException(""Could not transfer the image"" + \n\t\t\t\t\t""\\nimageName:"" + file.getName() \n\t\t\t\t\t+ ""\\nNormalized image:"" + normalizedName);\n\t\t}\n\t\t\t\t\n\t\treturn DTOFactory.getImageDTO(image); \n\t}\n\t\n\t@Override\n\tpublic BrandDTO getBrand(final long brandId) throws ServiceException{\n\t\tBrand brandResult = new Brand();\n\t\t\n\t\ttry {\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tbrandResult = (Brand) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(com.loyauty.dao.core.DaoManager daoManager)\n\t\t\t\t\t\tthrows DaoException {\n\t\t\t\t\treturn daoManager.getBrandDao().getEntity(brandId);\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t} catch (DaoException de) {\n\t\t\tthrow (new ServiceException(de));\n\t\t}\n\t\treturn(DTOFactory.getBrandDTO(brandResult));\n\t}\n\t\n\t@Override\n\tpublic boolean existBrand(String nameBrand)throws ServiceException {\n\t\tboolean exist = false;\n\t\tfinal Brand brand = new Brand();\n\t\tbrand.setName(nameBrand);\n\t\ttry {\n\t\t\texist = (Boolean) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\n\t\t\t\t\treturn daoManager.getBrandDao().existBrand(brand);\n\t\t\t\t}\n\t\t\t});\n\t\t} catch (DaoException e) {\n\t\t\tthrow (new ServiceException(e));\t\t\t\n\t\t}\n\t\treturn exist;\n\t}\n\t\n\t@Override\n\tpublic boolean existCode(final String code, final Long id)throws ServiceException {\n\t\tboolean exist = false;\n\t\ttry {\n\t\t\texist = (Boolean) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\n\t\t\t\t\tBrand brand = new Brand();\n\t\t\t\t\tbrand.setCode(code);\n\t\t\t\t\tbrand.setId(id);\n\t\t\t\t\treturn daoManager.getBrandDao().existCode(brand);\n\t\t\t\t}\n\t\t\t});\n\t\t} catch (DaoException e) {\n\t\t\tthrow (new ServiceException(e));\t\t\t\n\t\t}\n\t\treturn exist;\n\t}\n\t\n\t@SuppressWarnings(""unchecked"")\n\t@Override\n\tpublic List<BrandDTO> getAllBrandByCategoryGroup(final Long catid) throws ServiceException {\n\t\tList<Brand> list = null;\n\t\ttry {\n\t\t\tlist = (List<Brand>) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\n\t\t\t\t\t\n\t\t\t\tBrand brand = new Brand();\n\t\t\t\tbrand.setId(catid);\n\t\t\t\t\treturn daoManager.getBrandDao().getAllBrandByCategoryGroup(catid);\n\t\t\t\t}\n\t\t\t});\n\t\t} catch (DaoException e) {\n\t\t\tthrow (new ServiceException(e));\t\t\t\n\t\t} \n\t\t//return DTOFactory.getBrandDTO(brand);\n\t\treturn DTOFactory.getBrandListDTO(list);\n\t}\n\t\n}\n\n----------------------------------- SOURCE END -------------------------------------",1404937558770
error,log,,,"Problems occurred when invoking code from plug-in: ""org.eclipse.jdt.ui"".",1404937558770
error,log,,,"Error in JDT Core during reconcile",1404937558770
error,log,,,"Exception occurred during problem detection:\n----------------------------------- SOURCE BEGIN -------------------------------------\npackage com.loyauty.service.brand;\n\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.ArrayList;\nimport java.util.Date;\nimport java.util.Iterator;\nimport java.util.List;\n\nimport lombok.Getter;\nimport lombok.Setter;\n\nimport org.apache.log4j.Logger;\n\nimport com.loyauty.dao.core.DaoCommand;\nimport com.loyauty.dao.core.DaoManager;\nimport com.loyauty.dao.core.DaoManagerFactory;\nimport com.loyauty.enums.Type;\nimport com.loyauty.exception.DaoException;\nimport com.loyauty.exception.ServiceException;\nimport com.loyauty.model.Brand;\nimport com.loyauty.model.BrandCategoryGroup;\nimport com.loyauty.model.Image;\nimport com.loyauty.service.ServiceImpl;\nimport com.loyauty.service.core.DTOFactory;\nimport com.loyauty.service.core.dto.BrandDTO;\nimport com.loyauty.service.core.dto.ImageDTO;\nimport com.loyauty.service.image.ImageService;\nimport com.loyauty.service.image.ImageServiceImpl;\nimport com.loyauty.util.CommonUtils;\n\n\npublic class BrandServiceImpl extends ServiceImpl implements BrandService {\n\n\tprivate static final Logger log = Logger.getLogger(BrandServiceImpl.class);\n\t\n\t@Setter \n\t@Getter\n\n\tprotected DaoManager daoManager;\n\t\n\tpublic BrandServiceImpl() {\n\t\tsetDaoManager(DaoManagerFactory.getDaoManager());\n\t}\n\n\t@SuppressWarnings(""unchecked"")\n\t@Override\n\tpublic List<BrandDTO> getAllBrand() throws ServiceException {\n\t\t\t\n\t\tList<Brand> list = null;\n\t\ttry {\n\t\t\tlist = (List<Brand>) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\n\t\t\t\t\treturn daoManager.getBrandDao().getAllEntities();\n\t\t\t\t}\n\t\t\t});\n\t\t} catch (DaoException e) {\n\t\t\tthrow (new ServiceException(e));\t\t\t\n\t\t} \n\t\t\n\t\treturn DTOFactory.getBrandListDTO(list);\n\t\t\n\t}\n\n\t@Override\n\tpublic Long createBrand(final BrandDTO brandDTO) throws ServiceException\n\t{\n\t\tBrand brandResult = new Brand();\n\t\t\n\t\ttry \n\t\t{\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tbrandResult = (Brand) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(com.loyauty.dao.core.DaoManager daoManager)\n\t\t\t\tthrows DaoException {\n\t\t\t\t\t\n\t\t\t\t\tBrand brand = new Brand();\n\t\t\t\t\t\n\t\t\t\t\t//Insert Image Brand\n\t\t\t\t\tImage imageBrand = new Image();\n\t\t\t\t\timageBrand.setName(brandDTO.getImage().getName());\n\t\t\t\t\timageBrand.setRealNameImg(brandDTO.getImage().getRealName());\n\t\t\t\t\timageBrand.setType(Type.BRAND);\n\t\t\t\t\timageBrand.setSize(brandDTO.getImage().getSize());\n\t\t\t\t\timageBrand.setHeight(brandDTO.getImage().getHeight());\n\t\t\t\t\timageBrand.setWidth(brandDTO.getImage().getWidth());\n\t\t\t\t\timageBrand.setLarge(brandDTO.getImage().isLarge());\n\t\t\t\t\timageBrand.setResolution(brandDTO.getImage().getResolution());\n\t\t\t\t\timageBrand.setScore(brandDTO.getImage().getScore());\n\t\t\t\t\tdaoManager.getImageDao().insertEntity(imageBrand);\n\t\t\t\t\t\n\t\t\t\t\tbrand.setImage(imageBrand);\n\t\t\t\t\tbrand.setName(brandDTO.getName());\n\t\t\t\t\tbrand.setCode(brandDTO.getCode());\n\t\t\t\t\tbrand.setDescription(brandDTO.getDescription());\n\t\t\t\t\t\n\t\t\t\t\tdaoManager.getBrandDao().insertEntity(brand);\n\t\t\t\t\t\n\t\t\t\t\t//iterate the long<s list and insert\n\t\t\t\t\t//you have id brand in brand.getId() after the insert\n                   if(brandDTO.getCategoryGroupListLong()!= null)\n                   {  \n                \t   int i = 0;\n                \t   BrandCategoryGroup categoryGroup = new BrandCategoryGroup(); \n                \t   categoryGroup.setBrandid(brand.getId());\n                \t   while(i!=brandDTO.getCategoryGroupListLong().size() )\n                \t   {\n                \t\t   categoryGroup.setIdCategoryGroup(brandDTO.getCategoryGroupListLong().get(i));\n                \t\t   daoManager.getBrandDao().insertCatG(categoryGroup); \n                \t\t   i++;\n                \t   }\n                \t   \n                   }\n\t\t\t\t\t\n\t\t\t\t\treturn brand;\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn(brandResult.getId());\n\t\t} catch (DaoException e) {\n\t\t\tthrow (new ServiceException(e));\n\t\t}\n\t}\n\t\n\t@Override\n\tpublic void updateBrand(final BrandDTO brandDTO) throws ServiceException\n\t{\n\t\ttry \n\t\t{\n\t\t    daoManager.setCommitTransaction(true);\n\t\t    daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(com.loyauty.dao.core.DaoManager daoManager)\n\t\t\t\tthrows DaoException {\n\t\t\t\t\t\n\t\t\t\t\tBrand brand = new Brand();\n\t\t\t\t\t\t\n\t\t\t\t\t//Insert Image brand\n\t\t\t\t\tImage imageBrand = new Image();\n\t\t\t\t\timageBrand.setId(brandDTO.getImage().getId());\n\t\t\t\t\timageBrand.setName(brandDTO.getImage().getName());\n\t\t\t\t\timageBrand.setRealNameImg(brandDTO.getImage().getRealName());\n\t\t\t\t\timageBrand.setType(Type.BRAND);\n\t\t\t\t\timageBrand.setSize(brandDTO.getImage().getSize());\n\t\t\t\t\timageBrand.setHeight(brandDTO.getImage().getHeight());\n\t\t\t\t\timageBrand.setWidth(brandDTO.getImage().getWidth());\n\t\t\t\t\timageBrand.setLarge(brandDTO.getImage().isLarge());\n\t\t\t\t\timageBrand.setResolution(brandDTO.getImage().getResolution());\n\t\t\t\t\timageBrand.setScore(brandDTO.getImage().getScore());\n\t\t\t\t\t//If the id image is null that means that the image is new.\n\t\t\t\t\t//So, Insert the image and update the product.\n\t\t\t\t\tif(brandDTO.getImage()== null)\n\t\t\t\t\t{\n\t\t\t\t\t\tdaoManager.getImageDao().insertEntity(imageBrand);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tbrand.setId(brandDTO.getId());\n\t\t\t\t\tbrand.setName(brandDTO.getName());\n\t\t\t\t\tbrand.setCode(brandDTO.getCode());\n\t\t\t\t\tbrand.setDescription(brandDTO.getDescription());\n\t\t\t\t\tbrand.setImage(imageBrand);\n\t\t\t\t\tbrand.setCoefficient(brandDTO.getCoefficient());\n\t\t\t\t\tbrand.setSatisfact(brandDTO.getSatisfact());\n\t\t\t\t\tdaoManager.getBrandDao().updateEntity(brand);\n\t\t\t\t\tdaoManager.getBrandDao().deleteCategoryGroupByBrandId(brand.getId());\n\t\t\t\t\t if(brandDTO.getCategoryGroupListLong()!= null)\n\t                   {  \n\t                \t   int i = 0;\n\t                \t   BrandCategoryGroup categoryGroup = new BrandCategoryGroup(); \n\t                \t   categoryGroup.setBrandid(brand.getId());\n\t                \t   while(i!=brandDTO.getCategoryGroupListLong().size() )\n\t                \t   {\n\t                \t\t   categoryGroup.setIdCategoryGroup(brandDTO.getCategoryGroupListLong().get(i));\n\t                \t\t   daoManager.getBrandDao().insertCatG(categoryGroup); \n\t                \t\t   i++;\n\t                \t   }\n\t                \t   \n\t                   }\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn brand;\n\t\t\t\t}\n\t\t\t});\n\t\t} catch (DaoException e) {\n\t\t\tthrow (new ServiceException(e));\n\t\t}\n\t}\n\t\n\t@Override\n\tpublic ImageDTO addBrandImage(File file, String fileName, String applicationPath, long uploaderId,\n\t\t\t int width, int height, int miniCoverWidth, boolean large) throws ServiceException, IOException {\n\t\tImageService ish = new ImageServiceImpl();\n\t\tLong tempId = new Long(0);\n\t\tImage image = new Image();\n\t\timage.setId(tempId);\n\t\timage.setUploaderId(uploaderId);\n\t\t\n\t\t// Validate if the name is already present in the DB\n\t\tString normalizedName= CommonUtils.getNormalizedBrandImage(fileName);\n\t\t//TODO: we must create a validation in action //Validate if the image extension is JPEG or PNG\n\t\tint i = ish.isJPEGPNGImage(file);\n\t\tif (i==1) {\n\t\t\timage.addImageJps(file,normalizedName,fileName);\n\t\t}else if (i==2) {\n\t\t\timage.addImagePNG(file,normalizedName,fileName);\n\t\t}else{\n\t\t\tthrow new ServiceException(""Brand Logo Image Format not supported "" + file.getName() );\n\t\t}\n\t\timage.setName(normalizedName);\n\t\timage.setRealNameImg(fileName);\n\t\t//Variables Initialization \n\t\timage.setType(Type.BRAND);\n\t\timage.setLarge(large);\n\t\t\n\t\t// Transfer the image to the server brand/large directory\t\t\t\n\t\tif (!ish.transferBrandImage(file, normalizedName, applicationPath, width, height, miniCoverWidth, large)){\n\t\t\tthrow new ServiceException(""Could not transfer the image"" + \n\t\t\t\t\t""\\nimageName:"" + file.getName() \n\t\t\t\t\t+ ""\\nNormalized image:"" + normalizedName);\n\t\t}\n\t\t\t\t\n\t\treturn DTOFactory.getImageDTO(image); \n\t}\n\t\n\t@Override\n\tpublic BrandDTO getBrand(final long brandId) throws ServiceException{\n\t\tBrand brandResult = new Brand();\n\t\t\n\t\ttry {\n\t\t\tdaoManager.setCommitTransaction(true);\n\t\t\tbrandResult = (Brand) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(com.loyauty.dao.core.DaoManager daoManager)\n\t\t\t\t\t\tthrows DaoException {\n\t\t\t\t\treturn daoManager.getBrandDao().getEntity(brandId);\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t} catch (DaoException de) {\n\t\t\tthrow (new ServiceException(de));\n\t\t}\n\t\treturn(DTOFactory.getBrandDTO(brandResult));\n\t}\n\t\n\t@Override\n\tpublic boolean existBrand(String nameBrand)throws ServiceException {\n\t\tboolean exist = false;\n\t\tfinal Brand brand = new Brand();\n\t\tbrand.setName(nameBrand);\n\t\ttry {\n\t\t\texist = (Boolean) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\n\t\t\t\t\treturn daoManager.getBrandDao().existBrand(brand);\n\t\t\t\t}\n\t\t\t});\n\t\t} catch (DaoException e) {\n\t\t\tthrow (new ServiceException(e));\t\t\t\n\t\t}\n\t\treturn exist;\n\t}\n\t\n\t@Override\n\tpublic boolean existCode(final String code, final Long id)throws ServiceException {\n\t\tboolean exist = false;\n\t\ttry {\n\t\t\texist = (Boolean) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\n\t\t\t\t\tBrand brand = new Brand();\n\t\t\t\t\tbrand.setCode(code);\n\t\t\t\t\tbrand.setId(id);\n\t\t\t\t\treturn daoManager.getBrandDao().existCode(brand);\n\t\t\t\t}\n\t\t\t});\n\t\t} catch (DaoException e) {\n\t\t\tthrow (new ServiceException(e));\t\t\t\n\t\t}\n\t\treturn exist;\n\t}\n\t\n\t@SuppressWarnings(""unchecked"")\n\t@Override\n\tpublic List<BrandDTO> getAllBrandByCategoryGroup(final Long catid) throws ServiceException {\n\t\tList<Brand> list = null;\n\t\ttry {\n\t\t\tlist = (List<Brand>) daoManager.executeAndHandle(new DaoCommand() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object execute(DaoManager daoManager) throws DaoException {\n\t\t\t\t\t\n\t\t\t\tBrand brand = new Brand();\n\t\t\t\tbrand.setId(catid);\n\t\t\t\t\treturn daoManager.getBrandDao().getAllBrandByCategoryGroup(catid);\n\t\t\t\t}\n\t\t\t});\n\t\t} catch (DaoException e) {\n\t\t\tthrow (new ServiceException(e));\t\t\t\n\t\t} \n\t\t//return DTOFactory.getBrandDTO(brand);\n\t\treturn DTOFactory.getBrandListDTO(list);\n\t}\n\t\n}\n\n----------------------------------- SOURCE END -------------------------------------",1404937560829
error,log,,,"Problems occurred when invoking code from plug-in: ""org.eclipse.jdt.ui"".",1404937560829
error,log,,,"Error in JDT Core during reconcile",1404937560829
error,log,,,"Exception occurred during problem detection:\n----------------------------------- SOURCE BEGIN -------------------------------------\npackage com.loyauty.service.core.dto;\n\nimport java.util.Date;\nimport java.util.List;\n\nimport lombok.Data;\nimport lombok.ToString;\n\n\n@Data @ToString(callSuper=true)\npublic class BrandDTO extends BasicDTO {\n\t\n\tprivate String name;\n\tprivate ImageDTO image;\n\tprivate String description;\n\tprivate String localizedCreationDate;\n\tprivate Date creationDate;\n\tprivate String hrefName;\n\tprivate String code;\n\tprivate Integer hide;\n\tprivate Double coefficient;\n\tprivate Double satisfact;\n\tprivate List<Long> categoryGroupListLong; \n\n\t\n\t\n\tprivate BrandDTO(long id){\t\t\n\t\tsetId(id);\n\t}\n\t\n\tprivate BrandDTO(long id, String name, ImageDTO image, String description, Date creationDate){\t\t\n\t\tsetId(id);\n\t\tsetName(name);\n\t\tsetImage(image);\n\t\tsetDescription(description);\n\t\tsetCreationDate(creationDate);\n\t}\n\t\n\tprivate BrandDTO(long id, String name, String description, Date creationDate){\t\t\n\t\tsetId(id);\n\t\tsetName(name);\n\t\tsetDescription(description);\n\t\tsetCreationDate(creationDate);\n\t}\n\t\n\tprivate BrandDTO(String name, ImageDTO image, String description){\t\n\t\tsetName(name);\n\t\tsetImage(image);\n\t\tsetDescription(description);\n\t}\n\t\n\tprivate BrandDTO(String name, ImageDTO image, String description, String code, List<Long>categoryGroupListLong){\t\n\t\tsetName(name);\n\t\tsetImage(image);\n\t\tsetDescription(description);\n\t\tsetCode(code);\n\t\tsetCategoryGroupListLong(categoryGroupListLong);\n\t}\n\t\n\t\t\n\tprivate BrandDTO(long id, String name, String code, String description, ImageDTO image, Date creationDate) {\n\t\tsetId(id);\n\t\tsetName(name);\n\t\tsetCode(code);\n\t\tsetDescription(description);\n\t\tsetImage(image);\n\t\tsetCreationDate(creationDate);\n\t}\n\n\tpublic static BrandDTO valueOf(long id, String name, ImageDTO image, String description, Date creationDate) {\t\t\n\t\treturn new BrandDTO(id, name, image, description, creationDate);\n\t}\n\t\n\tpublic static BrandDTO valueOf(long id, String name, String code, ImageDTO image, String description, Date creationDate) {\t\t\n\t\treturn new BrandDTO(id, name, code, description, image, creationDate);\n\t}\n\t\n\tpublic static BrandDTO valueOf(long id, String name, String description, Date creationDate) {\t\t\n\t\treturn new BrandDTO(id, name, description, creationDate);\n\t}\n\t\n\tpublic static BrandDTO valueOf(String name, ImageDTO image, String description) {\t\t\n\t\treturn new BrandDTO(name, image, description);\n\t}\n\t\n\tpublic static BrandDTO valueOf(String name, ImageDTO image, String description, String code, List<Long> categoryGroupListLong) {\t\t\n\t\treturn new BrandDTO(name, image, description, code,categoryGroupListLong);\n\t}\n\t\n\tpublic static BrandDTO valueOf(long id) {\t\t\n\t\treturn new BrandDTO(id);\n\t}\n\t\n\tpublic static BrandDTO valueOf(long id, String name) {\n\t\treturn new BrandDTO(id, name, null, null);\t\t\n\t}\n\t\n\t//public static BrandDTO valueOf(long id, String name, List<Long> categoryGroupList, String code, String description, ImageDTO image, Date creationDate) {\t\t\n\t\t//return new BrandDTO(id, name, categoryGroupList, code, description, image, creationDate);\n\t//}\n\t\n\t\n\t\n\n}\n\n----------------------------------- SOURCE END -------------------------------------",1404937561125
error,log,,,"Problems occurred when invoking code from plug-in: ""org.eclipse.jdt.ui"".",1404937561125
error,log,,,"Error in JDT Core during reconcile",1404937561125
activated,editor,org.eclipse.jdt.ui,3.6.2.r362_v20110203,"org.eclipse.jdt.ui.CompilationUnitEditor",1404937562966
error,log,,,"Exception occurred during problem detection:\n----------------------------------- SOURCE BEGIN -------------------------------------\npackage com.loyauty.model;\n\nimport java.util.Date;\nimport java.util.List;\n\nimport lombok.Data;\nimport lombok.ToString;\n\n@Data @ToString(callSuper=true)\npublic class Brand extends AbstractEntity{\n\n\tprivate String name;\n\tprivate Image image;\n\tprivate String description;\n\tprivate Date creationDate;\n\tprivate String code;\n\tprivate Long idCategoryGroup;\n\tprivate Integer hide;\n\tprivate Double coefficient;\n\tprivate Double satisfact;\n\tprivate List<Long> categoryGroupId;\n\t\n\tpublic Brand(){}\n\t\n\t  \n}\n\n----------------------------------- SOURCE END -------------------------------------",1404937564308
error,log,,,"Problems occurred when invoking code from plug-in: ""org.eclipse.jdt.ui"".",1404937564308
error,log,,,"Error in JDT Core during reconcile",1404937564323
activated,editor,org.eclipse.jdt.ui,3.6.2.r362_v20110203,"org.eclipse.jdt.ui.CompilationUnitEditor",1404937564869
error,log,,,"Exception occurred during problem detection:\n----------------------------------- SOURCE BEGIN -------------------------------------\npackage com.loyauty.web.struts.action.brand;\n\n\n\nimport java.io.File;\nimport java.util.List;\n\nimport lombok.Getter;\nimport lombok.Setter;\n\nimport com.loyauty.exception.ServiceException;\nimport com.loyauty.exception.ServiceLocatorException;\nimport com.loyauty.service.brand.BrandService;\nimport com.loyauty.service.common.CommonService;\nimport com.loyauty.service.core.dto.BrandDTO;\nimport com.loyauty.service.core.dto.CommonDTO;\nimport com.loyauty.service.core.dto.ImageDTO;\nimport com.loyauty.service.image.ImageService;\nimport com.loyauty.util.CommonUtils;\nimport com.loyauty.web.struts.action.LoyautyAction;\n\npublic class EditBrand extends LoyautyAction {\n\t\n\tprivate final BrandService brandService;\n\tprivate final CommonService commonService;\n\tprivate ImageService imageService;\n\t\n\t@Getter @Setter\n\tprivate Long brandId;\n\t@Getter @Setter\n\tprivate Long imageId;\n\t@Getter @Setter\n\tprivate String name;\n\t@Getter @Setter\n\tprivate String description;\n\t//uploading files\n\t@Getter @Setter\t\n\tprivate File productImage; \n\t@Getter @Setter\n\tprivate String productImageContentType;\n\t@Getter @Setter\n\tprivate String productImageFileName;\n\t@Getter @Setter\n\tprivate ImageDTO imgDTO; \n\t@Getter @Setter\n\tprivate List<CommonDTO> categoryList;\n\t@Getter \n\tprivate final boolean update = false;\n\t@Getter @Setter\n\tprivate BrandDTO brandDTO;\n\t@Getter @Setter\n\tprivate String code;\n\t@Getter @Setter\n\tprivate Double coefficient;\n\t@Getter @Setter\n\tprivate Double satisfact;\n\t@Getter @Setter\n\tprivate List<Long> categoryGroupListLong;\n\t@Getter @Setter\n\tprivate List<CommonDTO> categoryGroupList;\n\t\n\t@Getter @Setter\n\tprivate String message;\n\t\n\tpublic EditBrand () throws ServiceLocatorException {\n\t\tsuper();\n\t\tbrandService = getServiceLocator().getBrandService();\n\t\tcommonService = getServiceLocator().getCommonService();\n\t\timageService = getServiceLocator().getImageService();\n\t}\n\t\n\t@Override\n\tpublic void prepare() throws Exception {\n\t\tcategoryGroupList = commonService.getAllCategoryGroup();\n\t}\n\t\n\t@Override\n\tpublic void validate() {\n\t\tif(name.trim().length() == 0)\n\t\t\taddActionError(getText(""loyauty.error.common.brand_required""));\n\t\tif(description.trim().length() == 0)\n\t\t\taddActionError(getText(""loyauty.error.common.description_required""));\n\t\ttry {\n\t\t\tif(brandService.existCode(code.trim(), brandId))\n\t\t\t\taddActionError(getText(""loyauty.error.common.brand_code_Exist""));\n\t\t} catch (ServiceException e) {\n\t\t\taddActionError(getText(""loyauty.error.common.service""));\n\t\t}\n\t}\n\t\n\tpublic String execute() throws Exception {\n\t\ttry{\t\t\n\t\t\tbrandDTO = brandService.getBrand(brandId);\n\t\t\t\n\t\t\tbrandDTO.setName(name);\n\t\t\tbrandDTO.setCode(code);\n\t\t\tbrandDTO.setDescription(description);\n\t\t\t//That means that insert a new image and I have to link to the brand\n\t\t\tif(imageId != 0) {\n\t\t\t\tif(brandDTO.getImage() != null)\n\t\t\t\t\tbrandDTO.getImage().setId(imageId);\n\t\t\t\telse\n\t\t\t\t\tbrandDTO.setImage(imageService.getImage(imageId));\n\t\t\t\t\n\t\t\t\timgDTO = imageService.getImage(imageId);\n\t\t\t}\t\n\t\t\tbrandDTO.setCategoryGroupListLong(categoryGroupListLong);\n\t\t\tbrandDTO.setCoefficient(coefficient);\n\t\t\tbrandDTO.setSatisfact(satisfact);\n\t\t\tbrandService.updateBrand(brandDTO);\n\t\t\t\n\t\t\tmessage = ""Brand Updated Successfully"";\n\t\t\t\n\t\t\treturn SUCCESS;\n\t\t}\n\t\tcatch(ServiceException e){\n\t\t\tlog.debug(""Service Error when loading file"");\n\t\t\taddActionError(getText(""loyauty.error.common.service""));\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\taddActionError(getText(""loyauty.error.common.service""));\n\t\t}\n\t\treturn INPUT;\n\t}\n}\n\n----------------------------------- SOURCE END -------------------------------------",1404937566835
error,log,,,"Problems occurred when invoking code from plug-in: ""org.eclipse.jdt.ui"".",1404937566835
error,log,,,"Error in JDT Core during reconcile",1404937566835
error,log,,,"Exception occurred during problem detection:\n----------------------------------- SOURCE BEGIN -------------------------------------\npackage com.loyauty.web.struts.action.brand;\n\n\n\nimport java.awt.Dimension;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport javax.sql.CommonDataSource;\n\nimport lombok.Getter;\nimport lombok.Setter;\n\nimport com.loyauty.enums.GroupCategoryEnum;\nimport com.loyauty.exception.ServiceException;\nimport com.loyauty.exception.ServiceLocatorException;\nimport com.loyauty.service.brand.BrandService;\nimport com.loyauty.service.common.CommonService;\nimport com.loyauty.service.core.dto.BrandDTO;\nimport com.loyauty.service.core.dto.CommonDTO;\nimport com.loyauty.service.core.dto.ImageDTO;\nimport com.loyauty.service.core.dto.ProductDTO;\nimport com.loyauty.service.core.dto.UserSessionDTO;\nimport com.loyauty.service.core.dto.ProductDTO.Builder;\nimport com.loyauty.service.image.ImageService;\nimport com.loyauty.service.product.ProductService;\nimport com.loyauty.util.io.FileUtils;\nimport com.loyauty.web.WebConstants;\nimport com.loyauty.web.struts.action.LoyautyAction;\n\npublic class SaveBrand extends LoyautyAction {\n\t\n\tprivate BrandService brandService;\n\tprivate ImageService imageService;\n\tprivate CommonService commonService;\n\t\n\t@Getter @Setter\n\tprivate String name;\n\t@Getter @Setter\n\tprivate String description;\t\n\t\n\t//uploading files\n\t@Getter @Setter\n\tprivate int width;\n\t@Getter @Setter\t\n\tprivate File brandImage; \n\t@Getter @Setter\n\tprivate String brandImageContentType;\n\t@Getter @Setter\n\tprivate String brandImageFileName;\n\t@Getter @Setter\n\tprivate ImageDTO imgDTO; \n\t@Getter @Setter\n\tprivate String code;\n\t\n\t@Getter @Setter\n\tprivate List<Long> categoryGroupListLong;\n\t@Getter @Setter\n\tprivate List<CommonDTO> categoryGroupList;\n\t\n\t@Getter @Setter\n\tprivate String message;\n\t\n\tpublic SaveBrand () throws ServiceLocatorException {\n\t\tsuper();\t\n\t\tbrandService = getServiceLocator().getBrandService();\n\t\timageService = getServiceLocator().getImageService();\n\t\tcommonService = getServiceLocator().getCommonService();\n\t}\n\t\n\t\n\t@Override\n\tpublic void validate() {\n\t\tif(name.trim().length() == 0)\n\t\t\taddActionError(getText(""loyauty.error.common.brand_required""));\n\t\tif(code.trim().length() == 0)\n\t\t\taddActionError(getText(""loyauty.error.common.code_required""));\n\t\tif(description.trim().length() == 0)\n\t\t\taddActionError(getText(""loyauty.error.common.description_required""));\n\t\ttry {\n\t\t\tif(brandService.existBrand(name.trim()))\n\t\t\t\taddActionError(getText(""loyauty.error.common.brand_name_Exist""));\n\t\t\tif(brandService.existCode(code.trim(), null))\n\t\t\t\taddActionError(getText(""loyauty.error.common.brand_code_Exist""));\n\t\t} catch (ServiceException e) {\n\t\t\taddActionError(getText(""loyauty.error.common.service""));\n\t\t}\n\t}\n\t\n\t@Override\n\tpublic void prepare() throws ServiceException{\t\t\n\t\tcategoryGroupList = commonService.getAllCategoryGroup();\t\n\t}\n\t\n\t@Override  \n\tpublic String execute() throws Exception {\n\t\t\n\t\ttry{\n\t\t\t\n\t\t\timgDTO  =  uploadBrandImage();\n\t\t\t\n\t\t\tif( this.hasActionErrors() ) return INPUT;\n\t\t\t\n\t\t\t\n\t\t\tBrandDTO brandDTO = BrandDTO.valueOf(name, imgDTO, description, code, categoryGroupListLong );\n\t\t\t\n\t\t\tbrandService.createBrand(brandDTO);\n\t\t\t//commonService.getCategory(brandDTO);\n\t\t\t\n\t\t\tmessage = ""Brand Added Successfully"";\n\t\t\t\n\t\t\treturn SUCCESS;\n\t\t}\n\t\tcatch(ServiceLocatorException e){\n\t\t\tlog.debug(""Service Error when loading file"");\n\t\t\taddActionError(getText(""loyauty.error.common.service""));\n\t\t}\n\t\tcatch(ServiceException e){\n\t\t\tlog.debug(""Service Error when loading file"");\n\t\t\taddActionError(getText(""loyauty.error.common.service""));\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\taddActionError(getText(""loyauty.error.common.service""));\n\t\t}\n\t\treturn INPUT;\n\t}\n\t\n\t\n\t/**\n\t * @action load image file\n\t * @return\n\t * @throws ServiceException\n\t * @throws IOException \n\t * @throws ServiceLocatorException \n\t */\n\t\n\tprivate ImageDTO uploadBrandImage() throws ServiceException, IOException, ServiceLocatorException {\n\t\t\n\t\tImageDTO imageDTO = null;\n\t\tUserSessionDTO userSession = (UserSessionDTO) request.getSession().getAttribute(WebConstants.USER);\t\n\t\tif(brandImage == null ){\n\t\t\taddActionError(getText(""loyauty.error.common.image_required""));\t\n\t\t}\n\t\telse {\n\t\t\t\t\t\n\t\t\tboolean contentFireFox = !brandImageContentType.equals(""image/png"")  && \n\t\t\t\t\t\t\t\t\t !brandImageContentType.equals(""image/jpeg"") && \n\t\t\t\t\t\t\t\t\t !brandImageContentType.equals(""image/jpg"");\n\n\t\t\tboolean contentIE = !brandImageContentType.equals(""image/x-png"")  && \n\t\t\t\t\t\t\t    !brandImageContentType.equals(""image/pjpeg"") && \n\t\t\t\t\t\t\t    !brandImageContentType.equals(""image/pjpg"");\n\t\t\t\n\t\t\tgetServiceLocator().getImageService();\n\t\t\tString filePath = request.getSession().getServletContext().getRealPath(""/"");\n\t\t\t\n\t\t\tif( contentFireFox && contentIE ){\n\t\t\t\taddActionError(getText(""loyauty.error.common.content.type""));\n\t\t\t} else if(!imageService.isJPEGImage(brandImage) ) {\t\t\n\t\t\t\taddActionError(getText(""loyauty.error.common.content.type_jpg""));\t\n\t\t\t} else if(brandImage.length() > WebConstants.BRAND_SIZE_ALLOWED){\n\t\t\t\taddActionError(getText(""loyauty.error.common.fileTooLarge""));\t\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tDimension dim = FileUtils.getJPEGDimension(brandImage);\t\t\t\t\t\n\t\t\tif( dim.width != WebConstants.WIDTH_BRAND_MAX  && dim.height !=WebConstants.WIDTH_BRAND_MAX ){\n\t\t\t\taddActionError(getText(""loyauty.error.common.logo_size"") + "" "" +WebConstants.WIDTH_BRAND_MAX + "" px"" );\t\n\t\t\t}\n\t\t\t/*if( dim.width > WebConstants.WIDTH_BRAND_MAX ){\n\t\t\t\taddActionError(getText(""loyauty.error.common.logo_size"") + "" "" +WebConstants.WIDTH_BRAND_MAX + "" px"" );\t\n\t\t\t}\n\t\t\t*/\n\t\t\t\n\t\t\tdouble ratio = (double) Math.round((dim.getHeight()/dim.getWidth())*100)/(double) 100;\n\t    \t\n\t\t\t//int thumbHeight = (int) (WebConstants.BRAND_DEFAUTL_THUMBNAIL_WIDTH * ratio);\t\t\n\t\t\tint thumbHeight = WebConstants.BRAND_DEFAUTL_THUMBNAIL_HEIGHT;\t\t\t\n\t\t\t\n\t\t\tboolean isLarge = dim.getWidth() >= WebConstants.BRAND_DEFAUTL_THUMBNAIL_WIDTH * WebConstants.COVER_LARGE_TRANSFERT_COEFICIENT;\n\t\t\t\n\t\t\timageDTO = brandService.addBrandImage(brandImage, brandImageFileName, filePath, \n\t\t\t\t\t\t\t\tuserSession.getId(), WebConstants.BRAND_DEFAUTL_THUMBNAIL_WIDTH,  \n\t\t\t\t\t\t\t\tthumbHeight, WebConstants.WIDTH_IMG_SEARCH_PAGE, isLarge );\n\t\t}\n\t\treturn imageDTO;\n\t}\n\t\n\n}\n\n----------------------------------- SOURCE END -------------------------------------",1404937566835
