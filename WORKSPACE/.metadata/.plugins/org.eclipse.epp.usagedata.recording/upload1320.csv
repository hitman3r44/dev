what,kind,bundleId,bundleVersion,description,time
activated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1413499714826
deactivated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1413499716592
activated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1413499716726
activated,view,org.eclipse.ui.ide,3.6.2.M20101201-0800,"org.eclipse.ui.views.ResourceNavigator",1413499725459
opened,editor,org.eclipse.jdt.ui,3.6.2.r362_v20110203,"org.eclipse.jdt.ui.CompilationUnitEditor",1413499725717
activated,editor,org.eclipse.jdt.ui,3.6.2.r362_v20110203,"org.eclipse.jdt.ui.CompilationUnitEditor",1413499725738
deactivated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1413499731167
activated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1413499732422
executed,command,org.eclipse.ui.ide,3.6.2.M20101201-0800,"org.eclipse.ui.project.cleanAction",1413499732428
deactivated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1413499732700
activated,workbench,org.eclipse.ui.workbench,3.6.2.M20110210-1200,"",1413499732814
error,log,,,"Exception occurred during problem detection:\n----------------------------------- SOURCE BEGIN -------------------------------------\npackage com.loyauty.web.struts.action.ajax;\n\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.text.DecimalFormat;\nimport java.text.NumberFormat;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Locale;\nimport java.util.Map;\n\nimport lombok.Getter;\nimport lombok.Setter;\n\nimport org.apache.commons.lang.time.DateFormatUtils;\nimport com.loyauty.enums.UserProductStatus;\n\nimport com.loyauty.exception.ServiceException;\nimport com.loyauty.exception.ServiceLocatorException;\n\nimport com.loyauty.service.brand.BrandService;\nimport com.loyauty.service.category.CategoryService;\nimport com.loyauty.service.common.CommonService;\nimport com.loyauty.service.core.dto.BasicUserDTO;\nimport com.loyauty.service.core.dto.BrandDTO;\nimport com.loyauty.service.core.dto.CategoryDTO;\nimport com.loyauty.service.core.dto.CommonDTO;\nimport com.loyauty.service.core.dto.ProductDTO;\nimport com.loyauty.service.core.dto.QueryDTO;\nimport com.loyauty.service.core.dto.SpecificationDTO;\nimport com.loyauty.service.core.dto.UserProductDTO;\nimport com.loyauty.service.core.dto.UserSessionDTO;\nimport com.loyauty.service.product.ProductService;\nimport com.loyauty.service.specification.SpecificationService;\nimport com.loyauty.service.user.UserService;\nimport com.loyauty.util.CommonUtils;\nimport com.loyauty.web.exception.LoyautyAjaxActionException;\nimport com.loyauty.web.struts.action.LoyautyListActionSupport;\n\n\n\n\npublic class AdminPageAjax<T> extends LoyautyListActionSupport {\n\t\n\tprivate static final long serialVersionUID = 1L;\n\t\n\tprivate static final String LOYALTY_DATE_FORMAT_DD_MMMM_YYYY_KEY = ""loyauty.date.format.dd-MM-YYYY"";\n\t\n\tprivate UserService userService;\n\tprivate CommonService commonService;\n\tprivate BrandService brandService;\n\tprivate CategoryService categoryService;\n\tprivate ProductService productService;\n\tprivate SpecificationService specificationService;\n\t\n\tprivate static String AA_DATA = ""aaData"";\n\tprivate static String USER_DISCOUNT = ""userDiscount"";\n\tprivate static final String CODE_BRAND = ""codeBrand"";\n\t\n\tprivate static int USER_TYPE = 2;\t\n\t\n\t@Getter @Setter\n\tprivate int typePage; \n\t@Getter @Setter\n\tprivate long brandId;\n\t@Getter @Setter\n\tprivate long categoryId;\n\t@Getter @Setter\n\tprivate boolean discontinued;\n\t@Getter @Setter\n\tprivate boolean disabled;\n\t@Getter @Setter\n\tprivate long userId;\t\n\n\t@Getter @Setter\n\tprivate String value;\n\t@Getter @Setter\n\tprivate String oldValue;\n\t@Getter @Setter\n\tprivate long productId;\t\n\t@Getter @Setter\n\tList<UserSessionDTO> dataLinks;\n\t\n\t@Getter\n\tprivate int userProductStatus;\n\n\t@Getter @Setter\n\tprivate Integer userStatus;\n\t\n\tpublic AdminPageAjax() {\t\t\n\t}\n\t\n\t\n\t@Override  \n\tpublic String execute() throws Exception {\t\t\t\t\t\t\t\n\t\tdataLinks = new ArrayList<UserSessionDTO>();\n\t\tBasicUserDTO basicUserDTO = new BasicUserDTO();\n\t\tuserService = this.getServiceLocator().getUserService();\n\t\tbasicUserDTO.setTypeId(USER_TYPE);\n\t\ttry{\n\t\t\tif(userStatus==null)userStatus=-1;\n\t\t\tswitch (userStatus) {\n\t\t\tcase 1:\n\t\t\t\tbasicUserDTO.setActive(true);\t\t\t\n\t\t\t\tdataLinks = userService.getAllUserAccounts(basicUserDTO);\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tbasicUserDTO.setActive(false);\t\t\t\n\t\t\t\tdataLinks = userService.getAllUserAccounts(basicUserDTO);\n\t\t\t\tbreak;\t\n\t\t\tdefault:\n\t\t\t\tdataLinks = userService.getAllUsers(basicUserDTO);\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t return SUCCESS;\n\t\t}catch (Exception e) {\n\t\t\t// TODO: handle exception\n\t\t\te.printStackTrace();\n\t\t\treturn ERROR;\n\t\t}\n\n\t}\n\t\t\n\t@SuppressWarnings(""unchecked"")\n\tpublic String accountsList() throws LoyautyAjaxActionException, ServiceException {\t\t\n\t\tdataLinks = new ArrayList<UserSessionDTO>();\n\t\ttry {\t\t\t\n\t\t\tuserService = this.getServiceLocator().getUserService();\n\t\t\tBasicUserDTO basicUserDTO = new BasicUserDTO();\n\t\t\tbasicUserDTO.setTypeId(USER_TYPE);\n\t\t\tdataLinks = userService.getAllUsers(basicUserDTO);\n\t\t\tfor(BasicUserDTO bu:dataLinks){\n\t\t\t\tif(bu.getClientCategoryName()==null)bu.setClientCategoryName("""");\n\t\t\t}\n\t\t}catch(ServiceLocatorException sle){\n\t\t\tlog.debug(""Service Locator Exception pb"", sle);\t\t\t\n\t\t}\n\t\t//serialize result\n\t\tMap<String, T> map = new HashMap<String, T>();\n\t\tmap.put(AA_DATA, (T) dataLinks);\n\t\tsetResult(map);\t\t\n\t\treturn SUCCESS;\n\t}\n\t\n\t@SuppressWarnings(""unchecked"")\n\tpublic String populateCategoryAndDiscount() throws LoyautyAjaxActionException, ServiceException {\t\t\n\t\tList<CommonDTO> dataLinks = null;\n\t\tString discount = null;\n\t\ttry {\t\t\t\n\t\t\tcommonService = this.getServiceLocator().getCommonService();\t\n\t\t\tuserService = this.getServiceLocator().getUserService();\n\t\t\tproductService =  this.getServiceLocator().getProductService();\t\t\t\n\t\t\tdataLinks = internationalizeName(commonService.getCategoriesByBrand(brandId));\n\t\t} catch(ServiceLocatorException sle){\n\t\t\tlog.debug(""Service Locator Exception pb"", sle);\t\t\t\n\t\t}\n\t\t//serialize result\n\t\tMap<String, T> map = new HashMap<String, T>();\n\t\tmap.put(AA_DATA, (T) dataLinks);\n\t\tmap.put(USER_DISCOUNT, (T) discount);\n\t\tsetResult(map);\t\t\n\t\treturn  SUCCESS;\t\t\n\t}\n\t\n\tprivate List<CommonDTO> internationalizeName(List<CategoryDTO> list){\n\t\t\n\t\tList<CommonDTO> commonListDTO = new ArrayList<CommonDTO>();\n\t\tCommonDTO commonDTO;\n\t\tfor(CategoryDTO cat : list){\n\t\t\tcommonDTO = CommonDTO.valueOf(cat.getId(), getText(cat.getCode()));\t\t\t\n\t\t\tcommonListDTO.add(commonDTO);\n\t\t}\t\t\n\t\treturn commonListDTO;\t\t\n\t}\t\n\t\n\t@SuppressWarnings(""unchecked"")\n\tpublic String getProductAndDiscountByCategory() throws LoyautyAjaxActionException, ServiceException {\n\t\tList<CommonDTO> dataLinks = null;\n\t\tString discount = null;\n\t\ttry {\n\t\t\tcommonService = this.getServiceLocator().getCommonService();\t\n\t\t\tuserService = this.getServiceLocator().getUserService();\n\t\t\tproductService = this.getServiceLocator().getProductService();\t\t\t\n\t\t\tdataLinks = internationalizeName(commonService.getCategoriesByBrand(brandId));\t\t\t\n\t\t} catch(ServiceLocatorException sle){\n\t\t\tlog.debug(""Service Locator Exception pb"", sle);\t\t\t\n\t\t}\n\t\t//serialize result\n\t\tMap<String, T> map = new HashMap<String, T>();\n\t\tmap.put(AA_DATA, (T) dataLinks);\n\t\tmap.put(USER_DISCOUNT, (T) discount);\n\t\tsetResult(map);\n\t\t\n\t\treturn  SUCCESS;\t\t\n\t}\t\n\t\n\t@SuppressWarnings(""unchecked"")\n\tpublic String brandList() throws LoyautyAjaxActionException, ServiceException {\t\n\t\t\t\t\n\t\tList<BrandDTO> dataLinks = new ArrayList<BrandDTO>();\n\t\ttry {\t\t\t\n\t\t\tbrandService = this.getServiceLocator().getBrandService();\n\t\t\tdataLinks = brandService.getAllBrand();\n\t\t\tfor(BrandDTO dto : dataLinks) {\n\t\t\t\tdto.setLocalizedCreationDate(DateFormatUtils.format(dto.getCreationDate(), getText(LOYALTY_DATE_FORMAT_DD_MMMM_YYYY_KEY)));\n\t\t\t}\n\t\t}catch(ServiceLocatorException sle){\n\t\t\tlog.debug(""Service Locator Exception pb"", sle);\t\t\t\n\t\t}\n\t\t//serialize result\n\t\tMap<String, T> map = new HashMap<String, T>();\n\t\tmap.put(AA_DATA, (T) dataLinks);\n\t\tsetResult(map);\n\t\t\n\t\treturn  SUCCESS;\n\t\t\n\t}\n\t\n\t@SuppressWarnings(""unchecked"")\n\tpublic String categoryList() throws LoyautyAjaxActionException, ServiceException {\t\n\t\t\t\t\n\t\tList<CategoryDTO> dataLinks = new ArrayList<CategoryDTO>();\n\t\ttry {\t\t\t\n\t\t\tcategoryService = this.getServiceLocator().getCategoryService();\n\t\t\tdataLinks = categoryService.getAllCategory();\n\t\t}catch(ServiceLocatorException sle){\n\t\t\tlog.debug(""Service Locator Exception pb"", sle);\t\t\t\n\t\t}\n\t\t//serialize result\n\t\tMap<String, T> map = new HashMap<String, T>();\n\t\tmap.put(AA_DATA, (T) dataLinks);\n\t\tsetResult(map);\n\t\t\n\t\treturn  SUCCESS;\t\t\n\t}\t\n\t\n\t@SuppressWarnings(""unchecked"")\n\tpublic String getMainSpecificationByCategory() throws LoyautyAjaxActionException, ServiceException {\t\n\t\t\t\t\n\t\tList<SpecificationDTO> dataLinks = new ArrayList<SpecificationDTO>();\n\t\ttry {\t\t\t\n\t\t\tproductService = this.getServiceLocator().getProductService();\n\t\t\tdataLinks = productService.getMainSpecificationByCategory(categoryId);\n\t\t}catch(ServiceLocatorException sle){\n\t\t\tlog.debug(""Service Locator Exception pb"", sle);\t\t\t\n\t\t}\n\t\t//serialize result\n\t\tMap<String, T> map = new HashMap<String, T>();\n\t\tmap.put(AA_DATA, (T) dataLinks);\n\t\tsetResult(map);\n\t\t\n\t\treturn  SUCCESS;\n\t\t\n\t}\n\t\n\t\n\t@SuppressWarnings(""unchecked"")\n\tpublic String populateCategory() throws LoyautyAjaxActionException, ServiceException {\t\n\t\t\n\t\tList<CommonDTO> dataLinks = null;\n\t\tString code = new String();\n\t\ttry {\t\t\t\n\t\t\t\n\t\t\tcommonService = getServiceLocator().getCommonService();\t\n\t\t\tbrandService = getServiceLocator().getBrandService();\n\t\t\t\n\t\t\tdataLinks = internationalizeName(commonService.getCategoriesByBrand(brandId));\n\t\t\tcode = brandService.getBrand(brandId).getCode();\n\t\t\t\t\t\t\n\t\t}catch(ServiceLocatorException sle){\n\t\t\tlog.debug(""Service Locator Exception pb"", sle);\t\t\t\n\t\t} catch (Exception e) {}\n\t\t//serialize result\n\t\tMap<String, T> map = new HashMap<String, T>();\n\t\tmap.put(AA_DATA, (T) dataLinks);\n\t\tmap.put(CODE_BRAND, (T)code);\n\t\tsetResult(map);\n\t\t\n\t\treturn  SUCCESS;\t\t\n\t}\t\n\t\n\t@SuppressWarnings(""unchecked"")\n\tpublic String setManuelPrices() throws LoyautyAjaxActionException, ServiceException {\t\n\t\t\n\t\ttry {\t\t\t\n\t\t\tdouble val = Double.valueOf(value);\n\t\t\tproductService = this.getServiceLocator().getProductService();\n\t\t\tUserProductDTO producDTO = new UserProductDTO();\n\t\t\tproducDTO.setUserId(userId);\n\t\t\tproducDTO.setId(productId);\n\t\t\tproducDTO.setUserPrice(value);\t\t\t\n\t\t\tproductService.updateSellingPriceProduct(producDTO);\n\t\t\tsetResult(val);\t\t\n\t\t\t\n\t\t}catch(NumberFormatException se){\n\t\t\tlog.debug(""Number Conversion Exception pb"", se);\t\t\t\t\n\t\t\tsetResult(oldValue.isEmpty()?""NaN"" : Double.valueOf(oldValue));\n\t\t}catch(ServiceLocatorException se){\t\t\t\n\t\t\tlog.debug(""Service Locator Exception pb"", se);\t\t\t\t\n\t\t\tsetResult(oldValue.isEmpty()?""NaN"" : Double.valueOf(oldValue));\n\t\t}catch(ServiceException se){\n\t\t\tlog.debug(""Service Exception pb"", se);\n\t\t\tsetResult(oldValue.isEmpty()?""NaN"" : Double.valueOf(oldValue));\n\t\t}catch(Exception se){\n\t\t\tlog.debug(""Exception pb"", se);\n\t\t\tsetResult(oldValue.isEmpty()?""NaN"" : Double.valueOf(oldValue));\n\t\t}\t\t\n\t\treturn  SUCCESS;\t\n\t}\n\t\n\t@SuppressWarnings(""unchecked"")\n\tpublic String setuserproductstatus() throws LoyautyAjaxActionException, ServiceException {\t\n\t\t\n\t\ttry {\n\t\t\t\n\t\t\tBoolean val = Boolean.valueOf(value);\t\t\t\n\t\t\tproductService = this.getServiceLocator().getProductService();\t\n\t\t\tUserProductDTO producDTO = new UserProductDTO();\n\t\t\tproducDTO.setUserId(userId);\n\t\t\tproducDTO.setId(productId);\n\t\t\tif(Boolean.valueOf(value))\n\t\t\t\tproducDTO.setUserProductStatus(UserProductStatus.ACTIVE);\n\t\t\telse\n\t\t\t\tproducDTO.setUserProductStatus(UserProductStatus.INACTIVE);\n\t\t\tproductService.updateUserProductStatus(producDTO);\n\t\t\tsetResult(val);\t\t\n\t\t\t\n\t\t} catch(NumberFormatException se){\n\t\t\tlog.debug(""Number Conversion Exception pb"", se);\t\t\t\t\n\t\t\tsetResult(oldValue.isEmpty()?""NaN"" : Boolean.valueOf(oldValue));\n\t\t} catch(ServiceLocatorException se){\t\t\t\n\t\t\tlog.debug(""Service Locator Exception pb"", se);\t\t\t\t\n\t\t\tsetResult(oldValue.isEmpty()?""NaN"" : Boolean.valueOf(oldValue));\n\t\t\n\t\t} catch(Exception se){\n\t\t\tlog.debug(""Exception pb"", se);\n\t\t\tsetResult(oldValue.isEmpty()?""NaN"" : Boolean.valueOf(oldValue));\n\t\t}\t\t\n\t\t\n\t\treturn  SUCCESS;\n\t\t\n\t}\n\t\n\t@SuppressWarnings(""unchecked"")\n\tpublic String productList() throws LoyautyAjaxActionException, ServiceException {\t\t\t\t\n\t\tList<ProductDTO> dataList = new ArrayList<ProductDTO>();\n\t\ttry {\t\t\t\n\t\t\tproductService = this.getServiceLocator().getProductService();\n\t\t\tdataList = productService.getAllProdcut();\n\t\t}catch(ServiceLocatorException sle){\n\t\t\tlog.debug(""Service Locator Exception pb"", sle);\t\t\t\n\t\t}\n\t\t//serialize result\n\t\tMap<String, T> map = new HashMap<String, T>();\n\t\tmap.put(AA_DATA, (T) dataList);\n\t\tsetResult(map);\n\t\treturn  SUCCESS;\t\t\n\t}\n\t\n\t@SuppressWarnings(""unchecked"")\n\tpublic String productListQuery() throws LoyautyAjaxActionException, ServiceException {\t\n\t\t\n\t\tList<ProductDTO> dataList = new ArrayList<ProductDTO>();\n\t\ttry {\n\t\t\tproductService = this.getServiceLocator().getProductService();\n\t\t\t\n\t\t\t// = new ProductDTO();\n\t\t\tBrandDTO brandDTO = BrandDTO.valueOf(brandId);\n\t\t\tCategoryDTO catDTO = CategoryDTO.valueOf(categoryId);\n\t\t\tQueryDTO queryDTO = new QueryDTO.Builder(brandDTO, catDTO, discontinued, disabled).build();\n\t\t\t// ProductDTO dto = new ProductDTO.Builder(new Long(0), brandDTO, catDTO).build();\n\t\t\tdataList = productService.getAllProductQuery(queryDTO);\n\t\t\t\t\t\t\n\t\t} catch(ServiceLocatorException sle){\n\t\t\tlog.debug(""Service Locator Exception pb"", sle);\t\t\t\n\t\t}\n\t\t//serialize result\n\t\tMap<String, T> map = new HashMap<String, T>();\n\t\tmap.put(AA_DATA, (T) dataList);\n\t\tsetResult(map);\n\t\t\n\t\treturn  SUCCESS;\t\t\n\t}\n\t\n\t@SuppressWarnings(""unchecked"")\n\tpublic String getMainSpecificationList() throws LoyautyAjaxActionException, ServiceException {\t\n\t\t\t\t\n\t\tList<SpecificationDTO> dataList = new ArrayList<SpecificationDTO>();\n\t\ttry {\n\t\t\tspecificationService = this.getServiceLocator().getSpecificationService();\n\t\t\tdataList = specificationService.getAllMainSpecification();\n\t\t}catch(ServiceLocatorException sle){\n\t\t\tlog.debug(""Service Locator Exception pb"", sle);\t\t\t\n\t\t}\n\t\t//serialize result\n\t\tMap<String, T> map = new HashMap<String, T>();\n\t\tmap.put(AA_DATA, (T) dataList);\n\t\tsetResult(map);\n\t\t\n\t\treturn  SUCCESS;\t\t\n\t}\n\t\n}\n\n----------------------------------- SOURCE END -------------------------------------",1413499733821
error,log,,,"Problems occurred when invoking code from plug-in: ""org.eclipse.jdt.ui"".",1413499733822
error,log,,,"Error in JDT Core during reconcile",1413499733823
error,log,,,"Exception occurred during problem detection:\n----------------------------------- SOURCE BEGIN -------------------------------------\npackage com.loyauty.web.struts.action.orders;\n\nimport java.io.File;\nimport java.text.SimpleDateFormat;\nimport java.util.ArrayList;\nimport java.util.Date;\nimport java.util.Hashtable;\nimport java.util.List;\nimport javax.servlet.http.HttpSession;\nimport lombok.Getter;\nimport lombok.Setter;\nimport com.loyauty.exception.ServiceLocatorException;\nimport com.loyauty.model.OrdersRows;\nimport com.loyauty.model.User;\nimport com.loyauty.service.core.DTOFactory;\nimport com.loyauty.service.core.dto.BasicUserDTO;\nimport com.loyauty.service.core.dto.OrdersDTO;\nimport com.loyauty.service.core.dto.UserProductPriceDTO;\nimport com.loyauty.service.core.dto.UserSessionDTO;\nimport com.loyauty.service.orders.OrdersService;\nimport com.loyauty.service.product.ProductService;\nimport com.loyauty.service.user.UserService;\nimport com.loyauty.web.struts.action.LoyautyAction;\n\npublic class TreatmentOrders  extends LoyautyAction {\n\tprivate static final long serialVersionUID = -3811760851445730062L;\n\t\n\n\tprivate UserService userService;\n\tprivate ProductService productService;\n\tprivate OrdersService orderService;\n\t@Getter @Setter\n\tprivate String userLogin;\n\t@Getter @Setter\n\tprivate Long userId;\n\t@Getter @Setter\n\tprivate List<User> usersList;\n\tprivate static int USER_TYPE = 2;\n\t@Getter @Setter\n\tprivate File orderFile;\n\t@Getter @Setter\n\tList<OrdersDTO>listOrdersDTO;\n\tHashtable<String, OrdersDTO>hashOrders;\n\t@Getter @Setter\n\tprivate String orderSelected;\n\t@Getter @Setter\n\tprivate Long saveOrdersSignal;\n\t@Getter @Setter\n\tprivate Long confirmSaveOrdersSignal;\n\t@Getter @Setter\n\tprivate String lsOrderId;\n\t@Getter @Setter\n\tprivate String message;\n\t@Getter @Setter\n\tInteger indexOrder;\n\t@Getter @Setter\n\tInteger indexRow;\n\t@Getter @Setter\n\tLong poYpop;\n\t@Getter @Setter\n\tLong poXpop;\n\t@Getter @Setter\n\tprivate Long checkBoxPrintSignal;\n\t@Getter @Setter\n\tprivate Boolean checkBoxPrintEtem;\n\t@Getter @Setter\n\tprivate Boolean checkBoxPrint;\n\t@Getter @Setter\n\tprivate Long pageTop=0L;\n\t@Getter @Setter\n\tprivate Long saved;\n\t@Getter @Setter\n\tprivate String showNotificationPop=""visibility:hidden;display:none;"";\n\t@Getter @Setter\n\tprivate Long addOrderSignal;\n\t@Getter @Setter\n\tprivate Long addSimilarOrderSignal;\n\t@Getter @Setter\n\tprivate Long deleteOrderSignal;\n\t@Getter @Setter\n\tprivate Long deleteRowSignal;\n\t@Getter @Setter\n\tprivate Long userLoginChangedSignal;\n\t@Getter @Setter\n\tprivate Long saveTemporarySignal;\n\t@Getter @Setter\n\tprivate Long addSimilarRowSignal;\n\t@Getter @Setter\n\tprivate Long saveTemporaryRowSignal;\n\t@Getter @Setter\n\tprivate Long checkProductPriceSignal;\n\t@Getter @Setter\n\tprivate Long adminXLSSignal;\n\t@Getter @Setter\n\tprivate Long editOrderSignal;\n\t//recovery Data Order\n\t@Getter @Setter\n\tprivate String clientLastName;\n\t@Getter @Setter\n\tprivate String clientFirstName;\n\t@Getter @Setter\n\tprivate String clientOtherNames;\n\t@Getter @Setter\n\tprivate String clientStreet;\n\t@Getter @Setter\n\tprivate String  clientOtherStreet;\n\t@Getter @Setter\n\tprivate String  clientCity;\n\t@Getter @Setter\n\tprivate String  clientProvince;\n\t@Getter @Setter\n\tprivate String  clientPostalCode;\n\t@Getter @Setter\n\tprivate String  clientPhone;\n\t@Getter @Setter\n\tprivate String  clientEmail;\n\t@Getter @Setter\n\tprivate String productOrderNumber;\n\t@Getter @Setter\n\tprivate String strProductOrderDate;\n\t@Getter @Setter\n\tprivate String strRequiredDate;\n\t\n\t//recovery data row\n\t@Getter @Setter\n\tprivate Double quantity ;\n\t@Getter @Setter\n\tprivate Double quantityToChange;\n\t@Getter @Setter\n\tprivate String lsProductID;\n\t@Getter @Setter\n\tprivate Double stock;\n\t@Getter @Setter\n\tprivate String productDescription;\n\t@Getter @Setter\n\tprivate Double unitPrice;\n\t@Getter @Setter\n\tprivate Double shippingFee;\n\t@Getter @Setter\n\tprivate String shippingCompany;\n\t@Getter @Setter\n\tprivate String trackingNumber;\n\t@Getter @Setter\n\tprivate Date creationDate ;\n\t@Getter @Setter\n\tprivate Long findOrdersSignal;\n\t@Getter @Setter\n\tprivate Long cancelSignal;\n\t@Getter @Setter\n\tprivate Long quantityToChangeSignal;\n\t@Getter @Setter\n\tprivate Long duplicateOrderSignal;\n\t@Getter @Setter\n\tprivate String strCreationDate;\n\t@Getter @Setter\n\tprivate String status;\n\t@Getter @Setter\n\tprivate User usr;\n\t@Getter @Setter\n\tprivate OrdersDTO orderToEdit;\n\t@Getter @Setter\n\tprivate String showOrderDetailPop;\n\t\n\t@Getter @Setter\n\tprivate String strCreationDateStart;\n\t@Getter @Setter\n\tprivate String strCreationDateEnd;\n\t\n\t@Getter @Setter\n\tprivate Date creationDateStart;\n\t@Getter @Setter\n\tprivate Date creationDateEnd ;\n\tprivate Date creationDateStartArg;\n\tprivate Date creationDateEndArg ;\n\t@Getter @Setter\n\tprivate String showSaveSuccessPop=""visibility:hidden;display:none;"";\n\t//showSaveSuccessPop=""display:block;visibility:visible;"";\n\t//showSaveSuccessPop=""visibility:hidden;display:none;"";\n\t@Getter @Setter\n\tprivate Integer selectedStatus;\n\t\n\tpublic  TreatmentOrders() throws ServiceLocatorException {\n\t\tsuper();\t\n\t\tproductService = getServiceLocator().getProductService();   \n\t\tuserService = getServiceLocator().getUserService();\n\t\torderService = getServiceLocator().getOrderService();\n\t\thashOrders=new Hashtable<String, OrdersDTO>();\n\t}\n\t/*=========================================================================================\n\t \t\t\t\t\t\t\t\t\t\t\tmethod execute\n\t  =========================================================================================*/\n\t@SuppressWarnings({ ""rawtypes"", ""unchecked"" })\n\t@Override\n\tpublic String execute() throws Exception {\n\t\tHttpSession session = request.getSession(true);\n\t\tshowOrderDetailPop=""visibility:hidden;display:none;"";\n\t\tif(poYpop==null)poYpop=100L;\n\t\tif(poXpop==null)poXpop=100L;\n\t\tif(selectedStatus==null)selectedStatus=-1;\n\t\ttry {\n\t\t\tusr=new User();\n\t\t\tusr.setNote(""Very good"");\n\t\t\t/*-------------------- recovery users list -----------------------------------\n\t\t\t\t\t\t\tRecovery users list in session\n\t\t\t -----------------------------------------------------------------------------*/\n\t\t\tBasicUserDTO basicUserDTO = new BasicUserDTO();\n\t\t\tbasicUserDTO.setTypeId(USER_TYPE);\n\t\t\tList<User> usersListSession=(List<User>)session.getAttribute(""usersListSession"");\n\t\t\tif(usersListSession==null){\n\t\t\t\tList<UserSessionDTO> listAllUsers= userService.getAllUsers(basicUserDTO);\n\t\t\t\tusersList=new ArrayList<User>();\n\t\t\t\tfor(UserSessionDTO userDTO:listAllUsers){\n\t\t\t\t\tUser user=new User();\n\t\t\t\t\tuser.setId(userDTO.getId());\n\t\t\t\t\tuser.setLogin(userDTO.getLogin());\n\t\t\t\t\tusersList.add(user);\n\t\t\t\t}\n\t\t\t\tsession.setAttribute(""usersListSession"",usersList);\n\t\t\t}else usersList=usersListSession;\n\n\t\t\t/*------ always recovery creationDate from strCreationDate ------\n\t\t\t\t\t\talways keep the creation date search options\n\t\t\t  ---------------------------------------------------------------*/\n\t\t\tcreationDateStart=null;\n\t\t\tSimpleDateFormat frm = new SimpleDateFormat(""dd/MM/yyyy"");\n\t\t\tif (((strCreationDateStart)!=null)&&(!"""".equals(strCreationDateStart))){\n    \t\t\ttry {\n    \t\t\t\tDate date = frm.parse(strCreationDateStart);\n    \t\t\t\tcreationDateStart=date;\n    \t\t\t\tcreationDateStartArg=date;\n    \t\t\t}\n    \t\t\tcatch (Exception pe) {\n    \t\t\t\tcreationDateStart=null;\n    \t\t\t\taddActionError(""Please enter a date in the correct format"");\n    \t\t\t}\n    \t\t}\n    \t\tif(creationDateStart==null){\n\t\t\t\tDate date = frm.parse(""01/01/1900"");\n\t\t\t\tcreationDateStartArg=date;\n    \t\t}\n    \t\tcreationDateEnd=null;\n    \t\tif (((strCreationDateEnd)!=null)&&(!"""".equals(strCreationDateEnd))){\n    \t\t\tfrm = new SimpleDateFormat(""dd/MM/yyyy"");\n    \t\t\ttry {\n    \t\t\t\tDate date = frm.parse(strCreationDateEnd);\n    \t\t\t\tcreationDateEnd=date;\n    \t\t\t\tcreationDateEndArg=date;\n    \t\t\t}\n    \t\t\tcatch (Exception pe) {\n    \t\t\t\tcreationDateEnd=null;\n    \t\t\t\taddActionError(""Please enter a date in the correct format"");\n    \t\t\t}\n    \t\t}\n    \t\tif(creationDateEnd==null){\n    \t\t\tcreationDateEndArg=new Date();\n    \t\t}\n\n\t\t\t/*------ always recovery Status from selectedStatus key ------\n\t\t\t\t\t\talways keep the status search options\n\t\t\t  ---------------------------------------------------------------*/\n    \t\tswitch (selectedStatus) {\n\t\t\t\tcase -1:status="""";\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0:status=""open"";\n\t\t\t\t\tbreak;\n\t\t\t\tcase 1:status=""progress"";\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:status=""shipped"";\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3:status=""billed"";\n\t\t\t\t\tbreak;\n\t\t\t}\n    \t\t\n\t\t\t/*------ When user change Quantity to split in orderDetailPop ----------\n\t\t\t\t\t\tprepare order to split from two other orders witch\n\t\t\t\t \t\tone must have a lsOrder with underscore \n\t \t\t -----------------------------------------------------------------------*/\n\t\t\tif(quantityToChangeSignal!=null && quantityToChangeSignal!=0L){\n\t\t\t\tlistOrdersDTO=(ArrayList<OrdersDTO>) session.getAttribute(""listOrdersDTOTreat"");\n\t\t\t\tOrdersDTO orderToChangeQt=listOrdersDTO.get(indexOrder);\n\t\t\t\tOrdersRows orderRow=orderToChangeQt.getRowsList().get(indexRow);\n\t\t\t\tif(quantityToChange<orderRow.getQuantity())orderRow.setQuantityToSplit(quantityToChange);\n\t\t\t\tsession.setAttribute(""listOrdersDTOTreat"",listOrdersDTO);\n\t\t\t\tlistOrdersDTO=(List<OrdersDTO>)session.getAttribute(""listOrdersDTOTreat"");\n\t\t\t\torderToEdit=listOrdersDTO.get(indexOrder);\n\t\t\t\tshowOrderDetailPop=""display:block;visibility:visible;"";\n\t\t\t\treturn SUCCESS;\n\t\t\t}\n\n\n\t\t\t/*-------------------- Duplicate Order ----------------------------------------\n\t\t\t\t\t\t\tCreate order in just in memory\n\t \t\t -----------------------------------------------------------------------------*/\n\t\t\tif(duplicateOrderSignal!=null && duplicateOrderSignal!=0L){\n\t\t\tlistOrdersDTO=\t(ArrayList<OrdersDTO>) session.getAttribute(""listOrdersDTOTreat"");\n\t\t\tOrdersDTO orderToClone=listOrdersDTO.get(indexOrder);\n\t\t\thashOrders=new Hashtable<String, OrdersDTO>();\n\t\t\tfor(OrdersDTO ord:listOrdersDTO){\n\t\t\t\thashOrders.put(ord.getLsOrderId(), ord);\n\t\t\t}\n\t\t\tOrdersDTO orderClone=DTOFactory.getOrderDTOSplitted(orderToClone);\n\t\t\tif(orderClone!=null){\n\t\t\t\tString lsOrder=orderClone.getLsOrderId();\n\t\t\t\tString strlsOrder=orderService.generateLsOrderId(lsOrder, hashOrders);\n\t\t\t\torderClone.setLsOrderId(strlsOrder);//rgb(116,180,209)\n\t\t\t\torderClone.setCssStyle(""background-color:#FFFF99;border-right: 1px solid #CCCCCC;border-left:1px solid #CCCCCC;border-top:  1px solid #CCCCCC;"");\n\t\t\t\t\n\t\t\t\torderToEdit=orderClone;\n\t\t\t\torderToEdit.setBackgroundColor(""background-color:#FFFF99;"");\n\t\t\t\tlistOrdersDTO.add(indexOrder+1,orderClone);\n\t\t\t\tindexOrder=0;\n\t\t\t\tfor(OrdersDTO ord: listOrdersDTO){\n\t\t\t\t\tord.setIndex(indexOrder);\n\t\t\t\t\tindexOrder++;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(listOrdersDTO.size()>0){\n\t\t\t\t\tsession.setAttribute(""listOrdersDTOTreat"",listOrdersDTO);\n\t\t\t\t}\n\t\t\t\torderService.updateOrderByLsOrderId(orderToClone);\n\t\t\t\torderService.insertOrderWithRows(orderClone);\t\t\t\n\t\t\t}\n\t\t\tshowOrderDetailPop=""display:block;visibility:visible;"";\n\t\t\treturn SUCCESS;\n\t\t\t}\n\n\t\t\t/*----------------- When Admin check on saveTemporaryRow Icon --------------------------\n\t\t\t\t\twe must first obtained the object that contains the list of rows,\n\t\t\t\t\tafter we accede to the row by index recovered by web view and change it\n\t\t\t ---------------------------------------------------------------------------------------*/\n\t\t\tif(saveTemporaryRowSignal!=null && saveTemporaryRowSignal!=0L){\n\t\t\t\tlistOrdersDTO=(ArrayList<OrdersDTO>) session.getAttribute(""listOrdersDTOTreat"");\n\t\t\t\tOrdersDTO orderDTOToUpdate=listOrdersDTO.get(indexOrder);\n\t\t\t\tif (((strProductOrderDate)!=null)&&(!"""".equals(strProductOrderDate))){\n\t\t\t\t\tfrm = new SimpleDateFormat(""dd/MM/yyyy"");\n\t    \t\t\ttry {\n\t    \t\t\t\tDate date = frm.parse(strProductOrderDate);\n\t    \t\t\t\torderDTOToUpdate.setProductOrderDate(date);\n\t    \t\t\t}\n\t    \t\t\tcatch (Exception pe) {\n\t    \t\t\t\taddActionError(""Please enter a date in the correct format"");\n\t    \t\t\t}\n\t    \t\t}\n\t\t\t\tif (((strRequiredDate)!=null)&&(!"""".equals(strRequiredDate))){\n\t\t\t\t\tfrm = new SimpleDateFormat(""dd/MM/yyyy"");\n\t    \t\t\ttry {\n\t    \t\t\t\tDate date = frm.parse(strRequiredDate);\n\t    \t\t\t\torderDTOToUpdate.setRequiredDate(date);\n\t    \t\t\t}\n\t    \t\t\tcatch (Exception pe) {\n\t    \t\t\t\taddActionError(""Please enter a date in the correct format"");\n\t    \t\t\t}\n\t    \t\t}\n\t\t\t\tOrdersRows orderRowToSaveMemory=orderDTOToUpdate.getRowsList().get(indexRow);\n\t\t\t\torderRowToSaveMemory.setIcon(""images/orders/itemValidated.png"");\n\t\t\t\tif(orderRowToSaveMemory!=null){\n\t\t\t\t\torderRowToSaveMemory.setQuantity(quantity); \n\t\t\t\t\torderRowToSaveMemory.setLsProductID(lsProductID);\n\t\t\t\t\torderRowToSaveMemory.setProductDescription(productDescription);\n\t\t\t\t\torderRowToSaveMemory.setUnitPrice(unitPrice);\n\t\t\t\t\torderRowToSaveMemory.setCssPrice(""background-color:#FF6666;"");\n\t\t\t\t\torderRowToSaveMemory.setCssQuantity(""background-color:#FF6666;"");\n\t\t\t\t\tif(quantity!=null && quantity>0D)orderRowToSaveMemory.setCssQuantity("""");\n\t\t\t\t\tif(unitPrice!=null && orderRowToSaveMemory.getLsPrice()!=null\n\t\t\t\t\t  && unitPrice>=orderRowToSaveMemory.getLsPrice())\n\t\t\t\t\t  orderRowToSaveMemory.setCssPrice("""");\n\t\t\t\t\torderRowToSaveMemory.setShippingFee(shippingFee);\n\t\t\t\t\torderRowToSaveMemory.setShippingCompany(shippingCompany);\n\t\t\t\t\torderRowToSaveMemory.setTrackingNumber(trackingNumber);\t\n\t\t\t\t\tint indexOrder=0;\n\t\t\t\t\tint indexRow=0;\n\t\t\t\t\tfor(OrdersDTO orderDTO:listOrdersDTO){\n\t\t\t\t\t\torderDTO.setIndex(indexOrder);\n\t\t\t\t\t\tindexOrder++;\n\t\t\t\t\t\tindexRow=0;\n\t\t\t\t\t\tfor(OrdersRows orderRows:orderDTO.getRowsList()){\n\t\t\t\t\t\t\torderRows.setIndex(indexRow);\n\t\t\t\t\t\t\tindexRow++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tsession.setAttribute(""listOrdersDTOTreat"",listOrdersDTO);\n\t\t\t\t\tlistOrdersDTO=(List<OrdersDTO>)session.getAttribute(""listOrdersDTOTreat"");\n\t\t\t\t}\n\t\t\t\torderToEdit=listOrdersDTO.get(indexOrder);\n\t\t\t\tshowOrderDetailPop=""display:block;visibility:visible;"";\n\t\t\t\treturn SUCCESS;\n\t\t\t}\n\t\t\t\n\t\t\t/*------- When Admin click on addSimilarRow Icon on the OrderDetailPop --------\n\t\t\t\t\t\t\t\tAdd one Row Similar at the previews\n\t\t\t  -----------------------------------------------------------------------------*/\n\t\t\tif(addSimilarRowSignal!=null && addSimilarRowSignal!=0L){\n\t\t\t\tlistOrdersDTO=(List<OrdersDTO>)session.getAttribute(""listOrdersDTOTreat"");\n\t\t\t\tOrdersDTO orderDTOToUpdate=listOrdersDTO.get(indexOrder);\n\t\t\t\tOrdersRows orderRowToClone=orderDTOToUpdate.getRowsList().get(indexRow);\n\t\t\t\tif(orderRowToClone!=null){\n\t\t\t\t\tif(!orderRowToClone.getIcon().equals(""images/orders/itemValidated.png"")){\n\t\t\t\t\t\torderRowToClone.setQuantity(quantity); \n\t\t\t\t\t\torderRowToClone.setLsProductID(lsProductID);\n\t\t\t\t\t\torderRowToClone.setStock(stock);\n\t\t\t\t\t\torderRowToClone.setProductDescription(productDescription);\n\t\t\t\t\t\torderRowToClone.setUnitPrice(unitPrice);\n\t\t\t\t\t\torderRowToClone.setShippingFee(shippingFee);\n\t\t\t\t\t\torderRowToClone.setShippingCompany(shippingCompany);\n\t\t\t\t\t\torderRowToClone.setTrackingNumber(trackingNumber);\n\t\t\t\t\t}\n\t\t\t\t\torderRowToClone.setIcon(""images/orders/itemValidated.png"");\n\t\t\t\t\tOrdersRows orderRowToAdd=DTOFactory.getOrderRowClone(orderRowToClone);\n\t\t\t\t\torderRowToAdd.setId(-1L);\n\t\t\t\t\t\n\t\t\t\t\torderDTOToUpdate.getRowsList().add(indexRow+1,orderRowToAdd);\n\t\t\t\t\tint indexOrder=0;\n\t\t\t\t\tint indexRow=0;\n\t\t\t\t\tfor(OrdersDTO orderDTO:listOrdersDTO){\n\t\t\t\t\t\torderDTO.setIndex(indexOrder);\n\t\t\t\t\t\tindexOrder++;\n\t\t\t\t\t\tindexRow=0;\n\t\t\t\t\t\tfor(OrdersRows orderRows:orderDTO.getRowsList()){\n\t\t\t\t\t\t\torderRows.setIndex(indexRow);\n\t\t\t\t\t\t\tindexRow++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tsession.setAttribute(""listOrdersDTOTreat"",listOrdersDTO);\n\t\t\t\t\tlistOrdersDTO=(List<OrdersDTO>)session.getAttribute(""listOrdersDTOTreat"");\n\t\t\t\t}\n\t\t\t\torderToEdit=listOrdersDTO.get(indexOrder);\n\t\t\t\tshowOrderDetailPop=""display:block;visibility:visible;"";\n\t\t\t\treturn SUCCESS;\n\t\t\t}\n\n\t\t\t/*-------- When Admin click on Delete Row Icon of orderDetail Popup-----------\n\t\t\t\t\t\t\t\t\tDelete this row using index\n\t\t\t -----------------------------------------------------------------------------*/\n\t\t\tif(deleteRowSignal!=null && deleteRowSignal!=0L){\n\t\t\t\tlistOrdersDTO=(List<OrdersDTO>)session.getAttribute(""listOrdersDTOTreat"");\n\t\t\t\tOrdersDTO orderDTO=listOrdersDTO.get(indexOrder);\n\t\t\t\tint nb=orderService.nbOrderRowsNotDeleted(orderDTO.getRowsList());\n\t\t\t\tif(orderDTO!=null && orderDTO.getRowsList().size()>1){\n\t\t\t\t\tfor(int i=0 ;i<orderDTO.getRowsList().size();i++){\n\t\t\t\t\t\tif(i==indexRow && nb>1){\n\t\t\t\t\t\t\torderDTO.getRowsList().get(i).setToDelete(1);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tsession.setAttribute(""listOrdersDTOTreat"",listOrdersDTO);\n\t\t\t\torderToEdit=listOrdersDTO.get(indexOrder);\n\t\t\t\tshowOrderDetailPop=""display:block;visibility:visible;"";\n\t\t\t\treturn SUCCESS;\n\t\t\t}\n\n\t\t\t/*--- when Admin click on the cancel Button of orderDetailPop ---\n\t\t\t\t\twe mast just hide popup OrderDetail\n\t\t\t  ---------------------------------------------------------------*/\n    \t\tif (cancelSignal!=null && cancelSignal!=0L){\n\t\t\t\tlistOrdersDTO=(ArrayList<OrdersDTO>) session.getAttribute(""listOrdersDTOTreat"");\n    \t\t\treturn SUCCESS;\n    \t\t}\n\n\t\t\t/*------ when Admin click on the lsOrder link in table -----------\n\t\t\t\t\tshow popup detail and allow admin to update Order\n\t\t\t  ---------------------------------------------------------------*/\n    \t\tif (editOrderSignal!=null && editOrderSignal!=0L){\n\t\t\t\tlistOrdersDTO=(ArrayList<OrdersDTO>) session.getAttribute(""listOrdersDTOTreat"");\n\t\t\t\torderToEdit=listOrdersDTO.get(indexOrder);\n\t\t\t\tif(orderToEdit==null)orderToEdit=new OrdersDTO();\n\t\t\t\tif(orderToEdit.getProductOrderDate()==null)strProductOrderDate="""";\n\t\t\t\tshowOrderDetailPop=""display:block;visibility:visible;"";\n    \t\t\treturn SUCCESS;\n    \t\t}\n\n\t\t\t/*-------------------- When Admin check left lsProduct TextField -------------\n\t\t\t\t\t\t\t\tcheck userPrice in DB, and write it in web view\n\t\t\t -----------------------------------------------------------------------------*/\n\t\t\tif(checkProductPriceSignal!=null && checkProductPriceSignal!=0L){\n\t\t\t\tlistOrdersDTO=(List<OrdersDTO>)session.getAttribute(""listOrdersDTOTreat"");\n\t\t\t\tOrdersDTO orderDTOToUpdate=listOrdersDTO.get(indexOrder);\n\t\t\t\tOrdersRows orderRowToUpadate=orderDTOToUpdate.getRowsList().get(indexRow);\n\t\t\t\tUserProductPriceDTO userProductPrice=productService.getUsrPPriceByLsproductId(userId, lsProductID);\n\t\t\t\torderRowToUpadate.setCss("""");\n\t\t\t\torderRowToUpadate.setCssPrice("""");\n\t\t\t\tif(userProductPrice==null){\n\t\t\t\t\torderRowToUpadate.setCss(""background-color:red;"");\n\t\t\t\t\torderRowToUpadate.setProductDescription(""""); \n\t\t\t\t\torderRowToUpadate.setStock(null);\n\t\t\t\t\torderRowToUpadate.setProductId(null);\n\t\t\t\t\torderRowToUpadate.setLsProductID(lsProductID);\n\t\t\t\t\torderRowToUpadate.setLsPrice(null);\n\t\t\t\t}else{\n\t\t\t\t\tDouble usrPrice=orderRowToUpadate.getUnitPrice();\n\t\t\t\t\tif(usrPrice==null)usrPrice=0D;\n\t\t\t\t\tif(usrPrice < userProductPrice.getPriceNum()){\n\t\t\t\t\t\torderRowToUpadate.setCssPrice(""background-color:red;"");\t\n\t\t\t\t\t}\n\t\t\t\t\torderRowToUpadate.setProductDescription(userProductPrice.getProductTitle());\n\t\t\t\t\torderRowToUpadate.setStock(userProductPrice.getStock());\n\t\t\t\t\torderRowToUpadate.setProductId(userProductPrice.getProductId());\n\t\t\t\t\torderRowToUpadate.setLsProductID(userProductPrice.getLsProductId());\n\t\t\t\t\torderRowToUpadate.setLsPrice(userProductPrice.getPriceNum());\n\t\t\t\t}\n\t\t\t\tsession.setAttribute(""listOrdersDTOTreat"",listOrdersDTO);\n\t\t\t\torderToEdit=orderDTOToUpdate;\n\t\t\t\tlistOrdersDTO=(List<OrdersDTO>)session.getAttribute(""listOrdersDTOTreat"");\n\t\t\t\tshowOrderDetailPop=""display:block;visibility:visible;"";\n\t\t\t\treturn SUCCESS;\n\t\t\t}\n\n\t\t\t/*------ when Admin click on the button save of orderDetail ------\n\t\t\t\t\t save order and keep pup showed \n\t\t\t  ---------------------------------------------------------------*/\n    \t\tif (saveOrdersSignal!=null && saveOrdersSignal!=0L){\n\t\t\t\tlistOrdersDTO=(ArrayList<OrdersDTO>) session.getAttribute(""listOrdersDTOTreat"");\n\t\t\t\torderToEdit=listOrdersDTO.get(indexOrder);\n\t\t\t\torderToEdit.setClientLastName(clientLastName);\n\t\t\t\torderToEdit.setClientFirstName(clientFirstName);\n\t\t\t\torderToEdit.setClientOtherNames(clientOtherNames); \n\t\t\t\torderToEdit.setClientStreet(clientStreet);\n\t\t\t\torderToEdit.setClientOtherStreet(clientOtherStreet);\n\t\t\t\torderToEdit.setClientCity(clientCity);\n\t\t\t\torderToEdit.setClientProvince(clientProvince);\n\t\t\t\torderToEdit.setClientProvince(clientProvince);\n\t\t\t\torderToEdit.setClientPostalCode(clientPostalCode);\n\t\t\t\torderToEdit.setClientPhone(clientPhone);\n\t\t\t\torderToEdit.setClientEmail(clientEmail);\t\t\t\n\t\t\t\torderToEdit.setProductOrderNumber(productOrderNumber);\n\t\t\t\tif (((strProductOrderDate)!=null)&&(!"""".equals(strProductOrderDate))){\n\t\t\t\t\tfrm = new SimpleDateFormat(""dd/MM/yyyy"");\n\t    \t\t\ttry {\n\t    \t\t\t\tDate date = frm.parse(strProductOrderDate);\n\t    \t\t\t\torderToEdit.setProductOrderDate(date);\n\t    \t\t\t}\n\t    \t\t\tcatch (Exception pe) {\n\t    \t\t\t\taddActionError(""Please enter a date in the correct format"");\n\t    \t\t\t}\n\t    \t\t}\n\t\t\t\tif (((strRequiredDate)!=null)&&(!"""".equals(strRequiredDate))){\n\t\t\t\t\tfrm = new SimpleDateFormat(""dd/MM/yyyy"");\n\t    \t\t\ttry {\n\t    \t\t\t\tDate date = frm.parse(strRequiredDate);\n\t    \t\t\t\torderToEdit.setRequiredDate(date);\n\t    \t\t\t}\n\t    \t\t\tcatch (Exception pe) {\n\t    \t\t\t\taddActionError(""Please enter a date in the correct format"");\n\t    \t\t\t}\n\t    \t\t}\n\t\t\t\t\n\t\t\t\tmessage=""Saving has completed successfuly"";\n\t\t\t\tshowSaveSuccessPop=""display:block;visibility:visible;"";\n\t\t\t\torderService.updateOrderByLsOrderId(orderToEdit);\n\t\t\t\t//orderToEdit=DTOFactory.getOrderDTOConsideredMissingInfo(orderToEdit);\n\t\t\t\tsession.setAttribute(""listOrdersDTOTreat"",listOrdersDTO);\n\t\t\t\tshowOrderDetailPop=""display:block;visibility:visible;"";\n\t\t\t\t\n    \t\t\treturn SUCCESS;\n    \t\t}\n\t\n\t\t\t/*------------ When Admin click on icon findOrders.png ----------\n\t\t\t\t\t\t\t\tcheck user and complete infos client\n\t\t\t ----------------------------------------------------------------*/\n\t\t\tif(findOrdersSignal!=null && findOrdersSignal!=0L){\t\t\n\t\t\t\tif(lsOrderId==null)lsOrderId="""";\n\t\t\t\tlistOrdersDTO=orderService.searchOrdersWithOptions(creationDateStartArg,creationDateEndArg, userLogin, lsOrderId, status);\n\t\t\t\tsession.setAttribute(""listOrdersDTOTreat"",listOrdersDTO);\n\t\t\t\treturn SUCCESS;\n\t\t\t}\n\n\t\t\t/*-------------------- When user check print item -----------------------------\n\t\t\t\t\tAdd or remove this element from the orders to print\n\t \t\t -----------------------------------------------------------------------------*/\n\t\t\tif(checkBoxPrintSignal!=null && checkBoxPrintSignal!=0L){\n\t\t\t\tlistOrdersDTO=(ArrayList<OrdersDTO>) session.getAttribute(""listOrdersDTOTreat"");\n\t\t\t\tOrdersDTO orderDTOInList=listOrdersDTO.get(indexOrder);\n\t\t\t\torderDTOInList.setPrint(checkBoxPrint);\n\t\t\t\tsession.setAttribute(""listOrdersDTOTreat"",listOrdersDTO);\n\t\t\t\treturn SUCCESS;\n\t\t\t}\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t\treturn ""input"";\n\t\t}\n\treturn SUCCESS;\n\t}\n\t\n\n}\n\n----------------------------------- SOURCE END -------------------------------------",1413499733853
error,log,,,"Problems occurred when invoking code from plug-in: ""org.eclipse.jdt.ui"".",1413499733854
error,log,,,"Error in JDT Core during reconcile",1413499733855
error,log,,,"Exception occurred during problem detection:\n----------------------------------- SOURCE BEGIN -------------------------------------\npackage com.loyauty.web.struts.action.orders;\n\nimport java.io.File;\nimport java.text.SimpleDateFormat;\nimport java.util.ArrayList;\nimport java.util.Date;\nimport java.util.Hashtable;\nimport java.util.List;\nimport javax.servlet.http.HttpSession;\nimport lombok.Getter;\nimport lombok.Setter;\nimport com.loyauty.exception.ServiceLocatorException;\nimport com.loyauty.model.OrdersRows;\nimport com.loyauty.model.User;\nimport com.loyauty.service.core.DTOFactory;\nimport com.loyauty.service.core.dto.BasicUserDTO;\nimport com.loyauty.service.core.dto.OrdersDTO;\nimport com.loyauty.service.core.dto.UserProductPriceDTO;\nimport com.loyauty.service.core.dto.UserSessionDTO;\nimport com.loyauty.service.orders.OrdersService;\nimport com.loyauty.service.product.ProductService;\nimport com.loyauty.service.user.UserService;\nimport com.loyauty.web.struts.action.LoyautyAction;\n\npublic class TreatmentOrders  extends LoyautyAction {\n\tprivate static final long serialVersionUID = -3811760851445730062L;\n\t\n\n\tprivate UserService userService;\n\tprivate ProductService productService;\n\tprivate OrdersService orderService;\n\t@Getter @Setter\n\tprivate String userLogin;\n\t@Getter @Setter\n\tprivate Long userId;\n\t@Getter @Setter\n\tprivate List<User> usersList;\n\tprivate static int USER_TYPE = 2;\n\t@Getter @Setter\n\tprivate File orderFile;\n\t@Getter @Setter\n\tList<OrdersDTO>listOrdersDTO;\n\tHashtable<String, OrdersDTO>hashOrders;\n\t@Getter @Setter\n\tprivate String orderSelected;\n\t@Getter @Setter\n\tprivate Long saveOrdersSignal;\n\t@Getter @Setter\n\tprivate Long confirmSaveOrdersSignal;\n\t@Getter @Setter\n\tprivate String lsOrderId;\n\t@Getter @Setter\n\tprivate String message;\n\t@Getter @Setter\n\tInteger indexOrder;\n\t@Getter @Setter\n\tInteger indexRow;\n\t@Getter @Setter\n\tLong poYpop;\n\t@Getter @Setter\n\tLong poXpop;\n\t@Getter @Setter\n\tprivate Long checkBoxPrintSignal;\n\t@Getter @Setter\n\tprivate Boolean checkBoxPrintEtem;\n\t@Getter @Setter\n\tprivate Boolean checkBoxPrint;\n\t@Getter @Setter\n\tprivate Long pageTop=0L;\n\t@Getter @Setter\n\tprivate Long saved;\n\t@Getter @Setter\n\tprivate String showNotificationPop=""visibility:hidden;display:none;"";\n\t@Getter @Setter\n\tprivate Long addOrderSignal;\n\t@Getter @Setter\n\tprivate Long addSimilarOrderSignal;\n\t@Getter @Setter\n\tprivate Long deleteOrderSignal;\n\t@Getter @Setter\n\tprivate Long deleteRowSignal;\n\t@Getter @Setter\n\tprivate Long userLoginChangedSignal;\n\t@Getter @Setter\n\tprivate Long saveTemporarySignal;\n\t@Getter @Setter\n\tprivate Long addSimilarRowSignal;\n\t@Getter @Setter\n\tprivate Long saveTemporaryRowSignal;\n\t@Getter @Setter\n\tprivate Long checkProductPriceSignal;\n\t@Getter @Setter\n\tprivate Long adminXLSSignal;\n\t@Getter @Setter\n\tprivate Long editOrderSignal;\n\t//recovery Data Order\n\t@Getter @Setter\n\tprivate String clientLastName;\n\t@Getter @Setter\n\tprivate String clientFirstName;\n\t@Getter @Setter\n\tprivate String clientOtherNames;\n\t@Getter @Setter\n\tprivate String clientStreet;\n\t@Getter @Setter\n\tprivate String  clientOtherStreet;\n\t@Getter @Setter\n\tprivate String  clientCity;\n\t@Getter @Setter\n\tprivate String  clientProvince;\n\t@Getter @Setter\n\tprivate String  clientPostalCode;\n\t@Getter @Setter\n\tprivate String  clientPhone;\n\t@Getter @Setter\n\tprivate String  clientEmail;\n\t@Getter @Setter\n\tprivate String productOrderNumber;\n\t@Getter @Setter\n\tprivate String strProductOrderDate;\n\t@Getter @Setter\n\tprivate String strRequiredDate;\n\t\n\t//recovery data row\n\t@Getter @Setter\n\tprivate Double quantity ;\n\t@Getter @Setter\n\tprivate Double quantityToChange;\n\t@Getter @Setter\n\tprivate String lsProductID;\n\t@Getter @Setter\n\tprivate Double stock;\n\t@Getter @Setter\n\tprivate String productDescription;\n\t@Getter @Setter\n\tprivate Double unitPrice;\n\t@Getter @Setter\n\tprivate Double shippingFee;\n\t@Getter @Setter\n\tprivate String shippingCompany;\n\t@Getter @Setter\n\tprivate String trackingNumber;\n\t@Getter @Setter\n\tprivate Date creationDate ;\n\t@Getter @Setter\n\tprivate Long findOrdersSignal;\n\t@Getter @Setter\n\tprivate Long cancelSignal;\n\t@Getter @Setter\n\tprivate Long quantityToChangeSignal;\n\t@Getter @Setter\n\tprivate Long duplicateOrderSignal;\n\t@Getter @Setter\n\tprivate String strCreationDate;\n\t@Getter @Setter\n\tprivate String status;\n\t@Getter @Setter\n\tprivate User usr;\n\t@Getter @Setter\n\tprivate OrdersDTO orderToEdit;\n\t@Getter @Setter\n\tprivate String showOrderDetailPop;\n\t\n\t@Getter @Setter\n\tprivate String strCreationDateStart;\n\t@Getter @Setter\n\tprivate String strCreationDateEnd;\n\t\n\t@Getter @Setter\n\tprivate Date creationDateStart;\n\t@Getter @Setter\n\tprivate Date creationDateEnd ;\n\tprivate Date creationDateStartArg;\n\tprivate Date creationDateEndArg ;\n\t@Getter @Setter\n\tprivate String showSaveSuccessPop=""visibility:hidden;display:none;"";\n\t//showSaveSuccessPop=""display:block;visibility:visible;"";\n\t//showSaveSuccessPop=""visibility:hidden;display:none;"";\n\t@Getter @Setter\n\tprivate Integer selectedStatus;\n\t\n\tpublic  TreatmentOrders() throws ServiceLocatorException {\n\t\tsuper();\t\n\t\tproductService = getServiceLocator().getProductService();   \n\t\tuserService = getServiceLocator().getUserService();\n\t\torderService = getServiceLocator().getOrderService();\n\t\thashOrders=new Hashtable<String, OrdersDTO>();\n\t}\n\t/*=========================================================================================\n\t \t\t\t\t\t\t\t\t\t\t\tmethod execute\n\t  =========================================================================================*/\n\t@SuppressWarnings({ ""rawtypes"", ""unchecked"" })\n\t@Override\n\tpublic String execute() throws Exception {\n\t\tHttpSession session = request.getSession(true);\n\t\tshowOrderDetailPop=""visibility:hidden;display:none;"";\n\t\tif(poYpop==null)poYpop=100L;\n\t\tif(poXpop==null)poXpop=100L;\n\t\tif(selectedStatus==null)selectedStatus=-1;\n\t\ttry {\n\t\t\tusr=new User();\n\t\t\tusr.setNote(""Very good"");\n\t\t\t/*-------------------- recovery users list -----------------------------------\n\t\t\t\t\t\t\tRecovery users list in session\n\t\t\t -----------------------------------------------------------------------------*/\n\t\t\tBasicUserDTO basicUserDTO = new BasicUserDTO();\n\t\t\tbasicUserDTO.setTypeId(USER_TYPE);\n\t\t\tList<User> usersListSession=(List<User>)session.getAttribute(""usersListSession"");\n\t\t\tif(usersListSession==null){\n\t\t\t\tList<UserSessionDTO> listAllUsers= userService.getAllUsers(basicUserDTO);\n\t\t\t\tusersList=new ArrayList<User>();\n\t\t\t\tfor(UserSessionDTO userDTO:listAllUsers){\n\t\t\t\t\tUser user=new User();\n\t\t\t\t\tuser.setId(userDTO.getId());\n\t\t\t\t\tuser.setLogin(userDTO.getLogin());\n\t\t\t\t\tusersList.add(user);\n\t\t\t\t}\n\t\t\t\tsession.setAttribute(""usersListSession"",usersList);\n\t\t\t}else usersList=usersListSession;\n\n\t\t\t/*------ always recovery creationDate from strCreationDate ------\n\t\t\t\t\t\talways keep the creation date search options\n\t\t\t  ---------------------------------------------------------------*/\n\t\t\tcreationDateStart=null;\n\t\t\tSimpleDateFormat frm = new SimpleDateFormat(""dd/MM/yyyy"");\n\t\t\tif (((strCreationDateStart)!=null)&&(!"""".equals(strCreationDateStart))){\n    \t\t\ttry {\n    \t\t\t\tDate date = frm.parse(strCreationDateStart);\n    \t\t\t\tcreationDateStart=date;\n    \t\t\t\tcreationDateStartArg=date;\n    \t\t\t}\n    \t\t\tcatch (Exception pe) {\n    \t\t\t\tcreationDateStart=null;\n    \t\t\t\taddActionError(""Please enter a date in the correct format"");\n    \t\t\t}\n    \t\t}\n    \t\tif(creationDateStart==null){\n\t\t\t\tDate date = frm.parse(""01/01/1900"");\n\t\t\t\tcreationDateStartArg=date;\n    \t\t}\n    \t\tcreationDateEnd=null;\n    \t\tif (((strCreationDateEnd)!=null)&&(!"""".equals(strCreationDateEnd))){\n    \t\t\tfrm = new SimpleDateFormat(""dd/MM/yyyy"");\n    \t\t\ttry {\n    \t\t\t\tDate date = frm.parse(strCreationDateEnd);\n    \t\t\t\tcreationDateEnd=date;\n    \t\t\t\tcreationDateEndArg=date;\n    \t\t\t}\n    \t\t\tcatch (Exception pe) {\n    \t\t\t\tcreationDateEnd=null;\n    \t\t\t\taddActionError(""Please enter a date in the correct format"");\n    \t\t\t}\n    \t\t}\n    \t\tif(creationDateEnd==null){\n    \t\t\tcreationDateEndArg=new Date();\n    \t\t}\n\n\t\t\t/*------ always recovery Status from selectedStatus key ------\n\t\t\t\t\t\talways keep the status search options\n\t\t\t  ---------------------------------------------------------------*/\n    \t\tswitch (selectedStatus) {\n\t\t\t\tcase -1:status="""";\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0:status=""open"";\n\t\t\t\t\tbreak;\n\t\t\t\tcase 1:status=""progress"";\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:status=""shipped"";\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3:status=""billed"";\n\t\t\t\t\tbreak;\n\t\t\t}\n    \t\t\n\t\t\t/*------ When user change Quantity to split in orderDetailPop ----------\n\t\t\t\t\t\tprepare order to split from two other orders witch\n\t\t\t\t \t\tone must have a lsOrder with underscore \n\t \t\t -----------------------------------------------------------------------*/\n\t\t\tif(quantityToChangeSignal!=null && quantityToChangeSignal!=0L){\n\t\t\t\tlistOrdersDTO=(ArrayList<OrdersDTO>) session.getAttribute(""listOrdersDTOTreat"");\n\t\t\t\tOrdersDTO orderToChangeQt=listOrdersDTO.get(indexOrder);\n\t\t\t\tOrdersRows orderRow=orderToChangeQt.getRowsList().get(indexRow);\n\t\t\t\tif(quantityToChange<orderRow.getQuantity())orderRow.setQuantityToSplit(quantityToChange);\n\t\t\t\tsession.setAttribute(""listOrdersDTOTreat"",listOrdersDTO);\n\t\t\t\tlistOrdersDTO=(List<OrdersDTO>)session.getAttribute(""listOrdersDTOTreat"");\n\t\t\t\torderToEdit=listOrdersDTO.get(indexOrder);\n\t\t\t\tshowOrderDetailPop=""display:block;visibility:visible;"";\n\t\t\t\treturn SUCCESS;\n\t\t\t}\n\n\n\t\t\t/*-------------------- Duplicate Order ----------------------------------------\n\t\t\t\t\t\t\tCreate order in just in memory\n\t \t\t -----------------------------------------------------------------------------*/\n\t\t\tif(duplicateOrderSignal!=null && duplicateOrderSignal!=0L){\n\t\t\tlistOrdersDTO=\t(ArrayList<OrdersDTO>) session.getAttribute(""listOrdersDTOTreat"");\n\t\t\tOrdersDTO orderToClone=listOrdersDTO.get(indexOrder);\n\t\t\thashOrders=new Hashtable<String, OrdersDTO>();\n\t\t\tfor(OrdersDTO ord:listOrdersDTO){\n\t\t\t\thashOrders.put(ord.getLsOrderId(), ord);\n\t\t\t}\n\t\t\tOrdersDTO orderClone=DTOFactory.getOrderDTOSplitted(orderToClone);\n\t\t\tif(orderClone!=null){\n\t\t\t\tString lsOrder=orderClone.getLsOrderId();\n\t\t\t\tString strlsOrder=orderService.generateLsOrderId(lsOrder, hashOrders);\n\t\t\t\torderClone.setLsOrderId(strlsOrder);//rgb(116,180,209)\n\t\t\t\torderClone.setCssStyle(""background-color:#FFFF99;border-right: 1px solid #CCCCCC;border-left:1px solid #CCCCCC;border-top:  1px solid #CCCCCC;"");\n\t\t\t\t\n\t\t\t\torderToEdit=orderClone;\n\t\t\t\torderToEdit.setBackgroundColor(""background-color:#FFFF99;"");\n\t\t\t\tlistOrdersDTO.add(indexOrder+1,orderClone);\n\t\t\t\tindexOrder=0;\n\t\t\t\tfor(OrdersDTO ord: listOrdersDTO){\n\t\t\t\t\tord.setIndex(indexOrder);\n\t\t\t\t\tindexOrder++;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(listOrdersDTO.size()>0){\n\t\t\t\t\tsession.setAttribute(""listOrdersDTOTreat"",listOrdersDTO);\n\t\t\t\t}\n\t\t\t\torderService.updateOrderByLsOrderId(orderToClone);\n\t\t\t\torderService.insertOrderWithRows(orderClone);\t\t\t\n\t\t\t}\n\t\t\tshowOrderDetailPop=""display:block;visibility:visible;"";\n\t\t\treturn SUCCESS;\n\t\t\t}\n\n\t\t\t/*----------------- When Admin check on saveTemporaryRow Icon --------------------------\n\t\t\t\t\twe must first obtained the object that contains the list of rows,\n\t\t\t\t\tafter we accede to the row by index recovered by web view and change it\n\t\t\t ---------------------------------------------------------------------------------------*/\n\t\t\tif(saveTemporaryRowSignal!=null && saveTemporaryRowSignal!=0L){\n\t\t\t\tlistOrdersDTO=(ArrayList<OrdersDTO>) session.getAttribute(""listOrdersDTOTreat"");\n\t\t\t\tOrdersDTO orderDTOToUpdate=listOrdersDTO.get(indexOrder);\n\t\t\t\tif (((strProductOrderDate)!=null)&&(!"""".equals(strProductOrderDate))){\n\t\t\t\t\tfrm = new SimpleDateFormat(""dd/MM/yyyy"");\n\t    \t\t\ttry {\n\t    \t\t\t\tDate date = frm.parse(strProductOrderDate);\n\t    \t\t\t\torderDTOToUpdate.setProductOrderDate(date);\n\t    \t\t\t}\n\t    \t\t\tcatch (Exception pe) {\n\t    \t\t\t\taddActionError(""Please enter a date in the correct format"");\n\t    \t\t\t}\n\t    \t\t}\n\t\t\t\tif (((strRequiredDate)!=null)&&(!"""".equals(strRequiredDate))){\n\t\t\t\t\tfrm = new SimpleDateFormat(""dd/MM/yyyy"");\n\t    \t\t\ttry {\n\t    \t\t\t\tDate date = frm.parse(strRequiredDate);\n\t    \t\t\t\torderDTOToUpdate.setRequiredDate(date);\n\t    \t\t\t}\n\t    \t\t\tcatch (Exception pe) {\n\t    \t\t\t\taddActionError(""Please enter a date in the correct format"");\n\t    \t\t\t}\n\t    \t\t}\n\t\t\t\tOrdersRows orderRowToSaveMemory=orderDTOToUpdate.getRowsList().get(indexRow);\n\t\t\t\torderRowToSaveMemory.setIcon(""images/orders/itemValidated.png"");\n\t\t\t\tif(orderRowToSaveMemory!=null){\n\t\t\t\t\torderRowToSaveMemory.setQuantity(quantity); \n\t\t\t\t\torderRowToSaveMemory.setLsProductID(lsProductID);\n\t\t\t\t\torderRowToSaveMemory.setProductDescription(productDescription);\n\t\t\t\t\torderRowToSaveMemory.setUnitPrice(unitPrice);\n\t\t\t\t\torderRowToSaveMemory.setCssPrice(""background-color:#FF6666;"");\n\t\t\t\t\torderRowToSaveMemory.setCssQuantity(""background-color:#FF6666;"");\n\t\t\t\t\tif(quantity!=null && quantity>0D)orderRowToSaveMemory.setCssQuantity("""");\n\t\t\t\t\tif(unitPrice!=null && orderRowToSaveMemory.getLsPrice()!=null\n\t\t\t\t\t  && unitPrice>=orderRowToSaveMemory.getLsPrice())\n\t\t\t\t\t  orderRowToSaveMemory.setCssPrice("""");\n\t\t\t\t\torderRowToSaveMemory.setShippingFee(shippingFee);\n\t\t\t\t\torderRowToSaveMemory.setShippingCompany(shippingCompany);\n\t\t\t\t\torderRowToSaveMemory.setTrackingNumber(trackingNumber);\t\n\t\t\t\t\tint indexOrder=0;\n\t\t\t\t\tint indexRow=0;\n\t\t\t\t\tfor(OrdersDTO orderDTO:listOrdersDTO){\n\t\t\t\t\t\torderDTO.setIndex(indexOrder);\n\t\t\t\t\t\tindexOrder++;\n\t\t\t\t\t\tindexRow=0;\n\t\t\t\t\t\tfor(OrdersRows orderRows:orderDTO.getRowsList()){\n\t\t\t\t\t\t\torderRows.setIndex(indexRow);\n\t\t\t\t\t\t\tindexRow++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tsession.setAttribute(""listOrdersDTOTreat"",listOrdersDTO);\n\t\t\t\t\tlistOrdersDTO=(List<OrdersDTO>)session.getAttribute(""listOrdersDTOTreat"");\n\t\t\t\t}\n\t\t\t\torderToEdit=listOrdersDTO.get(indexOrder);\n\t\t\t\tshowOrderDetailPop=""display:block;visibility:visible;"";\n\t\t\t\treturn SUCCESS;\n\t\t\t}\n\t\t\t\n\t\t\t/*------- When Admin click on addSimilarRow Icon on the OrderDetailPop --------\n\t\t\t\t\t\t\t\tAdd one Row Similar at the previews\n\t\t\t  -----------------------------------------------------------------------------*/\n\t\t\tif(addSimilarRowSignal!=null && addSimilarRowSignal!=0L){\n\t\t\t\tlistOrdersDTO=(List<OrdersDTO>)session.getAttribute(""listOrdersDTOTreat"");\n\t\t\t\tOrdersDTO orderDTOToUpdate=listOrdersDTO.get(indexOrder);\n\t\t\t\tOrdersRows orderRowToClone=orderDTOToUpdate.getRowsList().get(indexRow);\n\t\t\t\tif(orderRowToClone!=null){\n\t\t\t\t\tif(!orderRowToClone.getIcon().equals(""images/orders/itemValidated.png"")){\n\t\t\t\t\t\torderRowToClone.setQuantity(quantity); \n\t\t\t\t\t\torderRowToClone.setLsProductID(lsProductID);\n\t\t\t\t\t\torderRowToClone.setStock(stock);\n\t\t\t\t\t\torderRowToClone.setProductDescription(productDescription);\n\t\t\t\t\t\torderRowToClone.setUnitPrice(unitPrice);\n\t\t\t\t\t\torderRowToClone.setShippingFee(shippingFee);\n\t\t\t\t\t\torderRowToClone.setShippingCompany(shippingCompany);\n\t\t\t\t\t\torderRowToClone.setTrackingNumber(trackingNumber);\n\t\t\t\t\t}\n\t\t\t\t\torderRowToClone.setIcon(""images/orders/itemValidated.png"");\n\t\t\t\t\tOrdersRows orderRowToAdd=DTOFactory.getOrderRowClone(orderRowToClone);\n\t\t\t\t\torderRowToAdd.setId(-1L);\n\t\t\t\t\t\n\t\t\t\t\torderDTOToUpdate.getRowsList().add(indexRow+1,orderRowToAdd);\n\t\t\t\t\tint indexOrder=0;\n\t\t\t\t\tint indexRow=0;\n\t\t\t\t\tfor(OrdersDTO orderDTO:listOrdersDTO){\n\t\t\t\t\t\torderDTO.setIndex(indexOrder);\n\t\t\t\t\t\tindexOrder++;\n\t\t\t\t\t\tindexRow=0;\n\t\t\t\t\t\tfor(OrdersRows orderRows:orderDTO.getRowsList()){\n\t\t\t\t\t\t\torderRows.setIndex(indexRow);\n\t\t\t\t\t\t\tindexRow++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tsession.setAttribute(""listOrdersDTOTreat"",listOrdersDTO);\n\t\t\t\t\tlistOrdersDTO=(List<OrdersDTO>)session.getAttribute(""listOrdersDTOTreat"");\n\t\t\t\t}\n\t\t\t\torderToEdit=listOrdersDTO.get(indexOrder);\n\t\t\t\tshowOrderDetailPop=""display:block;visibility:visible;"";\n\t\t\t\treturn SUCCESS;\n\t\t\t}\n\n\t\t\t/*-------- When Admin click on Delete Row Icon of orderDetail Popup-----------\n\t\t\t\t\t\t\t\t\tDelete this row using index\n\t\t\t -----------------------------------------------------------------------------*/\n\t\t\tif(deleteRowSignal!=null && deleteRowSignal!=0L){\n\t\t\t\tlistOrdersDTO=(List<OrdersDTO>)session.getAttribute(""listOrdersDTOTreat"");\n\t\t\t\tOrdersDTO orderDTO=listOrdersDTO.get(indexOrder);\n\t\t\t\tint nb=orderService.nbOrderRowsNotDeleted(orderDTO.getRowsList());\n\t\t\t\tif(orderDTO!=null && orderDTO.getRowsList().size()>1){\n\t\t\t\t\tfor(int i=0 ;i<orderDTO.getRowsList().size();i++){\n\t\t\t\t\t\tif(i==indexRow && nb>1){\n\t\t\t\t\t\t\torderDTO.getRowsList().get(i).setToDelete(1);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tsession.setAttribute(""listOrdersDTOTreat"",listOrdersDTO);\n\t\t\t\torderToEdit=listOrdersDTO.get(indexOrder);\n\t\t\t\tshowOrderDetailPop=""display:block;visibility:visible;"";\n\t\t\t\treturn SUCCESS;\n\t\t\t}\n\n\t\t\t/*--- when Admin click on the cancel Button of orderDetailPop ---\n\t\t\t\t\twe mast just hide popup OrderDetail\n\t\t\t  ---------------------------------------------------------------*/\n    \t\tif (cancelSignal!=null && cancelSignal!=0L){\n\t\t\t\tlistOrdersDTO=(ArrayList<OrdersDTO>) session.getAttribute(""listOrdersDTOTreat"");\n    \t\t\treturn SUCCESS;\n    \t\t}\n\n\t\t\t/*------ when Admin click on the lsOrder link in table -----------\n\t\t\t\t\tshow popup detail and allow admin to update Order\n\t\t\t  ---------------------------------------------------------------*/\n    \t\tif (editOrderSignal!=null && editOrderSignal!=0L){\n\t\t\t\tlistOrdersDTO=(ArrayList<OrdersDTO>) session.getAttribute(""listOrdersDTOTreat"");\n\t\t\t\torderToEdit=listOrdersDTO.get(indexOrder);\n\t\t\t\tif(orderToEdit==null)orderToEdit=new OrdersDTO();\n\t\t\t\tif(orderToEdit.getProductOrderDate()==null)strProductOrderDate="""";\n\t\t\t\tshowOrderDetailPop=""display:block;visibility:visible;"";\n    \t\t\treturn SUCCESS;\n    \t\t}\n\n\t\t\t/*-------------------- When Admin check left lsProduct TextField -------------\n\t\t\t\t\t\t\t\tcheck userPrice in DB, and write it in web view\n\t\t\t -----------------------------------------------------------------------------*/\n\t\t\tif(checkProductPriceSignal!=null && checkProductPriceSignal!=0L){\n\t\t\t\tlistOrdersDTO=(List<OrdersDTO>)session.getAttribute(""listOrdersDTOTreat"");\n\t\t\t\tOrdersDTO orderDTOToUpdate=listOrdersDTO.get(indexOrder);\n\t\t\t\tOrdersRows orderRowToUpadate=orderDTOToUpdate.getRowsList().get(indexRow);\n\t\t\t\tUserProductPriceDTO userProductPrice=productService.getUsrPPriceByLsproductId(userId, lsProductID);\n\t\t\t\torderRowToUpadate.setCss("""");\n\t\t\t\torderRowToUpadate.setCssPrice("""");\n\t\t\t\tif(userProductPrice==null){\n\t\t\t\t\torderRowToUpadate.setCss(""background-color:red;"");\n\t\t\t\t\torderRowToUpadate.setProductDescription(""""); \n\t\t\t\t\torderRowToUpadate.setStock(null);\n\t\t\t\t\torderRowToUpadate.setProductId(null);\n\t\t\t\t\torderRowToUpadate.setLsProductID(lsProductID);\n\t\t\t\t\torderRowToUpadate.setLsPrice(null);\n\t\t\t\t}else{\n\t\t\t\t\tDouble usrPrice=orderRowToUpadate.getUnitPrice();\n\t\t\t\t\tif(usrPrice==null)usrPrice=0D;\n\t\t\t\t\tif(usrPrice < userProductPrice.getPriceNum()){\n\t\t\t\t\t\torderRowToUpadate.setCssPrice(""background-color:red;"");\t\n\t\t\t\t\t}\n\t\t\t\t\torderRowToUpadate.setProductDescription(userProductPrice.getProductTitle());\n\t\t\t\t\torderRowToUpadate.setStock(userProductPrice.getStock());\n\t\t\t\t\torderRowToUpadate.setProductId(userProductPrice.getProductId());\n\t\t\t\t\torderRowToUpadate.setLsProductID(userProductPrice.getLsProductId());\n\t\t\t\t\torderRowToUpadate.setLsPrice(userProductPrice.getPriceNum());\n\t\t\t\t}\n\t\t\t\tsession.setAttribute(""listOrdersDTOTreat"",listOrdersDTO);\n\t\t\t\torderToEdit=orderDTOToUpdate;\n\t\t\t\tlistOrdersDTO=(List<OrdersDTO>)session.getAttribute(""listOrdersDTOTreat"");\n\t\t\t\tshowOrderDetailPop=""display:block;visibility:visible;"";\n\t\t\t\treturn SUCCESS;\n\t\t\t}\n\n\t\t\t/*------ when Admin click on the button save of orderDetail ------\n\t\t\t\t\t save order and keep pup showed \n\t\t\t  ---------------------------------------------------------------*/\n    \t\tif (saveOrdersSignal!=null && saveOrdersSignal!=0L){\n\t\t\t\tlistOrdersDTO=(ArrayList<OrdersDTO>) session.getAttribute(""listOrdersDTOTreat"");\n\t\t\t\torderToEdit=listOrdersDTO.get(indexOrder);\n\t\t\t\torderToEdit.setClientLastName(clientLastName);\n\t\t\t\torderToEdit.setClientFirstName(clientFirstName);\n\t\t\t\torderToEdit.setClientOtherNames(clientOtherNames); \n\t\t\t\torderToEdit.setClientStreet(clientStreet);\n\t\t\t\torderToEdit.setClientOtherStreet(clientOtherStreet);\n\t\t\t\torderToEdit.setClientCity(clientCity);\n\t\t\t\torderToEdit.setClientProvince(clientProvince);\n\t\t\t\torderToEdit.setClientProvince(clientProvince);\n\t\t\t\torderToEdit.setClientPostalCode(clientPostalCode);\n\t\t\t\torderToEdit.setClientPhone(clientPhone);\n\t\t\t\torderToEdit.setClientEmail(clientEmail);\t\t\t\n\t\t\t\torderToEdit.setProductOrderNumber(productOrderNumber);\n\t\t\t\tif (((strProductOrderDate)!=null)&&(!"""".equals(strProductOrderDate))){\n\t\t\t\t\tfrm = new SimpleDateFormat(""dd/MM/yyyy"");\n\t    \t\t\ttry {\n\t    \t\t\t\tDate date = frm.parse(strProductOrderDate);\n\t    \t\t\t\torderToEdit.setProductOrderDate(date);\n\t    \t\t\t}\n\t    \t\t\tcatch (Exception pe) {\n\t    \t\t\t\taddActionError(""Please enter a date in the correct format"");\n\t    \t\t\t}\n\t    \t\t}\n\t\t\t\tif (((strRequiredDate)!=null)&&(!"""".equals(strRequiredDate))){\n\t\t\t\t\tfrm = new SimpleDateFormat(""dd/MM/yyyy"");\n\t    \t\t\ttry {\n\t    \t\t\t\tDate date = frm.parse(strRequiredDate);\n\t    \t\t\t\torderToEdit.setRequiredDate(date);\n\t    \t\t\t}\n\t    \t\t\tcatch (Exception pe) {\n\t    \t\t\t\taddActionError(""Please enter a date in the correct format"");\n\t    \t\t\t}\n\t    \t\t}\n\t\t\t\t\n\t\t\t\tmessage=""Saving has completed successfuly"";\n\t\t\t\tshowSaveSuccessPop=""display:block;visibility:visible;"";\n\t\t\t\torderService.updateOrderByLsOrderId(orderToEdit);\n\t\t\t\t//orderToEdit=DTOFactory.getOrderDTOConsideredMissingInfo(orderToEdit);\n\t\t\t\tsession.setAttribute(""listOrdersDTOTreat"",listOrdersDTO);\n\t\t\t\tshowOrderDetailPop=""display:block;visibility:visible;"";\n\t\t\t\t\n    \t\t\treturn SUCCESS;\n    \t\t}\n\t\n\t\t\t/*------------ When Admin click on icon findOrders.png ----------\n\t\t\t\t\t\t\t\tcheck user and complete infos client\n\t\t\t ----------------------------------------------------------------*/\n\t\t\tif(findOrdersSignal!=null && findOrdersSignal!=0L){\t\t\n\t\t\t\tif(lsOrderId==null)lsOrderId="""";\n\t\t\t\tlistOrdersDTO=orderService.searchOrdersWithOptions(creationDateStartArg,creationDateEndArg, userLogin, lsOrderId, status);\n\t\t\t\tsession.setAttribute(""listOrdersDTOTreat"",listOrdersDTO);\n\t\t\t\treturn SUCCESS;\n\t\t\t}\n\n\t\t\t/*-------------------- When user check print item -----------------------------\n\t\t\t\t\tAdd or remove this element from the orders to print\n\t \t\t -----------------------------------------------------------------------------*/\n\t\t\tif(checkBoxPrintSignal!=null && checkBoxPrintSignal!=0L){\n\t\t\t\tlistOrdersDTO=(ArrayList<OrdersDTO>) session.getAttribute(""listOrdersDTOTreat"");\n\t\t\t\tOrdersDTO orderDTOInList=listOrdersDTO.get(indexOrder);\n\t\t\t\torderDTOInList.setPrint(checkBoxPrint);\n\t\t\t\tsession.setAttribute(""listOrdersDTOTreat"",listOrdersDTO);\n\t\t\t\treturn SUCCESS;\n\t\t\t}\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t\treturn ""input"";\n\t\t}\n\treturn SUCCESS;\n\t}\n\t\n\n}\n\n----------------------------------- SOURCE END -------------------------------------",1413499735684
error,log,,,"Problems occurred when invoking code from plug-in: ""org.eclipse.jdt.ui"".",1413499735685
error,log,,,"Error in JDT Core during reconcile",1413499735685
error,log,,,"Exception occurred during problem detection:\n----------------------------------- SOURCE BEGIN -------------------------------------\npackage com.loyauty.service.core.dto;\n\nimport java.util.Comparator;\nimport java.util.Date;\nimport java.util.List;\n\nimport lombok.Data;\nimport lombok.ToString;\n\nimport com.loyauty.enums.ProductStatus;\n\n/**\n * Contains data for the product.\n */\n@Data @ToString(callSuper=true)\npublic class ProductDTO extends BasicDTO{\n\t\t\n\tprivate static final long serialVersionUID = 1L;\n\t\n\tprivate Long selected;\n\tprivate String upc;\n\tprivate BrandDTO brand;\n\tprivate CategoryDTO category;\n\tprivate Long mainFilterTypeId;\n\tprivate String manufacturerProductId;\n\tprivate String loyaltyProductId;\n\tprivate CommonDTO nameEng;\n\tprivate CommonDTO nameFr;\n\tprivate ImageDTO image;\n\tprivate CommonDTO descriptionEng;\n\tprivate CommonDTO descriptionFr;\n\tprivate CommonDTO specificationEng;\n\tprivate CommonDTO specificationFr;\n\tprivate CommonDTO otherEng;\n\tprivate CommonDTO otherFr;\n\tprivate String msrp;\n\tprivate String cost;\n\tprivate String width;\n\tprivate String high;\n\tprivate String large;\n\tprivate String weight;\n\tprivate List<ProductModelDTO> manufactureProductList;\n\tprivate Date creationDate;\n\tprivate ProductStatus status;\n\tprivate String statusName;\n\tprivate String nameProduc;\n\tprivate String descriptiProduct;\n\tprivate String specificationProduct;\n\tprivate String otherProduct;\n\tprivate String priceProduct;  \n\tprivate String hrefName;\n\tprivate String localizedPriceProduct;\n\tprivate String note;\t\n\tprivate List<ProductLinkDTO> linkList;\t\n\tprivate Date discontinuedStartDate;\n\tprivate String loyaltyProductIdSub;\n\tprivate CommonDTO warrantyEng;\n\tprivate CommonDTO warrantyFr;\n\tprivate Long warrantyTranslationId;\n\tprivate Double discount;\n\tprivate Boolean wereWgtDimChanged;\n\tprivate Boolean consideredForXML;\n\tprivate String oldImageRealName;\n\tprivate Double stock;\n\tprivate String actualWidth;\n\tprivate String actualLength;\n\tprivate String actualHeight;\n\tprivate String actualWeight;\n\tprivate Double classification;\n\tprivate Double profit;\n\tprivate Double qtSold;\n\t\n\tpublic ProductDTO(){\n\t\t\n\t}\n        public static class Builder {\n         \n\t\t\t// Required parameters\n            private final Long id;\n            private final BrandDTO brand;\n            private final CategoryDTO categoryId;\n            \n            // Optional parameters - initialized to default values\n            private Long mainFilterTypeId = new Long(0);\n            private String manufacturerProductId = """";\n            private String loyaltyProductId = """";\n            private CommonDTO nameEng = null;\n            private CommonDTO nameFr = null;\n            private ImageDTO image = null;\n            private CommonDTO descriptionEng = null;\n            private CommonDTO descriptionFr = null;\n            private CommonDTO specificationEng = null;\n            private CommonDTO specificationFr = null;\n        \tprivate CommonDTO otherEng = null;\n        \tprivate CommonDTO otherFr = null;\n            private String msrp = """";\n            private String cost = """";\n            private String width = ""0"";\n            private String high = ""0"";\n            private String large = ""0"";\n            private String weight = """";\n            private String actualWidth = ""0"";\n        \tprivate String actualHeight= ""0"";\n        \tprivate String actualLength = ""0"";\n        \tprivate String actualWeight = """";           \n            private List<ProductModelDTO> manufactureProductList = null;\n            private Date creationDate = null;\n            private String nameProduc;\n        \tprivate String descriptiProduct;\n        \tprivate String specificationProduct;\n        \tprivate String otherProduct;    \n        \tprivate String priceProduct;\n        \tprivate String localizedPriceProduct;\n        \tprivate ProductStatus status;\n        \tprivate String statusName;        \t\n        \tprivate String note;        \t\n        \tprivate List<ProductLinkDTO> linkList;\n        \tprivate Date discontinuedStartDate = null;\n        \tprivate String loyaltyProductIdSub;\n        \tprivate CommonDTO warrantyEng;\n        \tprivate CommonDTO warrantyFr;\n        \tprivate Long warrantyTranslationId;\n        \tprivate Double discount;\n        \tprivate Boolean wereWgtDimChanged;\n        \tprivate Boolean consideredForXML;\t\n        \tprivate String oldImageRealName;\n            public Builder(Long Id, BrandDTO brand, CategoryDTO categoryId) {\n        \tthis.id = Id;\n        \tthis.brand = brand;\n        \tthis.categoryId = categoryId;\n            }\n            \n            public Builder mainFilterTypeId(Long val) { \n                mainFilterTypeId = val; \n                return this; \n            }\n            public Builder manufacturerProductId(String val) { \n\t        \tmanufacturerProductId = val; \n\t        \treturn this; \n            }\n            public Builder loyaltyProductId(String val) { \n\t        \tloyaltyProductId = val; \n\t        \treturn this; \n            }\n            public Builder nameEng(CommonDTO val) { \n\t        \tnameEng = val; \n\t        \treturn this; \n            }\n            public Builder nameFr(CommonDTO val) { \n\t        \tnameFr = val; \n\t        \treturn this; \n            }\n            public Builder descriptionEng(CommonDTO val) { \n\t        \tdescriptionEng = val; \n\t        \treturn this; \n            }\n            public Builder descriptionFr(CommonDTO val) { \n\t        \tdescriptionFr = val; \n\t        \treturn this; \n            }\n            public Builder specificationEng(CommonDTO val) { \n\t        \tspecificationEng = val; \n\t        \treturn this; \n            }\n            public Builder specificationFr(CommonDTO val) { \n\t        \tspecificationFr = val; \n\t        \treturn this; \n            }\n            public Builder otherEng(CommonDTO val) {\n            \totherEng = val;\n            \treturn this;\n            }\n            public Builder otherFr(CommonDTO val) {\n            \totherFr = val;\n            \treturn this;\n            }\n            public Builder image(ImageDTO val) { \n\t        \timage = val; \n\t        \treturn this; \n            }\n            public Builder msrp(String val) { \n\t        \tmsrp = val; \n\t        \treturn this; \n            }\n            public Builder cost(String val) { \n\t        \tcost = val; \n\t        \treturn this; \n            }\n            public Builder weight(String val) { \n\t        \tweight = val; \n\t        \treturn this; \n            }\n            public Builder width(String val) { \n\t        \twidth = val; \n\t        \treturn this; \n            }\n            public Builder high(String val) { \n\t        \thigh = val; \n\t        \treturn this; \n            }\n            public Builder large(String val) { \n\t        \tlarge = val; \n\t        \treturn this; \n            }\n            public Builder actualWeight(String val) { \n            \tactualWeight = val; \n\t        \treturn this; \n            }\n            public Builder actualWidth(String val) { \n            \tactualWidth = val; \n\t        \treturn this; \n            }\n            public Builder actualHeight(String val) { \n            \tactualHeight = val; \n\t        \treturn this; \n            }\n            public Builder actualLength(String val) { \n            \tactualLength = val; \n\t        \treturn this; \n            }\n            public Builder manufactureProductList(List<ProductModelDTO> val) { \n\t        \tmanufactureProductList = val; \n\t        \treturn this; \n            }\n            public Builder nameProduc(String val) {\n            \tnameProduc = val;\n\t            return this;\n            }\n            public Builder descriptiProduct(String val) {\n            \tdescriptiProduct = val;\n\t            return this;\n            }\n            public Builder specificationProduct(String val) {\n            \tspecificationProduct = val;\n\t            return this;\n            }\n            public Builder otherProduct(String val) {\n            \totherProduct = val;\n\t            return this;\n            }\n            public Builder creationDate(Date val) {\n\t            creationDate = val;\n\t            return this;\n            }            \n            public Builder priceProduct(String val) {\n            \tpriceProduct = val;\n\t            return this;\n            }            \n            public Builder localizedPriceProduct(String val) {\n            \tlocalizedPriceProduct = val;\n\t            return this;\n            }            \n            public Builder status(ProductStatus val) { \n\t        \tstatus = val; \n\t        \treturn this; \n            }\n            public Builder statusName(String val) { \n\t        \tstatusName = val; \n\t        \treturn this; \n            }            \n            public Builder linkList(List<ProductLinkDTO> val) {\n            \tlinkList = val;\n            \treturn this;\n            }            \n            public Builder note(String val) {\n            \tnote = val;\n            \treturn this;\n            }\n            public Builder discontinuedStartDate(Date val) { \n            \tdiscontinuedStartDate = val; \n\t        \treturn this; \n            }\n            public Builder loyaltyProductIdSub(String val) { \n            \tloyaltyProductIdSub = val; \n\t        \treturn this; \n            }\n            public Builder warantyEng(CommonDTO val) {\n            \twarrantyEng = val;\n            \treturn this;\n            }            \n            public Builder warantyFr(CommonDTO val) {\n            \twarrantyFr = val;\n            \treturn this;\n            }            \n            public Builder warrantyTranslationId(Long val) {\n            \twarrantyTranslationId = val;\n            \treturn this;\n            }\n            public Builder discount(Double val) {\n            \tdiscount = val;\n            \treturn this;\n            }\n            public Builder wereWgtDimChanged(Boolean val) {\n            \twereWgtDimChanged = val;\n            \treturn this;\n            }\n            public Builder consideredForXML(Boolean val) {\n            \tconsideredForXML = val;\n            \treturn this;\n            }\n            public Builder oldImageIdBeforeUpdate(String val) {\n            \toldImageRealName = val;\n            \treturn this;\n            }\n            \n            public ProductDTO build() {\n            \treturn new ProductDTO(this);\n            }\n         }\n\t\n        private ProductDTO(Builder builder) {\n            setId(builder.id);\n            brand = builder.brand;\n            category = builder.categoryId;\n            mainFilterTypeId = builder.mainFilterTypeId;\n            manufacturerProductId = builder.manufacturerProductId;\n            loyaltyProductId = builder.loyaltyProductId;\n            nameEng = builder.nameEng;\n            nameFr = builder.nameFr;\n            image = builder.image;\n            descriptionEng = builder.descriptionEng;\n            descriptionFr = builder.descriptionFr;\n            specificationEng = builder.specificationEng;\n            specificationFr = builder.specificationFr;\n            otherEng = builder.otherEng;\n            otherFr = builder.otherFr;\n            msrp = builder.msrp;\n            cost = builder.cost;\n            width = builder.width;\n            high = builder.high;\n            large = builder.large;\n            weight = builder.weight;\n            actualWeight =builder.actualWeight;\n            actualLength=builder.actualLength;\n            actualHeight=builder.actualHeight;\n            actualWidth=builder.actualWidth;\n            manufactureProductList = builder.manufactureProductList;\n            creationDate = builder.creationDate;\n            nameProduc = builder.nameProduc;\n            descriptiProduct = builder.descriptiProduct;\n            specificationProduct = builder.specificationProduct;\n            otherProduct = builder.otherProduct;\n            priceProduct = builder.priceProduct;\n            localizedPriceProduct = builder.localizedPriceProduct;\n            status = builder.status;\n            statusName = builder.statusName;\n            linkList = builder.linkList;\n            note = builder.note;\n        \tdiscontinuedStartDate = builder.discontinuedStartDate;\n        \tloyaltyProductIdSub = builder.loyaltyProductIdSub; \n        \twarrantyEng = builder.warrantyEng;\n        \twarrantyFr = builder.warrantyFr;       \t\n        \twarrantyTranslationId = builder.warrantyTranslationId;\n        \tdiscount = builder.discount;\n        \twereWgtDimChanged = builder.wereWgtDimChanged;\n        \tconsideredForXML = builder.consideredForXML;\n        \toldImageRealName = builder.oldImageRealName;\n        }\n        \n        public static Comparator<ProductDTO> getComparator(int id){\n    \t\tComparator<ProductDTO> comparator = CREATION_DATE_DESC;\n    \t\tswitch (id) {\n    \t\tcase 1:\n    \t\t\tcomparator = ALPHABITICALLY_ENG_AZ;\n    \t\t\tbreak;\n    \t\tcase 2:\n    \t\t\tcomparator = ALPHABITICALLY_ENG_ZA;\n    \t\t\tbreak;\n    \t\tcase 3:\n    \t\t\tcomparator = ALPHABITICALLY_FR_AZ;\n    \t\t\tbreak;\n    \t\tcase 4:\n    \t\t\tcomparator = ALPHABITICALLY_FR_ZA;\n    \t\t\tbreak;\n    \t\tcase 5:\n    \t\t\tcomparator = CREATION_DATE_DESC;\n    \t\t\tbreak;\t\n    \t\tcase 6:\n    \t\t\tcomparator = CREATION_DATE_ASC;\n    \t\t\tbreak;\n    \t\tcase 7:\n    \t\t\tcomparator = MSRP_DESC;\n    \t\t\tbreak;\n    \t\tcase 8:\n    \t\t\tcomparator = MSRP_ASC;\n    \t\t\tbreak;\n    \t\tcase 9:\n    \t\t\tcomparator = COST_DESC;\n    \t\t\tbreak;\n    \t\tcase 10:\n    \t\t\tcomparator = COST_ASC;\n    \t\t\tbreak;\n    \t\tcase 11:\n    \t\t\tcomparator = ALPHABITICALLY_BRAND_AZ;\n    \t\t\tbreak;\n    \t\tcase 12:\n    \t\t\tcomparator = DISCOUNT_DESC;\n    \t\t\tbreak;    \n    \t\tdefault:\n    \t\t\tbreak;\n    \t\t}    \t\t\n    \t\treturn comparator;\n    \t}\n        \n    \t/**\n    \t * The following are the comparators we use to sort game search results.\n    \t */\n    \tpublic static final Comparator<ProductDTO> ALPHABITICALLY_ENG_AZ = new Comparator<ProductDTO>() {\n\n    \t\t@Override\n    \t\tpublic int compare(ProductDTO o1, ProductDTO o2) {\t\t\t\n    \t\t\treturn o1.getNameEng().compareTo(o2.getNameEng());\n    \t\t}\n    \t\t\n    \t};\n    \t\n    \t/**\n    \t * The following are the comparators we use to sort game search results.\n    \t */\n    \tpublic static final Comparator<ProductDTO> ALPHABITICALLY_ENG_ZA = new Comparator<ProductDTO>() {\n\n    \t\t@Override\n    \t\tpublic int compare(ProductDTO o1, ProductDTO o2) {\t\t\t\n    \t\t\treturn o2.getNameEng().compareTo(o1.getNameEng());\n    \t\t}\n    \t\t\n    \t};\n    \t\n    \t/**\n    \t * The following are the comparators we use to sort game search results.\n    \t */\n    \tpublic static final Comparator<ProductDTO> ALPHABITICALLY_FR_AZ = new Comparator<ProductDTO>() {\n\n    \t\t@Override\n    \t\tpublic int compare(ProductDTO o1, ProductDTO o2) {\t\t\t\n    \t\t\treturn o1.getNameFr().compareTo(o2.getNameFr());\n    \t\t}\n    \t\t\n    \t};\n    \t\n    \t/**\n    \t * The following are the comparators we use to sort game search results.\n    \t */\n    \tpublic static final Comparator<ProductDTO> ALPHABITICALLY_FR_ZA = new Comparator<ProductDTO>() {\n\n    \t\t@Override\n    \t\tpublic int compare(ProductDTO o1, ProductDTO o2) {\t\t\t\n    \t\t\treturn o2.getNameFr().compareTo(o1.getNameFr());\n    \t\t}\n    \t};\n    \t\n    \t/**\n    \t * The following are the comparators we use to sort game search results.\n    \t */\n    \tpublic static final Comparator<ProductDTO> CREATION_DATE_DESC = new Comparator<ProductDTO>() {\n\n    \t\t@Override\n    \t\tpublic int compare(ProductDTO o1, ProductDTO o2) {\t\t\t\n    \t\t\treturn o2.getCreationDate().compareTo(o1.getCreationDate());\n    \t\t}\n    \t};\n    \t\n    \t/**\n    \t * The following are the comparators we use to sort game search results.\n    \t */\n    \tpublic static final Comparator<ProductDTO> CREATION_DATE_ASC = new Comparator<ProductDTO>() {\n\n    \t\t@Override\n    \t\tpublic int compare(ProductDTO o1, ProductDTO o2) {\t\t\t\n    \t\t\treturn o1.getCreationDate().compareTo(o2.getCreationDate());\n    \t\t}\n    \t\t\n    \t};\n    \t\n    \t/**\n    \t * The following are the comparators we use to sort game search results.\n    \t */\n    \tpublic static final Comparator<ProductDTO> MSRP_DESC = new Comparator<ProductDTO>() {\n\n    \t\t@Override\n    \t\tpublic int compare(ProductDTO o1, ProductDTO o2) {\t\t\t    \t\t\t\n    \t\t\tDouble msrp1 = Double.parseDouble(o1.getMsrp());\n    \t\t\tDouble msrp2 = Double.parseDouble(o2.getMsrp());    \t\t\t\n    \t\t\treturn msrp2.compareTo(msrp1);\n    \t\t}\n    \t\t\n    \t};\n    \t\n    \t/**\n    \t * The following are the comparators we use to sort game search results.\n    \t */\n    \tpublic static final Comparator<ProductDTO> MSRP_ASC = new Comparator<ProductDTO>() {\n\n    \t\t@Override\n    \t\tpublic int compare(ProductDTO o1, ProductDTO o2) {\t\t\t    \t\t\t\n    \t\t\tDouble msrp1 = Double.parseDouble(o1.getMsrp());\n    \t\t\tDouble msrp2 = Double.parseDouble(o2.getMsrp());    \t\t\t\n    \t\t\treturn msrp1.compareTo(msrp2);\n    \t\t}\n    \t\t\n    \t};\n\n    \t/**\n    \t * The following are the comparators we use to sort products by price, highest first\n    \t */\n    \tpublic static final Comparator<ProductDTO> COST_DESC = new Comparator<ProductDTO>() {\n    \t\t@Override\n    \t\tpublic int compare(ProductDTO o1, ProductDTO o2) {\t\t\t    \t\t\t\n\t\t\t\tString o1Price = o1.getPriceProduct();\n\t\t\t\tString o2Price = o2.getPriceProduct();\n\t\t\t\tint outcome = 0;\n\t\t\t\tif (o1Price != null && !o1Price.matches(""^\\\\s*$"")) {\n\t\t\t\t\tDouble cost1 = Double.parseDouble(o1Price);\n\t\t\t\t\tif (o2Price != null && !o2Price.matches(""^\\\\s*$"")) {\n\t\t\t\t\t\tDouble cost2 = Double.parseDouble(o2Price);\n\t\t\t\t\t\tint costCompare = cost2.compareTo(cost1);\n\t\t\t\t\t\tif (costCompare == 0) {\n\t\t\t\t\t\t\toutcome = ALPHABITICALLY_BRAND_AZ.compare(o1, o2);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\toutcome = costCompare;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\toutcome = -1;\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\toutcome = 1;\n\t\t\t\t}\n\t\t\t\treturn outcome;\n    \t\t}\n    \t};\n    \t\n    \t/**\n    \t * The following are the comparators we use to sort products by price, lowest first\n    \t */\n    \tpublic static final Comparator<ProductDTO> COST_ASC = new Comparator<ProductDTO>() {\n    \t\t@Override\n    \t\tpublic int compare(ProductDTO o1, ProductDTO o2) {\t\t\t    \t\t\t\n    \t\t\tString o1Price = o1.getPriceProduct();\n\t\t\t\tString o2Price = o2.getPriceProduct();\n\t\t\t\tint outcome = 0;\n\t\t\t\tif (o1Price != null && !o1Price.matches(""^\\\\s*$"")) {\n\t\t\t\t\tDouble cost1 = Double.parseDouble(o1Price);\n\t\t\t\t\tif (o2Price != null && !o2Price.matches(""^\\\\s*$"")) {\n\t\t\t\t\t\tDouble cost2 = Double.parseDouble(o2Price);\n\t\t\t\t\t\tint costCompare = cost1.compareTo(cost2);\n\t\t\t\t\t\tif (costCompare == 0) {\n\t\t\t\t\t\t\toutcome = ALPHABITICALLY_BRAND_AZ.compare(o1, o2);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\toutcome = costCompare;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\toutcome = -1;\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\toutcome = 1;\n\t\t\t\t}\n\t\t\t\treturn outcome;\n    \t\t}\n    \t};    \t\n    \t\n    \t/*\n    \t * The following is the comparator we use to sort products by brand, alphabetically, with numbers first then letters.\n\t\t * Leading numbers are compared naturally.\n    \t */\n    \tpublic static final Comparator<ProductDTO> ALPHABITICALLY_BRAND_AZ = new Comparator<ProductDTO>() {\n       \t\t@Override\n    \t\tpublic int compare(ProductDTO o1, ProductDTO o2) {\t\t\t\n    \t\t\tString o1BrandName = o1.getBrand().getName();\n    \t\t\tString o2BrandName = o2.getBrand().getName();\n    \t\t\tint brandCompare = o1BrandName.compareTo(o2BrandName);\n    \t\t\tif(brandCompare == 0) {\n    \t\t\t\tString o1ProdName = o1.getNameProduc().toLowerCase();\n    \t\t\t\tString o2ProdName = o2.getNameProduc().toLowerCase();\n    \t\t\t\tif (Character.isDigit(o1ProdName.charAt(0)) && Character.isDigit(o2ProdName.charAt(0))) {\n    \t\t\t\t\tInteger o1Number = Integer.parseInt(o1ProdName.split(""\\\\D+"")[0]);\n    \t\t\t\t\tInteger o2Number = Integer.parseInt(o2ProdName.split(""\\\\D+"")[0]);\n    \t\t\t\t\tif (o1Number != o2Number) {\n    \t\t\t\t\t\treturn o1Number.compareTo(o2Number);\n    \t\t\t\t\t}\n    \t\t\t\t}\n    \t\t\t\treturn (o1ProdName.compareTo(o2ProdName));\n    \t\t\t}\n    \t\t\treturn brandCompare;\n    \t\t}\n    \t};\n    \t\n    \t/**\n    \t * The following are the comparators we use to sort game search results.\n    \t */\n    \tpublic static final Comparator<ProductDTO> DISCOUNT_DESC = new Comparator<ProductDTO>() {    \t\t\n    \t\t@Override\n    \t\tpublic int compare(ProductDTO o1, ProductDTO o2) {\n    \t\t\tDouble discount1 = o1.getDiscount();\n    \t\t\tDouble discount2 = o2.getDiscount();\n    \t\t\tint compareToDiscountPct = discount2.compareTo(discount1);\n    \t\t\tint outcome = compareToDiscountPct;\n    \t\t\tif (compareToDiscountPct == 0) {\n    \t\t\t\tString price1 = o1.getPriceProduct();\n    \t\t\t\tString price2 = o2.getPriceProduct();\n    \t\t\t\tString msrp1 = o1.getMsrp();\n    \t\t\t\tString msrp2 = o2.getMsrp();\n    \t\t\t\tDouble discount$1 = getDiscount$(price1, msrp1);\n    \t\t\t\tDouble discount$2 = getDiscount$(price2, msrp2);\n    \t\t\t\tint compareToDiscount$ = discount$2.compareTo(discount$1);\n    \t\t\t\toutcome = compareToDiscount$;\n    \t\t\t\tif (compareToDiscount$ == 0) {\n    \t\t\t\t\tString name1 = o1.getNameProduc();\n    \t\t\t\t\tString name2 = o2.getNameProduc();\t\t\t\t\t\n    \t\t\t\t\tint compareToName = name1.compareTo(name2);\n    \t\t\t\t\toutcome = compareToName;\n    \t\t\t\t\tif (compareToName == 0) {\n    \t\t\t\t\t\tLong id1 = o1.getId();\n    \t\t\t\t\t\tLong id2 = o2.getId();\n    \t\t\t\t\t\toutcome = id1.compareTo(id2);\n    \t\t\t\t\t}\n    \t\t\t\t}\n    \t\t\t}\n    \t\t\treturn outcome;\n    \t\t}\n    \t\t\n    \t\tprivate Double getDiscount$(String price, String msrp) {\n\t\t\t\tdouble priceVal = 0d;\n\t\t\t\tdouble msrpVal = 0d;\n\t\t\t\tdouble discountVal = 0d;\n\t\t\t\tif (price != null) {\n\t\t\t\t\tif (!price.matches(""^\\\\s*$"") && !price.equalsIgnoreCase("""")) {\n\t\t\t\t\t\tpriceVal = Double.parseDouble(price);\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpriceVal = 0d;\n\t\t\t\t\t}\n\t\t\t\t}\t\t\t\t\n\t\t\t\tif (msrp != null) {\t\t\t\t\t\n\t\t\t\t\tif (!msrp.matches(""^\\\\s*$"") && !msrp.equalsIgnoreCase("""")) {\t\n\t\t\t\t\t\tmsrpVal = Double.parseDouble(msrp);\t\n\t\t\t\t\t\tdiscountVal = msrpVal - priceVal;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn discountVal;\n    \t\t}\n    \t};\n}\n----------------------------------- SOURCE END -------------------------------------",1413499735843
error,log,,,"Problems occurred when invoking code from plug-in: ""org.eclipse.jdt.ui"".",1413499735844
error,log,,,"Error in JDT Core during reconcile",1413499735845
error,log,,,"Problems occurred when invoking code from plug-in: ""org.eclipse.core.resources"".",1413499736285
activated,editor,org.eclipse.jdt.ui,3.6.2.r362_v20110203,"org.eclipse.jdt.ui.CompilationUnitEditor",1413499736438
